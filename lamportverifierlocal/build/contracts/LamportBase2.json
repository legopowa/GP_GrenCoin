{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum LamportBase2.KeyType",
          "name": "keyType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newPKH",
          "type": "bytes32"
        }
      ],
      "name": "KeyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum LamportBase2.KeyType",
          "name": "originalKeyType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "originalPKH",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "modifiedPKH",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "enum LamportBase2.KeyType",
          "name": "newKeyType",
          "type": "uint8"
        }
      ],
      "name": "KeyModified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "hash",
          "type": "uint256"
        }
      ],
      "name": "LogLastCalculatedHash",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum LamportBase2.KeyType",
          "name": "keyType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "previousPKH",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newPKH",
          "type": "bytes32"
        }
      ],
      "name": "PkhUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "hashedData",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "newmasterPKH",
          "type": "bytes"
        }
      ],
      "name": "createMasterKeyStepOne",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "newmasterPKH",
          "type": "bytes32"
        }
      ],
      "name": "createMasterKeyStepTwo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "neworaclePKH",
          "type": "bytes32"
        }
      ],
      "name": "createOracleKeyFromMaster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "deleteKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "deleteKeyStepOne",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "confirmDeleteKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "deleteKeyStepTwo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "pkh",
          "type": "bytes32"
        }
      ],
      "name": "getKeyAndPosByPKH",
      "outputs": [
        {
          "internalType": "enum LamportBase2.KeyType",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum LamportBase2.KeyType",
          "name": "privilege",
          "type": "uint8"
        }
      ],
      "name": "getPKHsByPrivilege",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "keyData",
      "outputs": [
        {
          "internalType": "enum LamportBase2.KeyType",
          "name": "keyType",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "pkh",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "keys",
      "outputs": [
        {
          "internalType": "enum LamportBase2.KeyType",
          "name": "keyType",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "pkh",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUsedNextPKH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastVerificationResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "prepacked",
          "type": "bytes"
        }
      ],
      "name": "performLamportMasterCheck",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "prepacked",
          "type": "bytes"
        }
      ],
      "name": "performLamportOracleCheck",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bits",
          "type": "uint256"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32[2][256]",
          "name": "pub",
          "type": "bytes32[2][256]"
        }
      ],
      "name": "verify_u256",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/1_GP_LamportBase2.sol"
  },
  "ast": {
    "absolutePath": "contracts/1_GP_LamportBase2.sol",
    "exportedSymbols": {
      "LamportBase2": [
        1138
      ]
    },
    "id": 1139,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LamportBase2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1138,
        "linearizedBaseContracts": [
          1138
        ],
        "name": "LamportBase2",
        "nameLocation": "74:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "99:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1138,
            "src": "94:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "94:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "113:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "2fd5c247",
            "id": 6,
            "mutability": "mutable",
            "name": "lastVerificationResult",
            "nameLocation": "136:22:0",
            "nodeType": "VariableDeclaration",
            "scope": 1138,
            "src": "124:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 5,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "124:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "LamportBase2.KeyType",
            "id": 10,
            "members": [
              {
                "id": 7,
                "name": "MASTER",
                "nameLocation": "214:6:0",
                "nodeType": "EnumValue",
                "src": "214:6:0"
              },
              {
                "id": 8,
                "name": "ORACLE",
                "nameLocation": "222:6:0",
                "nodeType": "EnumValue",
                "src": "222:6:0"
              },
              {
                "id": 9,
                "name": "DELETED",
                "nameLocation": "230:7:0",
                "nodeType": "EnumValue",
                "src": "230:7:0"
              }
            ],
            "name": "KeyType",
            "nameLocation": "204:7:0",
            "nodeType": "EnumDefinition",
            "src": "199:40:0"
          },
          {
            "canonicalName": "LamportBase2.Key",
            "id": 16,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "keyType",
                "nameLocation": "324:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "316:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_KeyType_$10",
                  "typeString": "enum LamportBase2.KeyType"
                },
                "typeName": {
                  "id": 12,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 11,
                    "name": "KeyType",
                    "nameLocations": [
                      "316:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10,
                    "src": "316:7:0"
                  },
                  "referencedDeclaration": 10,
                  "src": "316:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_KeyType_$10",
                    "typeString": "enum LamportBase2.KeyType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "pkh",
                "nameLocation": "349:3:0",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "341:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 14,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "341:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Key",
            "nameLocation": "302:3:0",
            "nodeType": "StructDefinition",
            "scope": 1138,
            "src": "295:64:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0cb6aaf1",
            "id": 20,
            "mutability": "mutable",
            "name": "keys",
            "nameLocation": "378:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 1138,
            "src": "365:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
              "typeString": "struct LamportBase2.Key[]"
            },
            "typeName": {
              "baseType": {
                "id": 18,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 17,
                  "name": "Key",
                  "nameLocations": [
                    "365:3:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16,
                  "src": "365:3:0"
                },
                "referencedDeclaration": 16,
                "src": "365:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Key_$16_storage_ptr",
                  "typeString": "struct LamportBase2.Key"
                }
              },
              "id": 19,
              "nodeType": "ArrayTypeName",
              "src": "365:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage_ptr",
                "typeString": "struct LamportBase2.Key[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a9711ee3",
            "id": 25,
            "mutability": "mutable",
            "name": "keyData",
            "nameLocation": "436:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 1138,
            "src": "405:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
              "typeString": "mapping(bytes32 => struct LamportBase2.Key)"
            },
            "typeName": {
              "id": 24,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 21,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "413:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "405:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                "typeString": "mapping(bytes32 => struct LamportBase2.Key)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 23,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 22,
                  "name": "Key",
                  "nameLocations": [
                    "424:3:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16,
                  "src": "424:3:0"
                },
                "referencedDeclaration": 16,
                "src": "424:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Key_$16_storage_ptr",
                  "typeString": "struct LamportBase2.Key"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 28,
            "mutability": "constant",
            "name": "master1",
            "nameLocation": "480:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 1138,
            "src": "463:93:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 26,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "463:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307862376231386465643936363464316138653932336135393432656331636135636438633133633430656231613532313564353830303630306635613538376265",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "490:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_83086962772784098957387732099508451093340655523554317276279878609761697367998_by_1",
                "typeString": "int_const 8308...(69 digits omitted)...7998"
              },
              "value": "0xb7b18ded9664d1a8e923a5942ec1ca5cd8c13c40eb1a5215d5800600f5a587be"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 31,
            "mutability": "constant",
            "name": "master2",
            "nameLocation": "608:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 1138,
            "src": "591:93:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 29,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "591:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307831656433303461623733653132346230623939343036646661313338386134393261383138383337623462343163653536393361643834646163666333663235",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "618:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_13942222417506030122079613223700752102693626297640870093435351927047413579557_by_1",
                "typeString": "int_const 1394...(69 digits omitted)...9557"
              },
              "value": "0x1ed304ab73e124b0b99406dfa1388a492a818837b4b41ce5693ad84dacfc3f25"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 34,
            "mutability": "constant",
            "name": "oracle",
            "nameLocation": "707:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 1138,
            "src": "690:92:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 32,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "690:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307864363235363965363161363432336338383061343239363736626534383735366339333166653035313931323136383466356662303563626431373837376661",
              "id": 33,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "716:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_96861053825149268484652473296261112928566370964069477309927832799031103879162_by_1",
                "typeString": "int_const 9686...(69 digits omitted)...9162"
              },
              "value": "0xd62569e61a6423c880a429676be48756c931fe0519121684f5fb05cbd17877fa"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "d87e68f36f73a7eb22739d6639e36cafebfcde0b5543340b39f42cac68fdd1f0",
            "id": 38,
            "name": "LogLastCalculatedHash",
            "nameLocation": "798:21:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "828:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "820:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:14:0"
            },
            "src": "792:42:0"
          },
          {
            "anonymous": false,
            "eventSelector": "32629d580208e19f97e5752eef849e102f803999c88aa7f75e12b1744eecd5a7",
            "id": 42,
            "name": "VerificationFailed",
            "nameLocation": "845:18:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hashedData",
                  "nameLocation": "872:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "864:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "863:20:0"
            },
            "src": "839:45:0"
          },
          {
            "anonymous": false,
            "eventSelector": "6825a39bd161f4ef5aab6cfd2c26db3ee0005c11b43cffd544fc876312116edd",
            "id": 51,
            "name": "PkhUpdated",
            "nameLocation": "895:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "keyType",
                  "nameLocation": "914:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "906:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_KeyType_$10",
                    "typeString": "enum LamportBase2.KeyType"
                  },
                  "typeName": {
                    "id": 44,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43,
                      "name": "KeyType",
                      "nameLocations": [
                        "906:7:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10,
                      "src": "906:7:0"
                    },
                    "referencedDeclaration": 10,
                    "src": "906:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_KeyType_$10",
                      "typeString": "enum LamportBase2.KeyType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousPKH",
                  "nameLocation": "931:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "923:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newPKH",
                  "nameLocation": "952:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "944:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:54:0"
            },
            "src": "889:71:0"
          },
          {
            "anonymous": false,
            "eventSelector": "2172c7b01a6de957d29fd6166a23025d181bf56538ad606a526ab2d62603f3fc",
            "id": 58,
            "name": "KeyAdded",
            "nameLocation": "971:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "keyType",
                  "nameLocation": "988:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "980:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_KeyType_$10",
                    "typeString": "enum LamportBase2.KeyType"
                  },
                  "typeName": {
                    "id": 53,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52,
                      "name": "KeyType",
                      "nameLocations": [
                        "980:7:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10,
                      "src": "980:7:0"
                    },
                    "referencedDeclaration": 10,
                    "src": "980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_KeyType_$10",
                      "typeString": "enum LamportBase2.KeyType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newPKH",
                  "nameLocation": "1005:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "997:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "979:33:0"
            },
            "src": "965:48:0"
          },
          {
            "anonymous": false,
            "eventSelector": "0643be3612916977c69d5ed1abb75a50cca49df49ba2444d836e2a0cf65fe074",
            "id": 70,
            "name": "KeyModified",
            "nameLocation": "1024:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "originalKeyType",
                  "nameLocation": "1044:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1036:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_KeyType_$10",
                    "typeString": "enum LamportBase2.KeyType"
                  },
                  "typeName": {
                    "id": 60,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59,
                      "name": "KeyType",
                      "nameLocations": [
                        "1036:7:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10,
                      "src": "1036:7:0"
                    },
                    "referencedDeclaration": 10,
                    "src": "1036:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_KeyType_$10",
                      "typeString": "enum LamportBase2.KeyType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "originalPKH",
                  "nameLocation": "1069:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1061:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "modifiedPKH",
                  "nameLocation": "1090:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1082:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1082:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newKeyType",
                  "nameLocation": "1111:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1103:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_KeyType_$10",
                    "typeString": "enum LamportBase2.KeyType"
                  },
                  "typeName": {
                    "id": 67,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66,
                      "name": "KeyType",
                      "nameLocations": [
                        "1103:7:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10,
                      "src": "1103:7:0"
                    },
                    "referencedDeclaration": 10,
                    "src": "1103:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_KeyType_$10",
                      "typeString": "enum LamportBase2.KeyType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1035:87:0"
            },
            "src": "1018:105:0"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1420:162:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 74,
                          "name": "KeyType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1442:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                            "typeString": "type(enum LamportBase2.KeyType)"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1450:6:0",
                        "memberName": "MASTER",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "1442:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        }
                      },
                      {
                        "id": 76,
                        "name": "master1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1458:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 73,
                      "name": "addKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "1435:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_KeyType_$10_$_t_bytes32_$returns$__$",
                        "typeString": "function (enum LamportBase2.KeyType,bytes32)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80,
                          "name": "KeyType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1483:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                            "typeString": "type(enum LamportBase2.KeyType)"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1491:6:0",
                        "memberName": "MASTER",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "1483:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        }
                      },
                      {
                        "id": 82,
                        "name": "master2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1499:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 79,
                      "name": "addKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "1476:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_KeyType_$10_$_t_bytes32_$returns$__$",
                        "typeString": "function (enum LamportBase2.KeyType,bytes32)"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86,
                          "name": "KeyType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1524:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                            "typeString": "type(enum LamportBase2.KeyType)"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1532:6:0",
                        "memberName": "ORACLE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "1524:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        }
                      },
                      {
                        "id": 88,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1540:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 85,
                      "name": "addKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "1517:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_KeyType_$10_$_t_bytes32_$returns$__$",
                        "typeString": "function (enum LamportBase2.KeyType,bytes32)"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1517:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1517:30:0"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1557:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1571:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1557:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1557:18:0"
                }
              ]
            },
            "id": 96,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1417:2:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:0"
            },
            "scope": 1138,
            "src": "1405:177:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "1837:538:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116,
                        "name": "initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1855:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a206e6f7420696e697469616c697a6564",
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1868:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f8ffd0db50cb9ce51966438921d25e851fe464afe73b822a2f0c3f62177d63c",
                          "typeString": "literal_string \"LamportBase: not initialized\""
                        },
                        "value": "LamportBase: not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f8ffd0db50cb9ce51966438921d25e851fe464afe73b822a2f0c3f62177d63c",
                          "typeString": "literal_string \"LamportBase: not initialized\""
                        }
                      ],
                      "id": 115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1847:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:52:0"
                },
                {
                  "assignments": [
                    121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 121,
                      "mutability": "mutable",
                      "name": "pkh",
                      "nameLocation": "1918:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 175,
                      "src": "1910:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 120,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1910:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 128,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 125,
                            "name": "currentpub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "1951:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          ],
                          "expression": {
                            "id": 123,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1934:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1938:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1934:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1934:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 122,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1924:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1924:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1910:53:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_KeyType_$10",
                      "typeString": "enum LamportBase2.KeyType"
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 129,
                          "name": "keyData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "1977:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                            "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                          }
                        },
                        "id": 131,
                        "indexExpression": {
                          "id": 130,
                          "name": "pkh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "1985:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1977:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$16_storage",
                          "typeString": "struct LamportBase2.Key storage ref"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1990:7:0",
                      "memberName": "keyType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1977:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_KeyType_$10",
                        "typeString": "enum LamportBase2.KeyType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 133,
                        "name": "KeyType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2001:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                          "typeString": "type(enum LamportBase2.KeyType)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2009:6:0",
                      "memberName": "MASTER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "2001:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_KeyType_$10",
                        "typeString": "enum LamportBase2.KeyType"
                      }
                    },
                    "src": "1977:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 139,
                  "nodeType": "IfStatement",
                  "src": "1973:81:0",
                  "trueBody": {
                    "id": 138,
                    "nodeType": "Block",
                    "src": "2017:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2038:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 114,
                        "id": 137,
                        "nodeType": "Return",
                        "src": "2031:12:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "hashedData",
                      "nameLocation": "2072:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 175,
                      "src": "2064:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2064:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 152,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 147,
                                "name": "prepacked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "2120:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 148,
                                "name": "nextPKH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 108,
                                "src": "2131:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 145,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2103:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2107:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2103:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2103:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 144,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2093:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2093:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2085:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 142,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2085:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2085:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2064:77:0"
                },
                {
                  "assignments": [
                    154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 154,
                      "mutability": "mutable",
                      "name": "verificationResult",
                      "nameLocation": "2156:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 175,
                      "src": "2151:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 153,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2151:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 160,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 156,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "2189:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 157,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2201:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 158,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "2206:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      ],
                      "id": 155,
                      "name": "verify_u256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "2177:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_array$_t_bytes_calldata_ptr_$256_calldata_ptr_$_t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256,bytes calldata[256] calldata,bytes32[2] calldata[256] calldata) pure returns (bool)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2151:66:0"
                },
                {
                  "condition": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2232:19:0",
                    "subExpression": {
                      "id": 161,
                      "name": "verificationResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2233:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "2296:73:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 167,
                              "name": "pkh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "2320:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 168,
                              "name": "nextPKH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 108,
                              "src": "2325:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 166,
                            "name": "updateKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "2310:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2310:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "2310:23:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2354:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 114,
                        "id": 172,
                        "nodeType": "Return",
                        "src": "2347:11:0"
                      }
                    ]
                  },
                  "id": 174,
                  "nodeType": "IfStatement",
                  "src": "2228:141:0",
                  "trueBody": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "2253:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2274:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 114,
                        "id": 164,
                        "nodeType": "Return",
                        "src": "2267:12:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "333f6111",
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performLamportMasterCheck",
            "nameLocation": "1648:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "1708:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1683:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 97,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1683:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 99,
                      "length": {
                        "hexValue": "32",
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1691:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1683:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 101,
                    "length": {
                      "hexValue": "323536",
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1694:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1683:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1748:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1728:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 103,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1728:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 105,
                    "length": {
                      "hexValue": "323536",
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1734:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1728:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "1769:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1761:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1761:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "prepacked",
                  "nameLocation": "1799:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1786:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1786:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1673:141:0"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1831:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1830:6:0"
            },
            "scope": 1138,
            "src": "1639:736:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "2631:538:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 196,
                        "name": "initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "2649:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a206e6f7420696e697469616c697a6564",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2662:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f8ffd0db50cb9ce51966438921d25e851fe464afe73b822a2f0c3f62177d63c",
                          "typeString": "literal_string \"LamportBase: not initialized\""
                        },
                        "value": "LamportBase: not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f8ffd0db50cb9ce51966438921d25e851fe464afe73b822a2f0c3f62177d63c",
                          "typeString": "literal_string \"LamportBase: not initialized\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2641:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2641:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:52:0"
                },
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "pkh",
                      "nameLocation": "2712:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "2704:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2704:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 208,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 205,
                            "name": "currentpub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "2745:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          ],
                          "expression": {
                            "id": 203,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2728:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2732:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2728:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2728:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 202,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2718:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2718:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2704:53:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_KeyType_$10",
                      "typeString": "enum LamportBase2.KeyType"
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 209,
                          "name": "keyData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "2771:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                            "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                          }
                        },
                        "id": 211,
                        "indexExpression": {
                          "id": 210,
                          "name": "pkh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "2779:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2771:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$16_storage",
                          "typeString": "struct LamportBase2.Key storage ref"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2784:7:0",
                      "memberName": "keyType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2771:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_KeyType_$10",
                        "typeString": "enum LamportBase2.KeyType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 213,
                        "name": "KeyType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2795:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                          "typeString": "type(enum LamportBase2.KeyType)"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2803:6:0",
                      "memberName": "ORACLE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "2795:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_KeyType_$10",
                        "typeString": "enum LamportBase2.KeyType"
                      }
                    },
                    "src": "2771:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 219,
                  "nodeType": "IfStatement",
                  "src": "2767:81:0",
                  "trueBody": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "2811:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2832:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 194,
                        "id": 217,
                        "nodeType": "Return",
                        "src": "2825:12:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "hashedData",
                      "nameLocation": "2866:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "2858:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2858:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 232,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 227,
                                "name": "prepacked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 190,
                                "src": "2914:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 228,
                                "name": "nextPKH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 188,
                                "src": "2925:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 225,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2897:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2901:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2897:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2897:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 224,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2887:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2887:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2879:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2879:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2879:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2858:77:0"
                },
                {
                  "assignments": [
                    234
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 234,
                      "mutability": "mutable",
                      "name": "verificationResult",
                      "nameLocation": "2950:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "2945:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 233,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2945:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 240,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 236,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "2983:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 237,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "2995:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 238,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "3000:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      ],
                      "id": 235,
                      "name": "verify_u256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "2971:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_array$_t_bytes_calldata_ptr_$256_calldata_ptr_$_t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256,bytes calldata[256] calldata,bytes32[2] calldata[256] calldata) pure returns (bool)"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2971:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2945:66:0"
                },
                {
                  "condition": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3026:19:0",
                    "subExpression": {
                      "id": 241,
                      "name": "verificationResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "3027:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "3090:73:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 247,
                              "name": "pkh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 201,
                              "src": "3114:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 248,
                              "name": "nextPKH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 188,
                              "src": "3119:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 246,
                            "name": "updateKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "3104:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3104:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "3104:23:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3148:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 194,
                        "id": 252,
                        "nodeType": "Return",
                        "src": "3141:11:0"
                      }
                    ]
                  },
                  "id": 254,
                  "nodeType": "IfStatement",
                  "src": "3022:141:0",
                  "trueBody": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "3047:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3068:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 194,
                        "id": 244,
                        "nodeType": "Return",
                        "src": "3061:12:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4a89d52b",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performLamportOracleCheck",
            "nameLocation": "2442:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "2502:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2477:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 177,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2477:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 179,
                      "length": {
                        "hexValue": "32",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2485:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2477:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 181,
                    "length": {
                      "hexValue": "323536",
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2488:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2477:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "2542:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2522:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 183,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2522:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 185,
                    "length": {
                      "hexValue": "323536",
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2528:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2522:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "2563:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2555:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2555:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "prepacked",
                  "nameLocation": "2593:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2580:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2467:141:0"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2625:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2625:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2624:6:0"
            },
            "scope": 1138,
            "src": "2433:736:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "3253:158:0",
              "statements": [
                {
                  "assignments": [
                    266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 266,
                      "mutability": "mutable",
                      "name": "newKey",
                      "nameLocation": "3274:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "3263:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                        "typeString": "struct LamportBase2.Key"
                      },
                      "typeName": {
                        "id": 265,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 264,
                          "name": "Key",
                          "nameLocations": [
                            "3263:3:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 16,
                          "src": "3263:3:0"
                        },
                        "referencedDeclaration": 16,
                        "src": "3263:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$16_storage_ptr",
                          "typeString": "struct LamportBase2.Key"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 271,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 268,
                        "name": "keyType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "3287:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        }
                      },
                      {
                        "id": 269,
                        "name": "newPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "3296:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 267,
                      "name": "Key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "3283:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Key_$16_storage_ptr_$",
                        "typeString": "type(struct LamportBase2.Key storage pointer)"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3283:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                      "typeString": "struct LamportBase2.Key memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3263:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 275,
                        "name": "newKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "3323:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                          "typeString": "struct LamportBase2.Key memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                          "typeString": "struct LamportBase2.Key memory"
                        }
                      ],
                      "expression": {
                        "id": 272,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3313:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                          "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3318:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3313:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Key_$16_storage_$dyn_storage_ptr_$_t_struct$_Key_$16_storage_$returns$__$attached_to$_t_array$_t_struct$_Key_$16_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct LamportBase2.Key storage ref[] storage pointer,struct LamportBase2.Key storage ref)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3313:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "3313:17:0"
                },
                {
                  "expression": {
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 278,
                        "name": "keyData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3340:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                          "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "id": 279,
                        "name": "newPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "3348:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3340:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$16_storage",
                        "typeString": "struct LamportBase2.Key storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 281,
                      "name": "newKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "3358:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                        "typeString": "struct LamportBase2.Key memory"
                      }
                    },
                    "src": "3340:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Key_$16_storage",
                      "typeString": "struct LamportBase2.Key storage ref"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "3340:24:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 285,
                        "name": "keyType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "3388:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        }
                      },
                      {
                        "id": 286,
                        "name": "newPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "3397:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 284,
                      "name": "KeyAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "3379:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_KeyType_$10_$_t_bytes32_$returns$__$",
                        "typeString": "function (enum LamportBase2.KeyType,bytes32)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3379:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "EmitStatement",
                  "src": "3374:30:0"
                }
              ]
            },
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addKey",
            "nameLocation": "3205:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "keyType",
                  "nameLocation": "3220:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "3212:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_KeyType_$10",
                    "typeString": "enum LamportBase2.KeyType"
                  },
                  "typeName": {
                    "id": 258,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 257,
                      "name": "KeyType",
                      "nameLocations": [
                        "3212:7:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10,
                      "src": "3212:7:0"
                    },
                    "referencedDeclaration": 10,
                    "src": "3212:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_KeyType_$10",
                      "typeString": "enum LamportBase2.KeyType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "newPKH",
                  "nameLocation": "3237:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "3229:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3229:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3211:33:0"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3253:0:0"
            },
            "scope": 1138,
            "src": "3196:215:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "3587:367:0",
              "statements": [
                {
                  "assignments": [
                    304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 304,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "3608:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 349,
                      "src": "3597:14:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                        "typeString": "struct LamportBase2.Key"
                      },
                      "typeName": {
                        "id": 303,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 302,
                          "name": "Key",
                          "nameLocations": [
                            "3597:3:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 16,
                          "src": "3597:3:0"
                        },
                        "referencedDeclaration": 16,
                        "src": "3597:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$16_storage_ptr",
                          "typeString": "struct LamportBase2.Key"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 308,
                  "initialValue": {
                    "baseExpression": {
                      "id": 305,
                      "name": "keyData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3614:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                        "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                      }
                    },
                    "id": 307,
                    "indexExpression": {
                      "id": 306,
                      "name": "pkh",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "3622:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3614:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Key_$16_storage",
                      "typeString": "struct LamportBase2.Key storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3597:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 310,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "3644:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                              "typeString": "struct LamportBase2.Key memory"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3648:3:0",
                          "memberName": "pkh",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "3644:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3655:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3644:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a204e6f2073756368206b6579",
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3658:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d6d7f6a3c22ae5764b4ad989c4bc5f9cd776a7d27e181c5e44f7233e2fc072c",
                          "typeString": "literal_string \"LamportBase: No such key\""
                        },
                        "value": "LamportBase: No such key"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d6d7f6a3c22ae5764b4ad989c4bc5f9cd776a7d27e181c5e44f7233e2fc072c",
                          "typeString": "literal_string \"LamportBase: No such key\""
                        }
                      ],
                      "id": 309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3636:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3636:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "3636:49:0"
                },
                {
                  "body": {
                    "id": 343,
                    "nodeType": "Block",
                    "src": "3791:113:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 328,
                                "name": "keys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "3809:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                                  "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                                }
                              },
                              "id": 330,
                              "indexExpression": {
                                "id": 329,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 318,
                                "src": "3814:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3809:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$16_storage",
                                "typeString": "struct LamportBase2.Key storage ref"
                              }
                            },
                            "id": 331,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3817:3:0",
                            "memberName": "pkh",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "3809:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 332,
                            "name": "pkh",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "3824:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3809:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 342,
                        "nodeType": "IfStatement",
                        "src": "3805:89:0",
                        "trueBody": {
                          "id": 341,
                          "nodeType": "Block",
                          "src": "3829:65:0",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "expression": {
                                      "id": 334,
                                      "name": "key",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 304,
                                      "src": "3855:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                                        "typeString": "struct LamportBase2.Key memory"
                                      }
                                    },
                                    "id": 335,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3859:7:0",
                                    "memberName": "keyType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13,
                                    "src": "3855:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_KeyType_$10",
                                      "typeString": "enum LamportBase2.KeyType"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 336,
                                      "name": "key",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 304,
                                      "src": "3868:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                                        "typeString": "struct LamportBase2.Key memory"
                                      }
                                    },
                                    "id": 337,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3872:3:0",
                                    "memberName": "pkh",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15,
                                    "src": "3868:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 338,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 318,
                                    "src": "3877:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 339,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3854:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_enum$_KeyType_$10_$_t_bytes32_$_t_uint256_$",
                                  "typeString": "tuple(enum LamportBase2.KeyType,bytes32,uint256)"
                                }
                              },
                              "functionReturnParameters": 301,
                              "id": 340,
                              "nodeType": "Return",
                              "src": "3847:32:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 321,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "3769:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 322,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3773:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                          "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3778:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3773:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3769:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 344,
                  "initializationExpression": {
                    "assignments": [
                      318
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3762:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "3757:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3757:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 320,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3766:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3757:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3786:3:0",
                      "subExpression": {
                        "id": 325,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "3786:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 327,
                    "nodeType": "ExpressionStatement",
                    "src": "3786:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3752:152:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4c616d706f7274426173653a204e6f2073756368206b6579",
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3920:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d6d7f6a3c22ae5764b4ad989c4bc5f9cd776a7d27e181c5e44f7233e2fc072c",
                          "typeString": "literal_string \"LamportBase: No such key\""
                        },
                        "value": "LamportBase: No such key"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0d6d7f6a3c22ae5764b4ad989c4bc5f9cd776a7d27e181c5e44f7233e2fc072c",
                          "typeString": "literal_string \"LamportBase: No such key\""
                        }
                      ],
                      "id": 345,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "3913:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3913:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "3913:34:0"
                }
              ]
            },
            "functionSelector": "05aacc7d",
            "id": 350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getKeyAndPosByPKH",
            "nameLocation": "3511:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "pkh",
                  "nameLocation": "3537:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "3529:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3529:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3528:13:0"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 296,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "3563:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_KeyType_$10",
                    "typeString": "enum LamportBase2.KeyType"
                  },
                  "typeName": {
                    "id": 295,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 294,
                      "name": "KeyType",
                      "nameLocations": [
                        "3563:7:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10,
                      "src": "3563:7:0"
                    },
                    "referencedDeclaration": 10,
                    "src": "3563:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_KeyType_$10",
                      "typeString": "enum LamportBase2.KeyType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "3572:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "3581:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3562:24:0"
            },
            "scope": 1138,
            "src": "3502:452:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 441,
              "nodeType": "Block",
              "src": "4045:496:0",
              "statements": [
                {
                  "assignments": [
                    363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 363,
                      "mutability": "mutable",
                      "name": "pkhs",
                      "nameLocation": "4072:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 441,
                      "src": "4055:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 361,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4055:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 362,
                        "nodeType": "ArrayTypeName",
                        "src": "4055:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 370,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 367,
                          "name": "keys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4093:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                            "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4098:6:0",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4093:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4079:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 364,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4083:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 365,
                        "nodeType": "ArrayTypeName",
                        "src": "4083:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4079:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4055:50:0"
                },
                {
                  "assignments": [
                    372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 372,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "4120:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 441,
                      "src": "4115:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 371,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4115:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4130:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4115:16:0"
                },
                {
                  "body": {
                    "id": 406,
                    "nodeType": "Block",
                    "src": "4181:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_KeyType_$10",
                            "typeString": "enum LamportBase2.KeyType"
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 386,
                                "name": "keys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "4199:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                                  "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                                }
                              },
                              "id": 388,
                              "indexExpression": {
                                "id": 387,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 376,
                                "src": "4204:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4199:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$16_storage",
                                "typeString": "struct LamportBase2.Key storage ref"
                              }
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4207:7:0",
                            "memberName": "keyType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "4199:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_KeyType_$10",
                              "typeString": "enum LamportBase2.KeyType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 390,
                            "name": "privilege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "4218:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_KeyType_$10",
                              "typeString": "enum LamportBase2.KeyType"
                            }
                          },
                          "src": "4199:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 405,
                        "nodeType": "IfStatement",
                        "src": "4195:121:0",
                        "trueBody": {
                          "id": 404,
                          "nodeType": "Block",
                          "src": "4229:87:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 392,
                                    "name": "pkhs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 363,
                                    "src": "4247:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 394,
                                  "indexExpression": {
                                    "id": 393,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 372,
                                    "src": "4252:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4247:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 395,
                                      "name": "keys",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 20,
                                      "src": "4263:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                                        "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                                      }
                                    },
                                    "id": 397,
                                    "indexExpression": {
                                      "id": 396,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 376,
                                      "src": "4268:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4263:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Key_$16_storage",
                                      "typeString": "struct LamportBase2.Key storage ref"
                                    }
                                  },
                                  "id": 398,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4271:3:0",
                                  "memberName": "pkh",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15,
                                  "src": "4263:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "4247:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 400,
                              "nodeType": "ExpressionStatement",
                              "src": "4247:27:0"
                            },
                            {
                              "expression": {
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "4292:9:0",
                                "subExpression": {
                                  "id": 401,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "4292:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 403,
                              "nodeType": "ExpressionStatement",
                              "src": "4292:9:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 379,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "4159:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 380,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "4163:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                          "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4168:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4163:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4159:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 407,
                  "initializationExpression": {
                    "assignments": [
                      376
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4152:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 407,
                        "src": "4147:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4147:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 378,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4156:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4147:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4176:3:0",
                      "subExpression": {
                        "id": 383,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "4176:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 385,
                    "nodeType": "ExpressionStatement",
                    "src": "4176:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4142:184:0"
                },
                {
                  "assignments": [
                    412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 412,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "4392:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 441,
                      "src": "4375:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 410,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4375:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 411,
                        "nodeType": "ArrayTypeName",
                        "src": "4375:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 418,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 416,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "4415:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4401:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 413,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4405:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 414,
                        "nodeType": "ArrayTypeName",
                        "src": "4405:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4401:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4375:48:0"
                },
                {
                  "body": {
                    "id": 437,
                    "nodeType": "Block",
                    "src": "4467:44:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 429,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "4481:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 431,
                            "indexExpression": {
                              "id": 430,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "4488:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4481:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 432,
                              "name": "pkhs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "4493:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 434,
                            "indexExpression": {
                              "id": 433,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "4498:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4493:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4481:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 436,
                        "nodeType": "ExpressionStatement",
                        "src": "4481:19:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 423,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "4449:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 424,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "4453:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4449:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 438,
                  "initializationExpression": {
                    "assignments": [
                      420
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 420,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4442:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 438,
                        "src": "4437:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 419,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4437:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 422,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4446:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4437:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4462:3:0",
                      "subExpression": {
                        "id": 426,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "4462:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 428,
                    "nodeType": "ExpressionStatement",
                    "src": "4462:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4433:78:0"
                },
                {
                  "expression": {
                    "id": 439,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 412,
                    "src": "4528:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 358,
                  "id": 440,
                  "nodeType": "Return",
                  "src": "4521:13:0"
                }
              ]
            },
            "functionSelector": "b97b4f77",
            "id": 442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPKHsByPrivilege",
            "nameLocation": "3968:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "privilege",
                  "nameLocation": "3995:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 442,
                  "src": "3987:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_KeyType_$10",
                    "typeString": "enum LamportBase2.KeyType"
                  },
                  "typeName": {
                    "id": 352,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 351,
                      "name": "KeyType",
                      "nameLocations": [
                        "3987:7:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10,
                      "src": "3987:7:0"
                    },
                    "referencedDeclaration": 10,
                    "src": "3987:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_KeyType_$10",
                      "typeString": "enum LamportBase2.KeyType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3986:19:0"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 442,
                  "src": "4027:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 355,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4027:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 356,
                    "nodeType": "ArrayTypeName",
                    "src": "4027:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4026:18:0"
            },
            "scope": 1138,
            "src": "3959:582:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 444,
            "mutability": "mutable",
            "name": "lastUsedDeleteKeyHash",
            "nameLocation": "5556:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 1138,
            "src": "5540:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 443,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "5540:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 446,
            "mutability": "mutable",
            "name": "storedNextPKH",
            "nameLocation": "5599:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 1138,
            "src": "5583:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 445,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "5583:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "5947:147:0",
              "statements": [
                {
                  "expression": {
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 472,
                      "name": "lastUsedDeleteKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 444,
                      "src": "6017:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 473,
                      "name": "deleteKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "6041:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6017:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 475,
                  "nodeType": "ExpressionStatement",
                  "src": "6017:37:0"
                },
                {
                  "expression": {
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 476,
                      "name": "storedNextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "6064:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 477,
                      "name": "nextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 458,
                      "src": "6080:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6064:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "6064:23:0"
                }
              ]
            },
            "functionSelector": "d83c413c",
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 463,
                    "name": "currentpub",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 452,
                    "src": "5839:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                      "typeString": "bytes32[2] calldata[256] calldata"
                    }
                  },
                  {
                    "id": 464,
                    "name": "sig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 456,
                    "src": "5863:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                      "typeString": "bytes calldata[256] calldata"
                    }
                  },
                  {
                    "id": 465,
                    "name": "nextPKH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 458,
                    "src": "5880:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "id": 468,
                        "name": "deleteKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "5918:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 466,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5901:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5905:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "5901:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5901:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 470,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 462,
                  "name": "onlyLamportMaster",
                  "nameLocations": [
                    "5808:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 836,
                  "src": "5808:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5808:134:0"
              }
            ],
            "name": "deleteKeyStepOne",
            "nameLocation": "5628:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "5679:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "5654:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 447,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5654:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 449,
                      "length": {
                        "hexValue": "32",
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5662:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "5654:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 451,
                    "length": {
                      "hexValue": "323536",
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5665:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5654:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 456,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "5719:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "5699:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 453,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5699:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 455,
                    "length": {
                      "hexValue": "323536",
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5705:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5699:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "5740:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "5732:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5732:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "deleteKeyHash",
                  "nameLocation": "5765:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "5757:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5757:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5644:140:0"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5947:0:0"
            },
            "scope": 1138,
            "src": "5619:475:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "6494:3268:0",
              "statements": [
                {
                  "assignments": [
                    508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 508,
                      "mutability": "mutable",
                      "name": "currentPKH",
                      "nameLocation": "6582:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "6574:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 507,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6574:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 515,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 512,
                            "name": "currentpub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "6622:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          ],
                          "expression": {
                            "id": 510,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6605:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6609:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6605:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6605:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 509,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6595:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6595:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6574:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 517,
                          "name": "currentPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 508,
                          "src": "6742:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 518,
                          "name": "storedNextPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "6756:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6742:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a2043616e6e6f7420757365207468652073616d65206b6579636861696e20747769636520666f7220746869732066756e6374696f6e",
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6771:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bdf9454beb89511004e45aedd03e7152aa0650749bcef477fb3f83f85944a00",
                          "typeString": "literal_string \"LamportBase: Cannot use the same keychain twice for this function\""
                        },
                        "value": "LamportBase: Cannot use the same keychain twice for this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bdf9454beb89511004e45aedd03e7152aa0650749bcef477fb3f83f85944a00",
                          "typeString": "literal_string \"LamportBase: Cannot use the same keychain twice for this function\""
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6734:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6734:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "6734:105:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 524,
                          "name": "lastUsedDeleteKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "6957:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 525,
                          "name": "confirmDeleteKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 495,
                          "src": "6982:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6957:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a204b65797320646f206e6f74206d61746368",
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7004:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77c0c88e9bce2ce24f570d0b2e2d743a42d83d08b34660101a5cabfe423ef9ba",
                          "typeString": "literal_string \"LamportBase: Keys do not match\""
                        },
                        "value": "LamportBase: Keys do not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77c0c88e9bce2ce24f570d0b2e2d743a42d83d08b34660101a5cabfe423ef9ba",
                          "typeString": "literal_string \"LamportBase: Keys do not match\""
                        }
                      ],
                      "id": 523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6949:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6949:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "6949:88:0"
                },
                {
                  "assignments": [
                    531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 531,
                      "mutability": "mutable",
                      "name": "firstMasterPKH",
                      "nameLocation": "7211:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "7203:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 530,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7203:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 533,
                  "initialValue": {
                    "id": 532,
                    "name": "storedNextPKH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 446,
                    "src": "7228:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7203:38:0"
                },
                {
                  "assignments": [
                    535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 535,
                      "mutability": "mutable",
                      "name": "secondMasterPKH",
                      "nameLocation": "7309:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "7301:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 534,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7301:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 537,
                  "initialValue": {
                    "id": 536,
                    "name": "currentPKH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 508,
                    "src": "7327:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7301:36:0"
                },
                {
                  "assignments": [
                    539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 539,
                      "mutability": "mutable",
                      "name": "targetPKH",
                      "nameLocation": "7405:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "7397:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 538,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7397:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 541,
                  "initialValue": {
                    "id": 540,
                    "name": "confirmDeleteKeyHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 495,
                    "src": "7417:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7397:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_KeyType_$10",
                            "typeString": "enum LamportBase2.KeyType"
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 543,
                                "name": "keyData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "7536:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                                  "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                                }
                              },
                              "id": 545,
                              "indexExpression": {
                                "id": 544,
                                "name": "firstMasterPKH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 531,
                                "src": "7544:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7536:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$16_storage",
                                "typeString": "struct LamportBase2.Key storage ref"
                              }
                            },
                            "id": 546,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7560:7:0",
                            "memberName": "keyType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "7536:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_KeyType_$10",
                              "typeString": "enum LamportBase2.KeyType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 547,
                              "name": "KeyType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "7571:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                                "typeString": "type(enum LamportBase2.KeyType)"
                              }
                            },
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7579:6:0",
                            "memberName": "MASTER",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "7571:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_KeyType_$10",
                              "typeString": "enum LamportBase2.KeyType"
                            }
                          },
                          "src": "7536:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_KeyType_$10",
                            "typeString": "enum LamportBase2.KeyType"
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 550,
                                "name": "keyData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "7589:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                                  "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                                }
                              },
                              "id": 552,
                              "indexExpression": {
                                "id": 551,
                                "name": "secondMasterPKH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 535,
                                "src": "7597:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7589:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$16_storage",
                                "typeString": "struct LamportBase2.Key storage ref"
                              }
                            },
                            "id": 553,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7614:7:0",
                            "memberName": "keyType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "7589:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_KeyType_$10",
                              "typeString": "enum LamportBase2.KeyType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 554,
                              "name": "KeyType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "7625:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                                "typeString": "type(enum LamportBase2.KeyType)"
                              }
                            },
                            "id": 555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7633:6:0",
                            "memberName": "MASTER",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "7625:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_KeyType_$10",
                              "typeString": "enum LamportBase2.KeyType"
                            }
                          },
                          "src": "7589:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7536:103:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a2050726f7669646564206b65797320617265206e6f74206d6173746572206b657973",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7641:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_121cbc228a1927bc2482864dc296788855176a1b44f0e9bbf00c9417fe5d6625",
                          "typeString": "literal_string \"LamportBase: Provided keys are not master keys\""
                        },
                        "value": "LamportBase: Provided keys are not master keys"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_121cbc228a1927bc2482864dc296788855176a1b44f0e9bbf00c9417fe5d6625",
                          "typeString": "literal_string \"LamportBase: Provided keys are not master keys\""
                        }
                      ],
                      "id": 542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7528:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7528:162:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "7528:162:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 562,
                            "name": "targetPKH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 539,
                            "src": "7786:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 563,
                            "name": "firstMasterPKH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "7799:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "7786:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 565,
                            "name": "targetPKH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 539,
                            "src": "7817:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 566,
                            "name": "secondMasterPKH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 535,
                            "src": "7830:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "7817:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7786:59:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a204d6173746572206b6579732063616e6e6f742064656c657465207468656d73656c766573",
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7847:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ab693a2971088340b8d77f6b3d06bf5883ab216fab40eb4d6367fa866347193",
                          "typeString": "literal_string \"LamportBase: Master keys cannot delete themselves\""
                        },
                        "value": "LamportBase: Master keys cannot delete themselves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ab693a2971088340b8d77f6b3d06bf5883ab216fab40eb4d6367fa866347193",
                          "typeString": "literal_string \"LamportBase: Master keys cannot delete themselves\""
                        }
                      ],
                      "id": 561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7778:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7778:121:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "7778:121:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 573,
                              "name": "keyData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "8410:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                                "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                              }
                            },
                            "id": 575,
                            "indexExpression": {
                              "id": 574,
                              "name": "targetPKH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "8418:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8410:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Key_$16_storage",
                              "typeString": "struct LamportBase2.Key storage ref"
                            }
                          },
                          "id": 576,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8429:3:0",
                          "memberName": "pkh",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "8410:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8436:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8410:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a204e6f2073756368206b6579202864656c6574696f6e29",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8439:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04487e083454bb09c044df16de3f0f333fd08bb7d43bdbf6a32891084020e311",
                          "typeString": "literal_string \"LamportBase: No such key (deletion)\""
                        },
                        "value": "LamportBase: No such key (deletion)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04487e083454bb09c044df16de3f0f333fd08bb7d43bdbf6a32891084020e311",
                          "typeString": "literal_string \"LamportBase: No such key (deletion)\""
                        }
                      ],
                      "id": 572,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8402:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8402:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "8402:75:0"
                },
                {
                  "body": {
                    "id": 659,
                    "nodeType": "Block",
                    "src": "8530:1076:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 593,
                                "name": "keys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "8552:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                                  "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                                }
                              },
                              "id": 595,
                              "indexExpression": {
                                "id": 594,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 583,
                                "src": "8557:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8552:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$16_storage",
                                "typeString": "struct LamportBase2.Key storage ref"
                              }
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8560:3:0",
                            "memberName": "pkh",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "8552:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 597,
                            "name": "targetPKH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 539,
                            "src": "8567:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "8552:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 658,
                        "nodeType": "IfStatement",
                        "src": "8548:1044:0",
                        "trueBody": {
                          "id": 657,
                          "nodeType": "Block",
                          "src": "8578:1014:0",
                          "statements": [
                            {
                              "assignments": [
                                601
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 601,
                                  "mutability": "mutable",
                                  "name": "originalKeyType",
                                  "nameLocation": "8609:15:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 657,
                                  "src": "8601:23:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_KeyType_$10",
                                    "typeString": "enum LamportBase2.KeyType"
                                  },
                                  "typeName": {
                                    "id": 600,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 599,
                                      "name": "KeyType",
                                      "nameLocations": [
                                        "8601:7:0"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 10,
                                      "src": "8601:7:0"
                                    },
                                    "referencedDeclaration": 10,
                                    "src": "8601:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_KeyType_$10",
                                      "typeString": "enum LamportBase2.KeyType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 606,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 602,
                                    "name": "keyData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25,
                                    "src": "8627:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                                      "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                                    }
                                  },
                                  "id": 604,
                                  "indexExpression": {
                                    "id": 603,
                                    "name": "targetPKH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 539,
                                    "src": "8635:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8627:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Key_$16_storage",
                                    "typeString": "struct LamportBase2.Key storage ref"
                                  }
                                },
                                "id": 605,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8646:7:0",
                                "memberName": "keyType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13,
                                "src": "8627:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_KeyType_$10",
                                  "typeString": "enum LamportBase2.KeyType"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8601:52:0"
                            },
                            {
                              "assignments": [
                                608
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 608,
                                  "mutability": "mutable",
                                  "name": "modifiedPKH",
                                  "nameLocation": "8818:11:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 657,
                                  "src": "8810:19:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 607,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8810:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 610,
                              "initialValue": {
                                "hexValue": "307864653165376564303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8832:66:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100467333025137092127135756557221617652272578300397978553855798365504076251136_by_1",
                                  "typeString": "int_const 1004...(70 digits omitted)...1136"
                                },
                                "value": "0xde1e7ed000000000000000000000000000000000000000000000000000000000"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8810:88:0"
                            },
                            {
                              "assignments": [
                                612
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 612,
                                  "mutability": "mutable",
                                  "name": "randomValue",
                                  "nameLocation": "8928:11:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 657,
                                  "src": "8920:19:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 611,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8920:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 625,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 618,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -4,
                                              "src": "8977:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 619,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "8983:9:0",
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "8977:15:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 620,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -4,
                                              "src": "8994:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 621,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "9000:10:0",
                                            "memberName": "difficulty",
                                            "nodeType": "MemberAccess",
                                            "src": "8994:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 616,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "8960:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 617,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "8964:12:0",
                                          "memberName": "encodePacked",
                                          "nodeType": "MemberAccess",
                                          "src": "8960:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 622,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8960:51:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 615,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "8950:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 623,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8950:62:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 614,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8942:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 613,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8942:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8942:71:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8920:93:0"
                            },
                            {
                              "expression": {
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 626,
                                  "name": "modifiedPKH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 608,
                                  "src": "9035:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "^=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 629,
                                      "name": "randomValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 612,
                                      "src": "9058:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 628,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9050:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 627,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9050:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9050:20:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "9035:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 632,
                              "nodeType": "ExpressionStatement",
                              "src": "9035:35:0"
                            },
                            {
                              "expression": {
                                "id": 638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 633,
                                      "name": "keyData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25,
                                      "src": "9236:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                                        "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                                      }
                                    },
                                    "id": 635,
                                    "indexExpression": {
                                      "id": 634,
                                      "name": "targetPKH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 539,
                                      "src": "9244:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9236:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Key_$16_storage",
                                      "typeString": "struct LamportBase2.Key storage ref"
                                    }
                                  },
                                  "id": 636,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "9255:3:0",
                                  "memberName": "pkh",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15,
                                  "src": "9236:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 637,
                                  "name": "modifiedPKH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 608,
                                  "src": "9261:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "9236:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 639,
                              "nodeType": "ExpressionStatement",
                              "src": "9236:36:0"
                            },
                            {
                              "expression": {
                                "id": 646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 640,
                                      "name": "keyData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25,
                                      "src": "9294:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                                        "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                                      }
                                    },
                                    "id": 642,
                                    "indexExpression": {
                                      "id": 641,
                                      "name": "targetPKH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 539,
                                      "src": "9302:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9294:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Key_$16_storage",
                                      "typeString": "struct LamportBase2.Key storage ref"
                                    }
                                  },
                                  "id": 643,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "9313:7:0",
                                  "memberName": "keyType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13,
                                  "src": "9294:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_KeyType_$10",
                                    "typeString": "enum LamportBase2.KeyType"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 644,
                                    "name": "KeyType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10,
                                    "src": "9323:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                                      "typeString": "type(enum LamportBase2.KeyType)"
                                    }
                                  },
                                  "id": 645,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "9331:7:0",
                                  "memberName": "DELETED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9,
                                  "src": "9323:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_KeyType_$10",
                                    "typeString": "enum LamportBase2.KeyType"
                                  }
                                },
                                "src": "9294:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_KeyType_$10",
                                  "typeString": "enum LamportBase2.KeyType"
                                }
                              },
                              "id": 647,
                              "nodeType": "ExpressionStatement",
                              "src": "9294:44:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 649,
                                    "name": "originalKeyType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 601,
                                    "src": "9428:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_KeyType_$10",
                                      "typeString": "enum LamportBase2.KeyType"
                                    }
                                  },
                                  {
                                    "id": 650,
                                    "name": "targetPKH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 539,
                                    "src": "9445:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 651,
                                    "name": "modifiedPKH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 608,
                                    "src": "9456:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 652,
                                      "name": "KeyType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "9469:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                                        "typeString": "type(enum LamportBase2.KeyType)"
                                      }
                                    },
                                    "id": 653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "9477:7:0",
                                    "memberName": "DELETED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9,
                                    "src": "9469:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_KeyType_$10",
                                      "typeString": "enum LamportBase2.KeyType"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_KeyType_$10",
                                      "typeString": "enum LamportBase2.KeyType"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_KeyType_$10",
                                      "typeString": "enum LamportBase2.KeyType"
                                    }
                                  ],
                                  "id": 648,
                                  "name": "KeyModified",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70,
                                  "src": "9416:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_enum$_KeyType_$10_$_t_bytes32_$_t_bytes32_$_t_enum$_KeyType_$10_$returns$__$",
                                    "typeString": "function (enum LamportBase2.KeyType,bytes32,bytes32,enum LamportBase2.KeyType)"
                                  }
                                },
                                "id": 654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9416:69:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 655,
                              "nodeType": "EmitStatement",
                              "src": "9411:74:0"
                            },
                            {
                              "id": 656,
                              "nodeType": "Break",
                              "src": "9568:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 586,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "8508:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 587,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "8512:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                          "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                        }
                      },
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8517:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8512:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8508:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 660,
                  "initializationExpression": {
                    "assignments": [
                      583
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 583,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8501:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 660,
                        "src": "8496:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 582,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8496:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 585,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8505:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8496:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8525:3:0",
                      "subExpression": {
                        "id": 590,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "8525:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 592,
                    "nodeType": "ExpressionStatement",
                    "src": "8525:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "8491:1115:0"
                },
                {
                  "expression": {
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 661,
                      "name": "lastUsedDeleteKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 444,
                      "src": "9677:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9709:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9701:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9701:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9701:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9677:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "9677:34:0"
                },
                {
                  "expression": {
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 668,
                      "name": "storedNextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "9725:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9749:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9741:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 669,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9741:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9741:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9725:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "9725:26:0"
                }
              ]
            },
            "functionSelector": "e673d71f",
            "id": 676,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 498,
                    "name": "currentpub",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 487,
                    "src": "6359:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                      "typeString": "bytes32[2] calldata[256] calldata"
                    }
                  },
                  {
                    "id": 499,
                    "name": "sig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 491,
                    "src": "6387:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                      "typeString": "bytes calldata[256] calldata"
                    }
                  },
                  {
                    "id": 500,
                    "name": "nextPKH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 493,
                    "src": "6408:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "id": 503,
                        "name": "confirmDeleteKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "6450:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 501,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6433:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6437:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "6433:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6433:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 505,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 497,
                  "name": "onlyLamportMaster",
                  "nameLocations": [
                    "6324:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 836,
                  "src": "6324:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6324:161:0"
              }
            ],
            "name": "deleteKeyStepTwo",
            "nameLocation": "6109:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "6164:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "6139:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 482,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6139:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 484,
                      "length": {
                        "hexValue": "32",
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6147:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "6139:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 486,
                    "length": {
                      "hexValue": "323536",
                      "id": 485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6150:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "6139:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "6208:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "6188:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 488,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "6188:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 490,
                    "length": {
                      "hexValue": "323536",
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6194:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "6188:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 493,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "6233:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "6225:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6225:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "confirmDeleteKeyHash",
                  "nameLocation": "6262:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "6254:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6254:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6125:167:0"
            },
            "returnParameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6494:0:0"
            },
            "scope": 1138,
            "src": "6100:3662:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "10079:283:0",
              "statements": [
                {
                  "id": 735,
                  "nodeType": "UncheckedBlock",
                  "src": "10089:267:0",
                  "statements": [
                    {
                      "body": {
                        "id": 731,
                        "nodeType": "Block",
                        "src": "10143:177:0",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 702,
                                    "name": "pub",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 688,
                                    "src": "10186:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                                      "typeString": "bytes32[2] calldata[256] calldata"
                                    }
                                  },
                                  "id": 704,
                                  "indexExpression": {
                                    "id": 703,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 694,
                                    "src": "10190:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10186:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$2_calldata_ptr",
                                    "typeString": "bytes32[2] calldata"
                                  }
                                },
                                "id": 721,
                                "indexExpression": {
                                  "condition": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 716,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 713,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 705,
                                                "name": "bits",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 678,
                                                "src": "10195:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "&",
                                              "rightExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 711,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "hexValue": "31",
                                                      "id": 706,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "10203:1:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                      },
                                                      "value": "1"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "<<",
                                                    "rightExpression": {
                                                      "components": [
                                                        {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 709,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "hexValue": "323535",
                                                            "id": 707,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "10209:3:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_255_by_1",
                                                              "typeString": "int_const 255"
                                                            },
                                                            "value": "255"
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "-",
                                                          "rightExpression": {
                                                            "id": 708,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 694,
                                                            "src": "10215:1:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "src": "10209:7:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        }
                                                      ],
                                                      "id": 710,
                                                      "isConstant": false,
                                                      "isInlineArray": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "TupleExpression",
                                                      "src": "10208:9:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "10203:14:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 712,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "10202:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "10195:23:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 714,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "10194:25:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 715,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "10222:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "10194:29:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 717,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "10193:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "30",
                                    "id": 719,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10231:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "id": 720,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "10193:39:0",
                                  "trueExpression": {
                                    "hexValue": "31",
                                    "id": 718,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10227:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10186:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 723,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 682,
                                      "src": "10267:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                                        "typeString": "bytes calldata[256] calldata"
                                      }
                                    },
                                    "id": 725,
                                    "indexExpression": {
                                      "id": 724,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 694,
                                      "src": "10271:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10267:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 722,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "10257:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10257:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "10186:88:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 730,
                            "nodeType": "IfStatement",
                            "src": "10161:144:0",
                            "trueBody": {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10300:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 692,
                              "id": 729,
                              "nodeType": "Return",
                              "src": "10293:12:0"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 696,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 694,
                          "src": "10129:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "323536",
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10133:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_256_by_1",
                            "typeString": "int_const 256"
                          },
                          "value": "256"
                        },
                        "src": "10129:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 732,
                      "initializationExpression": {
                        "assignments": [
                          694
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 694,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "10126:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 732,
                            "src": "10118:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 693,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10118:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 695,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10118:9:0"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "10138:3:0",
                          "subExpression": {
                            "id": 699,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "10138:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 701,
                        "nodeType": "ExpressionStatement",
                        "src": "10138:3:0"
                      },
                      "nodeType": "ForStatement",
                      "src": "10113:207:0"
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10341:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 692,
                      "id": 734,
                      "nodeType": "Return",
                      "src": "10334:11:0"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "af82f3e7",
            "id": 737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify_u256",
            "nameLocation": "9941:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 678,
                  "mutability": "mutable",
                  "name": "bits",
                  "nameLocation": "9970:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "9962:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9962:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "10004:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "9984:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 679,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "9984:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 681,
                    "length": {
                      "hexValue": "323536",
                      "id": 680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9990:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "9984:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "pub",
                  "nameLocation": "10042:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "10017:28:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 683,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10017:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 685,
                      "length": {
                        "hexValue": "32",
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10025:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "10017:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 687,
                    "length": {
                      "hexValue": "323536",
                      "id": 686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10028:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "10017:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9952:99:0"
            },
            "returnParameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "10073:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10073:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10072:6:0"
            },
            "scope": 1138,
            "src": "9932:430:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 835,
              "nodeType": "Block",
              "src": "10498:772:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 754,
                        "name": "initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "10516:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a206e6f7420696e697469616c697a6564",
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10529:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f8ffd0db50cb9ce51966438921d25e851fe464afe73b822a2f0c3f62177d63c",
                          "typeString": "literal_string \"LamportBase: not initialized\""
                        },
                        "value": "LamportBase: not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f8ffd0db50cb9ce51966438921d25e851fe464afe73b822a2f0c3f62177d63c",
                          "typeString": "literal_string \"LamportBase: not initialized\""
                        }
                      ],
                      "id": 753,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10508:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10508:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "10508:52:0"
                },
                {
                  "assignments": [
                    759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 759,
                      "mutability": "mutable",
                      "name": "pkh",
                      "nameLocation": "10579:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 835,
                      "src": "10571:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 758,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10571:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 766,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 763,
                            "name": "currentpub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 743,
                            "src": "10612:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          ],
                          "expression": {
                            "id": 761,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10595:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10599:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10595:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10595:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 760,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10585:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10585:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10571:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 768,
                              "name": "keyData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "10642:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                                "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                              }
                            },
                            "id": 770,
                            "indexExpression": {
                              "id": 769,
                              "name": "pkh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "10650:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10642:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Key_$16_storage",
                              "typeString": "struct LamportBase2.Key storage ref"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10655:7:0",
                          "memberName": "keyType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "10642:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_KeyType_$10",
                            "typeString": "enum LamportBase2.KeyType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 772,
                            "name": "KeyType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "10666:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                              "typeString": "type(enum LamportBase2.KeyType)"
                            }
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10674:6:0",
                          "memberName": "MASTER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "10666:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_KeyType_$10",
                            "typeString": "enum LamportBase2.KeyType"
                          }
                        },
                        "src": "10642:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a204e6f742061206d6173746572206b6579",
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10682:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2cdb338098f62fd0cfc520c28c71beae504fc652a4354c6faafffa4afc2eb32",
                          "typeString": "literal_string \"LamportBase: Not a master key\""
                        },
                        "value": "LamportBase: Not a master key"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b2cdb338098f62fd0cfc520c28c71beae504fc652a4354c6faafffa4afc2eb32",
                          "typeString": "literal_string \"LamportBase: Not a master key\""
                        }
                      ],
                      "id": 767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10634:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10634:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "10634:80:0"
                },
                {
                  "assignments": [
                    779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 779,
                      "mutability": "mutable",
                      "name": "hashedData",
                      "nameLocation": "10733:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 835,
                      "src": "10725:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 778,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10725:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 790,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 785,
                                "name": "prepacked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 751,
                                "src": "10781:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 786,
                                "name": "nextPKH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 749,
                                "src": "10792:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 783,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "10764:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10768:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "10764:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10764:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 782,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10754:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10754:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10746:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 780,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10746:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10746:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10725:77:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 792,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "10839:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 791,
                      "name": "LogLastCalculatedHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "10817:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10817:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 794,
                  "nodeType": "EmitStatement",
                  "src": "10812:38:0"
                },
                {
                  "assignments": [
                    796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 796,
                      "mutability": "mutable",
                      "name": "verificationResult",
                      "nameLocation": "10866:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 835,
                      "src": "10861:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 795,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10861:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 802,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 798,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "10899:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 799,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "10911:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 800,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "10916:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      ],
                      "id": 797,
                      "name": "verify_u256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "10887:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_array$_t_bytes_calldata_ptr_$256_calldata_ptr_$_t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256,bytes calldata[256] calldata,bytes32[2] calldata[256] calldata) pure returns (bool)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10887:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10861:66:0"
                },
                {
                  "expression": {
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 803,
                      "name": "lastVerificationResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "10938:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 804,
                      "name": "verificationResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 796,
                      "src": "10963:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10938:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "10938:43:0"
                },
                {
                  "condition": {
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "10996:19:0",
                    "subExpression": {
                      "id": 807,
                      "name": "verificationResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 796,
                      "src": "10997:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 832,
                    "nodeType": "Block",
                    "src": "11139:113:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 819,
                                  "name": "keyData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "11169:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                                    "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                                  }
                                },
                                "id": 821,
                                "indexExpression": {
                                  "id": 820,
                                  "name": "pkh",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 759,
                                  "src": "11177:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11169:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Key_$16_storage",
                                  "typeString": "struct LamportBase2.Key storage ref"
                                }
                              },
                              "id": 822,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11182:7:0",
                              "memberName": "keyType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13,
                              "src": "11169:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_KeyType_$10",
                                "typeString": "enum LamportBase2.KeyType"
                              }
                            },
                            {
                              "id": 823,
                              "name": "pkh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "11191:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 824,
                              "name": "nextPKH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 749,
                              "src": "11196:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_KeyType_$10",
                                "typeString": "enum LamportBase2.KeyType"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 818,
                            "name": "PkhUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "11158:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_KeyType_$10_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (enum LamportBase2.KeyType,bytes32,bytes32)"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11158:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 826,
                        "nodeType": "EmitStatement",
                        "src": "11153:51:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 828,
                              "name": "pkh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "11228:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 829,
                              "name": "nextPKH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 749,
                              "src": "11233:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 827,
                            "name": "updateKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "11218:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11218:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 831,
                        "nodeType": "ExpressionStatement",
                        "src": "11218:23:0"
                      }
                    ]
                  },
                  "id": 833,
                  "nodeType": "IfStatement",
                  "src": "10992:260:0",
                  "trueBody": {
                    "id": 817,
                    "nodeType": "Block",
                    "src": "11017:116:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 810,
                              "name": "hashedData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "11055:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 809,
                            "name": "VerificationFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "11036:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11036:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 812,
                        "nodeType": "EmitStatement",
                        "src": "11031:35:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4c616d706f7274426173653a20566572696669636174696f6e206661696c6564",
                              "id": 814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11087:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5c601d74821f870f1210baa511fb307acdf5a2a4fac574faac118957497ff62b",
                                "typeString": "literal_string \"LamportBase: Verification failed\""
                              },
                              "value": "LamportBase: Verification failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5c601d74821f870f1210baa511fb307acdf5a2a4fac574faac118957497ff62b",
                                "typeString": "literal_string \"LamportBase: Verification failed\""
                              }
                            ],
                            "id": 813,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "11080:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11080:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 816,
                        "nodeType": "ExpressionStatement",
                        "src": "11080:42:0"
                      }
                    ]
                  }
                },
                {
                  "id": 834,
                  "nodeType": "PlaceholderStatement",
                  "src": "11262:1:0"
                }
              ]
            },
            "id": 836,
            "name": "onlyLamportMaster",
            "nameLocation": "10377:17:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "10420:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "10395:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 738,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10395:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 740,
                      "length": {
                        "hexValue": "32",
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10403:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "10395:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 742,
                    "length": {
                      "hexValue": "323536",
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10406:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "10395:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "10452:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "10432:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 744,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "10432:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 746,
                    "length": {
                      "hexValue": "323536",
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10438:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "10432:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "10465:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "10457:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10457:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "prepacked",
                  "nameLocation": "10487:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "10474:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10474:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10394:103:0"
            },
            "src": "10368:902:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "11653:620:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 844,
                              "name": "keyData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "11671:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                                "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                              }
                            },
                            "id": 846,
                            "indexExpression": {
                              "id": 845,
                              "name": "oldPKH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 838,
                              "src": "11679:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11671:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Key_$16_storage",
                              "typeString": "struct LamportBase2.Key storage ref"
                            }
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11687:3:0",
                          "memberName": "pkh",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "11671:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11694:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11671:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a204e6f2073756368206b6579",
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11697:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d6d7f6a3c22ae5764b4ad989c4bc5f9cd776a7d27e181c5e44f7233e2fc072c",
                          "typeString": "literal_string \"LamportBase: No such key\""
                        },
                        "value": "LamportBase: No such key"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d6d7f6a3c22ae5764b4ad989c4bc5f9cd776a7d27e181c5e44f7233e2fc072c",
                          "typeString": "literal_string \"LamportBase: No such key\""
                        }
                      ],
                      "id": 843,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11663:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11663:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "11663:61:0"
                },
                {
                  "assignments": [
                    855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 855,
                      "mutability": "mutable",
                      "name": "updatedKey",
                      "nameLocation": "11808:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 910,
                      "src": "11797:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                        "typeString": "struct LamportBase2.Key"
                      },
                      "typeName": {
                        "id": 854,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 853,
                          "name": "Key",
                          "nameLocations": [
                            "11797:3:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 16,
                          "src": "11797:3:0"
                        },
                        "referencedDeclaration": 16,
                        "src": "11797:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$16_storage_ptr",
                          "typeString": "struct LamportBase2.Key"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 863,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 857,
                            "name": "keyData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "11825:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                              "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                            }
                          },
                          "id": 859,
                          "indexExpression": {
                            "id": 858,
                            "name": "oldPKH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "11833:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11825:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Key_$16_storage",
                            "typeString": "struct LamportBase2.Key storage ref"
                          }
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11841:7:0",
                        "memberName": "keyType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "11825:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        }
                      },
                      {
                        "id": 861,
                        "name": "newPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "11850:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 856,
                      "name": "Key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "11821:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Key_$16_storage_ptr_$",
                        "typeString": "type(struct LamportBase2.Key storage pointer)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11821:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                      "typeString": "struct LamportBase2.Key memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11797:60:0"
                },
                {
                  "expression": {
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 864,
                        "name": "keyData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "11867:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                          "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                        }
                      },
                      "id": 866,
                      "indexExpression": {
                        "id": 865,
                        "name": "newPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "11875:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11867:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$16_storage",
                        "typeString": "struct LamportBase2.Key storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 867,
                      "name": "updatedKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 855,
                      "src": "11885:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                        "typeString": "struct LamportBase2.Key memory"
                      }
                    },
                    "src": "11867:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Key_$16_storage",
                      "typeString": "struct LamportBase2.Key storage ref"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "11867:28:0"
                },
                {
                  "expression": {
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11950:22:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 870,
                        "name": "keyData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "11957:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                          "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                        }
                      },
                      "id": 872,
                      "indexExpression": {
                        "id": 871,
                        "name": "oldPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "11965:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11957:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$16_storage",
                        "typeString": "struct LamportBase2.Key storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "11950:22:0"
                },
                {
                  "body": {
                    "id": 901,
                    "nodeType": "Block",
                    "src": "12078:127:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 886,
                                "name": "keys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20,
                                "src": "12096:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                                  "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                                }
                              },
                              "id": 888,
                              "indexExpression": {
                                "id": 887,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 876,
                                "src": "12101:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12096:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$16_storage",
                                "typeString": "struct LamportBase2.Key storage ref"
                              }
                            },
                            "id": 889,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12104:3:0",
                            "memberName": "pkh",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "12096:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 890,
                            "name": "oldPKH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "12111:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "12096:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 900,
                        "nodeType": "IfStatement",
                        "src": "12092:103:0",
                        "trueBody": {
                          "id": 899,
                          "nodeType": "Block",
                          "src": "12119:76:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 892,
                                    "name": "keys",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20,
                                    "src": "12137:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                                      "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                                    }
                                  },
                                  "id": 894,
                                  "indexExpression": {
                                    "id": 893,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 876,
                                    "src": "12142:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12137:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Key_$16_storage",
                                    "typeString": "struct LamportBase2.Key storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 895,
                                  "name": "updatedKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 855,
                                  "src": "12147:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                                    "typeString": "struct LamportBase2.Key memory"
                                  }
                                },
                                "src": "12137:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Key_$16_storage",
                                  "typeString": "struct LamportBase2.Key storage ref"
                                }
                              },
                              "id": 897,
                              "nodeType": "ExpressionStatement",
                              "src": "12137:20:0"
                            },
                            {
                              "id": 898,
                              "nodeType": "Break",
                              "src": "12175:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 879,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 876,
                      "src": "12056:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 880,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "12060:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Key_$16_storage_$dyn_storage",
                          "typeString": "struct LamportBase2.Key storage ref[] storage ref"
                        }
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12065:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12060:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12056:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 902,
                  "initializationExpression": {
                    "assignments": [
                      876
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12049:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "12044:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12044:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 878,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12053:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12044:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12073:3:0",
                      "subExpression": {
                        "id": 883,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "12073:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 885,
                    "nodeType": "ExpressionStatement",
                    "src": "12073:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "12039:166:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 904,
                          "name": "updatedKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "12231:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Key_$16_memory_ptr",
                            "typeString": "struct LamportBase2.Key memory"
                          }
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12242:7:0",
                        "memberName": "keyType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "12231:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        }
                      },
                      {
                        "id": 906,
                        "name": "oldPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "12251:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 907,
                        "name": "newPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "12259:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 903,
                      "name": "PkhUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "12220:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_KeyType_$10_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (enum LamportBase2.KeyType,bytes32,bytes32)"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12220:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 909,
                  "nodeType": "EmitStatement",
                  "src": "12215:51:0"
                }
              ]
            },
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateKey",
            "nameLocation": "11602:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 838,
                  "mutability": "mutable",
                  "name": "oldPKH",
                  "nameLocation": "11620:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "11612:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11612:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 840,
                  "mutability": "mutable",
                  "name": "newPKH",
                  "nameLocation": "11636:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "11628:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11628:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11611:32:0"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11653:0:0"
            },
            "scope": 1138,
            "src": "11593:680:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1005,
              "nodeType": "Block",
              "src": "12411:775:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 928,
                        "name": "initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "12429:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a206e6f7420696e697469616c697a6564",
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12442:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f8ffd0db50cb9ce51966438921d25e851fe464afe73b822a2f0c3f62177d63c",
                          "typeString": "literal_string \"LamportBase: not initialized\""
                        },
                        "value": "LamportBase: not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f8ffd0db50cb9ce51966438921d25e851fe464afe73b822a2f0c3f62177d63c",
                          "typeString": "literal_string \"LamportBase: not initialized\""
                        }
                      ],
                      "id": 927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12421:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12421:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "12421:52:0"
                },
                {
                  "assignments": [
                    933
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 933,
                      "mutability": "mutable",
                      "name": "pkh",
                      "nameLocation": "12492:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1005,
                      "src": "12484:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 932,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12484:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 940,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 937,
                            "name": "currentpub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 917,
                            "src": "12525:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          ],
                          "expression": {
                            "id": 935,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12508:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "12512:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "12508:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12508:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 934,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12498:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12498:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12484:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 942,
                              "name": "keyData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "12555:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                                "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                              }
                            },
                            "id": 944,
                            "indexExpression": {
                              "id": 943,
                              "name": "pkh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 933,
                              "src": "12563:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12555:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Key_$16_storage",
                              "typeString": "struct LamportBase2.Key storage ref"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12568:7:0",
                          "memberName": "keyType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "12555:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_KeyType_$10",
                            "typeString": "enum LamportBase2.KeyType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 946,
                            "name": "KeyType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "12579:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                              "typeString": "type(enum LamportBase2.KeyType)"
                            }
                          },
                          "id": 947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "12587:6:0",
                          "memberName": "ORACLE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "12579:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_KeyType_$10",
                            "typeString": "enum LamportBase2.KeyType"
                          }
                        },
                        "src": "12555:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a204e6f7420616e206f7261636c65206b6579",
                        "id": 949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12595:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bb67a06174ca205682263a649e3e1b1c345408c681d3952250eb71cd67f9085",
                          "typeString": "literal_string \"LamportBase: Not an oracle key\""
                        },
                        "value": "LamportBase: Not an oracle key"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bb67a06174ca205682263a649e3e1b1c345408c681d3952250eb71cd67f9085",
                          "typeString": "literal_string \"LamportBase: Not an oracle key\""
                        }
                      ],
                      "id": 941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12547:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12547:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "12547:81:0"
                },
                {
                  "assignments": [
                    953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 953,
                      "mutability": "mutable",
                      "name": "hashedData",
                      "nameLocation": "12647:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1005,
                      "src": "12639:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 952,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12639:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 964,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 959,
                                "name": "prepacked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "12695:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 960,
                                "name": "nextPKH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 923,
                                "src": "12706:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 957,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "12678:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "12682:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "12678:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12678:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 956,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12668:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12668:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "12660:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 954,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12660:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12660:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12639:77:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 966,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "12753:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 965,
                      "name": "LogLastCalculatedHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "12731:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12731:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 968,
                  "nodeType": "EmitStatement",
                  "src": "12726:38:0"
                },
                {
                  "assignments": [
                    970
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 970,
                      "mutability": "mutable",
                      "name": "verificationResult",
                      "nameLocation": "12780:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1005,
                      "src": "12775:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 969,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12775:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 976,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 972,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "12813:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 973,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "12825:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 974,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "12830:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      ],
                      "id": 971,
                      "name": "verify_u256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "12801:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_array$_t_bytes_calldata_ptr_$256_calldata_ptr_$_t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256,bytes calldata[256] calldata,bytes32[2] calldata[256] calldata) pure returns (bool)"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12801:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12775:66:0"
                },
                {
                  "expression": {
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 977,
                      "name": "lastVerificationResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "12852:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 978,
                      "name": "verificationResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "12877:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12852:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "12852:43:0"
                },
                {
                  "condition": {
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12910:19:0",
                    "subExpression": {
                      "id": 981,
                      "name": "verificationResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "12911:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1002,
                    "nodeType": "Block",
                    "src": "13055:113:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 989,
                                  "name": "keyData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "13085:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$16_storage_$",
                                    "typeString": "mapping(bytes32 => struct LamportBase2.Key storage ref)"
                                  }
                                },
                                "id": 991,
                                "indexExpression": {
                                  "id": 990,
                                  "name": "pkh",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 933,
                                  "src": "13093:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13085:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Key_$16_storage",
                                  "typeString": "struct LamportBase2.Key storage ref"
                                }
                              },
                              "id": 992,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13098:7:0",
                              "memberName": "keyType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13,
                              "src": "13085:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_KeyType_$10",
                                "typeString": "enum LamportBase2.KeyType"
                              }
                            },
                            {
                              "id": 993,
                              "name": "pkh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 933,
                              "src": "13107:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 994,
                              "name": "nextPKH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 923,
                              "src": "13112:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_KeyType_$10",
                                "typeString": "enum LamportBase2.KeyType"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 988,
                            "name": "PkhUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "13074:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_KeyType_$10_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (enum LamportBase2.KeyType,bytes32,bytes32)"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13074:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 996,
                        "nodeType": "EmitStatement",
                        "src": "13069:51:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 998,
                              "name": "pkh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 933,
                              "src": "13144:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 999,
                              "name": "nextPKH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 923,
                              "src": "13149:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 997,
                            "name": "updateKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "13134:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13134:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1001,
                        "nodeType": "ExpressionStatement",
                        "src": "13134:23:0"
                      }
                    ]
                  },
                  "id": 1003,
                  "nodeType": "IfStatement",
                  "src": "12906:262:0",
                  "trueBody": {
                    "id": 987,
                    "nodeType": "Block",
                    "src": "12931:118:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4c616d706f7274426173653a20566572696669636174696f6e206661696c6564",
                              "id": 984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13003:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5c601d74821f870f1210baa511fb307acdf5a2a4fac574faac118957497ff62b",
                                "typeString": "literal_string \"LamportBase: Verification failed\""
                              },
                              "value": "LamportBase: Verification failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5c601d74821f870f1210baa511fb307acdf5a2a4fac574faac118957497ff62b",
                                "typeString": "literal_string \"LamportBase: Verification failed\""
                              }
                            ],
                            "id": 983,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "12996:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12996:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 986,
                        "nodeType": "ExpressionStatement",
                        "src": "12996:42:0"
                      }
                    ]
                  }
                },
                {
                  "id": 1004,
                  "nodeType": "PlaceholderStatement",
                  "src": "13178:1:0"
                }
              ]
            },
            "id": 1006,
            "name": "onlyLamportOracle",
            "nameLocation": "12290:17:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "12333:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "12308:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 912,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12308:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 914,
                      "length": {
                        "hexValue": "32",
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12316:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "12308:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 916,
                    "length": {
                      "hexValue": "323536",
                      "id": 915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12319:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "12308:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "12365:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "12345:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 918,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "12345:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 920,
                    "length": {
                      "hexValue": "323536",
                      "id": 919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12351:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "12345:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 923,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "12378:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "12370:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12370:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "prepacked",
                  "nameLocation": "12400:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "12387:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12387:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12307:103:0"
            },
            "src": "12281:905:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "4bdd4499",
            "id": 1008,
            "mutability": "mutable",
            "name": "lastUsedNextPKH",
            "nameLocation": "13207:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 1138,
            "src": "13192:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1007,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "13192:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1035,
              "nodeType": "Block",
              "src": "13548:103:0",
              "statements": [
                {
                  "expression": {
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1031,
                      "name": "lastUsedNextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1008,
                      "src": "13619:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1032,
                      "name": "nextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1020,
                      "src": "13637:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13619:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1034,
                  "nodeType": "ExpressionStatement",
                  "src": "13619:25:0"
                }
              ]
            },
            "functionSelector": "4e657d2a",
            "id": 1036,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1025,
                    "name": "currentpub",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1014,
                    "src": "13459:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                      "typeString": "bytes32[2] calldata[256] calldata"
                    }
                  },
                  {
                    "id": 1026,
                    "name": "sig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1018,
                    "src": "13483:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                      "typeString": "bytes calldata[256] calldata"
                    }
                  },
                  {
                    "id": 1027,
                    "name": "nextPKH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1020,
                    "src": "13500:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 1028,
                    "name": "newmasterPKH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1022,
                    "src": "13521:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 1029,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1024,
                  "name": "onlyLamportMaster",
                  "nameLocations": [
                    "13428:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 836,
                  "src": "13428:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13428:115:0"
              }
            ],
            "name": "createMasterKeyStepOne",
            "nameLocation": "13238:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "13295:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "13270:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1009,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13270:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1011,
                      "length": {
                        "hexValue": "32",
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13278:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "13270:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 1013,
                    "length": {
                      "hexValue": "323536",
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13281:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "13270:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1018,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "13335:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "13315:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1015,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "13315:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 1017,
                    "length": {
                      "hexValue": "323536",
                      "id": 1016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13321:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "13315:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1020,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "13356:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "13348:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1019,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13348:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1022,
                  "mutability": "mutable",
                  "name": "newmasterPKH",
                  "nameLocation": "13386:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "13373:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13373:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13260:144:0"
            },
            "returnParameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13548:0:0"
            },
            "scope": 1138,
            "src": "13229:422:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1103,
              "nodeType": "Block",
              "src": "13989:630:0",
              "statements": [
                {
                  "assignments": [
                    1063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1063,
                      "mutability": "mutable",
                      "name": "currentPKH",
                      "nameLocation": "14077:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1103,
                      "src": "14069:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1062,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14069:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1070,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1067,
                            "name": "currentpub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "14117:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          ],
                          "expression": {
                            "id": 1065,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14100:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14104:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "14100:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14100:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1064,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "14090:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14090:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14069:60:0"
                },
                {
                  "assignments": [
                    1072
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1072,
                      "mutability": "mutable",
                      "name": "pkhMatched",
                      "nameLocation": "14144:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1103,
                      "src": "14139:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1071,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14139:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1077,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1073,
                          "name": "lastUsedNextPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "14158:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1074,
                          "name": "currentPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1063,
                          "src": "14177:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "14158:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1076,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "14157:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14139:49:0"
                },
                {
                  "expression": {
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1078,
                      "name": "lastUsedNextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1008,
                      "src": "14318:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14344:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14336:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14336:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14336:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "14318:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "14318:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1086,
                        "name": "pkhMatched",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "14414:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20504b48206d617463686573206c617374207573656420504b482028757365207365706172617465207365636f6e64206b657929",
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14426:66:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19a026797672a3256d5916b217bd58c9ace639ff8844d664825a2cea0e17424b",
                          "typeString": "literal_string \"LamportBase: PKH matches last used PKH (use separate second key)\""
                        },
                        "value": "LamportBase: PKH matches last used PKH (use separate second key)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19a026797672a3256d5916b217bd58c9ace639ff8844d664825a2cea0e17424b",
                          "typeString": "literal_string \"LamportBase: PKH matches last used PKH (use separate second key)\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14406:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14406:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "14406:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1091,
                          "name": "KeyType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "14511:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                            "typeString": "type(enum LamportBase2.KeyType)"
                          }
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "14519:6:0",
                        "memberName": "MASTER",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "14511:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        }
                      },
                      {
                        "id": 1093,
                        "name": "newmasterPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "14527:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1090,
                      "name": "addKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "14504:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_KeyType_$10_$_t_bytes32_$returns$__$",
                        "typeString": "function (enum LamportBase2.KeyType,bytes32)"
                      }
                    },
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14504:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "14504:36:0"
                },
                {
                  "expression": {
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1096,
                      "name": "lastUsedNextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1008,
                      "src": "14584:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14610:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14602:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14602:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14602:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "14584:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1102,
                  "nodeType": "ExpressionStatement",
                  "src": "14584:28:0"
                }
              ]
            },
            "functionSelector": "5796841a",
            "id": 1104,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1053,
                    "name": "currentpub",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1042,
                    "src": "13882:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                      "typeString": "bytes32[2] calldata[256] calldata"
                    }
                  },
                  {
                    "id": 1054,
                    "name": "sig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1046,
                    "src": "13906:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                      "typeString": "bytes calldata[256] calldata"
                    }
                  },
                  {
                    "id": 1055,
                    "name": "nextPKH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1048,
                    "src": "13923:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "id": 1058,
                        "name": "newmasterPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "13961:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1056,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13944:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13948:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "13944:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13944:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 1060,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1052,
                  "name": "onlyLamportMaster",
                  "nameLocations": [
                    "13851:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 836,
                  "src": "13851:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13851:133:0"
              }
            ],
            "name": "createMasterKeyStepTwo",
            "nameLocation": "13666:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1042,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "13723:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "13698:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1037,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13698:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1039,
                      "length": {
                        "hexValue": "32",
                        "id": 1038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13706:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "13698:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 1041,
                    "length": {
                      "hexValue": "323536",
                      "id": 1040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13709:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "13698:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1046,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "13763:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "13743:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1043,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "13743:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 1045,
                    "length": {
                      "hexValue": "323536",
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13749:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "13743:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1048,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "13784:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "13776:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13776:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "newmasterPKH",
                  "nameLocation": "13809:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "13801:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13801:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13688:139:0"
            },
            "returnParameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13989:0:0"
            },
            "scope": 1138,
            "src": "13657:962:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1136,
              "nodeType": "Block",
              "src": "14961:69:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1131,
                          "name": "KeyType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "14987:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_KeyType_$10_$",
                            "typeString": "type(enum LamportBase2.KeyType)"
                          }
                        },
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "14995:6:0",
                        "memberName": "ORACLE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "14987:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        }
                      },
                      {
                        "id": 1133,
                        "name": "neworaclePKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "15003:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_KeyType_$10",
                          "typeString": "enum LamportBase2.KeyType"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1130,
                      "name": "addKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "14980:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_KeyType_$10_$_t_bytes32_$returns$__$",
                        "typeString": "function (enum LamportBase2.KeyType,bytes32)"
                      }
                    },
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14980:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1135,
                  "nodeType": "ExpressionStatement",
                  "src": "14980:36:0"
                }
              ]
            },
            "functionSelector": "8eb8f1a6",
            "id": 1137,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1121,
                    "name": "currentpub",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1110,
                    "src": "14854:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                      "typeString": "bytes32[2] calldata[256] calldata"
                    }
                  },
                  {
                    "id": 1122,
                    "name": "sig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1116,
                    "src": "14878:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                      "typeString": "bytes calldata[256] calldata"
                    }
                  },
                  {
                    "id": 1123,
                    "name": "nextPKH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1112,
                    "src": "14895:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "id": 1126,
                        "name": "neworaclePKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "14933:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1124,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "14916:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "14920:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "14916:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14916:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 1128,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1120,
                  "name": "onlyLamportMaster",
                  "nameLocations": [
                    "14823:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 836,
                  "src": "14823:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "14823:133:0"
              }
            ],
            "name": "createOracleKeyFromMaster",
            "nameLocation": "14635:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1110,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "14695:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "14670:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1105,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14670:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1107,
                      "length": {
                        "hexValue": "32",
                        "id": 1106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14678:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "14670:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 1109,
                    "length": {
                      "hexValue": "323536",
                      "id": 1108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14681:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "14670:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "14723:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "14715:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1111,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14715:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1116,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "14760:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "14740:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1113,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "14740:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 1115,
                    "length": {
                      "hexValue": "323536",
                      "id": 1114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14746:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "14740:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1118,
                  "mutability": "mutable",
                  "name": "neworaclePKH",
                  "nameLocation": "14781:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "14773:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1117,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14773:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14660:139:0"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14961:0:0"
            },
            "scope": 1138,
            "src": "14626:404:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1139,
        "src": "65:14967:0",
        "usedErrors": [],
        "usedEvents": [
          38,
          42,
          51,
          58,
          70
        ]
      }
    ],
    "src": "40:14993:0"
  },
  "bytecode": "60806040526000805460ff191690553480156200001b57600080fd5b506200004960007fb7b18ded9664d1a8e923a5942ec1ca5cd8c13c40eb1a5215d5800600f5a587be620000b6565b6200007660007f1ed304ab73e124b0b99406dfa1388a492a818837b4b41ce5693ad84dacfc3f25620000b6565b620000a360017fd62569e61a6423c880a429676be48756c931fe0519121684f5fb05cbd17877fa620000b6565b6000805460ff191660011790556200021d565b60006040518060400160405280846002811115620000d857620000d8620001da565b81526020018390526001805480820182556000829052825160029182027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6018054949550859490939192849260ff1990921691908490811115620001405762000140620001da565b021790555060209182015160019182015560008481526002928390526040902083518154859492939192849260ff1990921691908490811115620001885762000188620001da565b0217905550602082015181600101559050507f2172c7b01a6de957d29fd6166a23025d181bf56538ad606a526ab2d62603f3fc8383604051620001cd929190620001f0565b60405180910390a1505050565b634e487b7160e01b600052602160045260246000fd5b60408101600384106200021357634e487b7160e01b600052602160045260246000fd5b9281526020015290565b611c66806200022d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80635796841a1161008c578063af82f3e711610066578063af82f3e714610202578063b97b4f7714610215578063d83c413c14610235578063e673d71f1461024857600080fd5b80635796841a146101af5780638eb8f1a6146101c2578063a9711ee3146101d557600080fd5b8063333f6111116100c8578063333f61111461015d5780634a89d52b146101705780634bdd4499146101835780634e657d2a1461019a57600080fd5b806305aacc7d146100ef5780630cb6aaf11461011a5780632fd5c2471461013b575b600080fd5b6101026100fd3660046116b2565b61025b565b60405161011193929190611703565b60405180910390f35b61012d6101283660046116b2565b610362565b604051610111929190611722565b60005461014d90610100900460ff1681565b6040519015158152602001610111565b61014d61016b36600461177d565b610394565b61014d61017e36600461177d565b610485565b61018c60055481565b604051908152602001610111565b6101ad6101a836600461177d565b6104dc565b005b6101ad6101bd366004611872565b6106ad565b6101ad6101d03660046118d5565b61090c565b61012d6101e33660046116b2565b6002602052600090815260409020805460019091015460ff9091169082565b61014d610210366004611939565b610ab5565b610228610223366004611992565b610b6a565b60405161011191906119b3565b6101ad610243366004611872565b610d1a565b6101ad610256366004611872565b610ec2565b60008181526002602081905260408083208151808301909252805484938493849390929091839160ff1690811115610295576102956116cb565b60028111156102a6576102a66116cb565b8152600191909101546020918201528101519091506000036102e35760405162461bcd60e51b81526004016102da906119f7565b60405180910390fd5b60005b60015481101561034257856001828154811061030457610304611a2e565b90600052602060002090600202016001015403610330578151602090920151919450909250905061035b565b8061033a81611a44565b9150506102e6565b5060405162461bcd60e51b81526004016102da906119f7565b9193909250565b6001818154811061037257600080fd5b60009182526020909120600290910201805460019091015460ff909116915082565b6000805460ff166103b75760405162461bcd60e51b81526004016102da90611a6b565b6000856040516020016103ca9190611aa2565b60408051601f198184030181529190528051602090910120905060005b60008281526002602081905260409091205460ff169081111561040c5761040c6116cb565b1461041b57600091505061047d565b60008385604051602001610430929190611ad9565b6040516020818303038152906040528051906020012060001c9050600061045882888a610ab5565b90508061046b576000935050505061047d565b61047583876113f7565b600193505050505b949350505050565b6000805460ff166104a85760405162461bcd60e51b81526004016102da90611a6b565b6000856040516020016104bb9190611aa2565b60408051601f198184030181529190528051602090910120905060016103e7565b600054849084908490849060ff166105065760405162461bcd60e51b81526004016102da90611a6b565b6000846040516020016105199190611aa2565b60408051601f19818403018152919052805160209091012090506000808281526002602081905260409091205460ff1690811115610559576105596116cb565b146105765760405162461bcd60e51b81526004016102da90611b0b565b6000828460405160200161058b929190611ad9565b60408051601f198184030181529082905280516020918201208083529250600080516020611bf1833981519152910160405180910390a160006105cf828789610ab5565b6000805461ff0019166101008315150217905590508061065357604051828152600080516020611bd1833981519152906020015b60405180910390a160405162461bcd60e51b815260206004820181905260248201527f4c616d706f7274426173653a20566572696669636174696f6e206661696c656460448201526064016102da565b60008381526002602052604090819020549051600080516020611c11833981519152916106899160ff9091169086908990611703565b60405180910390a161069b83866113f7565b50505060059590955550505050505050565b838383836040516020016106c391815260200190565b60408051601f1981840301815291905260005460ff166106f55760405162461bcd60e51b81526004016102da90611a6b565b6000846040516020016107089190611aa2565b60408051601f19818403018152919052805160209091012090506000808281526002602081905260409091205460ff1690811115610748576107486116cb565b146107655760405162461bcd60e51b81526004016102da90611b0b565b6000828460405160200161077a929190611ad9565b60408051601f198184030181529082905280516020918201208083529250600080516020611bf1833981519152910160405180910390a160006107be828789610ab5565b6000805461ff001916610100831515021790559050806107f657604051828152600080516020611bd183398151915290602001610603565b60008381526002602052604090819020549051600080516020611c118339815191529161082c9160ff9091169086908990611703565b60405180910390a161083e83866113f7565b60008b6040516020016108519190611aa2565b60408051601f198184030181529190528051602090910120600580546000909155909150811415806108ed576040805162461bcd60e51b81526020600482015260248101919091527f4c616d706f7274426173653a20504b48206d617463686573206c61737420757360448201527f656420504b482028757365207365706172617465207365636f6e64206b65792960648201526084016102da565b6108f860008b6115a6565b505060006005555050505050505050505050565b8382848360405160200161092291815260200190565b60408051601f1981840301815291905260005460ff166109545760405162461bcd60e51b81526004016102da90611a6b565b6000846040516020016109679190611aa2565b60408051601f19818403018152919052805160209091012090506000808281526002602081905260409091205460ff16908111156109a7576109a76116cb565b146109c45760405162461bcd60e51b81526004016102da90611b0b565b600082846040516020016109d9929190611ad9565b60408051601f198184030181529082905280516020918201208083529250600080516020611bf1833981519152910160405180910390a16000610a1d828789610ab5565b6000805461ff00191661010083151502179055905080610a5557604051828152600080516020611bd183398151915290602001610603565b60008381526002602052604090819020549051600080516020611c1183398151915291610a8b9160ff9091169086908990611703565b60405180910390a1610a9d83866113f7565b610aa86001896115a6565b5050505050505050505050565b6000805b610100811015610b5d5783816101008110610ad657610ad6611a2e565b602002810190610ae69190611b42565b604051610af4929190611b90565b604051809103902083826101008110610b0f57610b0f611a2e565b6040020160008360ff036001901b881611610b2b576000610b2e565b60015b60ff1660028110610b4157610b41611a2e565b602002013514610b55576000915050610b63565b600101610ab9565b50600190505b9392505050565b60015460609060009067ffffffffffffffff811115610b8b57610b8b611767565b604051908082528060200260200182016040528015610bb4578160200160208202803683370190505b5090506000805b600154811015610c7557846002811115610bd757610bd76116cb565b60018281548110610bea57610bea611a2e565b600091825260209091206002918202015460ff1690811115610c0e57610c0e6116cb565b03610c635760018181548110610c2657610c26611a2e565b906000526020600020906002020160010154838381518110610c4a57610c4a611a2e565b602090810291909101015281610c5f81611a44565b9250505b80610c6d81611a44565b915050610bbb565b5060008167ffffffffffffffff811115610c9157610c91611767565b604051908082528060200260200182016040528015610cba578160200160208202803683370190505b50905060005b82811015610d1157838181518110610cda57610cda611a2e565b6020026020010151828281518110610cf457610cf4611a2e565b602090810291909101015280610d0981611a44565b915050610cc0565b50949350505050565b83838383604051602001610d3091815260200190565b60408051601f1981840301815291905260005460ff16610d625760405162461bcd60e51b81526004016102da90611a6b565b600084604051602001610d759190611aa2565b60408051601f19818403018152919052805160209091012090506000808281526002602081905260409091205460ff1690811115610db557610db56116cb565b14610dd25760405162461bcd60e51b81526004016102da90611b0b565b60008284604051602001610de7929190611ad9565b60408051601f198184030181529082905280516020918201208083529250600080516020611bf1833981519152910160405180910390a16000610e2b828789610ab5565b6000805461ff00191661010083151502179055905080610e6357604051828152600080516020611bd183398151915290602001610603565b60008381526002602052604090819020549051600080516020611c1183398151915291610e999160ff9091169086908990611703565b60405180910390a1610eab83866113f7565b505050600394909455505050600491909155505050565b83838383604051602001610ed891815260200190565b60408051601f1981840301815291905260005460ff16610f0a5760405162461bcd60e51b81526004016102da90611a6b565b600084604051602001610f1d9190611aa2565b60408051601f19818403018152919052805160209091012090506000808281526002602081905260409091205460ff1690811115610f5d57610f5d6116cb565b14610f7a5760405162461bcd60e51b81526004016102da90611b0b565b60008284604051602001610f8f929190611ad9565b60408051601f198184030181529082905280516020918201208083529250600080516020611bf1833981519152910160405180910390a16000610fd3828789610ab5565b6000805461ff0019166101008315150217905590508061100b57604051828152600080516020611bd183398151915290602001610603565b60008381526002602052604090819020549051600080516020611c11833981519152916110419160ff9091169086908990611703565b60405180910390a161105383866113f7565b60008b6040516020016110669190611aa2565b60405160208183030381529060405280519060200120905060045481036110ff5760405162461bcd60e51b815260206004820152604160248201527f4c616d706f7274426173653a2043616e6e6f7420757365207468652073616d6560448201527f206b6579636861696e20747769636520666f7220746869732066756e6374696f6064820152603760f91b608482015260a4016102da565b88600354146111505760405162461bcd60e51b815260206004820152601e60248201527f4c616d706f7274426173653a204b65797320646f206e6f74206d61746368000060448201526064016102da565b600454818a6000808481526002602081905260409091205460ff169081111561117b5761117b6116cb565b1480156111a95750600082815260026020819052604082205460ff16908111156111a7576111a76116cb565b145b61120c5760405162461bcd60e51b815260206004820152602e60248201527f4c616d706f7274426173653a2050726f7669646564206b65797320617265206e60448201526d6f74206d6173746572206b65797360901b60648201526084016102da565b82811415801561121c5750818114155b6112825760405162461bcd60e51b815260206004820152603160248201527f4c616d706f7274426173653a204d6173746572206b6579732063616e6e6f742060448201527064656c657465207468656d73656c76657360781b60648201526084016102da565b60008181526002602052604081206001015490036112ee5760405162461bcd60e51b815260206004820152602360248201527f4c616d706f7274426173653a204e6f2073756368206b6579202864656c6574696044820152626f6e2960e81b60648201526084016102da565b60005b6001548110156113db57816001828154811061130f5761130f611a2e565b906000526020600020906002020160010154036113c957600082815260026020818152604080842080548251428186015244818501528351808203850181526060909101938490528051908501209588905292849052630de1e7ed60e41b85186001820181905560ff198416851790915560ff9092169391927f0643be3612916977c69d5ed1abb75a50cca49df49ba2444d836e2a0cf65fe074916113b991869189918791611ba0565b60405180910390a15050506113db565b806113d381611a44565b9150506112f1565b5050600060038190556004555050505050505050505050505050565b60008281526002602052604081206001015490036114275760405162461bcd60e51b81526004016102da906119f7565b604080518082018252600084815260026020819052928120549092829160ff1690811115611457576114576116cb565b8152602001838152509050806002600084815260200190815260200160002060008201518160000160006101000a81548160ff021916908360028111156114a0576114a06116cb565b02179055506020918201516001918201556000858152600290925260408220805460ff19168155018190555b6001548110156115765783600182815481106114ea576114ea611a2e565b9060005260206000209060020201600101540361156457816001828154811061151557611515611a2e565b906000526020600020906002020160008201518160000160006101000a81548160ff0219169083600281111561154d5761154d6116cb565b021790555060208201518160010155905050611576565b8061156e81611a44565b9150506114cc565b508051604051600080516020611c11833981519152916115999186908690611703565b60405180910390a1505050565b600060405180604001604052808460028111156115c5576115c56116cb565b81526020018390526001805480820182556000829052825160029182027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6018054949550859490939192849260ff199092169190849081111561162a5761162a6116cb565b021790555060209182015160019182015560008481526002928390526040902083518154859492939192849260ff199092169190849081111561166f5761166f6116cb565b0217905550602082015181600101559050507f2172c7b01a6de957d29fd6166a23025d181bf56538ad606a526ab2d62603f3fc8383604051611599929190611722565b6000602082840312156116c457600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600381106116ff57634e487b7160e01b600052602160045260246000fd5b9052565b6060810161171182866116e1565b602082019390935260400152919050565b6040810161173082856116e1565b8260208301529392505050565b80614000810183101561174f57600080fd5b92915050565b80612000810183101561174f57600080fd5b634e487b7160e01b600052604160045260246000fd5b600080600080614060858703121561179457600080fd5b61179e868661173d565b935061400085013567ffffffffffffffff808211156117bc57600080fd5b6117c888838901611755565b945061402087013593506140408701359150808211156117e757600080fd5b818701915087601f8301126117fb57600080fd5b81358181111561180d5761180d611767565b604051601f8201601f19908116603f0116810190838211818310171561183557611835611767565b816040528281528a602084870101111561184e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600080614060858703121561188957600080fd5b611893868661173d565b935061400085013567ffffffffffffffff8111156118b057600080fd5b6118bc87828801611755565b9497949650505050614020830135926140400135919050565b60008060008061406085870312156118ec57600080fd5b6118f6868661173d565b9350614000850135925061402085013567ffffffffffffffff81111561191b57600080fd5b61192787828801611755565b94979396509394614040013593505050565b6000806000614040848603121561194f57600080fd5b83359250602084013567ffffffffffffffff81111561196d57600080fd5b61197986828701611755565b925050611989856040860161173d565b90509250925092565b6000602082840312156119a457600080fd5b813560038110610b6357600080fd5b6020808252825182820181905260009190848201906040850190845b818110156119eb578351835292840192918401916001016119cf565b50909695505050505050565b60208082526018908201527f4c616d706f7274426173653a204e6f2073756368206b65790000000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201611a6457634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252601c908201527f4c616d706f7274426173653a206e6f7420696e697469616c697a656400000000604082015260600190565b60008183825b610100811015611ac957604080838537928301929190910190600101611aa8565b5050506140008201905092915050565b6000835160005b81811015611afa5760208187018101518583015201611ae0565b509190910191825250602001919050565b6020808252601d908201527f4c616d706f7274426173653a204e6f742061206d6173746572206b6579000000604082015260600190565b6000808335601e19843603018112611b5957600080fd5b83018035915067ffffffffffffffff821115611b7457600080fd5b602001915036819003821315611b8957600080fd5b9250929050565b8183823760009101908152919050565b60808101611bae82876116e1565b846020830152836040830152611bc760608301846116e1565b9594505050505056fe32629d580208e19f97e5752eef849e102f803999c88aa7f75e12b1744eecd5a7d87e68f36f73a7eb22739d6639e36cafebfcde0b5543340b39f42cac68fdd1f06825a39bd161f4ef5aab6cfd2c26db3ee0005c11b43cffd544fc876312116edda26469706673582212205a0e8b7599fc49a3b3de381c037a71a17288ee7d7e0c9850e23c1c660e3ab61b64736f6c63430008150033",
  "bytecodeSha1": "5b5c2817b9f8dc0989044a8ebdf24ff7ef29b529",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "LamportBase2",
  "coverageMap": {
    "branches": {
      "0": {
        "LamportBase2.deleteKeyStepTwo": {
          "59": [
            10516,
            10527,
            true
          ],
          "60": [
            10642,
            10680,
            true
          ],
          "61": [
            6742,
            6769,
            true
          ],
          "62": [
            6957,
            7002,
            true
          ],
          "63": [
            7536,
            7585,
            false
          ],
          "64": [
            7589,
            7639,
            true
          ],
          "65": [
            7786,
            7813,
            false
          ],
          "66": [
            7817,
            7845,
            true
          ],
          "67": [
            8410,
            8437,
            true
          ],
          "68": [
            8552,
            8576,
            false
          ]
        },
        "LamportBase2.getKeyAndPosByPKH": {
          "50": [
            3644,
            3656,
            true
          ],
          "51": [
            3809,
            3827,
            false
          ]
        },
        "LamportBase2.getPKHsByPrivilege": {
          "58": [
            4199,
            4227,
            false
          ]
        },
        "LamportBase2.performLamportMasterCheck": {
          "52": [
            1855,
            1866,
            true
          ],
          "53": [
            1977,
            2015,
            false
          ],
          "54": [
            2233,
            2251,
            false
          ]
        },
        "LamportBase2.performLamportOracleCheck": {
          "55": [
            2649,
            2660,
            true
          ],
          "56": [
            2771,
            2809,
            false
          ]
        },
        "LamportBase2.updateKey": {
          "69": [
            11671,
            11695,
            true
          ],
          "70": [
            12096,
            12117,
            false
          ]
        },
        "LamportBase2.verify_u256": {
          "57": [
            10186,
            10274,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "LamportBase2.addKey": {
          "47": [
            3313,
            3330
          ],
          "48": [
            3340,
            3364
          ],
          "49": [
            3374,
            3404
          ]
        },
        "LamportBase2.createMasterKeyStepOne": {
          "10": [
            13619,
            13644
          ]
        },
        "LamportBase2.createMasterKeyStepTwo": {
          "11": [
            14318,
            14346
          ],
          "12": [
            14406,
            14493
          ],
          "13": [
            14504,
            14540
          ],
          "14": [
            14584,
            14612
          ]
        },
        "LamportBase2.createOracleKeyFromMaster": {
          "15": [
            14980,
            15016
          ]
        },
        "LamportBase2.deleteKeyStepOne": {
          "25": [
            6017,
            6054
          ],
          "26": [
            6064,
            6087
          ]
        },
        "LamportBase2.deleteKeyStepTwo": {
          "27": [
            6734,
            6839
          ],
          "28": [
            6949,
            7037
          ],
          "29": [
            7528,
            7690
          ],
          "30": [
            7778,
            7899
          ],
          "31": [
            8402,
            8477
          ],
          "32": [
            9236,
            9272
          ],
          "33": [
            9035,
            9070
          ],
          "34": [
            9294,
            9338
          ],
          "35": [
            9411,
            9485
          ],
          "36": [
            9568,
            9573
          ],
          "37": [
            8525,
            8528
          ],
          "38": [
            9677,
            9711
          ],
          "39": [
            9725,
            9751
          ]
        },
        "LamportBase2.getKeyAndPosByPKH": {
          "0": [
            3636,
            3685
          ],
          "1": [
            3847,
            3879
          ],
          "2": [
            3786,
            3789
          ],
          "3": [
            3913,
            3947
          ]
        },
        "LamportBase2.getPKHsByPrivilege": {
          "19": [
            4247,
            4274
          ],
          "20": [
            4292,
            4301
          ],
          "21": [
            4176,
            4179
          ],
          "22": [
            4481,
            4500
          ],
          "23": [
            4462,
            4465
          ],
          "24": [
            4521,
            4534
          ]
        },
        "LamportBase2.performLamportMasterCheck": {
          "4": [
            1847,
            1899
          ],
          "5": [
            2031,
            2043
          ],
          "6": [
            2267,
            2279
          ],
          "7": [
            2310,
            2333
          ],
          "8": [
            2347,
            2358
          ]
        },
        "LamportBase2.performLamportOracleCheck": {
          "9": [
            2641,
            2693
          ]
        },
        "LamportBase2.updateKey": {
          "40": [
            11663,
            11724
          ],
          "41": [
            11867,
            11895
          ],
          "42": [
            11950,
            11972
          ],
          "43": [
            12137,
            12157
          ],
          "44": [
            12175,
            12180
          ],
          "45": [
            12073,
            12076
          ],
          "46": [
            12215,
            12266
          ]
        },
        "LamportBase2.verify_u256": {
          "16": [
            10293,
            10305
          ],
          "17": [
            10138,
            10141
          ],
          "18": [
            10334,
            10345
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "65:14967:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3502:452;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;365:17;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;124:34::-;;;;;;;;;;;;;;;1548:14:5;;1541:22;1523:41;;1511:2;1496:18;124:34:0;1383:187:5;1639:736:0;;;;;;:::i;:::-;;:::i;2433:::-;;;;;;:::i;:::-;;:::i;13192:30::-;;;;;;;;;3638:25:5;;;3626:2;3611:18;13192:30:0;3492:177:5;13229:422:0;;;;;;:::i;:::-;;:::i;:::-;;13657:962;;;;;;:::i;:::-;;:::i;14626:404::-;;;;;;:::i;:::-;;:::i;405:38::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;9932:430;;;;;;:::i;:::-;;:::i;3959:582::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5619:475::-;;;;;;:::i;:::-;;:::i;6100:3662::-;;;;;;:::i;:::-;;:::i;3502:452::-;3563:7;3614:12;;;:7;:12;;;;;;;;3597:29;;;;;;;;;;3563:7;;;;;;3597:29;;3614:12;;3597:29;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;3644:7;;;3597:29;;-1:-1:-1;;3644:12:0;3636:49;;;;-1:-1:-1;;;3636:49:0;;;;;;;:::i;:::-;;;;;;;;;3757:6;3752:152;3773:4;:11;3769:15;;3752:152;;;3824:3;3809:4;3814:1;3809:7;;;;;;;;:::i;:::-;;;;;;;;;;;:11;;;:18;3805:89;;3855:11;;3868:7;;;;;3855:11;;-1:-1:-1;3868:7:0;;-1:-1:-1;3877:1:0;-1:-1:-1;3847:32:0;;3805:89;3786:3;;;;:::i;:::-;;;;3752:152;;;;3913:34;;-1:-1:-1;;;3913:34:0;;;;;;;:::i;3502:452::-;;;;;;:::o;365:17::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;365:17:0;:::o;1639:736::-;1831:4;1855:11;;;;1847:52;;;;-1:-1:-1;;;1847:52:0;;;;;;;:::i;:::-;1910:11;1951:10;1934:28;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1934:28:0;;;;;;;;;1924:39;;1934:28;1924:39;;;;;-1:-1:-1;2001:14:0;1977:38;:12;;;;:7;:12;;;;;;;;:20;;;;:38;;;;;;;:::i;:::-;;1973:81;;2038:5;2031:12;;;;;1973:81;2064:18;2120:9;2131:7;2103:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2093:47;;;;;;2085:56;;2064:77;;2151:23;2177:40;2189:10;2201:3;2206:10;2177:11;:40::i;:::-;2151:66;;2233:18;2228:141;;2274:5;2267:12;;;;;;;2228:141;2310:23;2320:3;2325:7;2310:9;:23::i;:::-;2354:4;2347:11;;;;;1639:736;;;;;;;:::o;2433:::-;2625:4;2649:11;;;;2641:52;;;;-1:-1:-1;;;2641:52:0;;;;;;;:::i;:::-;2704:11;2745:10;2728:28;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2728:28:0;;;;;;;;;2718:39;;2728:28;2718:39;;;;;-1:-1:-1;2795:14:0;2771:38;;13229:422;10516:11;;13459:10;;13483:3;;13500:7;;13521:12;;10516:11;;10508:52;;;;-1:-1:-1;;;10508:52:0;;;;;;;:::i;:::-;10571:11;10612:10;10595:28;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10595:28:0;;;;;;;;;10585:39;;10595:28;10585:39;;;;;-1:-1:-1;10666:14:0;10642:12;;;;:7;:12;;;;;;;;:20;;;;:38;;;;;;;:::i;:::-;;10634:80;;;;-1:-1:-1;;;10634:80:0;;;;;;;:::i;:::-;10725:18;10781:9;10792:7;10764:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10764:36:0;;;;;;;;;;10754:47;;10764:36;10754:47;;;;3638:25:5;;;10754:47:0;-1:-1:-1;;;;;;;;;;;;10817:33:0;3611:18:5;10817:33:0;;;;;;;10861:23;10887:40;10899:10;10911:3;10916:10;10887:11;:40::i;:::-;10938:22;:43;;-1:-1:-1;;10938:43:0;;;;;;;;;;-1:-1:-1;10938:43:0;10992:260;;11036:30;;3638:25:5;;;-1:-1:-1;;;;;;;;;;;11036:30:0;3626:2:5;3611:18;11036:30:0;;;;;;;;11080:42;;-1:-1:-1;;;11080:42:0;;9430:2:5;11080:42:0;;;9412:21:5;;;9449:18;;;9442:30;9508:34;9488:18;;;9481:62;9560:18;;11080:42:0;9228:356:5;10992:260:0;11169:12;;;;:7;:12;;;;;;;:20;11158:46;;-1:-1:-1;;;;;;;;;;;11158:46:0;;;11169:20;;;;;11177:3;;11196:7;;11158:46;:::i;:::-;;;;;;;;11218:23;11228:3;11233:7;11218:9;:23::i;:::-;-1:-1:-1;;;13619:15:0::1;:25:::0;;;;-1:-1:-1;;;;;;;13229:422:0:o;13657:962::-;13882:10;13906:3;13923:7;13961:12;13944:30;;;;;;10067:19:5;;10111:2;10102:12;;9938:182;13944:30:0;;;;-1:-1:-1;;13944:30:0;;;;;;;;;10516:11;;;;10508:52;;;;-1:-1:-1;;;10508:52:0;;;;;;;:::i;:::-;10571:11;10612:10;10595:28;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10595:28:0;;;;;;;;;10585:39;;10595:28;10585:39;;;;;-1:-1:-1;10666:14:0;10642:12;;;;:7;:12;;;;;;;;:20;;;;:38;;;;;;;:::i;:::-;;10634:80;;;;-1:-1:-1;;;10634:80:0;;;;;;;:::i;:::-;10725:18;10781:9;10792:7;10764:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10764:36:0;;;;;;;;;;10754:47;;10764:36;10754:47;;;;3638:25:5;;;10754:47:0;-1:-1:-1;;;;;;;;;;;;10817:33:0;3611:18:5;10817:33:0;;;;;;;10861:23;10887:40;10899:10;10911:3;10916:10;10887:11;:40::i;:::-;10938:22;:43;;-1:-1:-1;;10938:43:0;;;;;;;;;;-1:-1:-1;10938:43:0;10992:260;;11036:30;;3638:25:5;;;-1:-1:-1;;;;;;;;;;;11036:30:0;3626:2:5;3611:18;11036:30:0;3492:177:5;10992:260:0;11169:12;;;;:7;:12;;;;;;;:20;11158:46;;-1:-1:-1;;;;;;;;;;;11158:46:0;;;11169:20;;;;;11177:3;;11196:7;;11158:46;:::i;:::-;;;;;;;;11218:23;11228:3;11233:7;11218:9;:23::i;:::-;14069:18:::1;14117:10;14100:28;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;14100:28:0;;::::1;::::0;;;;;;14090:39;;14100:28:::1;14090:39:::0;;::::1;::::0;14158:15:::1;::::0;;14139::::1;14318:28:::0;;;14090:39;;-1:-1:-1;14158:29:0;::::1;;::::0;14406:87:::1;;;::::0;;-1:-1:-1;;;14406:87:0;;10327:2:5;14406:87:0::1;::::0;::::1;10309:21:5::0;10346:18;;;10339:30;;;;10405:34;10385:18;;;10378:62;10476:34;10456:18;;;10449:62;10528:19;;14406:87:0::1;10125:428:5::0;14406:87:0::1;14504:36;14511:14;14527:12;14504:6;:36::i;:::-;-1:-1:-1::0;;14610:1:0::1;14584:15;:28:::0;-1:-1:-1;;;;;;;;;;;13657:962:0:o;14626:404::-;14854:10;14878:3;14895:7;14933:12;14916:30;;;;;;10067:19:5;;10111:2;10102:12;;9938:182;14916:30:0;;;;-1:-1:-1;;14916:30:0;;;;;;;;;10516:11;;;;10508:52;;;;-1:-1:-1;;;10508:52:0;;;;;;;:::i;:::-;10571:11;10612:10;10595:28;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10595:28:0;;;;;;;;;10585:39;;10595:28;10585:39;;;;;-1:-1:-1;10666:14:0;10642:12;;;;:7;:12;;;;;;;;:20;;;;:38;;;;;;;:::i;:::-;;10634:80;;;;-1:-1:-1;;;10634:80:0;;;;;;;:::i;:::-;10725:18;10781:9;10792:7;10764:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10764:36:0;;;;;;;;;;10754:47;;10764:36;10754:47;;;;3638:25:5;;;10754:47:0;-1:-1:-1;;;;;;;;;;;;10817:33:0;3611:18:5;10817:33:0;;;;;;;10861:23;10887:40;10899:10;10911:3;10916:10;10887:11;:40::i;:::-;10938:22;:43;;-1:-1:-1;;10938:43:0;;;;;;;;;;-1:-1:-1;10938:43:0;10992:260;;11036:30;;3638:25:5;;;-1:-1:-1;;;;;;;;;;;11036:30:0;3626:2:5;3611:18;11036:30:0;3492:177:5;10992:260:0;11169:12;;;;:7;:12;;;;;;;:20;11158:46;;-1:-1:-1;;;;;;;;;;;11158:46:0;;;11169:20;;;;;11177:3;;11196:7;;11158:46;:::i;:::-;;;;;;;;11218:23;11228:3;11233:7;11218:9;:23::i;:::-;14980:36:::1;14987:14;15003:12;14980:6;:36::i;:::-;10498:772:::0;;;14626:404;;;;;;;;:::o;9932:430::-;10073:4;10118:9;10113:207;10133:3;10129:1;:7;10113:207;;;10267:3;10271:1;10267:6;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;10257:17;;;;;;;:::i;:::-;;;;;;;;10186:3;10190:1;10186:6;;;;;;;:::i;:::-;;;;10222:1;10215;10209:3;:7;10203:1;:14;;10195:4;:23;10194:29;10193:39;;10231:1;10193:39;;;10227:1;10193:39;10186:47;;;;;;;;;:::i;:::-;;;;;:88;10161:144;;10300:5;10293:12;;;;;10161:144;10138:3;;10113:207;;;;10341:4;10334:11;;9932:430;;;;;;:::o;3959:582::-;4093:4;:11;4027:16;;4055:21;;4079:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4079:26:0;;4055:50;;4115:12;4147:6;4142:184;4163:4;:11;4159:15;;4142:184;;;4218:9;4199:28;;;;;;;;:::i;:::-;:4;4204:1;4199:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:15;;;;:28;;;;;;;:::i;:::-;;4195:121;;4263:4;4268:1;4263:7;;;;;;;;:::i;:::-;;;;;;;;;;;:11;;;4247:4;4252:7;4247:13;;;;;;;;:::i;:::-;;;;;;;;;;:27;4292:9;;;;:::i;:::-;;;;4195:121;4176:3;;;;:::i;:::-;;;;4142:184;;;;4375:23;4415:7;4401:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4401:22:0;;4375:48;;4437:6;4433:78;4453:7;4449:1;:11;4433:78;;;4493:4;4498:1;4493:7;;;;;;;;:::i;:::-;;;;;;;4481:6;4488:1;4481:9;;;;;;;;:::i;:::-;;;;;;;;;;:19;4462:3;;;;:::i;:::-;;;;4433:78;;;-1:-1:-1;4528:6:0;3959:582;-1:-1:-1;;;;3959:582:0:o;5619:475::-;5839:10;5863:3;5880:7;5918:13;5901:31;;;;;;10067:19:5;;10111:2;10102:12;;9938:182;5901:31:0;;;;-1:-1:-1;;5901:31:0;;;;;;;;;10516:11;;;;10508:52;;;;-1:-1:-1;;;10508:52:0;;;;;;;:::i;:::-;10571:11;10612:10;10595:28;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10595:28:0;;;;;;;;;10585:39;;10595:28;10585:39;;;;;-1:-1:-1;10666:14:0;10642:12;;;;:7;:12;;;;;;;;:20;;;;:38;;;;;;;:::i;:::-;;10634:80;;;;-1:-1:-1;;;10634:80:0;;;;;;;:::i;:::-;10725:18;10781:9;10792:7;10764:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10764:36:0;;;;;;;;;;10754:47;;10764:36;10754:47;;;;3638:25:5;;;10754:47:0;-1:-1:-1;;;;;;;;;;;;10817:33:0;3611:18:5;10817:33:0;;;;;;;10861:23;10887:40;10899:10;10911:3;10916:10;10887:11;:40::i;:::-;10938:22;:43;;-1:-1:-1;;10938:43:0;;;;;;;;;;-1:-1:-1;10938:43:0;10992:260;;11036:30;;3638:25:5;;;-1:-1:-1;;;;;;;;;;;11036:30:0;3626:2:5;3611:18;11036:30:0;3492:177:5;10992:260:0;11169:12;;;;:7;:12;;;;;;;:20;11158:46;;-1:-1:-1;;;;;;;;;;;11158:46:0;;;11169:20;;;;;11177:3;;11196:7;;11158:46;:::i;:::-;;;;;;;;11218:23;11228:3;11233:7;11218:9;:23::i;:::-;-1:-1:-1;;;6017:21:0::1;:37:::0;;;;-1:-1:-1;;;6064:13:0::1;:23:::0;;;;-1:-1:-1;;;5619:475:0:o;6100:3662::-;6359:10;6387:3;6408:7;6450:20;6433:38;;;;;;10067:19:5;;10111:2;10102:12;;9938:182;6433:38:0;;;;-1:-1:-1;;6433:38:0;;;;;;;;;10516:11;;;;10508:52;;;;-1:-1:-1;;;10508:52:0;;;;;;;:::i;:::-;10571:11;10612:10;10595:28;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10595:28:0;;;;;;;;;10585:39;;10595:28;10585:39;;;;;-1:-1:-1;10666:14:0;10642:12;;;;:7;:12;;;;;;;;:20;;;;:38;;;;;;;:::i;:::-;;10634:80;;;;-1:-1:-1;;;10634:80:0;;;;;;;:::i;:::-;10725:18;10781:9;10792:7;10764:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10764:36:0;;;;;;;;;;10754:47;;10764:36;10754:47;;;;3638:25:5;;;10754:47:0;-1:-1:-1;;;;;;;;;;;;10817:33:0;3611:18:5;10817:33:0;;;;;;;10861:23;10887:40;10899:10;10911:3;10916:10;10887:11;:40::i;:::-;10938:22;:43;;-1:-1:-1;;10938:43:0;;;;;;;;;;-1:-1:-1;10938:43:0;10992:260;;11036:30;;3638:25:5;;;-1:-1:-1;;;;;;;;;;;11036:30:0;3626:2:5;3611:18;11036:30:0;3492:177:5;10992:260:0;11169:12;;;;:7;:12;;;;;;;:20;11158:46;;-1:-1:-1;;;;;;;;;;;11158:46:0;;;11169:20;;;;;11177:3;;11196:7;;11158:46;:::i;:::-;;;;;;;;11218:23;11228:3;11233:7;11218:9;:23::i;:::-;6574:18:::1;6622:10;6605:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;6595:39;;;;;;6574:60;;6756:13;;6742:10;:27:::0;6734:105:::1;;;::::0;-1:-1:-1;;;6734:105:0;;11562:2:5;6734:105:0::1;::::0;::::1;11544:21:5::0;11601:2;11581:18;;;11574:30;11640:34;11620:18;;;11613:62;11711:34;11691:18;;;11684:62;-1:-1:-1;;;11762:19:5;;;11755:32;11804:19;;6734:105:0::1;11360:469:5::0;6734:105:0::1;6982:20;6957:21;;:45;6949:88;;;::::0;-1:-1:-1;;;6949:88:0;;12036:2:5;6949:88:0::1;::::0;::::1;12018:21:5::0;12075:2;12055:18;;;12048:30;12114:32;12094:18;;;12087:60;12164:18;;6949:88:0::1;11834:354:5::0;6949:88:0::1;7228:13;::::0;7327:10;7417:20;7203:22:::1;7536:23:::0;;;;:7:::1;:23;::::0;;;;;;;:31;::::1;;::::0;:49;::::1;;;;;;:::i;:::-;;:103;;;;-1:-1:-1::0;7625:14:0::1;7589:24:::0;;;:7:::1;:24;::::0;;;;;;:32;::::1;;::::0;:50;::::1;;;;;;:::i;:::-;;7536:103;7528:162;;;::::0;-1:-1:-1;;;7528:162:0;;12395:2:5;7528:162:0::1;::::0;::::1;12377:21:5::0;12434:2;12414:18;;;12407:30;12473:34;12453:18;;;12446:62;-1:-1:-1;;;12524:18:5;;;12517:44;12578:19;;7528:162:0::1;12193:410:5::0;7528:162:0::1;7799:14;7786:9;:27;;:59;;;;;7830:15;7817:9;:28;;7786:59;7778:121;;;::::0;-1:-1:-1;;;7778:121:0;;12810:2:5;7778:121:0::1;::::0;::::1;12792:21:5::0;12849:2;12829:18;;;12822:30;12888:34;12868:18;;;12861:62;-1:-1:-1;;;12939:18:5;;;12932:47;12996:19;;7778:121:0::1;12608:413:5::0;7778:121:0::1;8410:18;::::0;;;:7:::1;:18;::::0;;;;:22:::1;;::::0;:27;;8402:75:::1;;;::::0;-1:-1:-1;;;8402:75:0;;13228:2:5;8402:75:0::1;::::0;::::1;13210:21:5::0;13267:2;13247:18;;;13240:30;13306:34;13286:18;;;13279:62;-1:-1:-1;;;13357:18:5;;;13350:33;13400:19;;8402:75:0::1;13026:399:5::0;8402:75:0::1;8496:6;8491:1115;8512:4;:11:::0;8508:15;::::1;8491:1115;;;8567:9;8552:4;8557:1;8552:7;;;;;;;;:::i;:::-;;;;;;;;;;;:11;;;:24:::0;8548:1044:::1;;8601:23;8627:18:::0;;;:7:::1;:18;::::0;;;;;;;:26;;8960:51;;8977:15:::1;8960:51:::0;;::::1;13587:19:5::0;8994:16:0::1;13622:12:5::0;;;13615:28;8960:51:0;;;;;;;;;13659:12:5;;;;8960:51:0;;;;8950:62;;;;::::1;::::0;9236:18;;;;;;;;-1:-1:-1;;;9035:35:0;::::1;9236:22;::::0;::::1;:36:::0;;;-1:-1:-1;;9294:44:0;::::1;::::0;::::1;::::0;;;8627:26:::1;::::0;;::::1;::::0;9035:35;;9416:69:::1;::::0;::::1;::::0;8627:26;;:18;;9035:35;;9416:69:::1;:::i;:::-;;;;;;;;9568:5;;;;;8548:1044;8525:3:::0;::::1;::::0;::::1;:::i;:::-;;;;8491:1115;;;-1:-1:-1::0;;9709:1:0::1;9677:21;:34:::0;;;9725:13:::1;:26:::0;-1:-1:-1;;;;;;;;;;;;;;6100:3662:0:o;11593:680::-;11671:15;;;;:7;:15;;;;;:19;;;:24;;11663:61;;;;-1:-1:-1;;;11663:61:0;;;;;;;:::i;:::-;11821:36;;;;;;;;11797:21;11825:15;;;:7;:15;;;;;;;:23;11797:21;;11821:36;;11825:23;;;11821:36;;;;;;;:::i;:::-;;;;;11850:6;11821:36;;;11797:60;;11885:10;11867:7;:15;11875:6;11867:15;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;11867:28:0;;;;;;;;;;11957:15;;;;:7;:15;;;;;;11950:22;;-1:-1:-1;;11950:22:0;;;;;;;12039:166;12060:4;:11;12056:15;;12039:166;;;12111:6;12096:4;12101:1;12096:7;;;;;;;;:::i;:::-;;;;;;;;;;;:11;;;:21;12092:103;;12147:10;12137:4;12142:1;12137:7;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;12175:5;;12092:103;12073:3;;;;:::i;:::-;;;;12039:166;;;-1:-1:-1;12231:18:0;;12220:46;;-1:-1:-1;;;;;;;;;;;12220:46:0;;;12251:6;;12259;;12220:46;:::i;:::-;;;;;;;;11653:620;11593:680;;:::o;3196:215::-;3263:17;3283:20;;;;;;;;3287:7;3283:20;;;;;;;;:::i;:::-;;;;;;;;3313:4;:17;;;;;;;-1:-1:-1;3313:17:0;;;;;;;;;;;;;3263:40;;-1:-1:-1;3263:40:0;;3313:17;;;;;;-1:-1:-1;;3313:17:0;;;;:4;:17;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;3313:17:0;;;;;;;;;;3340:15;;;;:7;:15;;;;;;;:24;;;;3358:6;;3340:15;;:24;;:15;;-1:-1:-1;;3340:24:0;;;;3313:17;3340:24;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3379:25;3388:7;3397:6;3379:25;;;;;;;:::i;14:180:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:5;;14:180;-1:-1:-1;14:180:5:o;199:127::-;260:10;255:3;251:20;248:1;241:31;291:4;288:1;281:15;315:4;312:1;305:15;331:235;410:1;403:5;400:12;390:143;;455:10;450:3;446:20;443:1;436:31;490:4;487:1;480:15;518:4;515:1;508:15;390:143;542:18;;331:235::o;571:344::-;769:2;754:18;;781:42;758:9;805:6;781:42;:::i;:::-;854:2;839:18;;832:34;;;;897:2;882:18;875:34;571:344;;-1:-1:-1;571:344:5:o;1105:273::-;1275:2;1260:18;;1287:42;1264:9;1311:6;1287:42;:::i;:::-;1365:6;1360:2;1349:9;1345:18;1338:34;1105:273;;;;;:::o;1575:177::-;1684:6;1717:5;1705:18;;1702:27;-1:-1:-1;1699:47:5;;;1742:1;1739;1732:12;1699:47;1575:177;;;;:::o;1757:168::-;1858:6;1891:4;1879:17;;1876:26;-1:-1:-1;1873:46:5;;;1915:1;1912;1905:12;1930:127;1991:10;1986:3;1982:20;1979:1;1972:31;2022:4;2019:1;2012:15;2046:4;2043:1;2036:15;2062:1425;2247:6;2255;2263;2271;2324:5;2312:9;2303:7;2299:23;2295:35;2292:55;;;2343:1;2340;2333:12;2292:55;2366:68;2426:7;2415:9;2366:68;:::i;:::-;2356:78;;2485:5;2474:9;2470:21;2457:35;2511:18;2552:2;2544:6;2541:14;2538:34;;;2568:1;2565;2558:12;2538:34;2591:73;2656:7;2647:6;2636:9;2632:22;2591:73;:::i;:::-;2581:83;;2711:5;2700:9;2696:21;2683:35;2673:45;;2771:5;2760:9;2756:21;2743:35;2727:51;;2803:2;2793:8;2790:16;2787:36;;;2819:1;2816;2809:12;2787:36;2857:8;2846:9;2842:24;2832:34;;2904:7;2897:4;2893:2;2889:13;2885:27;2875:55;;2926:1;2923;2916:12;2875:55;2962:2;2949:16;2984:2;2980;2977:10;2974:36;;;2990:18;;:::i;:::-;3065:2;3059:9;3033:2;3119:13;;-1:-1:-1;;3115:22:5;;;3139:2;3111:31;3107:40;3095:53;;;3163:18;;;3183:22;;;3160:46;3157:72;;;3209:18;;:::i;:::-;3249:10;3245:2;3238:22;3284:2;3276:6;3269:18;3326:7;3319:4;3314:2;3310;3306:11;3302:22;3299:35;3296:55;;;3347:1;3344;3337:12;3296:55;3407:2;3400:4;3396:2;3392:13;3385:4;3377:6;3373:17;3360:50;3454:1;3447:4;3442:2;3434:6;3430:15;3426:26;3419:37;3475:6;3465:16;;;;;;;2062:1425;;;;;;;:::o;3674:686::-;3850:6;3858;3866;3874;3927:5;3915:9;3906:7;3902:23;3898:35;3895:55;;;3946:1;3943;3936:12;3895:55;3969:68;4029:7;4018:9;3969:68;:::i;:::-;3959:78;;4088:5;4077:9;4073:21;4060:35;4118:18;4110:6;4107:30;4104:50;;;4150:1;4147;4140:12;4104:50;4173:73;4238:7;4229:6;4218:9;4214:22;4173:73;:::i;:::-;3674:686;;4163:83;;-1:-1:-1;;;;4293:5:5;4278:21;;4265:35;;4347:5;4332:21;4319:35;;3674:686;-1:-1:-1;3674:686:5:o;4365:::-;4541:6;4549;4557;4565;4618:5;4606:9;4597:7;4593:23;4589:35;4586:55;;;4637:1;4634;4627:12;4586:55;4660:68;4720:7;4709:9;4660:68;:::i;:::-;4650:78;;4775:5;4764:9;4760:21;4747:35;4737:45;;4833:5;4822:9;4818:21;4805:35;4863:18;4855:6;4852:30;4849:50;;;4895:1;4892;4885:12;4849:50;4918:73;4983:7;4974:6;4963:9;4959:22;4918:73;:::i;:::-;4365:686;;;;-1:-1:-1;4908:83:5;;5038:5;5023:21;5010:35;;-1:-1:-1;;;4365:686:5:o;5056:609::-;5223:6;5231;5239;5292:5;5280:9;5271:7;5267:23;5263:35;5260:55;;;5311:1;5308;5301:12;5260:55;5347:9;5334:23;5324:33;;5408:2;5397:9;5393:18;5380:32;5435:18;5427:6;5424:30;5421:50;;;5467:1;5464;5457:12;5421:50;5490:73;5555:7;5546:6;5535:9;5531:22;5490:73;:::i;:::-;5480:83;;;5582:77;5651:7;5646:2;5635:9;5631:18;5582:77;:::i;:::-;5572:87;;5056:609;;;;;:::o;5670:266::-;5739:6;5792:2;5780:9;5771:7;5767:23;5763:32;5760:52;;;5808:1;5805;5798:12;5760:52;5847:9;5834:23;5886:1;5879:5;5876:12;5866:40;;5902:1;5899;5892:12;5941:632;6112:2;6164:21;;;6234:13;;6137:18;;;6256:22;;;6083:4;;6112:2;6335:15;;;;6309:2;6294:18;;;6083:4;6378:169;6392:6;6389:1;6386:13;6378:169;;;6453:13;;6441:26;;6522:15;;;;6487:12;;;;6414:1;6407:9;6378:169;;;-1:-1:-1;6564:3:5;;5941:632;-1:-1:-1;;;;;;5941:632:5:o;6578:348::-;6780:2;6762:21;;;6819:2;6799:18;;;6792:30;6858:26;6853:2;6838:18;;6831:54;6917:2;6902:18;;6578:348::o;6931:127::-;6992:10;6987:3;6983:20;6980:1;6973:31;7023:4;7020:1;7013:15;7047:4;7044:1;7037:15;7063:232;7102:3;7123:17;;;7120:140;;7182:10;7177:3;7173:20;7170:1;7163:31;7217:4;7214:1;7207:15;7245:4;7242:1;7235:15;7120:140;-1:-1:-1;7287:1:5;7276:13;;7063:232::o;7300:352::-;7502:2;7484:21;;;7541:2;7521:18;;;7514:30;7580;7575:2;7560:18;;7553:58;7643:2;7628:18;;7300:352::o;7657:565::-;7868:3;7899;7946:6;7868:3;7980:205;7994:6;7991:1;7988:13;7980:205;;;8053:4;8098:2;8090:6;8083:5;8070:31;8123:14;;;;8160:15;;;;;8016:1;8009:9;7980:205;;;7984:3;;;8210:5;8205:3;8201:15;8194:22;;7657:565;;;;:::o;8227:456::-;8384:3;8422:6;8416:13;8447:1;8457:129;8471:6;8468:1;8465:13;8457:129;;;8569:4;8553:14;;;8549:25;;8543:32;8530:11;;;8523:53;8486:12;8457:129;;;-1:-1:-1;8605:16:5;;;;8630:18;;;-1:-1:-1;8672:4:5;8664:13;;8227:456;-1:-1:-1;8227:456:5:o;8688:353::-;8890:2;8872:21;;;8929:2;8909:18;;;8902:30;8968:31;8963:2;8948:18;;8941:59;9032:2;9017:18;;8688:353::o;10558:521::-;10635:4;10641:6;10701:11;10688:25;10795:2;10791:7;10780:8;10764:14;10760:29;10756:43;10736:18;10732:68;10722:96;;10814:1;10811;10804:12;10722:96;10841:33;;10893:20;;;-1:-1:-1;10936:18:5;10925:30;;10922:50;;;10968:1;10965;10958:12;10922:50;11001:4;10989:17;;-1:-1:-1;11032:14:5;11028:27;;;11018:38;;11015:58;;;11069:1;11066;11059:12;11015:58;10558:521;;;;;:::o;11084:271::-;11267:6;11259;11254:3;11241:33;11223:3;11293:16;;11318:13;;;11293:16;11084:271;-1:-1:-1;11084:271:5:o;13682:441::-;13916:3;13901:19;;13929:42;13905:9;13953:6;13929:42;:::i;:::-;14007:6;14002:2;13991:9;13987:18;13980:34;14050:6;14045:2;14034:9;14030:18;14023:34;14066:51;14113:2;14102:9;14098:18;14090:6;14066:51;:::i;:::-;13682:441;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    65,
    15032
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5796841A GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xAF82F3E7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xAF82F3E7 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xB97B4F77 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xD83C413C EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xE673D71F EQ PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5796841A EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8EB8F1A6 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xA9711EE3 EQ PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x333F6111 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x333F6111 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x4A89D52B EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x4BDD4499 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x4E657D2A EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5AACC7D EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xCB6AAF1 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x2FD5C247 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP3 SWAP2 SWAP1 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x14D SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x111 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x177D JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x177D JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH2 0x18C PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x111 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x177D JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AD PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1872 JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH2 0x12D PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x1939 JUMP JUMPDEST PUSH2 0xAB5 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x1992 JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1872 JUMP JUMPDEST PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x1872 JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP5 SWAP4 DUP5 SWAP4 DUP5 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x295 JUMPI PUSH2 0x295 PUSH2 0x16CB JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x2A6 PUSH2 0x16CB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SUB PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x342 JUMPI DUP6 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x304 JUMPI PUSH2 0x304 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SUB PUSH2 0x330 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD SWAP2 SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x35B JUMP JUMPDEST DUP1 PUSH2 0x33A DUP2 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2E6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x19F7 JUMP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x40C JUMPI PUSH2 0x40C PUSH2 0x16CB JUMP JUMPDEST EQ PUSH2 0x41B JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x47D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x430 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH2 0x458 DUP3 DUP9 DUP11 PUSH2 0xAB5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x46B JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x47D JUMP JUMPDEST PUSH2 0x475 DUP4 DUP8 PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP5 SWAP1 DUP5 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x559 JUMPI PUSH2 0x559 PUSH2 0x16CB JUMP JUMPDEST EQ PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x58B SWAP3 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP1 DUP4 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x5CF DUP3 DUP8 DUP10 PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE SWAP1 POP DUP1 PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BD1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A20566572696669636174696F6E206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C11 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x689 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x69B DUP4 DUP7 PUSH2 0x13F7 JUMP JUMPDEST POP POP POP PUSH1 0x5 SWAP6 SWAP1 SWAP6 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6C3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x6F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x748 JUMPI PUSH2 0x748 PUSH2 0x16CB JUMP JUMPDEST EQ PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x77A SWAP3 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP1 DUP4 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x7BE DUP3 DUP8 DUP10 PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE SWAP1 POP DUP1 PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BD1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x603 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C11 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x82C SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x83E DUP4 DUP7 PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0x0 DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP DUP2 EQ ISZERO DUP1 PUSH2 0x8ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x4C616D706F7274426173653A20504B48206D617463686573206C617374207573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656420504B482028757365207365706172617465207365636F6E64206B657929 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x8F8 PUSH1 0x0 DUP12 PUSH2 0x15A6 JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0x5 SSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x922 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x9A7 JUMPI PUSH2 0x9A7 PUSH2 0x16CB JUMP JUMPDEST EQ PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9D9 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP1 DUP4 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0xA1D DUP3 DUP8 DUP10 PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE SWAP1 POP DUP1 PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BD1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x603 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C11 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xA8B SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xA9D DUP4 DUP7 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0xAA8 PUSH1 0x1 DUP10 PUSH2 0x15A6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0xB5D JUMPI DUP4 DUP2 PUSH2 0x100 DUP2 LT PUSH2 0xAD6 JUMPI PUSH2 0xAD6 PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x1B42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 DUP3 PUSH2 0x100 DUP2 LT PUSH2 0xB0F JUMPI PUSH2 0xB0F PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x40 MUL ADD PUSH1 0x0 DUP4 PUSH1 0xFF SUB PUSH1 0x1 SWAP1 SHL DUP9 AND GT PUSH2 0xB2B JUMPI PUSH1 0x0 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0x2 DUP2 LT PUSH2 0xB41 JUMPI PUSH2 0xB41 PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD EQ PUSH2 0xB55 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAB9 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB8B PUSH2 0x1767 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBB4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xC75 JUMPI DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBD7 JUMPI PUSH2 0xBD7 PUSH2 0x16CB JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBEA JUMPI PUSH2 0xBEA PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP2 DUP3 MUL ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xC0E JUMPI PUSH2 0xC0E PUSH2 0x16CB JUMP JUMPDEST SUB PUSH2 0xC63 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC26 JUMPI PUSH2 0xC26 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC4A JUMPI PUSH2 0xC4A PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0xC5F DUP2 PUSH2 0x1A44 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0xC6D DUP2 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBBB JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC91 PUSH2 0x1767 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCBA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD11 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCDA JUMPI PUSH2 0xCDA PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCF4 JUMPI PUSH2 0xCF4 PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xD09 DUP2 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCC0 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD30 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD75 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xDB5 JUMPI PUSH2 0xDB5 PUSH2 0x16CB JUMP JUMPDEST EQ PUSH2 0xDD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDE7 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP1 DUP4 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0xE2B DUP3 DUP8 DUP10 PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE SWAP1 POP DUP1 PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BD1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x603 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C11 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xE99 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xEAB DUP4 DUP7 PUSH2 0x13F7 JUMP JUMPDEST POP POP POP PUSH1 0x3 SWAP5 SWAP1 SWAP5 SSTORE POP POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST DUP4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF1D SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xF5D JUMPI PUSH2 0xF5D PUSH2 0x16CB JUMP JUMPDEST EQ PUSH2 0xF7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF8F SWAP3 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP1 DUP4 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0xFD3 DUP3 DUP8 DUP10 PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE SWAP1 POP DUP1 PUSH2 0x100B JUMPI PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BD1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x603 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C11 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x1041 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1053 DUP4 DUP7 PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0x0 DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1066 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x4 SLOAD DUP2 SUB PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A2043616E6E6F7420757365207468652073616D65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206B6579636861696E20747769636520666F7220746869732066756E6374696F PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2DA JUMP JUMPDEST DUP9 PUSH1 0x3 SLOAD EQ PUSH2 0x1150 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A204B65797320646F206E6F74206D617463680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 DUP11 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x117B JUMPI PUSH2 0x117B PUSH2 0x16CB JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x11A9 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x11A7 JUMPI PUSH2 0x11A7 PUSH2 0x16CB JUMP JUMPDEST EQ JUMPDEST PUSH2 0x120C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A2050726F7669646564206B65797320617265206E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F74206D6173746572206B657973 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST DUP3 DUP2 EQ ISZERO DUP1 ISZERO PUSH2 0x121C JUMPI POP DUP2 DUP2 EQ ISZERO JUMPDEST PUSH2 0x1282 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A204D6173746572206B6579732063616E6E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x64656C657465207468656D73656C766573 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SUB PUSH2 0x12EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A204E6F2073756368206B6579202864656C657469 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6F6E29 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x13DB JUMPI DUP2 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x130F JUMPI PUSH2 0x130F PUSH2 0x1A2E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SUB PUSH2 0x13C9 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP3 MLOAD TIMESTAMP DUP2 DUP7 ADD MSTORE DIFFICULTY DUP2 DUP6 ADD MSTORE DUP4 MLOAD DUP1 DUP3 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP4 DUP5 SWAP1 MSTORE DUP1 MLOAD SWAP1 DUP6 ADD KECCAK256 SWAP6 DUP9 SWAP1 MSTORE SWAP3 DUP5 SWAP1 MSTORE PUSH4 0xDE1E7ED PUSH1 0xE4 SHL DUP6 XOR PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0xFF NOT DUP5 AND DUP6 OR SWAP1 SWAP2 SSTORE PUSH1 0xFF SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 PUSH32 0x643BE3612916977C69D5ED1ABB75A50CCA49DF49BA2444D836E2A0CF65FE074 SWAP2 PUSH2 0x13B9 SWAP2 DUP7 SWAP2 DUP10 SWAP2 DUP8 SWAP2 PUSH2 0x1BA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0x13DB JUMP JUMPDEST DUP1 PUSH2 0x13D3 DUP2 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12F1 JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x4 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SUB PUSH2 0x1427 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP3 DUP2 KECCAK256 SLOAD SWAP1 SWAP3 DUP3 SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x1457 JUMPI PUSH2 0x1457 PUSH2 0x16CB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x14A0 JUMPI PUSH2 0x14A0 PUSH2 0x16CB JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE ADD DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x1576 JUMPI DUP4 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x14EA JUMPI PUSH2 0x14EA PUSH2 0x1A2E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1564 JUMPI DUP2 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1515 JUMPI PUSH2 0x1515 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x154D JUMPI PUSH2 0x154D PUSH2 0x16CB JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0x1576 JUMP JUMPDEST DUP1 PUSH2 0x156E DUP2 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14CC JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C11 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x1599 SWAP2 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15C5 JUMPI PUSH2 0x15C5 PUSH2 0x16CB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 DUP3 SWAP1 MSTORE DUP3 MLOAD PUSH1 0x2 SWAP2 DUP3 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD SWAP5 SWAP6 POP DUP6 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x162A JUMPI PUSH2 0x162A PUSH2 0x16CB JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 SWAP3 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD DUP6 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x166F JUMPI PUSH2 0x166F PUSH2 0x16CB JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH32 0x2172C7B01A6DE957D29FD6166A23025D181BF56538AD606A526AB2D62603F3FC DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1599 SWAP3 SWAP2 SWAP1 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x16FF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x1711 DUP3 DUP7 PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1730 DUP3 DUP6 PUSH2 0x16E1 JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x4000 DUP2 ADD DUP4 LT ISZERO PUSH2 0x174F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x2000 DUP2 ADD DUP4 LT ISZERO PUSH2 0x174F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4060 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179E DUP7 DUP7 PUSH2 0x173D JUMP JUMPDEST SWAP4 POP PUSH2 0x4000 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17C8 DUP9 DUP4 DUP10 ADD PUSH2 0x1755 JUMP JUMPDEST SWAP5 POP PUSH2 0x4020 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x4040 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x180D JUMPI PUSH2 0x180D PUSH2 0x1767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1835 JUMPI PUSH2 0x1835 PUSH2 0x1767 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x184E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4060 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1893 DUP7 DUP7 PUSH2 0x173D JUMP JUMPDEST SWAP4 POP PUSH2 0x4000 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18BC DUP8 DUP3 DUP9 ADD PUSH2 0x1755 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH2 0x4020 DUP4 ADD CALLDATALOAD SWAP3 PUSH2 0x4040 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4060 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18F6 DUP7 DUP7 PUSH2 0x173D JUMP JUMPDEST SWAP4 POP PUSH2 0x4000 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x4020 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x191B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1927 DUP8 DUP3 DUP9 ADD PUSH2 0x1755 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH2 0x4040 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4040 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x194F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1979 DUP7 DUP3 DUP8 ADD PUSH2 0x1755 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1989 DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x173D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19EB JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x19CF JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A204E6F2073756368206B65790000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A64 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A206E6F7420696E697469616C697A656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP3 JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x1AC9 JUMPI PUSH1 0x40 DUP1 DUP4 DUP6 CALLDATACOPY SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1AA8 JUMP JUMPDEST POP POP POP PUSH2 0x4000 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AFA JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1AE0 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A204E6F742061206D6173746572206B6579000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1B89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x1BAE DUP3 DUP8 PUSH2 0x16E1 JUMP JUMPDEST DUP5 PUSH1 0x20 DUP4 ADD MSTORE DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1BC7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16E1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID ORIGIN PUSH3 0x9D5802 ADDMOD 0xE1 SWAP16 SWAP8 0xE5 PUSH22 0x2EEF849E102F803999C88AA7F75E12B1744EECD5A7D8 PUSH31 0x68F36F73A7EB22739D6639E36CAFEBFCDE0B5543340B39F42CAC68FDD1F068 0x25 LOG3 SWAP12 0xD1 PUSH2 0xF4EF GAS 0xAB PUSH13 0xFD2C26DB3EE0005C11B43CFFD5 DIFFICULTY 0xFC DUP8 PUSH4 0x12116EDD LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xE DUP12 PUSH22 0x99FC49A3B3DE381C037A71A17288EE7D7E0C9850E23C SHR PUSH7 0xE3AB61B64736F PUSH13 0x63430008150033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        65,
        15032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "25": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5796841A"
    },
    "38": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAF82F3E7"
    },
    "49": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAF82F3E7"
    },
    "60": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x202"
    },
    "64": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB97B4F77"
    },
    "71": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215"
    },
    "75": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD83C413C"
    },
    "82": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x235"
    },
    "86": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE673D71F"
    },
    "93": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x248"
    },
    "97": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5796841A"
    },
    "109": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "113": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8EB8F1A6"
    },
    "120": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C2"
    },
    "124": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9711EE3"
    },
    "131": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D5"
    },
    "135": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "REVERT",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "147": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "GT",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8"
    },
    "151": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "158": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D"
    },
    "162": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4A89D52B"
    },
    "169": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "173": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4BDD4499"
    },
    "180": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "184": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4E657D2A"
    },
    "191": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19A"
    },
    "195": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "198": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "REVERT",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "202": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5AACC7D"
    },
    "207": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF"
    },
    "211": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCB6AAF1"
    },
    "218": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "222": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2FD5C247"
    },
    "229": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "EQ",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B"
    },
    "233": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "237": {
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "238": {
      "first_revert": true,
      "fn": null,
      "offset": [
        65,
        15032
      ],
      "op": "REVERT",
      "path": "0"
    },
    "239": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "240": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "243": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD"
    },
    "246": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "247": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "249": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B2"
    },
    "252": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        3502,
        3954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "253": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "254": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B"
    },
    "257": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        3502,
        3954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "258": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "259": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "261": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "262": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "265": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "266": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "267": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "268": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "269": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1703"
    },
    "272": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        3502,
        3954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "273": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "274": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "276": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "277": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "278": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "279": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "SUB",
      "path": "0"
    },
    "280": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "281": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "RETURN",
      "path": "0"
    },
    "282": {
      "offset": [
        365,
        382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "283": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "286": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128"
    },
    "289": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "290": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "292": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B2"
    },
    "295": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        365,
        382
      ],
      "op": "JUMP",
      "path": "0"
    },
    "296": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "297": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x362"
    },
    "300": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        365,
        382
      ],
      "op": "JUMP",
      "path": "0"
    },
    "301": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "302": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "304": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "305": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "308": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "309": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "310": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "311": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1722"
    },
    "314": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        365,
        382
      ],
      "op": "JUMP",
      "path": "0"
    },
    "315": {
      "offset": [
        124,
        158
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "316": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "318": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "319": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "322": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "323": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "326": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "327": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "DIV",
      "path": "0"
    },
    "328": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "330": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "AND",
      "path": "0"
    },
    "331": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "DUP2",
      "path": "0"
    },
    "332": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "JUMP",
      "path": "0"
    },
    "333": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "336": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        124,
        158
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "337": {
      "op": "SWAP1"
    },
    "338": {
      "op": "ISZERO"
    },
    "339": {
      "op": "ISZERO"
    },
    "340": {
      "op": "DUP2"
    },
    "341": {
      "op": "MSTORE"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "344": {
      "op": "ADD"
    },
    "345": {
      "offset": [
        124,
        158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "348": {
      "op": "JUMP"
    },
    "349": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "350": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "353": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B"
    },
    "356": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "357": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "359": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177D"
    },
    "362": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "jump": "i",
      "offset": [
        1639,
        2375
      ],
      "op": "JUMP",
      "path": "0"
    },
    "363": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "364": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x394"
    },
    "367": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "jump": "i",
      "offset": [
        1639,
        2375
      ],
      "op": "JUMP",
      "path": "0"
    },
    "368": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2433,
        3169
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "369": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2433,
        3169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "372": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2433,
        3169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "375": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2433,
        3169
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "376": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2433,
        3169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "378": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2433,
        3169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177D"
    },
    "381": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "jump": "i",
      "offset": [
        2433,
        3169
      ],
      "op": "JUMP",
      "path": "0"
    },
    "382": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2433,
        3169
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "383": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2433,
        3169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x485"
    },
    "386": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "jump": "i",
      "offset": [
        2433,
        3169
      ],
      "op": "JUMP",
      "path": "0"
    },
    "387": {
      "offset": [
        13192,
        13222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "388": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        13192,
        13222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "391": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        13192,
        13222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "393": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        13192,
        13222
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "394": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        13192,
        13222
      ],
      "op": "DUP2",
      "path": "0"
    },
    "395": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        13192,
        13222
      ],
      "op": "JUMP",
      "path": "0"
    },
    "396": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        13192,
        13222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "397": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        13192,
        13222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "399": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        13192,
        13222
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "400": {
      "op": "SWAP1"
    },
    "401": {
      "op": "DUP2"
    },
    "402": {
      "op": "MSTORE"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "405": {
      "op": "ADD"
    },
    "406": {
      "offset": [
        13192,
        13222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "409": {
      "op": "JUMP"
    },
    "410": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13229,
        13651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "411": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13229,
        13651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD"
    },
    "414": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13229,
        13651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A8"
    },
    "417": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13229,
        13651
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "418": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13229,
        13651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "420": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13229,
        13651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177D"
    },
    "423": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "jump": "i",
      "offset": [
        13229,
        13651
      ],
      "op": "JUMP",
      "path": "0"
    },
    "424": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13229,
        13651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "425": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13229,
        13651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DC"
    },
    "428": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "jump": "i",
      "offset": [
        13229,
        13651
      ],
      "op": "JUMP",
      "path": "0"
    },
    "429": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13229,
        13651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "430": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13229,
        13651
      ],
      "op": "STOP",
      "path": "0"
    },
    "431": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13657,
        14619
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13657,
        14619
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD"
    },
    "435": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13657,
        14619
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BD"
    },
    "438": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13657,
        14619
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "439": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13657,
        14619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "441": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13657,
        14619
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1872"
    },
    "444": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "jump": "i",
      "offset": [
        13657,
        14619
      ],
      "op": "JUMP",
      "path": "0"
    },
    "445": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13657,
        14619
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "446": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13657,
        14619
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AD"
    },
    "449": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "jump": "i",
      "offset": [
        13657,
        14619
      ],
      "op": "JUMP",
      "path": "0"
    },
    "450": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "451": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD"
    },
    "454": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D0"
    },
    "457": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "458": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "460": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18D5"
    },
    "463": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "jump": "i",
      "offset": [
        14626,
        15030
      ],
      "op": "JUMP",
      "path": "0"
    },
    "464": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "465": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90C"
    },
    "468": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "jump": "i",
      "offset": [
        14626,
        15030
      ],
      "op": "JUMP",
      "path": "0"
    },
    "469": {
      "offset": [
        405,
        443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "470": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "473": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E3"
    },
    "476": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "477": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "479": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B2"
    },
    "482": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "jump": "i",
      "offset": [
        405,
        443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "483": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "484": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "486": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "488": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "489": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "491": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "492": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "DUP2",
      "path": "0"
    },
    "493": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "494": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "496": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "497": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "498": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "DUP1",
      "path": "0"
    },
    "499": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "500": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "502": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "503": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "504": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "ADD",
      "path": "0"
    },
    "505": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "506": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "508": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "509": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "510": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "AND",
      "path": "0"
    },
    "511": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "512": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "DUP3",
      "path": "0"
    },
    "513": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        405,
        443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "514": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "515": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "518": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x210"
    },
    "521": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "522": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "524": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1939"
    },
    "527": {
      "fn": "LamportBase2.verify_u256",
      "jump": "i",
      "offset": [
        9932,
        10362
      ],
      "op": "JUMP",
      "path": "0"
    },
    "528": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "529": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB5"
    },
    "532": {
      "fn": "LamportBase2.verify_u256",
      "jump": "i",
      "offset": [
        9932,
        10362
      ],
      "op": "JUMP",
      "path": "0"
    },
    "533": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "534": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x228"
    },
    "537": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "540": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "541": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "543": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1992"
    },
    "546": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        3959,
        4541
      ],
      "op": "JUMP",
      "path": "0"
    },
    "547": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "548": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6A"
    },
    "551": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        3959,
        4541
      ],
      "op": "JUMP",
      "path": "0"
    },
    "552": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "553": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "555": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "556": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "559": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "560": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "561": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B3"
    },
    "564": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        3959,
        4541
      ],
      "op": "JUMP",
      "path": "0"
    },
    "565": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5619,
        6094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "566": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5619,
        6094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD"
    },
    "569": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5619,
        6094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243"
    },
    "572": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5619,
        6094
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "573": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5619,
        6094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "575": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5619,
        6094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1872"
    },
    "578": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "jump": "i",
      "offset": [
        5619,
        6094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "579": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5619,
        6094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "580": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5619,
        6094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1A"
    },
    "583": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "jump": "i",
      "offset": [
        5619,
        6094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "584": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6100,
        9762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "585": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6100,
        9762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD"
    },
    "588": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6100,
        9762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x256"
    },
    "591": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6100,
        9762
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "592": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6100,
        9762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "594": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6100,
        9762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1872"
    },
    "597": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        6100,
        9762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "598": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6100,
        9762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "599": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6100,
        9762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC2"
    },
    "602": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        6100,
        9762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "603": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "604": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3563,
        3570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "606": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "DUP2",
      "path": "0"
    },
    "607": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "DUP2",
      "path": "0"
    },
    "608": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "609": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3621
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "611": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "613": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "DUP2",
      "path": "0"
    },
    "614": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "615": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "616": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "618": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "DUP1",
      "path": "0"
    },
    "619": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "DUP4",
      "path": "0"
    },
    "620": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "621": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "DUP2",
      "path": "0"
    },
    "622": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "623": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "DUP1",
      "path": "0"
    },
    "624": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "DUP4",
      "path": "0"
    },
    "625": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "ADD",
      "path": "0"
    },
    "626": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "627": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "628": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "629": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "DUP1",
      "path": "0"
    },
    "630": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "631": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3563,
        3570
      ],
      "op": "DUP5",
      "path": "0"
    },
    "632": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3563,
        3570
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "633": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3563,
        3570
      ],
      "op": "DUP5",
      "path": "0"
    },
    "634": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3563,
        3570
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "635": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3563,
        3570
      ],
      "op": "DUP5",
      "path": "0"
    },
    "636": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3563,
        3570
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "637": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "638": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "639": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "640": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3614,
        3626
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "641": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "DUP4",
      "path": "0"
    },
    "642": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "643": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "645": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "AND",
      "path": "0"
    },
    "646": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "647": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "DUP2",
      "path": "0"
    },
    "648": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "GT",
      "path": "0"
    },
    "649": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "650": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x295"
    },
    "653": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "654": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x295"
    },
    "657": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "660": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        3597,
        3626
      ],
      "op": "JUMP",
      "path": "0"
    },
    "661": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "662": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "664": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "DUP2",
      "path": "0"
    },
    "665": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "GT",
      "path": "0"
    },
    "666": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "667": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A6"
    },
    "670": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "671": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A6"
    },
    "674": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "677": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        3597,
        3626
      ],
      "op": "JUMP",
      "path": "0"
    },
    "678": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "679": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "DUP2",
      "path": "0"
    },
    "680": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "681": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "683": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "684": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "685": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "686": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "ADD",
      "path": "0"
    },
    "687": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "688": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "690": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "691": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "DUP3",
      "path": "0"
    },
    "692": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "ADD",
      "path": "0"
    },
    "693": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "694": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3644,
        3651
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 0
    },
    "695": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3644,
        3651
      ],
      "op": "ADD",
      "path": "0"
    },
    "696": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3644,
        3651
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "697": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "698": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3597,
        3626
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "699": {
      "op": "POP"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "702": {
      "branch": 50,
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3644,
        3656
      ],
      "op": "SUB",
      "path": "0"
    },
    "703": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "706": {
      "branch": 50,
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "707": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "709": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "716": {
      "op": "SHL"
    },
    "717": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "DUP2",
      "path": "0"
    },
    "718": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "719": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "721": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "ADD",
      "path": "0"
    },
    "722": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "725": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "726": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19F7"
    },
    "729": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        3636,
        3685
      ],
      "op": "JUMP",
      "path": "0"
    },
    "730": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "731": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "733": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "734": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "735": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "736": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "SUB",
      "path": "0"
    },
    "737": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "738": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "739": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3636,
        3685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3757,
        3763
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "742": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3752,
        3904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "743": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3773,
        3777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "745": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3773,
        3784
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "746": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3769,
        3784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "747": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3769,
        3784
      ],
      "op": "LT",
      "path": "0"
    },
    "748": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3752,
        3904
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "749": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3752,
        3904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x342"
    },
    "752": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3752,
        3904
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "753": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3824,
        3827
      ],
      "op": "DUP6",
      "path": "0"
    },
    "754": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "756": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3814,
        3815
      ],
      "op": "DUP3",
      "path": "0"
    },
    "757": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "DUP2",
      "path": "0"
    },
    "758": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "759": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "DUP2",
      "path": "0"
    },
    "760": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "LT",
      "path": "0"
    },
    "761": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "764": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "765": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "768": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "771": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        3809,
        3816
      ],
      "op": "JUMP",
      "path": "0"
    },
    "772": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "773": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "774": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "776": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "777": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "779": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "781": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "782": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "783": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "785": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "MUL",
      "path": "0"
    },
    "786": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3816
      ],
      "op": "ADD",
      "path": "0"
    },
    "787": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "789": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3820
      ],
      "op": "ADD",
      "path": "0"
    },
    "790": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3820
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "791": {
      "branch": 51,
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3809,
        3827
      ],
      "op": "SUB",
      "path": "0"
    },
    "792": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3805,
        3894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "795": {
      "branch": 51,
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3805,
        3894
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "796": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3855,
        3866
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 1
    },
    "797": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3855,
        3866
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "798": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3868,
        3875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "800": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3868,
        3875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "801": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3868,
        3875
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "802": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3868,
        3875
      ],
      "op": "ADD",
      "path": "0"
    },
    "803": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3868,
        3875
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "804": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3855,
        3866
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "805": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3855,
        3866
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "806": {
      "op": "POP"
    },
    "807": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3868,
        3875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "808": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3868,
        3875
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "809": {
      "op": "POP"
    },
    "810": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3877,
        3878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "811": {
      "op": "POP"
    },
    "812": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3847,
        3879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35B"
    },
    "815": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3847,
        3879
      ],
      "op": "JUMP",
      "path": "0"
    },
    "816": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3805,
        3894
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "817": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3786,
        3789
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 2
    },
    "818": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3786,
        3789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33A"
    },
    "821": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3786,
        3789
      ],
      "op": "DUP2",
      "path": "0"
    },
    "822": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3786,
        3789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A44"
    },
    "825": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        3786,
        3789
      ],
      "op": "JUMP",
      "path": "0"
    },
    "826": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3786,
        3789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "827": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3786,
        3789
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "828": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3786,
        3789
      ],
      "op": "POP",
      "path": "0"
    },
    "829": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3786,
        3789
      ],
      "op": "POP",
      "path": "0"
    },
    "830": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3752,
        3904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E6"
    },
    "833": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3752,
        3904
      ],
      "op": "JUMP",
      "path": "0"
    },
    "834": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3752,
        3904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "835": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3752,
        3904
      ],
      "op": "POP",
      "path": "0"
    },
    "836": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3913,
        3947
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "838": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3913,
        3947
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "839": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "843": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "845": {
      "op": "SHL"
    },
    "846": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3913,
        3947
      ],
      "op": "DUP2",
      "path": "0"
    },
    "847": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3913,
        3947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "848": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3913,
        3947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "850": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3913,
        3947
      ],
      "op": "ADD",
      "path": "0"
    },
    "851": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3913,
        3947
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "854": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3913,
        3947
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "855": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3913,
        3947
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19F7"
    },
    "858": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "i",
      "offset": [
        3913,
        3947
      ],
      "op": "JUMP",
      "path": "0"
    },
    "859": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "860": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "861": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "862": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "863": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "864": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        3502,
        3954
      ],
      "op": "POP",
      "path": "0"
    },
    "865": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "o",
      "offset": [
        3502,
        3954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "866": {
      "offset": [
        365,
        382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "867": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "869": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "DUP2",
      "path": "0"
    },
    "870": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "DUP2",
      "path": "0"
    },
    "871": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "872": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "DUP2",
      "path": "0"
    },
    "873": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "LT",
      "path": "0"
    },
    "874": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x372"
    },
    "877": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "878": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "880": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "DUP1",
      "path": "0"
    },
    "881": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "REVERT",
      "path": "0"
    },
    "882": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "883": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "885": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "886": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "DUP3",
      "path": "0"
    },
    "887": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "888": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "890": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "891": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "892": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "893": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "895": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "896": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "897": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "MUL",
      "path": "0"
    },
    "898": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "ADD",
      "path": "0"
    },
    "899": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "DUP1",
      "path": "0"
    },
    "900": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "901": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "903": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "904": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "905": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "ADD",
      "path": "0"
    },
    "906": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "907": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "909": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "910": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "911": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "AND",
      "path": "0"
    },
    "912": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "offset": [
        365,
        382
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "913": {
      "op": "POP"
    },
    "914": {
      "offset": [
        365,
        382
      ],
      "op": "DUP3",
      "path": "0"
    },
    "915": {
      "fn": "LamportBase2.getKeyAndPosByPKH",
      "jump": "o",
      "offset": [
        365,
        382
      ],
      "op": "JUMP",
      "path": "0"
    },
    "916": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "917": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1831,
        1835
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "919": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1855,
        1866
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 4
    },
    "920": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1855,
        1866
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "921": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1855,
        1866
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "923": {
      "branch": 52,
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1855,
        1866
      ],
      "op": "AND",
      "path": "0"
    },
    "924": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B7"
    },
    "927": {
      "branch": 52,
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "928": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "930": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "939": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "940": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "942": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "ADD",
      "path": "0"
    },
    "943": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "946": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "947": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6B"
    },
    "950": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "jump": "i",
      "offset": [
        1847,
        1899
      ],
      "op": "JUMP",
      "path": "0"
    },
    "951": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1847,
        1899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "952": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1910,
        1921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "954": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1951,
        1961
      ],
      "op": "DUP6",
      "path": "0"
    },
    "955": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "957": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "958": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "960": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "ADD",
      "path": "0"
    },
    "961": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CA"
    },
    "964": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "965": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "966": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA2"
    },
    "969": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "jump": "i",
      "offset": [
        1934,
        1962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "970": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "971": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "973": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "DUP1",
      "path": "0"
    },
    "974": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "977": {
      "op": "NOT"
    },
    "978": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "DUP2",
      "path": "0"
    },
    "979": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "DUP5",
      "path": "0"
    },
    "980": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "SUB",
      "path": "0"
    },
    "981": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "ADD",
      "path": "0"
    },
    "982": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "DUP2",
      "path": "0"
    },
    "983": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "984": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "985": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "986": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "987": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1924,
        1963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "988": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1924,
        1963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "989": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1934,
        1962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "991": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1924,
        1963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "992": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1924,
        1963
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "993": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1924,
        1963
      ],
      "op": "ADD",
      "path": "0"
    },
    "994": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1924,
        1963
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "995": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1924,
        1963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "996": {
      "op": "POP"
    },
    "997": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2001,
        2015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "999": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        2015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1000": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1002": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1003": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1004": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1005": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1007": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1009": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1010": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1011": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1012": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1014": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1015": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1016": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1989
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1017": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1997
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1018": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1020": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1997
      ],
      "op": "AND",
      "path": "0"
    },
    "1021": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        1997
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1022": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        2015
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1023": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        2015
      ],
      "op": "GT",
      "path": "0"
    },
    "1024": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        2015
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1025": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        2015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40C"
    },
    "1028": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        2015
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1029": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        2015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40C"
    },
    "1032": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        2015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "1035": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "jump": "i",
      "offset": [
        1977,
        2015
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1036": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        2015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1037": {
      "branch": 53,
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1977,
        2015
      ],
      "op": "EQ",
      "path": "0"
    },
    "1038": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1973,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41B"
    },
    "1041": {
      "branch": 53,
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1973,
        2054
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1042": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2038,
        2043
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x0"
    },
    "1044": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2031,
        2043
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1045": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2031,
        2043
      ],
      "op": "POP",
      "path": "0"
    },
    "1046": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2031,
        2043
      ],
      "op": "POP",
      "path": "0"
    },
    "1047": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2031,
        2043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47D"
    },
    "1050": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2031,
        2043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1051": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1973,
        2054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1052": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2064,
        2082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1054": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2120,
        2129
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1055": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2131,
        2138
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1056": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1058": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1059": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1061": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "ADD",
      "path": "0"
    },
    "1062": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430"
    },
    "1065": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1066": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1067": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1068": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD9"
    },
    "1071": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "jump": "i",
      "offset": [
        2103,
        2139
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1072": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1073": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1075": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1076": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1078": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1079": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1080": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "SUB",
      "path": "0"
    },
    "1081": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "SUB",
      "path": "0"
    },
    "1082": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1083": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1084": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1085": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1087": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2103,
        2139
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1088": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2093,
        2140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1089": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2093,
        2140
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1090": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2093,
        2140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1091": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2093,
        2140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1093": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2093,
        2140
      ],
      "op": "ADD",
      "path": "0"
    },
    "1094": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2093,
        2140
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1095": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2085,
        2141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1097": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2085,
        2141
      ],
      "op": "SHR",
      "path": "0"
    },
    "1098": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2064,
        2141
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1099": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2064,
        2141
      ],
      "op": "POP",
      "path": "0"
    },
    "1100": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2151,
        2174
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1102": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2177,
        2217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x458"
    },
    "1105": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2189,
        2199
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1106": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2201,
        2204
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1107": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2206,
        2216
      ],
      "op": "DUP11",
      "path": "0"
    },
    "1108": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2177,
        2188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB5"
    },
    "1111": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "jump": "i",
      "offset": [
        2177,
        2217
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1112": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2177,
        2217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1113": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2151,
        2217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1114": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2151,
        2217
      ],
      "op": "POP",
      "path": "0"
    },
    "1115": {
      "branch": 54,
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2233,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1116": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2228,
        2369
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46B"
    },
    "1119": {
      "branch": 54,
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2228,
        2369
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1120": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2274,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "1122": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2267,
        2279
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1123": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2267,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "1124": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2267,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "1125": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2267,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "1126": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2267,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "1127": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2267,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47D"
    },
    "1130": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2267,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1131": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2228,
        2369
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1132": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2310,
        2333
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x475"
    },
    "1135": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2320,
        2323
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1136": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2325,
        2332
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1137": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2310,
        2319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F7"
    },
    "1140": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "jump": "i",
      "offset": [
        2310,
        2333
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1141": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2310,
        2333
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1142": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2354,
        2358
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "1144": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2347,
        2358
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1145": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2347,
        2358
      ],
      "op": "POP",
      "path": "0"
    },
    "1146": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2347,
        2358
      ],
      "op": "POP",
      "path": "0"
    },
    "1147": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2347,
        2358
      ],
      "op": "POP",
      "path": "0"
    },
    "1148": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        2347,
        2358
      ],
      "op": "POP",
      "path": "0"
    },
    "1149": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1150": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1151": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1152": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "POP",
      "path": "0"
    },
    "1153": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "POP",
      "path": "0"
    },
    "1154": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "POP",
      "path": "0"
    },
    "1155": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "offset": [
        1639,
        2375
      ],
      "op": "POP",
      "path": "0"
    },
    "1156": {
      "fn": "LamportBase2.performLamportMasterCheck",
      "jump": "o",
      "offset": [
        1639,
        2375
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1157": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2433,
        3169
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1158": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2625,
        2629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1160": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2649,
        2660
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 9
    },
    "1161": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2649,
        2660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1162": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2649,
        2660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1164": {
      "branch": 55,
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2649,
        2660
      ],
      "op": "AND",
      "path": "0"
    },
    "1165": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A8"
    },
    "1168": {
      "branch": 55,
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1169": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1171": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1172": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1178": {
      "op": "SHL"
    },
    "1179": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1180": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1181": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1183": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "ADD",
      "path": "0"
    },
    "1184": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "1187": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1188": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6B"
    },
    "1191": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "jump": "i",
      "offset": [
        2641,
        2693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1192": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2641,
        2693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1193": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2704,
        2715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1195": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2745,
        2755
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1196": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1198": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1199": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1201": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "ADD",
      "path": "0"
    },
    "1202": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BB"
    },
    "1205": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1206": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1207": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA2"
    },
    "1210": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "jump": "i",
      "offset": [
        2728,
        2756
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1211": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1212": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1214": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1215": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1218": {
      "op": "NOT"
    },
    "1219": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1220": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1221": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "SUB",
      "path": "0"
    },
    "1222": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "ADD",
      "path": "0"
    },
    "1223": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1224": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1225": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1226": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1227": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1228": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2718,
        2757
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1229": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2718,
        2757
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1230": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2728,
        2756
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1232": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2718,
        2757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1233": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2718,
        2757
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1234": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2718,
        2757
      ],
      "op": "ADD",
      "path": "0"
    },
    "1235": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2718,
        2757
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1236": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2718,
        2757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1237": {
      "op": "POP"
    },
    "1238": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2795,
        2809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1240": {
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2771,
        2809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E7"
    },
    "1243": {
      "branch": 56,
      "fn": "LamportBase2.performLamportOracleCheck",
      "offset": [
        2771,
        2809
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1244": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13229,
        13651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1245": {
      "offset": [
        10516,
        10527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1247": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10516,
        10527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1248": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13459,
        13469
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1249": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13459,
        13469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1250": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13483,
        13486
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1251": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13483,
        13486
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1252": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13500,
        13507
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1253": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13500,
        13507
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1254": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13521,
        13533
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1255": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13521,
        13533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1256": {
      "offset": [
        10516,
        10527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1258": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10516,
        10527
      ],
      "op": "AND",
      "path": "0"
    },
    "1259": {
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x506"
    },
    "1262": {
      "branch": 56,
      "offset": [
        10508,
        10560
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1263": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1265": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1266": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1272": {
      "op": "SHL"
    },
    "1273": {
      "offset": [
        10508,
        10560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1274": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1275": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1277": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "ADD",
      "path": "0"
    },
    "1278": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "1281": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1282": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6B"
    },
    "1285": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "jump": "i",
      "offset": [
        10508,
        10560
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1286": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1287": {
      "offset": [
        10571,
        10582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1289": {
      "offset": [
        10612,
        10622
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1290": {
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1292": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1293": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1295": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "ADD",
      "path": "0"
    },
    "1296": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x519"
    },
    "1299": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1300": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1301": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA2"
    },
    "1304": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "jump": "i",
      "offset": [
        10595,
        10623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1305": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1306": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1308": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1309": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1312": {
      "op": "NOT"
    },
    "1313": {
      "offset": [
        10595,
        10623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1314": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1315": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "SUB",
      "path": "0"
    },
    "1316": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "ADD",
      "path": "0"
    },
    "1317": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1318": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1319": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1320": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1321": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1322": {
      "offset": [
        10585,
        10624
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1323": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10585,
        10624
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1324": {
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1326": {
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1327": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1328": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10585,
        10624
      ],
      "op": "ADD",
      "path": "0"
    },
    "1329": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10585,
        10624
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1330": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "offset": [
        10666,
        10680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1334": {
      "offset": [
        10642,
        10654
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1335": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1336": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1337": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1338": {
      "offset": [
        10642,
        10649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1340": {
      "offset": [
        10642,
        10654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1342": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1343": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1344": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1345": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1347": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1348": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1349": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1350": {
      "offset": [
        10642,
        10662
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1351": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1353": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10662
      ],
      "op": "AND",
      "path": "0"
    },
    "1354": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1355": {
      "offset": [
        10642,
        10680
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1356": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "GT",
      "path": "0"
    },
    "1357": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1358": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x559"
    },
    "1361": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1362": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x559"
    },
    "1365": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "1368": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "jump": "i",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1369": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1370": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "EQ",
      "path": "0"
    },
    "1371": {
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x576"
    },
    "1374": {
      "offset": [
        10634,
        10714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1375": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1377": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "offset": [
        10634,
        10714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1386": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1387": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1389": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "ADD",
      "path": "0"
    },
    "1390": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "1393": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1394": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0B"
    },
    "1397": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "jump": "i",
      "offset": [
        10634,
        10714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1398": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1399": {
      "offset": [
        10725,
        10743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1401": {
      "offset": [
        10781,
        10790
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1402": {
      "offset": [
        10792,
        10799
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1403": {
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1405": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1406": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1408": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "ADD",
      "path": "0"
    },
    "1409": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58B"
    },
    "1412": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1413": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1414": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1415": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD9"
    },
    "1418": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "jump": "i",
      "offset": [
        10764,
        10800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1419": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1420": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1422": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1423": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1426": {
      "op": "NOT"
    },
    "1427": {
      "offset": [
        10764,
        10800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1428": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1429": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SUB",
      "path": "0"
    },
    "1430": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "ADD",
      "path": "0"
    },
    "1431": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1432": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1433": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1434": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1435": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1436": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1437": {
      "offset": [
        10754,
        10801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1438": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10754,
        10801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1439": {
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1441": {
      "offset": [
        10754,
        10801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1442": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10754,
        10801
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1443": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10754,
        10801
      ],
      "op": "ADD",
      "path": "0"
    },
    "1444": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10754,
        10801
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1445": {
      "op": "DUP1"
    },
    "1446": {
      "op": "DUP4"
    },
    "1447": {
      "op": "MSTORE"
    },
    "1448": {
      "offset": [
        10754,
        10801
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1452": {
      "op": "DUP1"
    },
    "1453": {
      "op": "MLOAD"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1456": {
      "op": "PUSH2",
      "value": "0x1BF1"
    },
    "1459": {
      "op": "DUP4"
    },
    "1460": {
      "op": "CODECOPY"
    },
    "1461": {
      "op": "DUP2"
    },
    "1462": {
      "op": "MLOAD"
    },
    "1463": {
      "op": "SWAP2"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "offset": [
        10817,
        10850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1469": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1470": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1471": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1472": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "SUB",
      "path": "0"
    },
    "1473": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1474": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1475": {
      "offset": [
        10861,
        10884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1477": {
      "offset": [
        10887,
        10927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CF"
    },
    "1480": {
      "offset": [
        10899,
        10909
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1481": {
      "offset": [
        10911,
        10914
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1482": {
      "offset": [
        10916,
        10926
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1483": {
      "offset": [
        10887,
        10898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB5"
    },
    "1486": {
      "jump": "i",
      "offset": [
        10887,
        10927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1487": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10887,
        10927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1488": {
      "offset": [
        10938,
        10960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1490": {
      "offset": [
        10938,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1491": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1492": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1495": {
      "op": "NOT"
    },
    "1496": {
      "offset": [
        10938,
        10981
      ],
      "op": "AND",
      "path": "0"
    },
    "1497": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1500": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1501": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1502": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1503": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "MUL",
      "path": "0"
    },
    "1504": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "OR",
      "path": "0"
    },
    "1505": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1506": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1507": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "offset": [
        10938,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1510": {
      "offset": [
        10992,
        11252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x653"
    },
    "1513": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        10992,
        11252
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1514": {
      "offset": [
        11036,
        11066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1516": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11036,
        11066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1517": {
      "op": "DUP3"
    },
    "1518": {
      "op": "DUP2"
    },
    "1519": {
      "op": "MSTORE"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1522": {
      "op": "DUP1"
    },
    "1523": {
      "op": "MLOAD"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1526": {
      "op": "PUSH2",
      "value": "0x1BD1"
    },
    "1529": {
      "op": "DUP4"
    },
    "1530": {
      "op": "CODECOPY"
    },
    "1531": {
      "op": "DUP2"
    },
    "1532": {
      "op": "MLOAD"
    },
    "1533": {
      "op": "SWAP2"
    },
    "1534": {
      "op": "MSTORE"
    },
    "1535": {
      "offset": [
        11036,
        11066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1538": {
      "op": "ADD"
    },
    "1539": {
      "offset": [
        11036,
        11066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1540": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11036,
        11066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1542": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11036,
        11066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1543": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11036,
        11066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1544": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11036,
        11066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1545": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11036,
        11066
      ],
      "op": "SUB",
      "path": "0"
    },
    "1546": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11036,
        11066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1547": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11036,
        11066
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1548": {
      "offset": [
        11080,
        11122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1550": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11080,
        11122
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1557": {
      "op": "SHL"
    },
    "1558": {
      "offset": [
        11080,
        11122
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1559": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11080,
        11122
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1562": {
      "offset": [
        11080,
        11122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1564": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11080,
        11122
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1565": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11080,
        11122
      ],
      "op": "ADD",
      "path": "0"
    },
    "1566": {
      "op": "DUP2"
    },
    "1567": {
      "op": "SWAP1"
    },
    "1568": {
      "op": "MSTORE"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1571": {
      "op": "DUP3"
    },
    "1572": {
      "op": "ADD"
    },
    "1573": {
      "op": "MSTORE"
    },
    "1574": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A20566572696669636174696F6E206661696C6564"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1609": {
      "op": "DUP3"
    },
    "1610": {
      "op": "ADD"
    },
    "1611": {
      "op": "MSTORE"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1614": {
      "op": "ADD"
    },
    "1615": {
      "offset": [
        11080,
        11122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "1618": {
      "op": "JUMP"
    },
    "1619": {
      "offset": [
        10992,
        11252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1620": {
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1622": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1623": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1624": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1625": {
      "offset": [
        11169,
        11176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1627": {
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1629": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1630": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1632": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1633": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1634": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1635": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1636": {
      "offset": [
        11169,
        11189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1637": {
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1638": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1641": {
      "op": "DUP1"
    },
    "1642": {
      "op": "MLOAD"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1645": {
      "op": "PUSH2",
      "value": "0x1C11"
    },
    "1648": {
      "op": "DUP4"
    },
    "1649": {
      "op": "CODECOPY"
    },
    "1650": {
      "op": "DUP2"
    },
    "1651": {
      "op": "MLOAD"
    },
    "1652": {
      "op": "SWAP2"
    },
    "1653": {
      "op": "MSTORE"
    },
    "1654": {
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1655": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x689"
    },
    "1658": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1659": {
      "offset": [
        11169,
        11189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1661": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1662": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1663": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11189
      ],
      "op": "AND",
      "path": "0"
    },
    "1664": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1665": {
      "offset": [
        11177,
        11180
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1666": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11177,
        11180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1667": {
      "offset": [
        11196,
        11203
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1668": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11196,
        11203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1669": {
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1703"
    },
    "1672": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "jump": "i",
      "offset": [
        11158,
        11204
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1673": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1674": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1676": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1677": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1678": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1679": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "SUB",
      "path": "0"
    },
    "1680": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1681": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1682": {
      "offset": [
        11218,
        11241
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69B"
    },
    "1685": {
      "offset": [
        11228,
        11231
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1686": {
      "offset": [
        11233,
        11240
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1687": {
      "offset": [
        11218,
        11227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F7"
    },
    "1690": {
      "jump": "i",
      "offset": [
        11218,
        11241
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1691": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        11218,
        11241
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1692": {
      "op": "POP"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "op": "POP"
    },
    "1695": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13619,
        13634
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x5"
    },
    "1697": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13619,
        13644
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1698": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13619,
        13644
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1699": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13619,
        13644
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1700": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "offset": [
        13619,
        13644
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1701": {
      "op": "POP"
    },
    "1702": {
      "op": "POP"
    },
    "1703": {
      "op": "POP"
    },
    "1704": {
      "op": "POP"
    },
    "1705": {
      "op": "POP"
    },
    "1706": {
      "op": "POP"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "fn": "LamportBase2.createMasterKeyStepOne",
      "jump": "o",
      "offset": [
        13229,
        13651
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1709": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13657,
        14619
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1710": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13882,
        13892
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1711": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13906,
        13909
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1712": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13923,
        13930
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1713": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13961,
        13973
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1714": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1716": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1717": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1719": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "ADD",
      "path": "0"
    },
    "1720": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C3"
    },
    "1723": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1724": {
      "op": "DUP2"
    },
    "1725": {
      "op": "MSTORE"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1728": {
      "op": "ADD"
    },
    "1729": {
      "op": "SWAP1"
    },
    "1730": {
      "op": "JUMP"
    },
    "1731": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1732": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1734": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1735": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1738": {
      "op": "NOT"
    },
    "1739": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1740": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1741": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "SUB",
      "path": "0"
    },
    "1742": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "ADD",
      "path": "0"
    },
    "1743": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1744": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1745": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1746": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1747": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        13944,
        13974
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1748": {
      "offset": [
        10516,
        10527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1750": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10516,
        10527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1751": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10516,
        10527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1753": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10516,
        10527
      ],
      "op": "AND",
      "path": "0"
    },
    "1754": {
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F5"
    },
    "1757": {
      "offset": [
        10508,
        10560
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1758": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1760": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1767": {
      "op": "SHL"
    },
    "1768": {
      "offset": [
        10508,
        10560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1769": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1770": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1772": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "ADD",
      "path": "0"
    },
    "1773": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "1776": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1777": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6B"
    },
    "1780": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "jump": "i",
      "offset": [
        10508,
        10560
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1781": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1782": {
      "offset": [
        10571,
        10582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1784": {
      "offset": [
        10612,
        10622
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1785": {
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1787": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1788": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1790": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "ADD",
      "path": "0"
    },
    "1791": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x708"
    },
    "1794": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1795": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1796": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA2"
    },
    "1799": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "jump": "i",
      "offset": [
        10595,
        10623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1800": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1801": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1803": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1804": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1807": {
      "op": "NOT"
    },
    "1808": {
      "offset": [
        10595,
        10623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1809": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1810": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "SUB",
      "path": "0"
    },
    "1811": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "ADD",
      "path": "0"
    },
    "1812": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1813": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1814": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1815": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1816": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1817": {
      "offset": [
        10585,
        10624
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1818": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10585,
        10624
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1819": {
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1821": {
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1822": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1823": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10585,
        10624
      ],
      "op": "ADD",
      "path": "0"
    },
    "1824": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10585,
        10624
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1825": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "offset": [
        10666,
        10680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1829": {
      "offset": [
        10642,
        10654
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1830": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1831": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1832": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1833": {
      "offset": [
        10642,
        10649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1835": {
      "offset": [
        10642,
        10654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1837": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1838": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1839": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1840": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1842": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1843": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1844": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1845": {
      "offset": [
        10642,
        10662
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1846": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1848": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10662
      ],
      "op": "AND",
      "path": "0"
    },
    "1849": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1850": {
      "offset": [
        10642,
        10680
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1851": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "GT",
      "path": "0"
    },
    "1852": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1853": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x748"
    },
    "1856": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1857": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x748"
    },
    "1860": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "1863": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "jump": "i",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1864": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1865": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "EQ",
      "path": "0"
    },
    "1866": {
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x765"
    },
    "1869": {
      "offset": [
        10634,
        10714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1870": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1872": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1879": {
      "op": "SHL"
    },
    "1880": {
      "offset": [
        10634,
        10714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1881": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1882": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1884": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "ADD",
      "path": "0"
    },
    "1885": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "1888": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1889": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0B"
    },
    "1892": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "jump": "i",
      "offset": [
        10634,
        10714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1893": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1894": {
      "offset": [
        10725,
        10743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1896": {
      "offset": [
        10781,
        10790
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1897": {
      "offset": [
        10792,
        10799
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1898": {
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1900": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1901": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1903": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "ADD",
      "path": "0"
    },
    "1904": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77A"
    },
    "1907": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1908": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1909": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1910": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD9"
    },
    "1913": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "jump": "i",
      "offset": [
        10764,
        10800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1914": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1915": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1917": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1918": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1921": {
      "op": "NOT"
    },
    "1922": {
      "offset": [
        10764,
        10800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1923": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1924": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SUB",
      "path": "0"
    },
    "1925": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "ADD",
      "path": "0"
    },
    "1926": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1927": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1928": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1929": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1930": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1931": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1932": {
      "offset": [
        10754,
        10801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1933": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10754,
        10801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1934": {
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1936": {
      "offset": [
        10754,
        10801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1937": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10754,
        10801
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1938": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10754,
        10801
      ],
      "op": "ADD",
      "path": "0"
    },
    "1939": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10754,
        10801
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1940": {
      "op": "DUP1"
    },
    "1941": {
      "op": "DUP4"
    },
    "1942": {
      "op": "MSTORE"
    },
    "1943": {
      "offset": [
        10754,
        10801
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1944": {
      "op": "POP"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1947": {
      "op": "DUP1"
    },
    "1948": {
      "op": "MLOAD"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1951": {
      "op": "PUSH2",
      "value": "0x1BF1"
    },
    "1954": {
      "op": "DUP4"
    },
    "1955": {
      "op": "CODECOPY"
    },
    "1956": {
      "op": "DUP2"
    },
    "1957": {
      "op": "MLOAD"
    },
    "1958": {
      "op": "SWAP2"
    },
    "1959": {
      "op": "MSTORE"
    },
    "1960": {
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1961": {
      "op": "ADD"
    },
    "1962": {
      "offset": [
        10817,
        10850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1964": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1965": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1966": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1967": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "SUB",
      "path": "0"
    },
    "1968": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1969": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1970": {
      "offset": [
        10861,
        10884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1972": {
      "offset": [
        10887,
        10927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BE"
    },
    "1975": {
      "offset": [
        10899,
        10909
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1976": {
      "offset": [
        10911,
        10914
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1977": {
      "offset": [
        10916,
        10926
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1978": {
      "offset": [
        10887,
        10898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB5"
    },
    "1981": {
      "jump": "i",
      "offset": [
        10887,
        10927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1982": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10887,
        10927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1983": {
      "offset": [
        10938,
        10960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1985": {
      "offset": [
        10938,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1986": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1987": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1990": {
      "op": "NOT"
    },
    "1991": {
      "offset": [
        10938,
        10981
      ],
      "op": "AND",
      "path": "0"
    },
    "1992": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1995": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1996": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1997": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1998": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "MUL",
      "path": "0"
    },
    "1999": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "OR",
      "path": "0"
    },
    "2000": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2001": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2002": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2003": {
      "op": "POP"
    },
    "2004": {
      "offset": [
        10938,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2005": {
      "offset": [
        10992,
        11252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F6"
    },
    "2008": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        10992,
        11252
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2009": {
      "offset": [
        11036,
        11066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2011": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11036,
        11066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2012": {
      "op": "DUP3"
    },
    "2013": {
      "op": "DUP2"
    },
    "2014": {
      "op": "MSTORE"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2017": {
      "op": "DUP1"
    },
    "2018": {
      "op": "MLOAD"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2021": {
      "op": "PUSH2",
      "value": "0x1BD1"
    },
    "2024": {
      "op": "DUP4"
    },
    "2025": {
      "op": "CODECOPY"
    },
    "2026": {
      "op": "DUP2"
    },
    "2027": {
      "op": "MLOAD"
    },
    "2028": {
      "op": "SWAP2"
    },
    "2029": {
      "op": "MSTORE"
    },
    "2030": {
      "offset": [
        11036,
        11066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2033": {
      "op": "ADD"
    },
    "2034": {
      "offset": [
        11036,
        11066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x603"
    },
    "2037": {
      "op": "JUMP"
    },
    "2038": {
      "offset": [
        10992,
        11252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2039": {
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2041": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2042": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2043": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2044": {
      "offset": [
        11169,
        11176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2046": {
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2048": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2049": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2051": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2052": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2053": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2054": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2055": {
      "offset": [
        11169,
        11189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2056": {
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2057": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2060": {
      "op": "DUP1"
    },
    "2061": {
      "op": "MLOAD"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2064": {
      "op": "PUSH2",
      "value": "0x1C11"
    },
    "2067": {
      "op": "DUP4"
    },
    "2068": {
      "op": "CODECOPY"
    },
    "2069": {
      "op": "DUP2"
    },
    "2070": {
      "op": "MLOAD"
    },
    "2071": {
      "op": "SWAP2"
    },
    "2072": {
      "op": "MSTORE"
    },
    "2073": {
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2074": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82C"
    },
    "2077": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2078": {
      "offset": [
        11169,
        11189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2080": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2081": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2082": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11189
      ],
      "op": "AND",
      "path": "0"
    },
    "2083": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2084": {
      "offset": [
        11177,
        11180
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2085": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11177,
        11180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2086": {
      "offset": [
        11196,
        11203
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2087": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11196,
        11203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2088": {
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1703"
    },
    "2091": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "jump": "i",
      "offset": [
        11158,
        11204
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2092": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2093": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2095": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2096": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2097": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2098": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "SUB",
      "path": "0"
    },
    "2099": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2100": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2101": {
      "offset": [
        11218,
        11241
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83E"
    },
    "2104": {
      "offset": [
        11228,
        11231
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2105": {
      "offset": [
        11233,
        11240
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2106": {
      "offset": [
        11218,
        11227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F7"
    },
    "2109": {
      "jump": "i",
      "offset": [
        11218,
        11241
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2110": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        11218,
        11241
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2111": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14069,
        14087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2113": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14117,
        14127
      ],
      "op": "DUP12",
      "path": "0"
    },
    "2114": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2116": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2117": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2119": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "ADD",
      "path": "0"
    },
    "2120": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x851"
    },
    "2123": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2124": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2125": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA2"
    },
    "2128": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "jump": "i",
      "offset": [
        14100,
        14128
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2129": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2130": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2132": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2133": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2136": {
      "op": "NOT"
    },
    "2137": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2138": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2139": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "SUB",
      "path": "0"
    },
    "2140": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "ADD",
      "path": "0"
    },
    "2141": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2142": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2143": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2144": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2145": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2146": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14090,
        14129
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2147": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14090,
        14129
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2148": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14100,
        14128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2150": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14090,
        14129
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2151": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14090,
        14129
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2152": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14090,
        14129
      ],
      "op": "ADD",
      "path": "0"
    },
    "2153": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14090,
        14129
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2154": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14158,
        14173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2156": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14158,
        14173
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2157": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14158,
        14173
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2158": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14139,
        14154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2160": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14318,
        14346
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 11
    },
    "2161": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14318,
        14346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2162": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14318,
        14346
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2163": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14090,
        14129
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2164": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14090,
        14129
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2165": {
      "op": "POP"
    },
    "2166": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14158,
        14187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2167": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14158,
        14187
      ],
      "op": "EQ",
      "path": "0"
    },
    "2168": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14158,
        14187
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2169": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14158,
        14187
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2170": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x8ED"
    },
    "2173": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2174": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2176": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2177": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2178": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2184": {
      "op": "SHL"
    },
    "2185": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2186": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2189": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2191": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2192": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "ADD",
      "path": "0"
    },
    "2193": {
      "op": "MSTORE"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2196": {
      "op": "DUP2"
    },
    "2197": {
      "op": "ADD"
    },
    "2198": {
      "op": "SWAP2"
    },
    "2199": {
      "op": "SWAP1"
    },
    "2200": {
      "op": "SWAP2"
    },
    "2201": {
      "op": "MSTORE"
    },
    "2202": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A20504B48206D617463686573206C617374207573"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2237": {
      "op": "DUP3"
    },
    "2238": {
      "op": "ADD"
    },
    "2239": {
      "op": "MSTORE"
    },
    "2240": {
      "op": "PUSH32",
      "value": "0x656420504B482028757365207365706172617465207365636F6E64206B657929"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2275": {
      "op": "DUP3"
    },
    "2276": {
      "op": "ADD"
    },
    "2277": {
      "op": "MSTORE"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2280": {
      "op": "ADD"
    },
    "2281": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "2284": {
      "op": "JUMP"
    },
    "2285": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14406,
        14493
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2286": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14504,
        14540
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x8F8"
    },
    "2289": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14511,
        14525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2291": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14527,
        14539
      ],
      "op": "DUP12",
      "path": "0"
    },
    "2292": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14504,
        14510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A6"
    },
    "2295": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "jump": "i",
      "offset": [
        14504,
        14540
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2296": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14504,
        14540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "op": "POP"
    },
    "2299": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14610,
        14611
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "2301": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14584,
        14599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2303": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "offset": [
        14584,
        14612
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2304": {
      "op": "POP"
    },
    "2305": {
      "op": "POP"
    },
    "2306": {
      "op": "POP"
    },
    "2307": {
      "op": "POP"
    },
    "2308": {
      "op": "POP"
    },
    "2309": {
      "op": "POP"
    },
    "2310": {
      "op": "POP"
    },
    "2311": {
      "op": "POP"
    },
    "2312": {
      "op": "POP"
    },
    "2313": {
      "op": "POP"
    },
    "2314": {
      "op": "POP"
    },
    "2315": {
      "fn": "LamportBase2.createMasterKeyStepTwo",
      "jump": "o",
      "offset": [
        13657,
        14619
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2316": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2317": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14854,
        14864
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2318": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14878,
        14881
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2319": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14895,
        14902
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2320": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14933,
        14945
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2321": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2323": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2324": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2326": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "ADD",
      "path": "0"
    },
    "2327": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x922"
    },
    "2330": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2331": {
      "op": "DUP2"
    },
    "2332": {
      "op": "MSTORE"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2335": {
      "op": "ADD"
    },
    "2336": {
      "op": "SWAP1"
    },
    "2337": {
      "op": "JUMP"
    },
    "2338": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2339": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2341": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2342": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2345": {
      "op": "NOT"
    },
    "2346": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2347": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2348": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "SUB",
      "path": "0"
    },
    "2349": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "ADD",
      "path": "0"
    },
    "2350": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2351": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2352": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2353": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2354": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14916,
        14946
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2355": {
      "offset": [
        10516,
        10527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2357": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10516,
        10527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2358": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10516,
        10527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2360": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10516,
        10527
      ],
      "op": "AND",
      "path": "0"
    },
    "2361": {
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x954"
    },
    "2364": {
      "offset": [
        10508,
        10560
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2365": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2367": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10508,
        10560
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "offset": [
        10508,
        10560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2376": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10508,
        10560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2377": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2379": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10508,
        10560
      ],
      "op": "ADD",
      "path": "0"
    },
    "2380": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "2383": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10508,
        10560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2384": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6B"
    },
    "2387": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "jump": "i",
      "offset": [
        10508,
        10560
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2388": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10508,
        10560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2389": {
      "offset": [
        10571,
        10582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2391": {
      "offset": [
        10612,
        10622
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2392": {
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2394": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2395": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2397": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "ADD",
      "path": "0"
    },
    "2398": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x967"
    },
    "2401": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2402": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2403": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA2"
    },
    "2406": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "jump": "i",
      "offset": [
        10595,
        10623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2407": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2408": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2410": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2411": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2414": {
      "op": "NOT"
    },
    "2415": {
      "offset": [
        10595,
        10623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2416": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2417": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "SUB",
      "path": "0"
    },
    "2418": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "ADD",
      "path": "0"
    },
    "2419": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2420": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2421": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2422": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2423": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10595,
        10623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2424": {
      "offset": [
        10585,
        10624
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2425": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10585,
        10624
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2426": {
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2428": {
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2429": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2430": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10585,
        10624
      ],
      "op": "ADD",
      "path": "0"
    },
    "2431": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10585,
        10624
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2432": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2433": {
      "op": "POP"
    },
    "2434": {
      "offset": [
        10666,
        10680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2436": {
      "offset": [
        10642,
        10654
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2437": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2438": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2439": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2440": {
      "offset": [
        10642,
        10649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2442": {
      "offset": [
        10642,
        10654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2444": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2445": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2446": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2447": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2449": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2450": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2451": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10654
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2452": {
      "offset": [
        10642,
        10662
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2453": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2455": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10662
      ],
      "op": "AND",
      "path": "0"
    },
    "2456": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2457": {
      "offset": [
        10642,
        10680
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2458": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10680
      ],
      "op": "GT",
      "path": "0"
    },
    "2459": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10680
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2460": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "2463": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2464": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "2467": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "2470": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "jump": "i",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2471": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2472": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10642,
        10680
      ],
      "op": "EQ",
      "path": "0"
    },
    "2473": {
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C4"
    },
    "2476": {
      "offset": [
        10634,
        10714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2477": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2479": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10634,
        10714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2480": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2486": {
      "op": "SHL"
    },
    "2487": {
      "offset": [
        10634,
        10714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2488": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10634,
        10714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2489": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2491": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10634,
        10714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2492": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "2495": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10634,
        10714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2496": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0B"
    },
    "2499": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "jump": "i",
      "offset": [
        10634,
        10714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2500": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10634,
        10714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2501": {
      "offset": [
        10725,
        10743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2503": {
      "offset": [
        10781,
        10790
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2504": {
      "offset": [
        10792,
        10799
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2505": {
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2507": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2508": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2510": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "ADD",
      "path": "0"
    },
    "2511": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D9"
    },
    "2514": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2515": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2516": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2517": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD9"
    },
    "2520": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "jump": "i",
      "offset": [
        10764,
        10800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2521": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2522": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2524": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2525": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2528": {
      "op": "NOT"
    },
    "2529": {
      "offset": [
        10764,
        10800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2530": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2531": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "SUB",
      "path": "0"
    },
    "2532": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "ADD",
      "path": "0"
    },
    "2533": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2534": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2535": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2536": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2537": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2538": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10764,
        10800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2539": {
      "offset": [
        10754,
        10801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2540": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10754,
        10801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2541": {
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2543": {
      "offset": [
        10754,
        10801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2544": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10754,
        10801
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2545": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10754,
        10801
      ],
      "op": "ADD",
      "path": "0"
    },
    "2546": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10754,
        10801
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2547": {
      "op": "DUP1"
    },
    "2548": {
      "op": "DUP4"
    },
    "2549": {
      "op": "MSTORE"
    },
    "2550": {
      "offset": [
        10754,
        10801
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2551": {
      "op": "POP"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2554": {
      "op": "DUP1"
    },
    "2555": {
      "op": "MLOAD"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2558": {
      "op": "PUSH2",
      "value": "0x1BF1"
    },
    "2561": {
      "op": "DUP4"
    },
    "2562": {
      "op": "CODECOPY"
    },
    "2563": {
      "op": "DUP2"
    },
    "2564": {
      "op": "MLOAD"
    },
    "2565": {
      "op": "SWAP2"
    },
    "2566": {
      "op": "MSTORE"
    },
    "2567": {
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2568": {
      "op": "ADD"
    },
    "2569": {
      "offset": [
        10817,
        10850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2571": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10817,
        10850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2572": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10817,
        10850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2573": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2574": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10817,
        10850
      ],
      "op": "SUB",
      "path": "0"
    },
    "2575": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2576": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10817,
        10850
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2577": {
      "offset": [
        10861,
        10884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2579": {
      "offset": [
        10887,
        10927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1D"
    },
    "2582": {
      "offset": [
        10899,
        10909
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2583": {
      "offset": [
        10911,
        10914
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2584": {
      "offset": [
        10916,
        10926
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2585": {
      "offset": [
        10887,
        10898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB5"
    },
    "2588": {
      "jump": "i",
      "offset": [
        10887,
        10927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2589": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10887,
        10927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2590": {
      "offset": [
        10938,
        10960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2592": {
      "offset": [
        10938,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2593": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10938,
        10981
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2594": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2597": {
      "op": "NOT"
    },
    "2598": {
      "offset": [
        10938,
        10981
      ],
      "op": "AND",
      "path": "0"
    },
    "2599": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10938,
        10981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2602": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10938,
        10981
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2603": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10938,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2604": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10938,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2605": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10938,
        10981
      ],
      "op": "MUL",
      "path": "0"
    },
    "2606": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10938,
        10981
      ],
      "op": "OR",
      "path": "0"
    },
    "2607": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10938,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2608": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10938,
        10981
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2609": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10938,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2610": {
      "op": "POP"
    },
    "2611": {
      "offset": [
        10938,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2612": {
      "offset": [
        10992,
        11252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA55"
    },
    "2615": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10992,
        11252
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2616": {
      "offset": [
        11036,
        11066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2618": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11036,
        11066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2619": {
      "op": "DUP3"
    },
    "2620": {
      "op": "DUP2"
    },
    "2621": {
      "op": "MSTORE"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2624": {
      "op": "DUP1"
    },
    "2625": {
      "op": "MLOAD"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2628": {
      "op": "PUSH2",
      "value": "0x1BD1"
    },
    "2631": {
      "op": "DUP4"
    },
    "2632": {
      "op": "CODECOPY"
    },
    "2633": {
      "op": "DUP2"
    },
    "2634": {
      "op": "MLOAD"
    },
    "2635": {
      "op": "SWAP2"
    },
    "2636": {
      "op": "MSTORE"
    },
    "2637": {
      "offset": [
        11036,
        11066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2640": {
      "op": "ADD"
    },
    "2641": {
      "offset": [
        11036,
        11066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x603"
    },
    "2644": {
      "op": "JUMP"
    },
    "2645": {
      "offset": [
        10992,
        11252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2646": {
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2648": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2649": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2650": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2651": {
      "offset": [
        11169,
        11176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2653": {
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2655": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2656": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2658": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2659": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2660": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2661": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11181
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2662": {
      "offset": [
        11169,
        11189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2663": {
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2664": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11158,
        11204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2667": {
      "op": "DUP1"
    },
    "2668": {
      "op": "MLOAD"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2671": {
      "op": "PUSH2",
      "value": "0x1C11"
    },
    "2674": {
      "op": "DUP4"
    },
    "2675": {
      "op": "CODECOPY"
    },
    "2676": {
      "op": "DUP2"
    },
    "2677": {
      "op": "MLOAD"
    },
    "2678": {
      "op": "SWAP2"
    },
    "2679": {
      "op": "MSTORE"
    },
    "2680": {
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2681": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8B"
    },
    "2684": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2685": {
      "offset": [
        11169,
        11189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2687": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2688": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2689": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11189
      ],
      "op": "AND",
      "path": "0"
    },
    "2690": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2691": {
      "offset": [
        11177,
        11180
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2692": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11177,
        11180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2693": {
      "offset": [
        11196,
        11203
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2694": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11196,
        11203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2695": {
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1703"
    },
    "2698": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "jump": "i",
      "offset": [
        11158,
        11204
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2699": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11158,
        11204
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2700": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2702": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11158,
        11204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2703": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11158,
        11204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2704": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2705": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11158,
        11204
      ],
      "op": "SUB",
      "path": "0"
    },
    "2706": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2707": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11158,
        11204
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2708": {
      "offset": [
        11218,
        11241
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9D"
    },
    "2711": {
      "offset": [
        11228,
        11231
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2712": {
      "offset": [
        11233,
        11240
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2713": {
      "offset": [
        11218,
        11227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F7"
    },
    "2716": {
      "jump": "i",
      "offset": [
        11218,
        11241
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2717": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        11218,
        11241
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2718": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14980,
        15016
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0xAA8"
    },
    "2721": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14987,
        15001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2723": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        15003,
        15015
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2724": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14980,
        14986
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A6"
    },
    "2727": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "jump": "i",
      "offset": [
        14980,
        15016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2728": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14980,
        15016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2729": {
      "offset": [
        10498,
        11270
      ],
      "op": "POP",
      "path": "0"
    },
    "2730": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10498,
        11270
      ],
      "op": "POP",
      "path": "0"
    },
    "2731": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        10498,
        11270
      ],
      "op": "POP",
      "path": "0"
    },
    "2732": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "POP",
      "path": "0"
    },
    "2733": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "POP",
      "path": "0"
    },
    "2734": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "POP",
      "path": "0"
    },
    "2735": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "POP",
      "path": "0"
    },
    "2736": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "POP",
      "path": "0"
    },
    "2737": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "POP",
      "path": "0"
    },
    "2738": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "POP",
      "path": "0"
    },
    "2739": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "offset": [
        14626,
        15030
      ],
      "op": "POP",
      "path": "0"
    },
    "2740": {
      "fn": "LamportBase2.createOracleKeyFromMaster",
      "jump": "o",
      "offset": [
        14626,
        15030
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2741": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2742": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10073,
        10077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2744": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10118,
        10127
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2745": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10113,
        10320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2746": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10133,
        10136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2749": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10129,
        10130
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2750": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10129,
        10136
      ],
      "op": "LT",
      "path": "0"
    },
    "2751": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10113,
        10320
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2752": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10113,
        10320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5D"
    },
    "2755": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10113,
        10320
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2756": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10270
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2757": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10271,
        10272
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2758": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2761": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2762": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "LT",
      "path": "0"
    },
    "2763": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD6"
    },
    "2766": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2767": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD6"
    },
    "2770": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "2773": {
      "fn": "LamportBase2.verify_u256",
      "jump": "i",
      "offset": [
        10267,
        10273
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2774": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2775": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2777": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "MUL",
      "path": "0"
    },
    "2778": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2779": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "ADD",
      "path": "0"
    },
    "2780": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2781": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE6"
    },
    "2784": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2785": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2786": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B42"
    },
    "2789": {
      "fn": "LamportBase2.verify_u256",
      "jump": "i",
      "offset": [
        10267,
        10273
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2790": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10267,
        10273
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2791": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2793": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2794": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF4"
    },
    "2797": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2798": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2799": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2800": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B90"
    },
    "2803": {
      "fn": "LamportBase2.verify_u256",
      "jump": "i",
      "offset": [
        10257,
        10274
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2804": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2805": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2807": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2808": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2809": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2810": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "SUB",
      "path": "0"
    },
    "2811": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2812": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10257,
        10274
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2813": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10189
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2814": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10190,
        10191
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2815": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2818": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10192
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2819": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10192
      ],
      "op": "LT",
      "path": "0"
    },
    "2820": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0F"
    },
    "2823": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2824": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0F"
    },
    "2827": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "2830": {
      "fn": "LamportBase2.verify_u256",
      "jump": "i",
      "offset": [
        10186,
        10192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2831": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2832": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2834": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10192
      ],
      "op": "MUL",
      "path": "0"
    },
    "2835": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10192
      ],
      "op": "ADD",
      "path": "0"
    },
    "2836": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10222,
        10223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2838": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10215,
        10216
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2839": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10209,
        10212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2841": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10209,
        10216
      ],
      "op": "SUB",
      "path": "0"
    },
    "2842": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10203,
        10204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2844": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10203,
        10217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2845": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10203,
        10217
      ],
      "op": "SHL",
      "path": "0"
    },
    "2846": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10195,
        10199
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2847": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10195,
        10218
      ],
      "op": "AND",
      "path": "0"
    },
    "2848": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10194,
        10223
      ],
      "op": "GT",
      "path": "0"
    },
    "2849": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10193,
        10232
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "2852": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10193,
        10232
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2853": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10231,
        10232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2855": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10193,
        10232
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "2858": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10193,
        10232
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2859": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10193,
        10232
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2860": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10227,
        10228
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2862": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10193,
        10232
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2863": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2865": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "AND",
      "path": "0"
    },
    "2866": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2868": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2869": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "LT",
      "path": "0"
    },
    "2870": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB41"
    },
    "2873": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2874": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB41"
    },
    "2877": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "2880": {
      "fn": "LamportBase2.verify_u256",
      "jump": "i",
      "offset": [
        10186,
        10233
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2881": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2882": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2884": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "MUL",
      "path": "0"
    },
    "2885": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "ADD",
      "path": "0"
    },
    "2886": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10233
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2887": {
      "branch": 57,
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10186,
        10274
      ],
      "op": "EQ",
      "path": "0"
    },
    "2888": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10161,
        10305
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB55"
    },
    "2891": {
      "branch": 57,
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10161,
        10305
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2892": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10300,
        10305
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "2894": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10293,
        10305
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2895": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10293,
        10305
      ],
      "op": "POP",
      "path": "0"
    },
    "2896": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10293,
        10305
      ],
      "op": "POP",
      "path": "0"
    },
    "2897": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10293,
        10305
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB63"
    },
    "2900": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10293,
        10305
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2901": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10161,
        10305
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2902": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10138,
        10141
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x1"
    },
    "2904": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10138,
        10141
      ],
      "op": "ADD",
      "path": "0"
    },
    "2905": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10113,
        10320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB9"
    },
    "2908": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10113,
        10320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2909": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10113,
        10320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2910": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10113,
        10320
      ],
      "op": "POP",
      "path": "0"
    },
    "2911": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10341,
        10345
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x1"
    },
    "2913": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10334,
        10345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2914": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        10334,
        10345
      ],
      "op": "POP",
      "path": "0"
    },
    "2915": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2916": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2917": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2918": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "POP",
      "path": "0"
    },
    "2919": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "POP",
      "path": "0"
    },
    "2920": {
      "fn": "LamportBase2.verify_u256",
      "offset": [
        9932,
        10362
      ],
      "op": "POP",
      "path": "0"
    },
    "2921": {
      "fn": "LamportBase2.verify_u256",
      "jump": "o",
      "offset": [
        9932,
        10362
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2922": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2923": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4093,
        4097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2925": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4093,
        4104
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2926": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4027,
        4043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2928": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4027,
        4043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2929": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4055,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2931": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4055,
        4076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2932": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2941": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2942": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "GT",
      "path": "0"
    },
    "2943": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2944": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8B"
    },
    "2947": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2948": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8B"
    },
    "2951": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1767"
    },
    "2954": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4079,
        4105
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2955": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2956": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2958": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2959": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2960": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2961": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2962": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2963": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2964": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2966": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "MUL",
      "path": "0"
    },
    "2967": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2969": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "ADD",
      "path": "0"
    },
    "2970": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2971": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "ADD",
      "path": "0"
    },
    "2972": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2974": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2975": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2976": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2977": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB4"
    },
    "2980": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2981": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2982": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2984": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "ADD",
      "path": "0"
    },
    "2985": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2987": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2988": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "MUL",
      "path": "0"
    },
    "2989": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2990": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2991": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2992": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "2993": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "ADD",
      "path": "0"
    },
    "2994": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2995": {
      "op": "POP"
    },
    "2996": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2997": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4079,
        4105
      ],
      "op": "POP",
      "path": "0"
    },
    "2998": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4055,
        4105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2999": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4055,
        4105
      ],
      "op": "POP",
      "path": "0"
    },
    "3000": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4115,
        4127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3002": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4147,
        4153
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3003": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4142,
        4326
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3004": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4163,
        4167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3006": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4163,
        4174
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3007": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4159,
        4174
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3008": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4159,
        4174
      ],
      "op": "LT",
      "path": "0"
    },
    "3009": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4142,
        4326
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3010": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4142,
        4326
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC75"
    },
    "3013": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4142,
        4326
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3014": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4218,
        4227
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3015": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3017": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3018": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "GT",
      "path": "0"
    },
    "3019": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3020": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD7"
    },
    "3023": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3024": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD7"
    },
    "3027": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "3030": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3031": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3032": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3034": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4204,
        4205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3035": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3036": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3037": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3038": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "LT",
      "path": "0"
    },
    "3039": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBEA"
    },
    "3042": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3043": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBEA"
    },
    "3046": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "3049": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4199,
        4206
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3050": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3051": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3053": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3054": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3055": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3056": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3058": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3059": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3060": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3061": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3063": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3064": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3065": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "MUL",
      "path": "0"
    },
    "3066": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4206
      ],
      "op": "ADD",
      "path": "0"
    },
    "3067": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4214
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3068": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3070": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4214
      ],
      "op": "AND",
      "path": "0"
    },
    "3071": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4214
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3072": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3073": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "GT",
      "path": "0"
    },
    "3074": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3075": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "3078": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3079": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "3082": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "3085": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3086": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3087": {
      "branch": 58,
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4199,
        4227
      ],
      "op": "SUB",
      "path": "0"
    },
    "3088": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4195,
        4316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC63"
    },
    "3091": {
      "branch": 58,
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4195,
        4316
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3092": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4267
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x1"
    },
    "3094": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4268,
        4269
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3095": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3096": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3097": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3098": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "LT",
      "path": "0"
    },
    "3099": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC26"
    },
    "3102": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3103": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC26"
    },
    "3106": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "3109": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4263,
        4270
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3110": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3111": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3112": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3114": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3115": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3117": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3119": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3120": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3121": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3123": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "MUL",
      "path": "0"
    },
    "3124": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4270
      ],
      "op": "ADD",
      "path": "0"
    },
    "3125": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3127": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4274
      ],
      "op": "ADD",
      "path": "0"
    },
    "3128": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4263,
        4274
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3129": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3130": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4252,
        4259
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3131": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3132": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3133": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3134": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "LT",
      "path": "0"
    },
    "3135": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4A"
    },
    "3138": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3139": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4A"
    },
    "3142": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "3145": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4247,
        4260
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3146": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3147": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3149": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3150": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3151": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "MUL",
      "path": "0"
    },
    "3152": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3153": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3154": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3155": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "ADD",
      "path": "0"
    },
    "3156": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4260
      ],
      "op": "ADD",
      "path": "0"
    },
    "3157": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4247,
        4274
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3158": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4292,
        4301
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 20
    },
    "3159": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4292,
        4301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5F"
    },
    "3162": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4292,
        4301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3163": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4292,
        4301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A44"
    },
    "3166": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4292,
        4301
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3167": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4292,
        4301
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3168": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4292,
        4301
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3169": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4292,
        4301
      ],
      "op": "POP",
      "path": "0"
    },
    "3170": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4292,
        4301
      ],
      "op": "POP",
      "path": "0"
    },
    "3171": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4195,
        4316
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3172": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4176,
        4179
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 21
    },
    "3173": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4176,
        4179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6D"
    },
    "3176": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4176,
        4179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3177": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4176,
        4179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A44"
    },
    "3180": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4176,
        4179
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3181": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4176,
        4179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3182": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4176,
        4179
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3183": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4176,
        4179
      ],
      "op": "POP",
      "path": "0"
    },
    "3184": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4176,
        4179
      ],
      "op": "POP",
      "path": "0"
    },
    "3185": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4142,
        4326
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBBB"
    },
    "3188": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4142,
        4326
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3189": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4142,
        4326
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3190": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4142,
        4326
      ],
      "op": "POP",
      "path": "0"
    },
    "3191": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4375,
        4398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3193": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4415,
        4422
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3194": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3203": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3204": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "GT",
      "path": "0"
    },
    "3205": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3206": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC91"
    },
    "3209": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3210": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC91"
    },
    "3213": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1767"
    },
    "3216": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4401,
        4423
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3217": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3218": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3220": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3221": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3222": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3223": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3224": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3225": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3226": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3228": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "MUL",
      "path": "0"
    },
    "3229": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3231": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "ADD",
      "path": "0"
    },
    "3232": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3233": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "ADD",
      "path": "0"
    },
    "3234": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3236": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3237": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3238": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3239": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCBA"
    },
    "3242": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3243": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3244": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3246": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "ADD",
      "path": "0"
    },
    "3247": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3249": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3250": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "MUL",
      "path": "0"
    },
    "3251": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3252": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "3253": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3254": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "3255": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "ADD",
      "path": "0"
    },
    "3256": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3257": {
      "op": "POP"
    },
    "3258": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3259": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4401,
        4423
      ],
      "op": "POP",
      "path": "0"
    },
    "3260": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4375,
        4423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3261": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4375,
        4423
      ],
      "op": "POP",
      "path": "0"
    },
    "3262": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4437,
        4443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3264": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4433,
        4511
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3265": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4453,
        4460
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3266": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4449,
        4450
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3267": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4449,
        4460
      ],
      "op": "LT",
      "path": "0"
    },
    "3268": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4433,
        4511
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3269": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4433,
        4511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD11"
    },
    "3272": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4433,
        4511
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3273": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4497
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 22
    },
    "3274": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4498,
        4499
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3275": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3276": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3277": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3278": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "LT",
      "path": "0"
    },
    "3279": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCDA"
    },
    "3282": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3283": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCDA"
    },
    "3286": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "3289": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4493,
        4500
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3290": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3291": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3293": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "MUL",
      "path": "0"
    },
    "3294": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3296": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "ADD",
      "path": "0"
    },
    "3297": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "ADD",
      "path": "0"
    },
    "3298": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4493,
        4500
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3299": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4487
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3300": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4488,
        4489
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3301": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3302": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3303": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3304": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "LT",
      "path": "0"
    },
    "3305": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF4"
    },
    "3308": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3309": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF4"
    },
    "3312": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "3315": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4481,
        4490
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3316": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3317": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3319": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3320": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3321": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "MUL",
      "path": "0"
    },
    "3322": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3323": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3324": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3325": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "ADD",
      "path": "0"
    },
    "3326": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4490
      ],
      "op": "ADD",
      "path": "0"
    },
    "3327": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4481,
        4500
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3328": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4462,
        4465
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 23
    },
    "3329": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4462,
        4465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD09"
    },
    "3332": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4462,
        4465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3333": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4462,
        4465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A44"
    },
    "3336": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "i",
      "offset": [
        4462,
        4465
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3337": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4462,
        4465
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3338": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4462,
        4465
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3339": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4462,
        4465
      ],
      "op": "POP",
      "path": "0"
    },
    "3340": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4462,
        4465
      ],
      "op": "POP",
      "path": "0"
    },
    "3341": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4433,
        4511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC0"
    },
    "3344": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4433,
        4511
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3345": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4433,
        4511
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3346": {
      "op": "POP"
    },
    "3347": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        4528,
        4534
      ],
      "op": "SWAP5",
      "path": "0",
      "statement": 24
    },
    "3348": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "offset": [
        3959,
        4541
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3349": {
      "op": "POP"
    },
    "3350": {
      "op": "POP"
    },
    "3351": {
      "op": "POP"
    },
    "3352": {
      "op": "POP"
    },
    "3353": {
      "fn": "LamportBase2.getPKHsByPrivilege",
      "jump": "o",
      "offset": [
        3959,
        4541
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3354": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5619,
        6094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3355": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5839,
        5849
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3356": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5863,
        5866
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3357": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5880,
        5887
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3358": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5918,
        5931
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3359": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3361": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3362": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3364": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "ADD",
      "path": "0"
    },
    "3365": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD30"
    },
    "3368": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3369": {
      "op": "DUP2"
    },
    "3370": {
      "op": "MSTORE"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3373": {
      "op": "ADD"
    },
    "3374": {
      "op": "SWAP1"
    },
    "3375": {
      "op": "JUMP"
    },
    "3376": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3377": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3379": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3380": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3383": {
      "op": "NOT"
    },
    "3384": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3385": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3386": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "SUB",
      "path": "0"
    },
    "3387": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "ADD",
      "path": "0"
    },
    "3388": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3389": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3390": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3391": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3392": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        5901,
        5932
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3393": {
      "offset": [
        10516,
        10527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3395": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10516,
        10527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3396": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10516,
        10527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3398": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10516,
        10527
      ],
      "op": "AND",
      "path": "0"
    },
    "3399": {
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD62"
    },
    "3402": {
      "offset": [
        10508,
        10560
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3403": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3405": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3406": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3412": {
      "op": "SHL"
    },
    "3413": {
      "offset": [
        10508,
        10560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3414": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3415": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3417": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "ADD",
      "path": "0"
    },
    "3418": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "3421": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3422": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6B"
    },
    "3425": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "jump": "i",
      "offset": [
        10508,
        10560
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3426": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10508,
        10560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3427": {
      "offset": [
        10571,
        10582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3429": {
      "offset": [
        10612,
        10622
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3430": {
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3432": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3433": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3435": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "ADD",
      "path": "0"
    },
    "3436": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD75"
    },
    "3439": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3440": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3441": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA2"
    },
    "3444": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "jump": "i",
      "offset": [
        10595,
        10623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3445": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3446": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3448": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3449": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3452": {
      "op": "NOT"
    },
    "3453": {
      "offset": [
        10595,
        10623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3454": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3455": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "SUB",
      "path": "0"
    },
    "3456": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "ADD",
      "path": "0"
    },
    "3457": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3458": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3459": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3460": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3461": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10595,
        10623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3462": {
      "offset": [
        10585,
        10624
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3463": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10585,
        10624
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3464": {
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3466": {
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3467": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3468": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10585,
        10624
      ],
      "op": "ADD",
      "path": "0"
    },
    "3469": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10585,
        10624
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3470": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3471": {
      "op": "POP"
    },
    "3472": {
      "offset": [
        10666,
        10680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3474": {
      "offset": [
        10642,
        10654
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3475": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3476": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3477": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3478": {
      "offset": [
        10642,
        10649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3480": {
      "offset": [
        10642,
        10654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3482": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3483": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3484": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3485": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3487": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3488": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3489": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10654
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3490": {
      "offset": [
        10642,
        10662
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3491": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3493": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10662
      ],
      "op": "AND",
      "path": "0"
    },
    "3494": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3495": {
      "offset": [
        10642,
        10680
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3496": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "GT",
      "path": "0"
    },
    "3497": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3498": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB5"
    },
    "3501": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3502": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB5"
    },
    "3505": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "3508": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "jump": "i",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3509": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3510": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10642,
        10680
      ],
      "op": "EQ",
      "path": "0"
    },
    "3511": {
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD2"
    },
    "3514": {
      "offset": [
        10634,
        10714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3515": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3517": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3518": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3524": {
      "op": "SHL"
    },
    "3525": {
      "offset": [
        10634,
        10714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3526": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3527": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3529": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "ADD",
      "path": "0"
    },
    "3530": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "3533": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3534": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0B"
    },
    "3537": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "jump": "i",
      "offset": [
        10634,
        10714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3538": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10634,
        10714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3539": {
      "offset": [
        10725,
        10743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3541": {
      "offset": [
        10781,
        10790
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3542": {
      "offset": [
        10792,
        10799
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3543": {
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3545": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3546": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3548": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "ADD",
      "path": "0"
    },
    "3549": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE7"
    },
    "3552": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3553": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3554": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3555": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD9"
    },
    "3558": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "jump": "i",
      "offset": [
        10764,
        10800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3559": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3560": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3562": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3563": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3566": {
      "op": "NOT"
    },
    "3567": {
      "offset": [
        10764,
        10800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3568": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3569": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SUB",
      "path": "0"
    },
    "3570": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "ADD",
      "path": "0"
    },
    "3571": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3572": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3573": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3574": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3575": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3576": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10764,
        10800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3577": {
      "offset": [
        10754,
        10801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3578": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10754,
        10801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3579": {
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3581": {
      "offset": [
        10754,
        10801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3582": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10754,
        10801
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3583": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10754,
        10801
      ],
      "op": "ADD",
      "path": "0"
    },
    "3584": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10754,
        10801
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3585": {
      "op": "DUP1"
    },
    "3586": {
      "op": "DUP4"
    },
    "3587": {
      "op": "MSTORE"
    },
    "3588": {
      "offset": [
        10754,
        10801
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3589": {
      "op": "POP"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3592": {
      "op": "DUP1"
    },
    "3593": {
      "op": "MLOAD"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3596": {
      "op": "PUSH2",
      "value": "0x1BF1"
    },
    "3599": {
      "op": "DUP4"
    },
    "3600": {
      "op": "CODECOPY"
    },
    "3601": {
      "op": "DUP2"
    },
    "3602": {
      "op": "MLOAD"
    },
    "3603": {
      "op": "SWAP2"
    },
    "3604": {
      "op": "MSTORE"
    },
    "3605": {
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3606": {
      "op": "ADD"
    },
    "3607": {
      "offset": [
        10817,
        10850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3609": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3610": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3611": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3612": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "SUB",
      "path": "0"
    },
    "3613": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3614": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10817,
        10850
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3615": {
      "offset": [
        10861,
        10884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3617": {
      "offset": [
        10887,
        10927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2B"
    },
    "3620": {
      "offset": [
        10899,
        10909
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3621": {
      "offset": [
        10911,
        10914
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3622": {
      "offset": [
        10916,
        10926
      ],
      "op": "DUP10",
      "path": "0"
    },
    "3623": {
      "offset": [
        10887,
        10898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB5"
    },
    "3626": {
      "jump": "i",
      "offset": [
        10887,
        10927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3627": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10887,
        10927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3628": {
      "offset": [
        10938,
        10960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3630": {
      "offset": [
        10938,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3631": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3632": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3635": {
      "op": "NOT"
    },
    "3636": {
      "offset": [
        10938,
        10981
      ],
      "op": "AND",
      "path": "0"
    },
    "3637": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3640": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3641": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3642": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3643": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "MUL",
      "path": "0"
    },
    "3644": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "OR",
      "path": "0"
    },
    "3645": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3646": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3647": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10938,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3648": {
      "op": "POP"
    },
    "3649": {
      "offset": [
        10938,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3650": {
      "offset": [
        10992,
        11252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE63"
    },
    "3653": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        10992,
        11252
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3654": {
      "offset": [
        11036,
        11066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3656": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11036,
        11066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3657": {
      "op": "DUP3"
    },
    "3658": {
      "op": "DUP2"
    },
    "3659": {
      "op": "MSTORE"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3662": {
      "op": "DUP1"
    },
    "3663": {
      "op": "MLOAD"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3666": {
      "op": "PUSH2",
      "value": "0x1BD1"
    },
    "3669": {
      "op": "DUP4"
    },
    "3670": {
      "op": "CODECOPY"
    },
    "3671": {
      "op": "DUP2"
    },
    "3672": {
      "op": "MLOAD"
    },
    "3673": {
      "op": "SWAP2"
    },
    "3674": {
      "op": "MSTORE"
    },
    "3675": {
      "offset": [
        11036,
        11066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3678": {
      "op": "ADD"
    },
    "3679": {
      "offset": [
        11036,
        11066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x603"
    },
    "3682": {
      "op": "JUMP"
    },
    "3683": {
      "offset": [
        10992,
        11252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3684": {
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3686": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3687": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3688": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3689": {
      "offset": [
        11169,
        11176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3691": {
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3693": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3694": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3696": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3697": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3698": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3699": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11181
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3700": {
      "offset": [
        11169,
        11189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3701": {
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3702": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3705": {
      "op": "DUP1"
    },
    "3706": {
      "op": "MLOAD"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3709": {
      "op": "PUSH2",
      "value": "0x1C11"
    },
    "3712": {
      "op": "DUP4"
    },
    "3713": {
      "op": "CODECOPY"
    },
    "3714": {
      "op": "DUP2"
    },
    "3715": {
      "op": "MLOAD"
    },
    "3716": {
      "op": "SWAP2"
    },
    "3717": {
      "op": "MSTORE"
    },
    "3718": {
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3719": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE99"
    },
    "3722": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3723": {
      "offset": [
        11169,
        11189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3725": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3726": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3727": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11189
      ],
      "op": "AND",
      "path": "0"
    },
    "3728": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3729": {
      "offset": [
        11177,
        11180
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3730": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11177,
        11180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3731": {
      "offset": [
        11196,
        11203
      ],
      "op": "DUP10",
      "path": "0"
    },
    "3732": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11196,
        11203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3733": {
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1703"
    },
    "3736": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "jump": "i",
      "offset": [
        11158,
        11204
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3737": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3738": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3740": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3741": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3742": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3743": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "SUB",
      "path": "0"
    },
    "3744": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3745": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11158,
        11204
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3746": {
      "offset": [
        11218,
        11241
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEAB"
    },
    "3749": {
      "offset": [
        11228,
        11231
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3750": {
      "offset": [
        11233,
        11240
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3751": {
      "offset": [
        11218,
        11227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F7"
    },
    "3754": {
      "jump": "i",
      "offset": [
        11218,
        11241
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3755": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        11218,
        11241
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3756": {
      "op": "POP"
    },
    "3757": {
      "op": "POP"
    },
    "3758": {
      "op": "POP"
    },
    "3759": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        6017,
        6038
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x3"
    },
    "3761": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        6017,
        6054
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3762": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        6017,
        6054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3763": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        6017,
        6054
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3764": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        6017,
        6054
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3765": {
      "op": "POP"
    },
    "3766": {
      "op": "POP"
    },
    "3767": {
      "op": "POP"
    },
    "3768": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        6064,
        6077
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x4"
    },
    "3770": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        6064,
        6087
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3771": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        6064,
        6087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3772": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        6064,
        6087
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3773": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "offset": [
        6064,
        6087
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3774": {
      "op": "POP"
    },
    "3775": {
      "op": "POP"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "fn": "LamportBase2.deleteKeyStepOne",
      "jump": "o",
      "offset": [
        5619,
        6094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3778": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6100,
        9762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3779": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6359,
        6369
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3780": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6387,
        6390
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3781": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6408,
        6415
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3782": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6450,
        6470
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3783": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3785": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3786": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3788": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "ADD",
      "path": "0"
    },
    "3789": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED8"
    },
    "3792": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3793": {
      "op": "DUP2"
    },
    "3794": {
      "op": "MSTORE"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3797": {
      "op": "ADD"
    },
    "3798": {
      "op": "SWAP1"
    },
    "3799": {
      "op": "JUMP"
    },
    "3800": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3801": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3803": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3804": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3807": {
      "op": "NOT"
    },
    "3808": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3809": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3810": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "SUB",
      "path": "0"
    },
    "3811": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "ADD",
      "path": "0"
    },
    "3812": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3813": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3814": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3815": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3816": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6433,
        6471
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3817": {
      "offset": [
        10516,
        10527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3819": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10516,
        10527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3820": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10516,
        10527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3822": {
      "branch": 59,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10516,
        10527
      ],
      "op": "AND",
      "path": "0"
    },
    "3823": {
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0A"
    },
    "3826": {
      "branch": 59,
      "offset": [
        10508,
        10560
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3827": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3829": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3830": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3836": {
      "op": "SHL"
    },
    "3837": {
      "offset": [
        10508,
        10560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3838": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3839": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3841": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "ADD",
      "path": "0"
    },
    "3842": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "3845": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3846": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6B"
    },
    "3849": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        10508,
        10560
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3850": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10508,
        10560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3851": {
      "offset": [
        10571,
        10582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3853": {
      "offset": [
        10612,
        10622
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3854": {
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3856": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3857": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3859": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "ADD",
      "path": "0"
    },
    "3860": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1D"
    },
    "3863": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3864": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3865": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA2"
    },
    "3868": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        10595,
        10623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3869": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3870": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3872": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3873": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3876": {
      "op": "NOT"
    },
    "3877": {
      "offset": [
        10595,
        10623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3878": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3879": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "SUB",
      "path": "0"
    },
    "3880": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "ADD",
      "path": "0"
    },
    "3881": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3882": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3883": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3884": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3885": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10595,
        10623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3886": {
      "offset": [
        10585,
        10624
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3887": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10585,
        10624
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3888": {
      "offset": [
        10595,
        10623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3890": {
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3891": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3892": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10585,
        10624
      ],
      "op": "ADD",
      "path": "0"
    },
    "3893": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10585,
        10624
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3894": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10585,
        10624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3895": {
      "op": "POP"
    },
    "3896": {
      "offset": [
        10666,
        10680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3898": {
      "offset": [
        10642,
        10654
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3899": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3900": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3901": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3902": {
      "offset": [
        10642,
        10649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3904": {
      "offset": [
        10642,
        10654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3906": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3907": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3908": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3909": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3911": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3912": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3913": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10654
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3914": {
      "offset": [
        10642,
        10662
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3915": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3917": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10662
      ],
      "op": "AND",
      "path": "0"
    },
    "3918": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3919": {
      "offset": [
        10642,
        10680
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3920": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "GT",
      "path": "0"
    },
    "3921": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3922": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5D"
    },
    "3925": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3926": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5D"
    },
    "3929": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "3932": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3933": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3934": {
      "branch": 60,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10642,
        10680
      ],
      "op": "EQ",
      "path": "0"
    },
    "3935": {
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7A"
    },
    "3938": {
      "branch": 60,
      "offset": [
        10634,
        10714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3939": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3941": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3942": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3948": {
      "op": "SHL"
    },
    "3949": {
      "offset": [
        10634,
        10714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3950": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3951": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3953": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "ADD",
      "path": "0"
    },
    "3954": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "3957": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3958": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0B"
    },
    "3961": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        10634,
        10714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3962": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10634,
        10714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3963": {
      "offset": [
        10725,
        10743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3965": {
      "offset": [
        10781,
        10790
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3966": {
      "offset": [
        10792,
        10799
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3967": {
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3969": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3970": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3972": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "ADD",
      "path": "0"
    },
    "3973": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8F"
    },
    "3976": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3977": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3978": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3979": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AD9"
    },
    "3982": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        10764,
        10800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3983": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3984": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3986": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3987": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3990": {
      "op": "NOT"
    },
    "3991": {
      "offset": [
        10764,
        10800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3992": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3993": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SUB",
      "path": "0"
    },
    "3994": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "ADD",
      "path": "0"
    },
    "3995": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3996": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3997": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3998": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3999": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4000": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10764,
        10800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4001": {
      "offset": [
        10754,
        10801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4002": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10754,
        10801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4003": {
      "offset": [
        10764,
        10800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4005": {
      "offset": [
        10754,
        10801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4006": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10754,
        10801
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4007": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10754,
        10801
      ],
      "op": "ADD",
      "path": "0"
    },
    "4008": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10754,
        10801
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4009": {
      "op": "DUP1"
    },
    "4010": {
      "op": "DUP4"
    },
    "4011": {
      "op": "MSTORE"
    },
    "4012": {
      "offset": [
        10754,
        10801
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4013": {
      "op": "POP"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4016": {
      "op": "DUP1"
    },
    "4017": {
      "op": "MLOAD"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4020": {
      "op": "PUSH2",
      "value": "0x1BF1"
    },
    "4023": {
      "op": "DUP4"
    },
    "4024": {
      "op": "CODECOPY"
    },
    "4025": {
      "op": "DUP2"
    },
    "4026": {
      "op": "MLOAD"
    },
    "4027": {
      "op": "SWAP2"
    },
    "4028": {
      "op": "MSTORE"
    },
    "4029": {
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "offset": [
        10817,
        10850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4033": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4034": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4035": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4036": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "SUB",
      "path": "0"
    },
    "4037": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4038": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10817,
        10850
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4039": {
      "offset": [
        10861,
        10884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4041": {
      "offset": [
        10887,
        10927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD3"
    },
    "4044": {
      "offset": [
        10899,
        10909
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4045": {
      "offset": [
        10911,
        10914
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4046": {
      "offset": [
        10916,
        10926
      ],
      "op": "DUP10",
      "path": "0"
    },
    "4047": {
      "offset": [
        10887,
        10898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB5"
    },
    "4050": {
      "jump": "i",
      "offset": [
        10887,
        10927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4051": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10887,
        10927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4052": {
      "offset": [
        10938,
        10960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4054": {
      "offset": [
        10938,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4055": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4056": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4059": {
      "op": "NOT"
    },
    "4060": {
      "offset": [
        10938,
        10981
      ],
      "op": "AND",
      "path": "0"
    },
    "4061": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4064": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4065": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4066": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4067": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "MUL",
      "path": "0"
    },
    "4068": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "OR",
      "path": "0"
    },
    "4069": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4070": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4071": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10938,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4072": {
      "op": "POP"
    },
    "4073": {
      "offset": [
        10938,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4074": {
      "offset": [
        10992,
        11252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100B"
    },
    "4077": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        10992,
        11252
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4078": {
      "offset": [
        11036,
        11066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4080": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11036,
        11066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4081": {
      "op": "DUP3"
    },
    "4082": {
      "op": "DUP2"
    },
    "4083": {
      "op": "MSTORE"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4086": {
      "op": "DUP1"
    },
    "4087": {
      "op": "MLOAD"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4090": {
      "op": "PUSH2",
      "value": "0x1BD1"
    },
    "4093": {
      "op": "DUP4"
    },
    "4094": {
      "op": "CODECOPY"
    },
    "4095": {
      "op": "DUP2"
    },
    "4096": {
      "op": "MLOAD"
    },
    "4097": {
      "op": "SWAP2"
    },
    "4098": {
      "op": "MSTORE"
    },
    "4099": {
      "offset": [
        11036,
        11066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4102": {
      "op": "ADD"
    },
    "4103": {
      "offset": [
        11036,
        11066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x603"
    },
    "4106": {
      "op": "JUMP"
    },
    "4107": {
      "offset": [
        10992,
        11252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4108": {
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4110": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4111": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4112": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4113": {
      "offset": [
        11169,
        11176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4115": {
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4117": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4118": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4120": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4121": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4122": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4123": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11181
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4124": {
      "offset": [
        11169,
        11189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4125": {
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4126": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4129": {
      "op": "DUP1"
    },
    "4130": {
      "op": "MLOAD"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4133": {
      "op": "PUSH2",
      "value": "0x1C11"
    },
    "4136": {
      "op": "DUP4"
    },
    "4137": {
      "op": "CODECOPY"
    },
    "4138": {
      "op": "DUP2"
    },
    "4139": {
      "op": "MLOAD"
    },
    "4140": {
      "op": "SWAP2"
    },
    "4141": {
      "op": "MSTORE"
    },
    "4142": {
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4143": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1041"
    },
    "4146": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4147": {
      "offset": [
        11169,
        11189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4149": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4150": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4151": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11189
      ],
      "op": "AND",
      "path": "0"
    },
    "4152": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11169,
        11189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4153": {
      "offset": [
        11177,
        11180
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4154": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11177,
        11180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4155": {
      "offset": [
        11196,
        11203
      ],
      "op": "DUP10",
      "path": "0"
    },
    "4156": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11196,
        11203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4157": {
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1703"
    },
    "4160": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        11158,
        11204
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4161": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4162": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4164": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4165": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4166": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4167": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "SUB",
      "path": "0"
    },
    "4168": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4169": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11158,
        11204
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4170": {
      "offset": [
        11218,
        11241
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1053"
    },
    "4173": {
      "offset": [
        11228,
        11231
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4174": {
      "offset": [
        11233,
        11240
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4175": {
      "offset": [
        11218,
        11227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F7"
    },
    "4178": {
      "jump": "i",
      "offset": [
        11218,
        11241
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4179": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        11218,
        11241
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4180": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6574,
        6592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4182": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6622,
        6632
      ],
      "op": "DUP12",
      "path": "0"
    },
    "4183": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4185": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4186": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4188": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "ADD",
      "path": "0"
    },
    "4189": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1066"
    },
    "4192": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4193": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4194": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA2"
    },
    "4197": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        6605,
        6633
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4198": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4199": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4201": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4202": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4204": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4205": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4206": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "SUB",
      "path": "0"
    },
    "4207": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "SUB",
      "path": "0"
    },
    "4208": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4209": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4210": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4211": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4213": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6605,
        6633
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4214": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6595,
        6634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4215": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6595,
        6634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4216": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6595,
        6634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4217": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6595,
        6634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4219": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6595,
        6634
      ],
      "op": "ADD",
      "path": "0"
    },
    "4220": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6595,
        6634
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4221": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6574,
        6634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4222": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6574,
        6634
      ],
      "op": "POP",
      "path": "0"
    },
    "4223": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6756,
        6769
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x4"
    },
    "4225": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6756,
        6769
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4226": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6742,
        6752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4227": {
      "branch": 61,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6742,
        6769
      ],
      "op": "SUB",
      "path": "0"
    },
    "4228": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6734,
        6839
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10FF"
    },
    "4231": {
      "branch": 61,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6734,
        6839
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4232": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6734,
        6839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4234": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6734,
        6839
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4241": {
      "op": "SHL"
    },
    "4242": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6734,
        6839
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4243": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6734,
        6839
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4246": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6734,
        6839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4248": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6734,
        6839
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4249": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6734,
        6839
      ],
      "op": "ADD",
      "path": "0"
    },
    "4250": {
      "op": "MSTORE"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4255": {
      "op": "DUP3"
    },
    "4256": {
      "op": "ADD"
    },
    "4257": {
      "op": "MSTORE"
    },
    "4258": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A2043616E6E6F7420757365207468652073616D65"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "MSTORE"
    },
    "4296": {
      "op": "PUSH32",
      "value": "0x206B6579636861696E20747769636520666F7220746869732066756E6374696F"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4331": {
      "op": "DUP3"
    },
    "4332": {
      "op": "ADD"
    },
    "4333": {
      "op": "MSTORE"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "4338": {
      "op": "SHL"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4341": {
      "op": "DUP3"
    },
    "4342": {
      "op": "ADD"
    },
    "4343": {
      "op": "MSTORE"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4346": {
      "op": "ADD"
    },
    "4347": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6734,
        6839
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "4350": {
      "op": "JUMP"
    },
    "4351": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6734,
        6839
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4352": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6982,
        7002
      ],
      "op": "DUP9",
      "path": "0",
      "statement": 28
    },
    "4353": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6957,
        6978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4355": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6957,
        6978
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4356": {
      "branch": 62,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6957,
        7002
      ],
      "op": "EQ",
      "path": "0"
    },
    "4357": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6949,
        7037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1150"
    },
    "4360": {
      "branch": 62,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6949,
        7037
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4361": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6949,
        7037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4363": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6949,
        7037
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4364": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4370": {
      "op": "SHL"
    },
    "4371": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6949,
        7037
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4372": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6949,
        7037
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4375": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6949,
        7037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4377": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6949,
        7037
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4378": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6949,
        7037
      ],
      "op": "ADD",
      "path": "0"
    },
    "4379": {
      "op": "MSTORE"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4384": {
      "op": "DUP3"
    },
    "4385": {
      "op": "ADD"
    },
    "4386": {
      "op": "MSTORE"
    },
    "4387": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A204B65797320646F206E6F74206D617463680000"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4422": {
      "op": "DUP3"
    },
    "4423": {
      "op": "ADD"
    },
    "4424": {
      "op": "MSTORE"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4427": {
      "op": "ADD"
    },
    "4428": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6949,
        7037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "4431": {
      "op": "JUMP"
    },
    "4432": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        6949,
        7037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4433": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7228,
        7241
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4435": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7228,
        7241
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4436": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7327,
        7337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4437": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7417,
        7437
      ],
      "op": "DUP11",
      "path": "0"
    },
    "4438": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7203,
        7225
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4440": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 29
    },
    "4441": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4442": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4443": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4444": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4446": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4448": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4449": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4450": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4451": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4453": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4454": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4455": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7559
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4456": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7567
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4457": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4459": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7567
      ],
      "op": "AND",
      "path": "0"
    },
    "4460": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4461": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4462": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7585
      ],
      "op": "GT",
      "path": "0"
    },
    "4463": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7585
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4464": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117B"
    },
    "4467": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4468": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117B"
    },
    "4471": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "4474": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        7536,
        7585
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4475": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7585
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4476": {
      "branch": 63,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7585
      ],
      "op": "EQ",
      "path": "0"
    },
    "4477": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7639
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4478": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7639
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4479": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A9"
    },
    "4482": {
      "branch": 63,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7639
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4483": {
      "op": "POP"
    },
    "4484": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7625,
        7639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4486": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7613
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4487": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7613
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4488": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7613
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4489": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4491": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4493": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7613
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4494": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7613
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4495": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7613
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4496": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4498": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7613
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4499": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7613
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4500": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7621
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4501": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7621
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4503": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7621
      ],
      "op": "AND",
      "path": "0"
    },
    "4504": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4505": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7639
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4506": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7639
      ],
      "op": "GT",
      "path": "0"
    },
    "4507": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7639
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4508": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A7"
    },
    "4511": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7639
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4512": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A7"
    },
    "4515": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "4518": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        7589,
        7639
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4519": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7639
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4520": {
      "branch": 64,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7589,
        7639
      ],
      "op": "EQ",
      "path": "0"
    },
    "4521": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7536,
        7639
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4522": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7528,
        7690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120C"
    },
    "4525": {
      "branch": 64,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7528,
        7690
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4526": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7528,
        7690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4528": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7528,
        7690
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4529": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4535": {
      "op": "SHL"
    },
    "4536": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7528,
        7690
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4537": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7528,
        7690
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4540": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7528,
        7690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4542": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7528,
        7690
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4543": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7528,
        7690
      ],
      "op": "ADD",
      "path": "0"
    },
    "4544": {
      "op": "MSTORE"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4549": {
      "op": "DUP3"
    },
    "4550": {
      "op": "ADD"
    },
    "4551": {
      "op": "MSTORE"
    },
    "4552": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A2050726F7669646564206B65797320617265206E"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4587": {
      "op": "DUP3"
    },
    "4588": {
      "op": "ADD"
    },
    "4589": {
      "op": "MSTORE"
    },
    "4590": {
      "op": "PUSH14",
      "value": "0x6F74206D6173746572206B657973"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4607": {
      "op": "SHL"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4610": {
      "op": "DUP3"
    },
    "4611": {
      "op": "ADD"
    },
    "4612": {
      "op": "MSTORE"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4615": {
      "op": "ADD"
    },
    "4616": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7528,
        7690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "4619": {
      "op": "JUMP"
    },
    "4620": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7528,
        7690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4621": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7799,
        7813
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 30
    },
    "4622": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7786,
        7795
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4623": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7786,
        7813
      ],
      "op": "EQ",
      "path": "0"
    },
    "4624": {
      "branch": 65,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7786,
        7813
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4625": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7786,
        7845
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4626": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7786,
        7845
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4627": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7786,
        7845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121C"
    },
    "4630": {
      "branch": 65,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7786,
        7845
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4631": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7786,
        7845
      ],
      "op": "POP",
      "path": "0"
    },
    "4632": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4633": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7817,
        7826
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4634": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7817,
        7845
      ],
      "op": "EQ",
      "path": "0"
    },
    "4635": {
      "branch": 66,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7817,
        7845
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4636": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7786,
        7845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4637": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7778,
        7899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1282"
    },
    "4640": {
      "branch": 66,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7778,
        7899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4641": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7778,
        7899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4643": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7778,
        7899
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4650": {
      "op": "SHL"
    },
    "4651": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7778,
        7899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4652": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7778,
        7899
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4655": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7778,
        7899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4657": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7778,
        7899
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4658": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7778,
        7899
      ],
      "op": "ADD",
      "path": "0"
    },
    "4659": {
      "op": "MSTORE"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4664": {
      "op": "DUP3"
    },
    "4665": {
      "op": "ADD"
    },
    "4666": {
      "op": "MSTORE"
    },
    "4667": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A204D6173746572206B6579732063616E6E6F7420"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4702": {
      "op": "DUP3"
    },
    "4703": {
      "op": "ADD"
    },
    "4704": {
      "op": "MSTORE"
    },
    "4705": {
      "op": "PUSH17",
      "value": "0x64656C657465207468656D73656C766573"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "4725": {
      "op": "SHL"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4728": {
      "op": "DUP3"
    },
    "4729": {
      "op": "ADD"
    },
    "4730": {
      "op": "MSTORE"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4733": {
      "op": "ADD"
    },
    "4734": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7778,
        7899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "4737": {
      "op": "JUMP"
    },
    "4738": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        7778,
        7899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4739": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8428
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x0"
    },
    "4741": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8428
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4742": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8428
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4743": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8428
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4744": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4746": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4748": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8428
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4749": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4751": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8428
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4752": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8428
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4753": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4755": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8432
      ],
      "op": "ADD",
      "path": "0"
    },
    "4756": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8432
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4757": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8437
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4758": {
      "branch": 67,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8410,
        8437
      ],
      "op": "SUB",
      "path": "0"
    },
    "4759": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8402,
        8477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12EE"
    },
    "4762": {
      "branch": 67,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8402,
        8477
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4763": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8402,
        8477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4765": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8402,
        8477
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4766": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4772": {
      "op": "SHL"
    },
    "4773": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8402,
        8477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4774": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8402,
        8477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4777": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8402,
        8477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4779": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8402,
        8477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4780": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8402,
        8477
      ],
      "op": "ADD",
      "path": "0"
    },
    "4781": {
      "op": "MSTORE"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4786": {
      "op": "DUP3"
    },
    "4787": {
      "op": "ADD"
    },
    "4788": {
      "op": "MSTORE"
    },
    "4789": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A204E6F2073756368206B6579202864656C657469"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4824": {
      "op": "DUP3"
    },
    "4825": {
      "op": "ADD"
    },
    "4826": {
      "op": "MSTORE"
    },
    "4827": {
      "op": "PUSH3",
      "value": "0x6F6E29"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4833": {
      "op": "SHL"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4836": {
      "op": "DUP3"
    },
    "4837": {
      "op": "ADD"
    },
    "4838": {
      "op": "MSTORE"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4841": {
      "op": "ADD"
    },
    "4842": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8402,
        8477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "4845": {
      "op": "JUMP"
    },
    "4846": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8402,
        8477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4847": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8496,
        8502
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4849": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8491,
        9606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4850": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8512,
        8516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4852": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8512,
        8523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4853": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8508,
        8523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4854": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8508,
        8523
      ],
      "op": "LT",
      "path": "0"
    },
    "4855": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8491,
        9606
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4856": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8491,
        9606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13DB"
    },
    "4859": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8491,
        9606
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4860": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8567,
        8576
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4861": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4863": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8557,
        8558
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4864": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4865": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4866": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4867": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "LT",
      "path": "0"
    },
    "4868": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x130F"
    },
    "4871": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4872": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x130F"
    },
    "4875": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "4878": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        8552,
        8559
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4879": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4880": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4881": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4883": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4884": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4886": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4888": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4889": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4890": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4892": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "MUL",
      "path": "0"
    },
    "4893": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8559
      ],
      "op": "ADD",
      "path": "0"
    },
    "4894": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4896": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8563
      ],
      "op": "ADD",
      "path": "0"
    },
    "4897": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8563
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4898": {
      "branch": 68,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8552,
        8576
      ],
      "op": "SUB",
      "path": "0"
    },
    "4899": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8548,
        9592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C9"
    },
    "4902": {
      "branch": 68,
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8548,
        9592
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4903": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8601,
        8624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4905": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4906": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4907": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4908": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4910": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4912": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4913": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4914": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4915": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4917": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4918": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4919": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4920": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8653
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4921": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8653
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4922": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4923": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4924": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8977,
        8992
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "4925": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4926": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4927": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "ADD",
      "path": "0"
    },
    "4928": {
      "op": "MSTORE"
    },
    "4929": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8994,
        9010
      ],
      "op": "DIFFICULTY",
      "path": "0"
    },
    "4930": {
      "op": "DUP2"
    },
    "4931": {
      "op": "DUP6"
    },
    "4932": {
      "op": "ADD"
    },
    "4933": {
      "op": "MSTORE"
    },
    "4934": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4935": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4936": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4937": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4938": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "SUB",
      "path": "0"
    },
    "4939": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4940": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "ADD",
      "path": "0"
    },
    "4941": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4942": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4945": {
      "op": "SWAP1"
    },
    "4946": {
      "op": "SWAP2"
    },
    "4947": {
      "op": "ADD"
    },
    "4948": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4949": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4950": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4951": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8960,
        9011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4952": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8950,
        9012
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4953": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8950,
        9012
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4954": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8950,
        9012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4955": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8950,
        9012
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4956": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8950,
        9012
      ],
      "op": "ADD",
      "path": "0"
    },
    "4957": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8950,
        9012
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4958": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9254
      ],
      "op": "SWAP6",
      "path": "0",
      "statement": 32
    },
    "4959": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9254
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4960": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4961": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4962": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9254
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4963": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9254
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4964": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4965": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4966": {
      "op": "PUSH4",
      "value": "0xDE1E7ED"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "4973": {
      "op": "SHL"
    },
    "4974": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9035,
        9070
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 33
    },
    "4975": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9035,
        9070
      ],
      "op": "XOR",
      "path": "0"
    },
    "4976": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4978": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9258
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4979": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9258
      ],
      "op": "ADD",
      "path": "0"
    },
    "4980": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9272
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4981": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4982": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9236,
        9272
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4985": {
      "op": "NOT"
    },
    "4986": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9294,
        9338
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 34
    },
    "4987": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9294,
        9338
      ],
      "op": "AND",
      "path": "0"
    },
    "4988": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9294,
        9338
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4989": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9294,
        9338
      ],
      "op": "OR",
      "path": "0"
    },
    "4990": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9294,
        9338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4991": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9294,
        9338
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4992": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9294,
        9338
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4993": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4995": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4996": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8653
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4997": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8653
      ],
      "op": "AND",
      "path": "0"
    },
    "4998": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8653
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4999": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9035,
        9070
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5000": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9035,
        9070
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5001": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 35,
      "value": "0x643BE3612916977C69D5ED1ABB75A50CCA49DF49BA2444D836E2A0CF65FE074"
    },
    "5034": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5035": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B9"
    },
    "5038": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5039": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8653
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5040": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8653
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5041": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "DUP10",
      "path": "0"
    },
    "5042": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8627,
        8645
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5043": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9035,
        9070
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5044": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9035,
        9070
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5045": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA0"
    },
    "5048": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        9416,
        9485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5049": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5050": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5052": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5053": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5054": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5055": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "SUB",
      "path": "0"
    },
    "5056": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5057": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9416,
        9485
      ],
      "op": "LOG1",
      "path": "0"
    },
    "5058": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9568,
        9573
      ],
      "op": "POP",
      "path": "0",
      "statement": 36
    },
    "5059": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9568,
        9573
      ],
      "op": "POP",
      "path": "0"
    },
    "5060": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9568,
        9573
      ],
      "op": "POP",
      "path": "0"
    },
    "5061": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9568,
        9573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13DB"
    },
    "5064": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9568,
        9573
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5065": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8548,
        9592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5066": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8525,
        8528
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 37
    },
    "5067": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8525,
        8528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D3"
    },
    "5070": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8525,
        8528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5071": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8525,
        8528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A44"
    },
    "5074": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "i",
      "offset": [
        8525,
        8528
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5075": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8525,
        8528
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5076": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8525,
        8528
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5077": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8525,
        8528
      ],
      "op": "POP",
      "path": "0"
    },
    "5078": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8525,
        8528
      ],
      "op": "POP",
      "path": "0"
    },
    "5079": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8491,
        9606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F1"
    },
    "5082": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8491,
        9606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5083": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        8491,
        9606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5084": {
      "op": "POP"
    },
    "5085": {
      "op": "POP"
    },
    "5086": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9709,
        9710
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x0"
    },
    "5088": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9677,
        9698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5090": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9677,
        9711
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5091": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9677,
        9711
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5092": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9677,
        9711
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5093": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9725,
        9738
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x4"
    },
    "5095": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "offset": [
        9725,
        9751
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5096": {
      "op": "POP"
    },
    "5097": {
      "op": "POP"
    },
    "5098": {
      "op": "POP"
    },
    "5099": {
      "op": "POP"
    },
    "5100": {
      "op": "POP"
    },
    "5101": {
      "op": "POP"
    },
    "5102": {
      "op": "POP"
    },
    "5103": {
      "op": "POP"
    },
    "5104": {
      "op": "POP"
    },
    "5105": {
      "op": "POP"
    },
    "5106": {
      "op": "POP"
    },
    "5107": {
      "op": "POP"
    },
    "5108": {
      "op": "POP"
    },
    "5109": {
      "op": "POP"
    },
    "5110": {
      "fn": "LamportBase2.deleteKeyStepTwo",
      "jump": "o",
      "offset": [
        6100,
        9762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5111": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11593,
        12273
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5112": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11686
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x0"
    },
    "5114": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11686
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5115": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11686
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5116": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11686
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5117": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11678
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5119": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5121": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11686
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5122": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5124": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11686
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5125": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11686
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5126": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5128": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11690
      ],
      "op": "ADD",
      "path": "0"
    },
    "5129": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11690
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5130": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5131": {
      "branch": 69,
      "fn": "LamportBase2.updateKey",
      "offset": [
        11671,
        11695
      ],
      "op": "SUB",
      "path": "0"
    },
    "5132": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1427"
    },
    "5135": {
      "branch": 69,
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5136": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5138": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5139": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5145": {
      "op": "SHL"
    },
    "5146": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5147": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5148": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5150": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "ADD",
      "path": "0"
    },
    "5151": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "5154": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5155": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19F7"
    },
    "5158": {
      "fn": "LamportBase2.updateKey",
      "jump": "i",
      "offset": [
        11663,
        11724
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5159": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11663,
        11724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5160": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5162": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5163": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5164": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5165": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5166": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "ADD",
      "path": "0"
    },
    "5167": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5168": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5169": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11797,
        11818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5171": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11840
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5172": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5173": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11840
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5174": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5176": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5178": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5179": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5180": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11840
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5181": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11840
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5182": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5183": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11840
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5184": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11848
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5185": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11797,
        11818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5186": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11797,
        11818
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5187": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5188": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5189": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5191": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11848
      ],
      "op": "AND",
      "path": "0"
    },
    "5192": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11825,
        11848
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5193": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5194": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "GT",
      "path": "0"
    },
    "5195": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5196": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1457"
    },
    "5199": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5200": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1457"
    },
    "5203": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "5206": {
      "fn": "LamportBase2.updateKey",
      "jump": "i",
      "offset": [
        11821,
        11857
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5207": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5208": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5209": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5210": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5212": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "ADD",
      "path": "0"
    },
    "5213": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11850,
        11856
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5214": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5215": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5216": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11821,
        11857
      ],
      "op": "POP",
      "path": "0"
    },
    "5217": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11797,
        11857
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5218": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11797,
        11857
      ],
      "op": "POP",
      "path": "0"
    },
    "5219": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11885,
        11895
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 41
    },
    "5220": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5222": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5224": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11875,
        11881
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5225": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5226": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5227": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5229": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "ADD",
      "path": "0"
    },
    "5230": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5231": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5232": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5233": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5235": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "ADD",
      "path": "0"
    },
    "5236": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5238": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11882
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5239": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5241": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5242": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "ADD",
      "path": "0"
    },
    "5243": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5244": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5245": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5247": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "ADD",
      "path": "0"
    },
    "5248": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5250": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5253": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "EXP",
      "path": "0"
    },
    "5254": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5255": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5256": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5257": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5259": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "MUL",
      "path": "0"
    },
    "5260": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "NOT",
      "path": "0"
    },
    "5261": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "AND",
      "path": "0"
    },
    "5262": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5263": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5264": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5266": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5267": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "GT",
      "path": "0"
    },
    "5268": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5269": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A0"
    },
    "5272": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5273": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A0"
    },
    "5276": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "5279": {
      "fn": "LamportBase2.updateKey",
      "jump": "i",
      "offset": [
        11867,
        11895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5280": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5281": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "MUL",
      "path": "0"
    },
    "5282": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "OR",
      "path": "0"
    },
    "5283": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5284": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5285": {
      "op": "POP"
    },
    "5286": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5288": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5289": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5290": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "ADD",
      "path": "0"
    },
    "5291": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5292": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5294": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5295": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5296": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "ADD",
      "path": "0"
    },
    "5297": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11867,
        11895
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5298": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11957,
        11972
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 42,
      "value": "0x0"
    },
    "5300": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11957,
        11972
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5301": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11957,
        11972
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5302": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11957,
        11972
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5303": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11957,
        11964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5305": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11957,
        11972
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5306": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11957,
        11972
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5307": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11957,
        11972
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5308": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11957,
        11972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5310": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11957,
        11972
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5311": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11957,
        11972
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5312": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11950,
        11972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5313": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11950,
        11972
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5316": {
      "op": "NOT"
    },
    "5317": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11950,
        11972
      ],
      "op": "AND",
      "path": "0"
    },
    "5318": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11950,
        11972
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5319": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11950,
        11972
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5320": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11950,
        11972
      ],
      "op": "ADD",
      "path": "0"
    },
    "5321": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11950,
        11972
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5322": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11950,
        11972
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5323": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11950,
        11972
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5324": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12039,
        12205
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5325": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12060,
        12064
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5327": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12060,
        12071
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5328": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12056,
        12071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5329": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12056,
        12071
      ],
      "op": "LT",
      "path": "0"
    },
    "5330": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12039,
        12205
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5331": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12039,
        12205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1576"
    },
    "5334": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12039,
        12205
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5335": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12111,
        12117
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5336": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5338": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12101,
        12102
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5339": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5340": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5341": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5342": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "LT",
      "path": "0"
    },
    "5343": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14EA"
    },
    "5346": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5347": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14EA"
    },
    "5350": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "5353": {
      "fn": "LamportBase2.updateKey",
      "jump": "i",
      "offset": [
        12096,
        12103
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5354": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5355": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5356": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5358": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5359": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5361": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5363": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5364": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5365": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5367": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "MUL",
      "path": "0"
    },
    "5368": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12103
      ],
      "op": "ADD",
      "path": "0"
    },
    "5369": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5371": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12107
      ],
      "op": "ADD",
      "path": "0"
    },
    "5372": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5373": {
      "branch": 70,
      "fn": "LamportBase2.updateKey",
      "offset": [
        12096,
        12117
      ],
      "op": "SUB",
      "path": "0"
    },
    "5374": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12092,
        12195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1564"
    },
    "5377": {
      "branch": 70,
      "fn": "LamportBase2.updateKey",
      "offset": [
        12092,
        12195
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5378": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12147,
        12157
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 43
    },
    "5379": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5381": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12142,
        12143
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5382": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5383": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5384": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5385": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "LT",
      "path": "0"
    },
    "5386": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1515"
    },
    "5389": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5390": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1515"
    },
    "5393": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2E"
    },
    "5396": {
      "fn": "LamportBase2.updateKey",
      "jump": "i",
      "offset": [
        12137,
        12144
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5397": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5398": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5399": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5401": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5402": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5404": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5406": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5407": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5408": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5410": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "MUL",
      "path": "0"
    },
    "5411": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12144
      ],
      "op": "ADD",
      "path": "0"
    },
    "5412": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5414": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5415": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "ADD",
      "path": "0"
    },
    "5416": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5417": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5418": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5420": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "ADD",
      "path": "0"
    },
    "5421": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5423": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5426": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "EXP",
      "path": "0"
    },
    "5427": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5428": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5429": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5430": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5432": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "MUL",
      "path": "0"
    },
    "5433": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "NOT",
      "path": "0"
    },
    "5434": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "AND",
      "path": "0"
    },
    "5435": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5436": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5437": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5439": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5440": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "GT",
      "path": "0"
    },
    "5441": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5442": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154D"
    },
    "5445": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5446": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154D"
    },
    "5449": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "5452": {
      "fn": "LamportBase2.updateKey",
      "jump": "i",
      "offset": [
        12137,
        12157
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5453": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5454": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "MUL",
      "path": "0"
    },
    "5455": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "OR",
      "path": "0"
    },
    "5456": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5457": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5458": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "POP",
      "path": "0"
    },
    "5459": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5461": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5462": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "ADD",
      "path": "0"
    },
    "5463": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5464": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5465": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5467": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "ADD",
      "path": "0"
    },
    "5468": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5469": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5470": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "POP",
      "path": "0"
    },
    "5471": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12137,
        12157
      ],
      "op": "POP",
      "path": "0"
    },
    "5472": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12175,
        12180
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0x1576"
    },
    "5475": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12175,
        12180
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5476": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12092,
        12195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5477": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12073,
        12076
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 45
    },
    "5478": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12073,
        12076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156E"
    },
    "5481": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12073,
        12076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5482": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12073,
        12076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A44"
    },
    "5485": {
      "fn": "LamportBase2.updateKey",
      "jump": "i",
      "offset": [
        12073,
        12076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5486": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12073,
        12076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5487": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12073,
        12076
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5488": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12073,
        12076
      ],
      "op": "POP",
      "path": "0"
    },
    "5489": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12073,
        12076
      ],
      "op": "POP",
      "path": "0"
    },
    "5490": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12039,
        12205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14CC"
    },
    "5493": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12039,
        12205
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5494": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12039,
        12205
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5495": {
      "op": "POP"
    },
    "5496": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12231,
        12249
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 46
    },
    "5497": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12231,
        12249
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5498": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5500": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5503": {
      "op": "DUP1"
    },
    "5504": {
      "op": "MLOAD"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5507": {
      "op": "PUSH2",
      "value": "0x1C11"
    },
    "5510": {
      "op": "DUP4"
    },
    "5511": {
      "op": "CODECOPY"
    },
    "5512": {
      "op": "DUP2"
    },
    "5513": {
      "op": "MLOAD"
    },
    "5514": {
      "op": "SWAP2"
    },
    "5515": {
      "op": "MSTORE"
    },
    "5516": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5517": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1599"
    },
    "5520": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5521": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12251,
        12257
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5522": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12251,
        12257
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5523": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12259,
        12265
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5524": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12259,
        12265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5525": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1703"
    },
    "5528": {
      "fn": "LamportBase2.updateKey",
      "jump": "i",
      "offset": [
        12220,
        12266
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5529": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5530": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5532": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5533": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5534": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5535": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "SUB",
      "path": "0"
    },
    "5536": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5537": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        12220,
        12266
      ],
      "op": "LOG1",
      "path": "0"
    },
    "5538": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11653,
        12273
      ],
      "op": "POP",
      "path": "0"
    },
    "5539": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11593,
        12273
      ],
      "op": "POP",
      "path": "0"
    },
    "5540": {
      "fn": "LamportBase2.updateKey",
      "offset": [
        11593,
        12273
      ],
      "op": "POP",
      "path": "0"
    },
    "5541": {
      "fn": "LamportBase2.updateKey",
      "jump": "o",
      "offset": [
        11593,
        12273
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5542": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3196,
        3411
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5543": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3263,
        3280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5545": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5547": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5548": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5549": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5551": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "ADD",
      "path": "0"
    },
    "5552": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5554": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5555": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5556": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3287,
        3294
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5557": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5559": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5560": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "GT",
      "path": "0"
    },
    "5561": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5562": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C5"
    },
    "5565": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5566": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C5"
    },
    "5569": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "5572": {
      "fn": "LamportBase2.addKey",
      "jump": "i",
      "offset": [
        3283,
        3303
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5573": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5574": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5575": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5576": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5578": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "ADD",
      "path": "0"
    },
    "5579": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5580": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5581": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3283,
        3303
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5582": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3317
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x1"
    },
    "5584": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5585": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5586": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5587": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5588": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "ADD",
      "path": "0"
    },
    "5589": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5590": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5593": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5594": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5595": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5596": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5597": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5598": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5600": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5601": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5602": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "MUL",
      "path": "0"
    },
    "5603": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "5636": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "ADD",
      "path": "0"
    },
    "5637": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5638": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5639": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3263,
        3303
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5640": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3263,
        3303
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "5641": {
      "op": "POP"
    },
    "5642": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3263,
        3303
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5643": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3263,
        3303
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5644": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5645": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5646": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5647": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5648": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5649": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5652": {
      "op": "NOT"
    },
    "5653": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5654": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5655": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "AND",
      "path": "0"
    },
    "5656": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5657": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5658": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5659": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5660": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5661": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "GT",
      "path": "0"
    },
    "5662": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5663": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162A"
    },
    "5666": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5667": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162A"
    },
    "5670": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "5673": {
      "fn": "LamportBase2.addKey",
      "jump": "i",
      "offset": [
        3313,
        3330
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5674": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5675": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "MUL",
      "path": "0"
    },
    "5676": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "OR",
      "path": "0"
    },
    "5677": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5678": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5679": {
      "op": "POP"
    },
    "5680": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5682": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5683": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5684": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "ADD",
      "path": "0"
    },
    "5685": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5686": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5688": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5689": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5690": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "ADD",
      "path": "0"
    },
    "5691": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5692": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 48,
      "value": "0x0"
    },
    "5694": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5695": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5696": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5697": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5699": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5700": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5701": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5702": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5703": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5705": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5706": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5707": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5708": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5709": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5710": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5711": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3358,
        3364
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5712": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3358,
        3364
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5713": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5714": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5715": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5716": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5717": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5718": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3355
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5721": {
      "op": "NOT"
    },
    "5722": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5723": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5724": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "AND",
      "path": "0"
    },
    "5725": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5726": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3313,
        3330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5727": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5728": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5729": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5730": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "GT",
      "path": "0"
    },
    "5731": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5732": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166F"
    },
    "5735": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5736": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166F"
    },
    "5739": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CB"
    },
    "5742": {
      "fn": "LamportBase2.addKey",
      "jump": "i",
      "offset": [
        3340,
        3364
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5743": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5744": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "MUL",
      "path": "0"
    },
    "5745": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "OR",
      "path": "0"
    },
    "5746": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5747": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5748": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "POP",
      "path": "0"
    },
    "5749": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5751": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5752": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "ADD",
      "path": "0"
    },
    "5753": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5754": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5755": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5757": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "ADD",
      "path": "0"
    },
    "5758": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5759": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5760": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "POP",
      "path": "0"
    },
    "5761": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3340,
        3364
      ],
      "op": "POP",
      "path": "0"
    },
    "5762": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3379,
        3404
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 49,
      "value": "0x2172C7B01A6DE957D29FD6166A23025D181BF56538AD606A526AB2D62603F3FC"
    },
    "5795": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3388,
        3395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5796": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3397,
        3403
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5797": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3379,
        3404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5799": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3379,
        3404
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5800": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3379,
        3404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1599"
    },
    "5803": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3379,
        3404
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5804": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3379,
        3404
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5805": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3379,
        3404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5806": {
      "fn": "LamportBase2.addKey",
      "offset": [
        3379,
        3404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1722"
    },
    "5809": {
      "fn": "LamportBase2.addKey",
      "jump": "i",
      "offset": [
        3379,
        3404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5810": {
      "op": "JUMPDEST"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5815": {
      "op": "DUP3"
    },
    "5816": {
      "op": "DUP5"
    },
    "5817": {
      "op": "SUB"
    },
    "5818": {
      "op": "SLT"
    },
    "5819": {
      "op": "ISZERO"
    },
    "5820": {
      "op": "PUSH2",
      "value": "0x16C4"
    },
    "5823": {
      "op": "JUMPI"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5826": {
      "op": "DUP1"
    },
    "5827": {
      "op": "REVERT"
    },
    "5828": {
      "op": "JUMPDEST"
    },
    "5829": {
      "op": "POP"
    },
    "5830": {
      "op": "CALLDATALOAD"
    },
    "5831": {
      "op": "SWAP2"
    },
    "5832": {
      "op": "SWAP1"
    },
    "5833": {
      "op": "POP"
    },
    "5834": {
      "jump": "o",
      "op": "JUMP"
    },
    "5835": {
      "op": "JUMPDEST"
    },
    "5836": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5843": {
      "op": "SHL"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5846": {
      "op": "MSTORE"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5851": {
      "op": "MSTORE"
    },
    "5852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5856": {
      "op": "REVERT"
    },
    "5857": {
      "op": "JUMPDEST"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5860": {
      "op": "DUP2"
    },
    "5861": {
      "op": "LT"
    },
    "5862": {
      "op": "PUSH2",
      "value": "0x16FF"
    },
    "5865": {
      "op": "JUMPI"
    },
    "5866": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5873": {
      "op": "SHL"
    },
    "5874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5876": {
      "op": "MSTORE"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5881": {
      "op": "MSTORE"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5886": {
      "op": "REVERT"
    },
    "5887": {
      "op": "JUMPDEST"
    },
    "5888": {
      "op": "SWAP1"
    },
    "5889": {
      "op": "MSTORE"
    },
    "5890": {
      "jump": "o",
      "op": "JUMP"
    },
    "5891": {
      "op": "JUMPDEST"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5894": {
      "op": "DUP2"
    },
    "5895": {
      "op": "ADD"
    },
    "5896": {
      "op": "PUSH2",
      "value": "0x1711"
    },
    "5899": {
      "op": "DUP3"
    },
    "5900": {
      "op": "DUP7"
    },
    "5901": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "5904": {
      "jump": "i",
      "op": "JUMP"
    },
    "5905": {
      "op": "JUMPDEST"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5908": {
      "op": "DUP3"
    },
    "5909": {
      "op": "ADD"
    },
    "5910": {
      "op": "SWAP4"
    },
    "5911": {
      "op": "SWAP1"
    },
    "5912": {
      "op": "SWAP4"
    },
    "5913": {
      "op": "MSTORE"
    },
    "5914": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5916": {
      "op": "ADD"
    },
    "5917": {
      "op": "MSTORE"
    },
    "5918": {
      "op": "SWAP2"
    },
    "5919": {
      "op": "SWAP1"
    },
    "5920": {
      "op": "POP"
    },
    "5921": {
      "jump": "o",
      "op": "JUMP"
    },
    "5922": {
      "op": "JUMPDEST"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5925": {
      "op": "DUP2"
    },
    "5926": {
      "op": "ADD"
    },
    "5927": {
      "op": "PUSH2",
      "value": "0x1730"
    },
    "5930": {
      "op": "DUP3"
    },
    "5931": {
      "op": "DUP6"
    },
    "5932": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "5935": {
      "jump": "i",
      "op": "JUMP"
    },
    "5936": {
      "op": "JUMPDEST"
    },
    "5937": {
      "op": "DUP3"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5940": {
      "op": "DUP4"
    },
    "5941": {
      "op": "ADD"
    },
    "5942": {
      "op": "MSTORE"
    },
    "5943": {
      "op": "SWAP4"
    },
    "5944": {
      "op": "SWAP3"
    },
    "5945": {
      "op": "POP"
    },
    "5946": {
      "op": "POP"
    },
    "5947": {
      "op": "POP"
    },
    "5948": {
      "jump": "o",
      "op": "JUMP"
    },
    "5949": {
      "op": "JUMPDEST"
    },
    "5950": {
      "op": "DUP1"
    },
    "5951": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "5954": {
      "op": "DUP2"
    },
    "5955": {
      "op": "ADD"
    },
    "5956": {
      "op": "DUP4"
    },
    "5957": {
      "op": "LT"
    },
    "5958": {
      "op": "ISZERO"
    },
    "5959": {
      "op": "PUSH2",
      "value": "0x174F"
    },
    "5962": {
      "op": "JUMPI"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5965": {
      "op": "DUP1"
    },
    "5966": {
      "op": "REVERT"
    },
    "5967": {
      "op": "JUMPDEST"
    },
    "5968": {
      "op": "SWAP3"
    },
    "5969": {
      "op": "SWAP2"
    },
    "5970": {
      "op": "POP"
    },
    "5971": {
      "op": "POP"
    },
    "5972": {
      "jump": "o",
      "op": "JUMP"
    },
    "5973": {
      "op": "JUMPDEST"
    },
    "5974": {
      "op": "DUP1"
    },
    "5975": {
      "op": "PUSH2",
      "value": "0x2000"
    },
    "5978": {
      "op": "DUP2"
    },
    "5979": {
      "op": "ADD"
    },
    "5980": {
      "op": "DUP4"
    },
    "5981": {
      "op": "LT"
    },
    "5982": {
      "op": "ISZERO"
    },
    "5983": {
      "op": "PUSH2",
      "value": "0x174F"
    },
    "5986": {
      "op": "JUMPI"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5989": {
      "op": "DUP1"
    },
    "5990": {
      "op": "REVERT"
    },
    "5991": {
      "op": "JUMPDEST"
    },
    "5992": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5999": {
      "op": "SHL"
    },
    "6000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6002": {
      "op": "MSTORE"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6005": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6007": {
      "op": "MSTORE"
    },
    "6008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6012": {
      "op": "REVERT"
    },
    "6013": {
      "op": "JUMPDEST"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6016": {
      "op": "DUP1"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6019": {
      "op": "DUP1"
    },
    "6020": {
      "op": "PUSH2",
      "value": "0x4060"
    },
    "6023": {
      "op": "DUP6"
    },
    "6024": {
      "op": "DUP8"
    },
    "6025": {
      "op": "SUB"
    },
    "6026": {
      "op": "SLT"
    },
    "6027": {
      "op": "ISZERO"
    },
    "6028": {
      "op": "PUSH2",
      "value": "0x1794"
    },
    "6031": {
      "op": "JUMPI"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6034": {
      "op": "DUP1"
    },
    "6035": {
      "op": "REVERT"
    },
    "6036": {
      "op": "JUMPDEST"
    },
    "6037": {
      "op": "PUSH2",
      "value": "0x179E"
    },
    "6040": {
      "op": "DUP7"
    },
    "6041": {
      "op": "DUP7"
    },
    "6042": {
      "op": "PUSH2",
      "value": "0x173D"
    },
    "6045": {
      "jump": "i",
      "op": "JUMP"
    },
    "6046": {
      "op": "JUMPDEST"
    },
    "6047": {
      "op": "SWAP4"
    },
    "6048": {
      "op": "POP"
    },
    "6049": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "6052": {
      "op": "DUP6"
    },
    "6053": {
      "op": "ADD"
    },
    "6054": {
      "op": "CALLDATALOAD"
    },
    "6055": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6064": {
      "op": "DUP1"
    },
    "6065": {
      "op": "DUP3"
    },
    "6066": {
      "op": "GT"
    },
    "6067": {
      "op": "ISZERO"
    },
    "6068": {
      "op": "PUSH2",
      "value": "0x17BC"
    },
    "6071": {
      "op": "JUMPI"
    },
    "6072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6074": {
      "op": "DUP1"
    },
    "6075": {
      "op": "REVERT"
    },
    "6076": {
      "op": "JUMPDEST"
    },
    "6077": {
      "op": "PUSH2",
      "value": "0x17C8"
    },
    "6080": {
      "op": "DUP9"
    },
    "6081": {
      "op": "DUP4"
    },
    "6082": {
      "op": "DUP10"
    },
    "6083": {
      "op": "ADD"
    },
    "6084": {
      "op": "PUSH2",
      "value": "0x1755"
    },
    "6087": {
      "jump": "i",
      "op": "JUMP"
    },
    "6088": {
      "op": "JUMPDEST"
    },
    "6089": {
      "op": "SWAP5"
    },
    "6090": {
      "op": "POP"
    },
    "6091": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "6094": {
      "op": "DUP8"
    },
    "6095": {
      "op": "ADD"
    },
    "6096": {
      "op": "CALLDATALOAD"
    },
    "6097": {
      "op": "SWAP4"
    },
    "6098": {
      "op": "POP"
    },
    "6099": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "6102": {
      "op": "DUP8"
    },
    "6103": {
      "op": "ADD"
    },
    "6104": {
      "op": "CALLDATALOAD"
    },
    "6105": {
      "op": "SWAP2"
    },
    "6106": {
      "op": "POP"
    },
    "6107": {
      "op": "DUP1"
    },
    "6108": {
      "op": "DUP3"
    },
    "6109": {
      "op": "GT"
    },
    "6110": {
      "op": "ISZERO"
    },
    "6111": {
      "op": "PUSH2",
      "value": "0x17E7"
    },
    "6114": {
      "op": "JUMPI"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6117": {
      "op": "DUP1"
    },
    "6118": {
      "op": "REVERT"
    },
    "6119": {
      "op": "JUMPDEST"
    },
    "6120": {
      "op": "DUP2"
    },
    "6121": {
      "op": "DUP8"
    },
    "6122": {
      "op": "ADD"
    },
    "6123": {
      "op": "SWAP2"
    },
    "6124": {
      "op": "POP"
    },
    "6125": {
      "op": "DUP8"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6128": {
      "op": "DUP4"
    },
    "6129": {
      "op": "ADD"
    },
    "6130": {
      "op": "SLT"
    },
    "6131": {
      "op": "PUSH2",
      "value": "0x17FB"
    },
    "6134": {
      "op": "JUMPI"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6137": {
      "op": "DUP1"
    },
    "6138": {
      "op": "REVERT"
    },
    "6139": {
      "op": "JUMPDEST"
    },
    "6140": {
      "op": "DUP2"
    },
    "6141": {
      "op": "CALLDATALOAD"
    },
    "6142": {
      "op": "DUP2"
    },
    "6143": {
      "op": "DUP2"
    },
    "6144": {
      "op": "GT"
    },
    "6145": {
      "op": "ISZERO"
    },
    "6146": {
      "op": "PUSH2",
      "value": "0x180D"
    },
    "6149": {
      "op": "JUMPI"
    },
    "6150": {
      "op": "PUSH2",
      "value": "0x180D"
    },
    "6153": {
      "op": "PUSH2",
      "value": "0x1767"
    },
    "6156": {
      "jump": "i",
      "op": "JUMP"
    },
    "6157": {
      "op": "JUMPDEST"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6160": {
      "op": "MLOAD"
    },
    "6161": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6163": {
      "op": "DUP3"
    },
    "6164": {
      "op": "ADD"
    },
    "6165": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6167": {
      "op": "NOT"
    },
    "6168": {
      "op": "SWAP1"
    },
    "6169": {
      "op": "DUP2"
    },
    "6170": {
      "op": "AND"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6173": {
      "op": "ADD"
    },
    "6174": {
      "op": "AND"
    },
    "6175": {
      "op": "DUP2"
    },
    "6176": {
      "op": "ADD"
    },
    "6177": {
      "op": "SWAP1"
    },
    "6178": {
      "op": "DUP4"
    },
    "6179": {
      "op": "DUP3"
    },
    "6180": {
      "op": "GT"
    },
    "6181": {
      "op": "DUP2"
    },
    "6182": {
      "op": "DUP4"
    },
    "6183": {
      "op": "LT"
    },
    "6184": {
      "op": "OR"
    },
    "6185": {
      "op": "ISZERO"
    },
    "6186": {
      "op": "PUSH2",
      "value": "0x1835"
    },
    "6189": {
      "op": "JUMPI"
    },
    "6190": {
      "op": "PUSH2",
      "value": "0x1835"
    },
    "6193": {
      "op": "PUSH2",
      "value": "0x1767"
    },
    "6196": {
      "jump": "i",
      "op": "JUMP"
    },
    "6197": {
      "op": "JUMPDEST"
    },
    "6198": {
      "op": "DUP2"
    },
    "6199": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6201": {
      "op": "MSTORE"
    },
    "6202": {
      "op": "DUP3"
    },
    "6203": {
      "op": "DUP2"
    },
    "6204": {
      "op": "MSTORE"
    },
    "6205": {
      "op": "DUP11"
    },
    "6206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6208": {
      "op": "DUP5"
    },
    "6209": {
      "op": "DUP8"
    },
    "6210": {
      "op": "ADD"
    },
    "6211": {
      "op": "ADD"
    },
    "6212": {
      "op": "GT"
    },
    "6213": {
      "op": "ISZERO"
    },
    "6214": {
      "op": "PUSH2",
      "value": "0x184E"
    },
    "6217": {
      "op": "JUMPI"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6220": {
      "op": "DUP1"
    },
    "6221": {
      "op": "REVERT"
    },
    "6222": {
      "op": "JUMPDEST"
    },
    "6223": {
      "op": "DUP3"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6226": {
      "op": "DUP7"
    },
    "6227": {
      "op": "ADD"
    },
    "6228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6230": {
      "op": "DUP4"
    },
    "6231": {
      "op": "ADD"
    },
    "6232": {
      "op": "CALLDATACOPY"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6237": {
      "op": "DUP5"
    },
    "6238": {
      "op": "DUP4"
    },
    "6239": {
      "op": "ADD"
    },
    "6240": {
      "op": "ADD"
    },
    "6241": {
      "op": "MSTORE"
    },
    "6242": {
      "op": "DUP1"
    },
    "6243": {
      "op": "SWAP6"
    },
    "6244": {
      "op": "POP"
    },
    "6245": {
      "op": "POP"
    },
    "6246": {
      "op": "POP"
    },
    "6247": {
      "op": "POP"
    },
    "6248": {
      "op": "POP"
    },
    "6249": {
      "op": "POP"
    },
    "6250": {
      "op": "SWAP3"
    },
    "6251": {
      "op": "SWAP6"
    },
    "6252": {
      "op": "SWAP2"
    },
    "6253": {
      "op": "SWAP5"
    },
    "6254": {
      "op": "POP"
    },
    "6255": {
      "op": "SWAP3"
    },
    "6256": {
      "op": "POP"
    },
    "6257": {
      "jump": "o",
      "op": "JUMP"
    },
    "6258": {
      "op": "JUMPDEST"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6261": {
      "op": "DUP1"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6264": {
      "op": "DUP1"
    },
    "6265": {
      "op": "PUSH2",
      "value": "0x4060"
    },
    "6268": {
      "op": "DUP6"
    },
    "6269": {
      "op": "DUP8"
    },
    "6270": {
      "op": "SUB"
    },
    "6271": {
      "op": "SLT"
    },
    "6272": {
      "op": "ISZERO"
    },
    "6273": {
      "op": "PUSH2",
      "value": "0x1889"
    },
    "6276": {
      "op": "JUMPI"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6279": {
      "op": "DUP1"
    },
    "6280": {
      "op": "REVERT"
    },
    "6281": {
      "op": "JUMPDEST"
    },
    "6282": {
      "op": "PUSH2",
      "value": "0x1893"
    },
    "6285": {
      "op": "DUP7"
    },
    "6286": {
      "op": "DUP7"
    },
    "6287": {
      "op": "PUSH2",
      "value": "0x173D"
    },
    "6290": {
      "jump": "i",
      "op": "JUMP"
    },
    "6291": {
      "op": "JUMPDEST"
    },
    "6292": {
      "op": "SWAP4"
    },
    "6293": {
      "op": "POP"
    },
    "6294": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "6297": {
      "op": "DUP6"
    },
    "6298": {
      "op": "ADD"
    },
    "6299": {
      "op": "CALLDATALOAD"
    },
    "6300": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6309": {
      "op": "DUP2"
    },
    "6310": {
      "op": "GT"
    },
    "6311": {
      "op": "ISZERO"
    },
    "6312": {
      "op": "PUSH2",
      "value": "0x18B0"
    },
    "6315": {
      "op": "JUMPI"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6318": {
      "op": "DUP1"
    },
    "6319": {
      "op": "REVERT"
    },
    "6320": {
      "op": "JUMPDEST"
    },
    "6321": {
      "op": "PUSH2",
      "value": "0x18BC"
    },
    "6324": {
      "op": "DUP8"
    },
    "6325": {
      "op": "DUP3"
    },
    "6326": {
      "op": "DUP9"
    },
    "6327": {
      "op": "ADD"
    },
    "6328": {
      "op": "PUSH2",
      "value": "0x1755"
    },
    "6331": {
      "jump": "i",
      "op": "JUMP"
    },
    "6332": {
      "op": "JUMPDEST"
    },
    "6333": {
      "op": "SWAP5"
    },
    "6334": {
      "op": "SWAP8"
    },
    "6335": {
      "op": "SWAP5"
    },
    "6336": {
      "op": "SWAP7"
    },
    "6337": {
      "op": "POP"
    },
    "6338": {
      "op": "POP"
    },
    "6339": {
      "op": "POP"
    },
    "6340": {
      "op": "POP"
    },
    "6341": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "6344": {
      "op": "DUP4"
    },
    "6345": {
      "op": "ADD"
    },
    "6346": {
      "op": "CALLDATALOAD"
    },
    "6347": {
      "op": "SWAP3"
    },
    "6348": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "6351": {
      "op": "ADD"
    },
    "6352": {
      "op": "CALLDATALOAD"
    },
    "6353": {
      "op": "SWAP2"
    },
    "6354": {
      "op": "SWAP1"
    },
    "6355": {
      "op": "POP"
    },
    "6356": {
      "jump": "o",
      "op": "JUMP"
    },
    "6357": {
      "op": "JUMPDEST"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6360": {
      "op": "DUP1"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6363": {
      "op": "DUP1"
    },
    "6364": {
      "op": "PUSH2",
      "value": "0x4060"
    },
    "6367": {
      "op": "DUP6"
    },
    "6368": {
      "op": "DUP8"
    },
    "6369": {
      "op": "SUB"
    },
    "6370": {
      "op": "SLT"
    },
    "6371": {
      "op": "ISZERO"
    },
    "6372": {
      "op": "PUSH2",
      "value": "0x18EC"
    },
    "6375": {
      "op": "JUMPI"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6378": {
      "op": "DUP1"
    },
    "6379": {
      "op": "REVERT"
    },
    "6380": {
      "op": "JUMPDEST"
    },
    "6381": {
      "op": "PUSH2",
      "value": "0x18F6"
    },
    "6384": {
      "op": "DUP7"
    },
    "6385": {
      "op": "DUP7"
    },
    "6386": {
      "op": "PUSH2",
      "value": "0x173D"
    },
    "6389": {
      "jump": "i",
      "op": "JUMP"
    },
    "6390": {
      "op": "JUMPDEST"
    },
    "6391": {
      "op": "SWAP4"
    },
    "6392": {
      "op": "POP"
    },
    "6393": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "6396": {
      "op": "DUP6"
    },
    "6397": {
      "op": "ADD"
    },
    "6398": {
      "op": "CALLDATALOAD"
    },
    "6399": {
      "op": "SWAP3"
    },
    "6400": {
      "op": "POP"
    },
    "6401": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "6404": {
      "op": "DUP6"
    },
    "6405": {
      "op": "ADD"
    },
    "6406": {
      "op": "CALLDATALOAD"
    },
    "6407": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6416": {
      "op": "DUP2"
    },
    "6417": {
      "op": "GT"
    },
    "6418": {
      "op": "ISZERO"
    },
    "6419": {
      "op": "PUSH2",
      "value": "0x191B"
    },
    "6422": {
      "op": "JUMPI"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6425": {
      "op": "DUP1"
    },
    "6426": {
      "op": "REVERT"
    },
    "6427": {
      "op": "JUMPDEST"
    },
    "6428": {
      "op": "PUSH2",
      "value": "0x1927"
    },
    "6431": {
      "op": "DUP8"
    },
    "6432": {
      "op": "DUP3"
    },
    "6433": {
      "op": "DUP9"
    },
    "6434": {
      "op": "ADD"
    },
    "6435": {
      "op": "PUSH2",
      "value": "0x1755"
    },
    "6438": {
      "jump": "i",
      "op": "JUMP"
    },
    "6439": {
      "op": "JUMPDEST"
    },
    "6440": {
      "op": "SWAP5"
    },
    "6441": {
      "op": "SWAP8"
    },
    "6442": {
      "op": "SWAP4"
    },
    "6443": {
      "op": "SWAP7"
    },
    "6444": {
      "op": "POP"
    },
    "6445": {
      "op": "SWAP4"
    },
    "6446": {
      "op": "SWAP5"
    },
    "6447": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "6450": {
      "op": "ADD"
    },
    "6451": {
      "op": "CALLDATALOAD"
    },
    "6452": {
      "op": "SWAP4"
    },
    "6453": {
      "op": "POP"
    },
    "6454": {
      "op": "POP"
    },
    "6455": {
      "op": "POP"
    },
    "6456": {
      "jump": "o",
      "op": "JUMP"
    },
    "6457": {
      "op": "JUMPDEST"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6460": {
      "op": "DUP1"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6463": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "6466": {
      "op": "DUP5"
    },
    "6467": {
      "op": "DUP7"
    },
    "6468": {
      "op": "SUB"
    },
    "6469": {
      "op": "SLT"
    },
    "6470": {
      "op": "ISZERO"
    },
    "6471": {
      "op": "PUSH2",
      "value": "0x194F"
    },
    "6474": {
      "op": "JUMPI"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6477": {
      "op": "DUP1"
    },
    "6478": {
      "op": "REVERT"
    },
    "6479": {
      "op": "JUMPDEST"
    },
    "6480": {
      "op": "DUP4"
    },
    "6481": {
      "op": "CALLDATALOAD"
    },
    "6482": {
      "op": "SWAP3"
    },
    "6483": {
      "op": "POP"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6486": {
      "op": "DUP5"
    },
    "6487": {
      "op": "ADD"
    },
    "6488": {
      "op": "CALLDATALOAD"
    },
    "6489": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6498": {
      "op": "DUP2"
    },
    "6499": {
      "op": "GT"
    },
    "6500": {
      "op": "ISZERO"
    },
    "6501": {
      "op": "PUSH2",
      "value": "0x196D"
    },
    "6504": {
      "op": "JUMPI"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6507": {
      "op": "DUP1"
    },
    "6508": {
      "op": "REVERT"
    },
    "6509": {
      "op": "JUMPDEST"
    },
    "6510": {
      "op": "PUSH2",
      "value": "0x1979"
    },
    "6513": {
      "op": "DUP7"
    },
    "6514": {
      "op": "DUP3"
    },
    "6515": {
      "op": "DUP8"
    },
    "6516": {
      "op": "ADD"
    },
    "6517": {
      "op": "PUSH2",
      "value": "0x1755"
    },
    "6520": {
      "jump": "i",
      "op": "JUMP"
    },
    "6521": {
      "op": "JUMPDEST"
    },
    "6522": {
      "op": "SWAP3"
    },
    "6523": {
      "op": "POP"
    },
    "6524": {
      "op": "POP"
    },
    "6525": {
      "op": "PUSH2",
      "value": "0x1989"
    },
    "6528": {
      "op": "DUP6"
    },
    "6529": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6531": {
      "op": "DUP7"
    },
    "6532": {
      "op": "ADD"
    },
    "6533": {
      "op": "PUSH2",
      "value": "0x173D"
    },
    "6536": {
      "jump": "i",
      "op": "JUMP"
    },
    "6537": {
      "op": "JUMPDEST"
    },
    "6538": {
      "op": "SWAP1"
    },
    "6539": {
      "op": "POP"
    },
    "6540": {
      "op": "SWAP3"
    },
    "6541": {
      "op": "POP"
    },
    "6542": {
      "op": "SWAP3"
    },
    "6543": {
      "op": "POP"
    },
    "6544": {
      "op": "SWAP3"
    },
    "6545": {
      "jump": "o",
      "op": "JUMP"
    },
    "6546": {
      "op": "JUMPDEST"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6551": {
      "op": "DUP3"
    },
    "6552": {
      "op": "DUP5"
    },
    "6553": {
      "op": "SUB"
    },
    "6554": {
      "op": "SLT"
    },
    "6555": {
      "op": "ISZERO"
    },
    "6556": {
      "op": "PUSH2",
      "value": "0x19A4"
    },
    "6559": {
      "op": "JUMPI"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6562": {
      "op": "DUP1"
    },
    "6563": {
      "op": "REVERT"
    },
    "6564": {
      "op": "JUMPDEST"
    },
    "6565": {
      "op": "DUP2"
    },
    "6566": {
      "op": "CALLDATALOAD"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6569": {
      "op": "DUP2"
    },
    "6570": {
      "op": "LT"
    },
    "6571": {
      "op": "PUSH2",
      "value": "0xB63"
    },
    "6574": {
      "op": "JUMPI"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6577": {
      "op": "DUP1"
    },
    "6578": {
      "op": "REVERT"
    },
    "6579": {
      "op": "JUMPDEST"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6582": {
      "op": "DUP1"
    },
    "6583": {
      "op": "DUP3"
    },
    "6584": {
      "op": "MSTORE"
    },
    "6585": {
      "op": "DUP3"
    },
    "6586": {
      "op": "MLOAD"
    },
    "6587": {
      "op": "DUP3"
    },
    "6588": {
      "op": "DUP3"
    },
    "6589": {
      "op": "ADD"
    },
    "6590": {
      "op": "DUP2"
    },
    "6591": {
      "op": "SWAP1"
    },
    "6592": {
      "op": "MSTORE"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6595": {
      "op": "SWAP2"
    },
    "6596": {
      "op": "SWAP1"
    },
    "6597": {
      "op": "DUP5"
    },
    "6598": {
      "op": "DUP3"
    },
    "6599": {
      "op": "ADD"
    },
    "6600": {
      "op": "SWAP1"
    },
    "6601": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6603": {
      "op": "DUP6"
    },
    "6604": {
      "op": "ADD"
    },
    "6605": {
      "op": "SWAP1"
    },
    "6606": {
      "op": "DUP5"
    },
    "6607": {
      "op": "JUMPDEST"
    },
    "6608": {
      "op": "DUP2"
    },
    "6609": {
      "op": "DUP2"
    },
    "6610": {
      "op": "LT"
    },
    "6611": {
      "op": "ISZERO"
    },
    "6612": {
      "op": "PUSH2",
      "value": "0x19EB"
    },
    "6615": {
      "op": "JUMPI"
    },
    "6616": {
      "op": "DUP4"
    },
    "6617": {
      "op": "MLOAD"
    },
    "6618": {
      "op": "DUP4"
    },
    "6619": {
      "op": "MSTORE"
    },
    "6620": {
      "op": "SWAP3"
    },
    "6621": {
      "op": "DUP5"
    },
    "6622": {
      "op": "ADD"
    },
    "6623": {
      "op": "SWAP3"
    },
    "6624": {
      "op": "SWAP2"
    },
    "6625": {
      "op": "DUP5"
    },
    "6626": {
      "op": "ADD"
    },
    "6627": {
      "op": "SWAP2"
    },
    "6628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6630": {
      "op": "ADD"
    },
    "6631": {
      "op": "PUSH2",
      "value": "0x19CF"
    },
    "6634": {
      "op": "JUMP"
    },
    "6635": {
      "op": "JUMPDEST"
    },
    "6636": {
      "op": "POP"
    },
    "6637": {
      "op": "SWAP1"
    },
    "6638": {
      "op": "SWAP7"
    },
    "6639": {
      "op": "SWAP6"
    },
    "6640": {
      "op": "POP"
    },
    "6641": {
      "op": "POP"
    },
    "6642": {
      "op": "POP"
    },
    "6643": {
      "op": "POP"
    },
    "6644": {
      "op": "POP"
    },
    "6645": {
      "op": "POP"
    },
    "6646": {
      "jump": "o",
      "op": "JUMP"
    },
    "6647": {
      "op": "JUMPDEST"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6650": {
      "op": "DUP1"
    },
    "6651": {
      "op": "DUP3"
    },
    "6652": {
      "op": "MSTORE"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6655": {
      "op": "SWAP1"
    },
    "6656": {
      "op": "DUP3"
    },
    "6657": {
      "op": "ADD"
    },
    "6658": {
      "op": "MSTORE"
    },
    "6659": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A204E6F2073756368206B65790000000000000000"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6694": {
      "op": "DUP3"
    },
    "6695": {
      "op": "ADD"
    },
    "6696": {
      "op": "MSTORE"
    },
    "6697": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6699": {
      "op": "ADD"
    },
    "6700": {
      "op": "SWAP1"
    },
    "6701": {
      "jump": "o",
      "op": "JUMP"
    },
    "6702": {
      "op": "JUMPDEST"
    },
    "6703": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6708": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6710": {
      "op": "SHL"
    },
    "6711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6713": {
      "op": "MSTORE"
    },
    "6714": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6716": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6718": {
      "op": "MSTORE"
    },
    "6719": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6723": {
      "op": "REVERT"
    },
    "6724": {
      "op": "JUMPDEST"
    },
    "6725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6729": {
      "op": "DUP3"
    },
    "6730": {
      "op": "ADD"
    },
    "6731": {
      "op": "PUSH2",
      "value": "0x1A64"
    },
    "6734": {
      "op": "JUMPI"
    },
    "6735": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6742": {
      "op": "SHL"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6745": {
      "op": "MSTORE"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6748": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6750": {
      "op": "MSTORE"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6755": {
      "op": "REVERT"
    },
    "6756": {
      "op": "JUMPDEST"
    },
    "6757": {
      "op": "POP"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6760": {
      "op": "ADD"
    },
    "6761": {
      "op": "SWAP1"
    },
    "6762": {
      "jump": "o",
      "op": "JUMP"
    },
    "6763": {
      "op": "JUMPDEST"
    },
    "6764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6766": {
      "op": "DUP1"
    },
    "6767": {
      "op": "DUP3"
    },
    "6768": {
      "op": "MSTORE"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "6771": {
      "op": "SWAP1"
    },
    "6772": {
      "op": "DUP3"
    },
    "6773": {
      "op": "ADD"
    },
    "6774": {
      "op": "MSTORE"
    },
    "6775": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A206E6F7420696E697469616C697A656400000000"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6810": {
      "op": "DUP3"
    },
    "6811": {
      "op": "ADD"
    },
    "6812": {
      "op": "MSTORE"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6815": {
      "op": "ADD"
    },
    "6816": {
      "op": "SWAP1"
    },
    "6817": {
      "jump": "o",
      "op": "JUMP"
    },
    "6818": {
      "op": "JUMPDEST"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6821": {
      "op": "DUP2"
    },
    "6822": {
      "op": "DUP4"
    },
    "6823": {
      "op": "DUP3"
    },
    "6824": {
      "op": "JUMPDEST"
    },
    "6825": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6828": {
      "op": "DUP2"
    },
    "6829": {
      "op": "LT"
    },
    "6830": {
      "op": "ISZERO"
    },
    "6831": {
      "op": "PUSH2",
      "value": "0x1AC9"
    },
    "6834": {
      "op": "JUMPI"
    },
    "6835": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6837": {
      "op": "DUP1"
    },
    "6838": {
      "op": "DUP4"
    },
    "6839": {
      "op": "DUP6"
    },
    "6840": {
      "op": "CALLDATACOPY"
    },
    "6841": {
      "op": "SWAP3"
    },
    "6842": {
      "op": "DUP4"
    },
    "6843": {
      "op": "ADD"
    },
    "6844": {
      "op": "SWAP3"
    },
    "6845": {
      "op": "SWAP2"
    },
    "6846": {
      "op": "SWAP1"
    },
    "6847": {
      "op": "SWAP2"
    },
    "6848": {
      "op": "ADD"
    },
    "6849": {
      "op": "SWAP1"
    },
    "6850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6852": {
      "op": "ADD"
    },
    "6853": {
      "op": "PUSH2",
      "value": "0x1AA8"
    },
    "6856": {
      "op": "JUMP"
    },
    "6857": {
      "op": "JUMPDEST"
    },
    "6858": {
      "op": "POP"
    },
    "6859": {
      "op": "POP"
    },
    "6860": {
      "op": "POP"
    },
    "6861": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "6864": {
      "op": "DUP3"
    },
    "6865": {
      "op": "ADD"
    },
    "6866": {
      "op": "SWAP1"
    },
    "6867": {
      "op": "POP"
    },
    "6868": {
      "op": "SWAP3"
    },
    "6869": {
      "op": "SWAP2"
    },
    "6870": {
      "op": "POP"
    },
    "6871": {
      "op": "POP"
    },
    "6872": {
      "jump": "o",
      "op": "JUMP"
    },
    "6873": {
      "op": "JUMPDEST"
    },
    "6874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6876": {
      "op": "DUP4"
    },
    "6877": {
      "op": "MLOAD"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6880": {
      "op": "JUMPDEST"
    },
    "6881": {
      "op": "DUP2"
    },
    "6882": {
      "op": "DUP2"
    },
    "6883": {
      "op": "LT"
    },
    "6884": {
      "op": "ISZERO"
    },
    "6885": {
      "op": "PUSH2",
      "value": "0x1AFA"
    },
    "6888": {
      "op": "JUMPI"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6891": {
      "op": "DUP2"
    },
    "6892": {
      "op": "DUP8"
    },
    "6893": {
      "op": "ADD"
    },
    "6894": {
      "op": "DUP2"
    },
    "6895": {
      "op": "ADD"
    },
    "6896": {
      "op": "MLOAD"
    },
    "6897": {
      "op": "DUP6"
    },
    "6898": {
      "op": "DUP4"
    },
    "6899": {
      "op": "ADD"
    },
    "6900": {
      "op": "MSTORE"
    },
    "6901": {
      "op": "ADD"
    },
    "6902": {
      "op": "PUSH2",
      "value": "0x1AE0"
    },
    "6905": {
      "op": "JUMP"
    },
    "6906": {
      "op": "JUMPDEST"
    },
    "6907": {
      "op": "POP"
    },
    "6908": {
      "op": "SWAP2"
    },
    "6909": {
      "op": "SWAP1"
    },
    "6910": {
      "op": "SWAP2"
    },
    "6911": {
      "op": "ADD"
    },
    "6912": {
      "op": "SWAP2"
    },
    "6913": {
      "op": "DUP3"
    },
    "6914": {
      "op": "MSTORE"
    },
    "6915": {
      "op": "POP"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6918": {
      "op": "ADD"
    },
    "6919": {
      "op": "SWAP2"
    },
    "6920": {
      "op": "SWAP1"
    },
    "6921": {
      "op": "POP"
    },
    "6922": {
      "jump": "o",
      "op": "JUMP"
    },
    "6923": {
      "op": "JUMPDEST"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6926": {
      "op": "DUP1"
    },
    "6927": {
      "op": "DUP3"
    },
    "6928": {
      "op": "MSTORE"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6931": {
      "op": "SWAP1"
    },
    "6932": {
      "op": "DUP3"
    },
    "6933": {
      "op": "ADD"
    },
    "6934": {
      "op": "MSTORE"
    },
    "6935": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A204E6F742061206D6173746572206B6579000000"
    },
    "6968": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6970": {
      "op": "DUP3"
    },
    "6971": {
      "op": "ADD"
    },
    "6972": {
      "op": "MSTORE"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6975": {
      "op": "ADD"
    },
    "6976": {
      "op": "SWAP1"
    },
    "6977": {
      "jump": "o",
      "op": "JUMP"
    },
    "6978": {
      "op": "JUMPDEST"
    },
    "6979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6981": {
      "op": "DUP1"
    },
    "6982": {
      "op": "DUP4"
    },
    "6983": {
      "op": "CALLDATALOAD"
    },
    "6984": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "6986": {
      "op": "NOT"
    },
    "6987": {
      "op": "DUP5"
    },
    "6988": {
      "op": "CALLDATASIZE"
    },
    "6989": {
      "op": "SUB"
    },
    "6990": {
      "op": "ADD"
    },
    "6991": {
      "op": "DUP2"
    },
    "6992": {
      "op": "SLT"
    },
    "6993": {
      "op": "PUSH2",
      "value": "0x1B59"
    },
    "6996": {
      "op": "JUMPI"
    },
    "6997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6999": {
      "op": "DUP1"
    },
    "7000": {
      "op": "REVERT"
    },
    "7001": {
      "op": "JUMPDEST"
    },
    "7002": {
      "op": "DUP4"
    },
    "7003": {
      "op": "ADD"
    },
    "7004": {
      "op": "DUP1"
    },
    "7005": {
      "op": "CALLDATALOAD"
    },
    "7006": {
      "op": "SWAP2"
    },
    "7007": {
      "op": "POP"
    },
    "7008": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7017": {
      "op": "DUP3"
    },
    "7018": {
      "op": "GT"
    },
    "7019": {
      "op": "ISZERO"
    },
    "7020": {
      "op": "PUSH2",
      "value": "0x1B74"
    },
    "7023": {
      "op": "JUMPI"
    },
    "7024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7026": {
      "op": "DUP1"
    },
    "7027": {
      "op": "REVERT"
    },
    "7028": {
      "op": "JUMPDEST"
    },
    "7029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7031": {
      "op": "ADD"
    },
    "7032": {
      "op": "SWAP2"
    },
    "7033": {
      "op": "POP"
    },
    "7034": {
      "op": "CALLDATASIZE"
    },
    "7035": {
      "op": "DUP2"
    },
    "7036": {
      "op": "SWAP1"
    },
    "7037": {
      "op": "SUB"
    },
    "7038": {
      "op": "DUP3"
    },
    "7039": {
      "op": "SGT"
    },
    "7040": {
      "op": "ISZERO"
    },
    "7041": {
      "op": "PUSH2",
      "value": "0x1B89"
    },
    "7044": {
      "op": "JUMPI"
    },
    "7045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7047": {
      "op": "DUP1"
    },
    "7048": {
      "op": "REVERT"
    },
    "7049": {
      "op": "JUMPDEST"
    },
    "7050": {
      "op": "SWAP3"
    },
    "7051": {
      "op": "POP"
    },
    "7052": {
      "op": "SWAP3"
    },
    "7053": {
      "op": "SWAP1"
    },
    "7054": {
      "op": "POP"
    },
    "7055": {
      "jump": "o",
      "op": "JUMP"
    },
    "7056": {
      "op": "JUMPDEST"
    },
    "7057": {
      "op": "DUP2"
    },
    "7058": {
      "op": "DUP4"
    },
    "7059": {
      "op": "DUP3"
    },
    "7060": {
      "op": "CALLDATACOPY"
    },
    "7061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7063": {
      "op": "SWAP2"
    },
    "7064": {
      "op": "ADD"
    },
    "7065": {
      "op": "SWAP1"
    },
    "7066": {
      "op": "DUP2"
    },
    "7067": {
      "op": "MSTORE"
    },
    "7068": {
      "op": "SWAP2"
    },
    "7069": {
      "op": "SWAP1"
    },
    "7070": {
      "op": "POP"
    },
    "7071": {
      "jump": "o",
      "op": "JUMP"
    },
    "7072": {
      "op": "JUMPDEST"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7075": {
      "op": "DUP2"
    },
    "7076": {
      "op": "ADD"
    },
    "7077": {
      "op": "PUSH2",
      "value": "0x1BAE"
    },
    "7080": {
      "op": "DUP3"
    },
    "7081": {
      "op": "DUP8"
    },
    "7082": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "7085": {
      "jump": "i",
      "op": "JUMP"
    },
    "7086": {
      "op": "JUMPDEST"
    },
    "7087": {
      "op": "DUP5"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7090": {
      "op": "DUP4"
    },
    "7091": {
      "op": "ADD"
    },
    "7092": {
      "op": "MSTORE"
    },
    "7093": {
      "op": "DUP4"
    },
    "7094": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7096": {
      "op": "DUP4"
    },
    "7097": {
      "op": "ADD"
    },
    "7098": {
      "op": "MSTORE"
    },
    "7099": {
      "op": "PUSH2",
      "value": "0x1BC7"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7104": {
      "op": "DUP4"
    },
    "7105": {
      "op": "ADD"
    },
    "7106": {
      "op": "DUP5"
    },
    "7107": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "7110": {
      "jump": "i",
      "op": "JUMP"
    },
    "7111": {
      "op": "JUMPDEST"
    },
    "7112": {
      "op": "SWAP6"
    },
    "7113": {
      "op": "SWAP5"
    },
    "7114": {
      "op": "POP"
    },
    "7115": {
      "op": "POP"
    },
    "7116": {
      "op": "POP"
    },
    "7117": {
      "op": "POP"
    },
    "7118": {
      "op": "POP"
    },
    "7119": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "17549d68427eb950138415ac5c6411a5e7797b1d",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.1;\n\ncontract LamportBase2 {\n\n    bool initialized = false;\n    bool public lastVerificationResult;\n\n    // Define different key types\n    enum KeyType { MASTER, ORACLE, DELETED }\n\n    // Store the keys and their corresponding pkh\n    struct Key {\n        KeyType keyType;\n        bytes32 pkh;\n    }\n\n    Key[] public keys; // For iteration\n    mapping(bytes32 => Key) public keyData; // For search\n    bytes32 constant master1 = 0xb7b18ded9664d1a8e923a5942ec1ca5cd8c13c40eb1a5215d5800600f5a587be; // default keyfile has these\n    bytes32 constant master2 = 0x1ed304ab73e124b0b99406dfa1388a492a818837b4b41ce5693ad84dacfc3f25;\n    bytes32 constant oracle = 0xd62569e61a6423c880a429676be48756c931fe0519121684f5fb05cbd17877fa; \n  \n    event LogLastCalculatedHash(uint256 hash);\n    event VerificationFailed(uint256 hashedData);\n    event PkhUpdated(KeyType keyType, bytes32 previousPKH, bytes32 newPKH);\n    event KeyAdded(KeyType keyType, bytes32 newPKH);\n    event KeyModified(KeyType originalKeyType, bytes32 originalPKH, bytes32 modifiedPKH, KeyType newKeyType);\n\n    // Initial setup of the Lamport system, providing the first MASTER keys and an ORACLE key\n    // function init(bytes32 masterPKH1, bytes32 masterPKH2, bytes32 oraclePKH) public {\n    //     require(!initialized, \"LamportBase: Already initialized\");\n\n    //     ;\n    // }\n    constructor () {\n    \n        addKey(KeyType.MASTER, master1);\n        addKey(KeyType.MASTER, master2);\n        addKey(KeyType.ORACLE, oracle);\n        initialized = true;\n    }\n    // Function to perform onlyLamportMaster checks\n    function performLamportMasterCheck(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        bytes memory prepacked\n    ) public returns (bool) {\n        require(initialized, \"LamportBase: not initialized\");\n\n        bytes32 pkh = keccak256(abi.encodePacked(currentpub));\n        if (keyData[pkh].keyType != KeyType.MASTER) {\n            return false;\n        }\n\n        uint256 hashedData = uint256(keccak256(abi.encodePacked(prepacked, nextPKH)));\n        bool verificationResult = verify_u256(hashedData, sig, currentpub);\n\n        if (!verificationResult) {\n            return false;\n        } else {\n            updateKey(pkh, nextPKH);\n            return true;\n        }\n    }\n\n    // Function to perform onlyLamportOracle checks\n    function performLamportOracleCheck(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        bytes memory prepacked\n    ) public returns (bool) {\n        require(initialized, \"LamportBase: not initialized\");\n\n        bytes32 pkh = keccak256(abi.encodePacked(currentpub));\n        if (keyData[pkh].keyType != KeyType.ORACLE) {\n            return false;\n        }\n\n        uint256 hashedData = uint256(keccak256(abi.encodePacked(prepacked, nextPKH)));\n        bool verificationResult = verify_u256(hashedData, sig, currentpub);\n\n        if (!verificationResult) {\n            return false;\n        } else {\n            updateKey(pkh, nextPKH);\n            return true;\n        }\n    }\n\n    // Add a new key\n    function addKey(KeyType keyType, bytes32 newPKH) private {\n        Key memory newKey = Key(keyType, newPKH);\n        keys.push(newKey);\n        keyData[newPKH] = newKey;\n        emit KeyAdded(keyType, newPKH);\n    }\n    // Search for a key by its PKH, return the key and its position in the keys array\n    function getKeyAndPosByPKH(bytes32 pkh) public view returns (KeyType, bytes32, uint) {\n        Key memory key = keyData[pkh];\n        require(key.pkh != 0, \"LamportBase: No such key\");\n\n        // Iterate over keys array to find the position\n        for (uint i = 0; i < keys.length; i++) {\n            if (keys[i].pkh == pkh) {\n                return (key.keyType, key.pkh, i);\n            }\n        }\n        revert(\"LamportBase: No such key\");\n    }\n    function getPKHsByPrivilege(KeyType privilege) public view returns (bytes32[] memory) {\n        bytes32[] memory pkhs = new bytes32[](keys.length);\n        uint counter = 0;\n\n        for (uint i = 0; i < keys.length; i++) {\n            if (keys[i].keyType == privilege) {\n                pkhs[counter] = keys[i].pkh;\n                counter++;\n            }\n        }\n\n        // Prepare the array to return\n        bytes32[] memory result = new bytes32[](counter);\n        for(uint i = 0; i < counter; i++) {\n            result[i] = pkhs[i];\n        }\n\n        return result;\n    }\n\n    // Delete a key\n    // function deleteKey(bytes32 firstMasterPKH, bytes32 secondMasterPKH, bytes32 targetPKH) private {\n    //     // Check that the two provided keys are master keys\n    //     require(keyData[firstMasterPKH].keyType == KeyType.MASTER && keyData[secondMasterPKH].keyType == KeyType.MASTER, \"LamportBase: Provided keys are not master keys\");\n\n    //     // Disallow master keys from deleting themselves\n    //     require(targetPKH != firstMasterPKH && targetPKH != secondMasterPKH, \"LamportBase: Master keys cannot delete themselves\");\n\n    //     require(keyData[targetPKH].pkh != 0, \"LamportBase: No such key\");\n    //     for (uint i = 0; i < keys.length; i++) {\n    //         if (keys[i].pkh == targetPKH) {\n    //             delete keyData[targetPKH];\n    //             keys[i] = keys[keys.length - 1];\n    //             keys.pop();\n    //             emit KeyDeleted(keys[i].keyType, targetPKH);\n    //             break;\n    //         }\n    //     }\n    // }\n\n    bytes32 private lastUsedDeleteKeyHash;\n    bytes32 private storedNextPKH;\n\n    function deleteKeyStepOne(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        bytes32 deleteKeyHash\n    )\n        public\n        onlyLamportMaster(\n            currentpub,\n            sig,\n            nextPKH,\n            abi.encodePacked(deleteKeyHash)\n        )\n    {\n        // Save the used deleteKeyHash in a global variable\n        lastUsedDeleteKeyHash = deleteKeyHash;\n        storedNextPKH = nextPKH;\n    }\n\n    function deleteKeyStepTwo(\n            bytes32[2][256] calldata currentpub,\n            bytes[256] calldata sig,\n            bytes32 nextPKH,\n            bytes32 confirmDeleteKeyHash\n        )\n            public\n            onlyLamportMaster(\n                currentpub,\n                sig,\n                nextPKH,\n                abi.encodePacked(confirmDeleteKeyHash)\n            )\n        {\n            // Calculate the current public key hash (currentPKH)\n            bytes32 currentPKH = keccak256(abi.encodePacked(currentpub));\n            \n            // Check if storedNextPKH is not the same as the current PKH\n            require(currentPKH != storedNextPKH, \"LamportBase: Cannot use the same keychain twice for this function\");\n            \n            // Check if the used deleteKeyHash matches the last used deleteKeyHash\n            require(lastUsedDeleteKeyHash == confirmDeleteKeyHash, \"LamportBase: Keys do not match\");\n            \n            // Execute the delete key logic\n            // Assuming firstMasterPKH and secondMasterPKH are correctly verified and provided\n            bytes32 firstMasterPKH = storedNextPKH; // Placeholder, replace with the actual value\n            bytes32 secondMasterPKH = currentPKH; // Placeholder, replace with the actual value\n            bytes32 targetPKH = confirmDeleteKeyHash;\n            \n            // Check that the two provided keys are master keys\n            require(keyData[firstMasterPKH].keyType == KeyType.MASTER && keyData[secondMasterPKH].keyType == KeyType.MASTER, \"LamportBase: Provided keys are not master keys\");\n            \n            // Disallow master keys from deleting themselves\n            require(targetPKH != firstMasterPKH && targetPKH != secondMasterPKH, \"LamportBase: Master keys cannot delete themselves\");\n            \n            // require(keyData[targetPKH].pkh != 0, \"LamportBase: No such key (deletion)\");\n            // for (uint i = 0; i < keys.length; i++) {\n            //     if (keys[i].pkh == targetPKH) {\n            //         delete keyData[targetPKH];\n            //         keys[i] = keys[keys.length - 1];\n            //         keys.pop();\n            //         emit KeyDeleted(keys[i].keyType, targetPKH);\n            //         break;\n            //     }\n            // }\n            require(keyData[targetPKH].pkh != 0, \"LamportBase: No such key (deletion)\");\n            for (uint i = 0; i < keys.length; i++) {\n                if (keys[i].pkh == targetPKH) {\n\n                    KeyType originalKeyType = keyData[targetPKH].keyType; // Store the original KeyType\n                    // Overwriting the first 7 characters with \"de1e7ed\" and the rest with random values\n                    bytes32 modifiedPKH = 0xde1e7ed000000000000000000000000000000000000000000000000000000000;\n                    uint256 randomValue = uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty)));\n                    modifiedPKH ^= bytes32(randomValue); // XOR to keep \"de1e7ed\" in the first 7 characters\n                    \n                    // Modify the existing entry instead of deleting it\n                    keyData[targetPKH].pkh = modifiedPKH;\n                    keyData[targetPKH].keyType = KeyType.DELETED; // Set the keyType to DELETED\n                    \n                    emit KeyModified(originalKeyType, targetPKH, modifiedPKH, KeyType.DELETED); // Emitting a new event for modification                    \n                    break;\n                }\n            }\n\n\n            \n            // Reset lastUsedDeleteKeyHash\n            lastUsedDeleteKeyHash = bytes32(0);\n            storedNextPKH = bytes32(0);\n        }\n\n\n\n    // // get the current public key hash\n    // function getPKH() public view returns (bytes32) {\n    //     return pkh;\n    // }\n\n    // lamport 'verify' logic\n    function verify_u256(\n        uint256 bits,\n        bytes[256] calldata sig,\n        bytes32[2][256] calldata pub\n    ) public pure returns (bool) {\n        unchecked {\n            for (uint256 i; i < 256; i++) {\n                if (\n                    pub[i][((bits & (1 << (255 - i))) > 0) ? 1 : 0] !=\n                    keccak256(sig[i])\n                ) return false;\n            }\n\n            return true;\n        }\n    }\n\n    modifier onlyLamportMaster(bytes32[2][256] calldata currentpub, bytes[256] calldata sig, bytes32 nextPKH, bytes memory prepacked) {\n        require(initialized, \"LamportBase: not initialized\");\n\n        bytes32 pkh = keccak256(abi.encodePacked(currentpub));\n        require(keyData[pkh].keyType == KeyType.MASTER, \"LamportBase: Not a master key\");\n\n        uint256 hashedData = uint256(keccak256(abi.encodePacked(prepacked, nextPKH)));\n        emit LogLastCalculatedHash(hashedData);\n\n        bool verificationResult = verify_u256(hashedData, sig, currentpub);\n\n        lastVerificationResult = verificationResult;\n\n        if (!verificationResult) {\n            emit VerificationFailed(hashedData);\n            revert(\"LamportBase: Verification failed\");\n        } else {\n            emit PkhUpdated(keyData[pkh].keyType, pkh, nextPKH);\n            updateKey(pkh, nextPKH);\n        }\n\n        _;\n    }\n\n    // function updateKey(bytes32 oldPKH, bytes32 newPKH) internal {\n    //     require(keyData[oldPKH].pkh != 0, \"LamportBase: No such key\");\n    //     keyData[oldPKH].pkh = newPKH; // Update the public key hash in the key data mapping\n    //     emit PkhUpdated(keyData[oldPKH].keyType, oldPKH, newPKH);\n    // }\n\n    function updateKey(bytes32 oldPKH, bytes32 newPKH) internal {\n        require(keyData[oldPKH].pkh != 0, \"LamportBase: No such key\");\n\n        // Update the public key hash in the key data mapping\n        Key memory updatedKey = Key(keyData[oldPKH].keyType, newPKH);\n        keyData[newPKH] = updatedKey;\n\n        // Remove the old key from key data\n        delete keyData[oldPKH];\n\n        // Update the public key hash in the keys array\n        for (uint i = 0; i < keys.length; i++) {\n            if (keys[i].pkh == oldPKH) {\n                keys[i] = updatedKey;\n                break;\n            }\n        }\n\n        emit PkhUpdated(updatedKey.keyType, oldPKH, newPKH);\n    }\n\n\n\n    modifier onlyLamportOracle(bytes32[2][256] calldata currentpub, bytes[256] calldata sig, bytes32 nextPKH, bytes memory prepacked) {\n        require(initialized, \"LamportBase: not initialized\");\n\n        bytes32 pkh = keccak256(abi.encodePacked(currentpub));\n        require(keyData[pkh].keyType == KeyType.ORACLE, \"LamportBase: Not an oracle key\");\n\n        uint256 hashedData = uint256(keccak256(abi.encodePacked(prepacked, nextPKH)));\n        emit LogLastCalculatedHash(hashedData);\n\n        bool verificationResult = verify_u256(hashedData, sig, currentpub);\n\n        lastVerificationResult = verificationResult;\n\n        if (!verificationResult) {\n           // emit VerificationFailed(hashedData);\n            revert(\"LamportBase: Verification failed\");\n        } else {\n            emit PkhUpdated(keyData[pkh].keyType, pkh, nextPKH);\n            updateKey(pkh, nextPKH);\n        }\n\n        _;\n    }\n\n    bytes32 public lastUsedNextPKH;\n\n    function createMasterKeyStepOne(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        bytes memory newmasterPKH\n    )\n        public\n        onlyLamportMaster(\n            currentpub,\n            sig,\n            nextPKH,\n            newmasterPKH\n        )\n    {\n        // Save the used master NextPKH in a global variable\n        lastUsedNextPKH = nextPKH;\n    }\n\n    function createMasterKeyStepTwo(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        bytes32 newmasterPKH\n    )\n        public\n        onlyLamportMaster(\n            currentpub,\n            sig,\n            nextPKH,\n            abi.encodePacked(newmasterPKH)\n        )\n    {\n        // Check if the used master NextPKH matches the last used PKH\n        bytes32 currentPKH = keccak256(abi.encodePacked(currentpub));\n        bool pkhMatched = (lastUsedNextPKH != currentPKH);\n        //require(lastUsedNextPKH != nextPKH, \"LamportBase: Same master key is being used again, need a separate one\");\n        lastUsedNextPKH = bytes32(0);\n        // If checks pass, add the new master key\n        require(pkhMatched, \"LamportBase: PKH matches last used PKH (use separate second key)\");\n\n        addKey(KeyType.MASTER, newmasterPKH);\n\n        // Reset lastUsedNextPKH\n        lastUsedNextPKH = bytes32(0);\n    }\n\n\n    function createOracleKeyFromMaster(\n        bytes32[2][256] calldata currentpub,\n        bytes32 nextPKH,\n        bytes[256] calldata sig,\n        bytes32 neworaclePKH\n    )\n        public\n        onlyLamportMaster(\n            currentpub,\n            sig,\n            nextPKH,\n            abi.encodePacked(neworaclePKH)\n        )\n    {\n        \n        addKey(KeyType.ORACLE, neworaclePKH);\n      \n    }\n}\n",
  "sourceMap": "65:14967:0:-:0;;;113:5;94:24;;-1:-1:-1;;94:24:0;;;1405:177;;;;;;;;;-1:-1:-1;1435:31:0;1442:14;490:66;1435:6;:31::i;:::-;1476;1483:14;618:66;1476:6;:31::i;:::-;1517:30;1524:14;716:66;1517:6;:30::i;:::-;1557:11;:18;;-1:-1:-1;;1557:18:0;1571:4;1557:18;;;65:14967;;3196:215;3263:17;3283:20;;;;;;;;3287:7;3283:20;;;;;;;;:::i;:::-;;;;;;;;3313:4;:17;;;;;;;-1:-1:-1;3313:17:0;;;;;;;;;;;;;3263:40;;-1:-1:-1;3263:40:0;;3313:17;;;;;;-1:-1:-1;;3313:17:0;;;;:4;:17;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;3313:17:0;;;;;;;;;;3340:15;;;;:7;:15;;;;;;;:24;;;;3358:6;;3340:15;;:24;;:15;;-1:-1:-1;;3340:24:0;;;;3313:17;3340:24;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3379:25;3388:7;3397:6;3379:25;;;;;;;:::i;:::-;;;;;;;;3253:158;3196:215;;:::o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:409;316:2;301:18;;349:1;338:13;;328:144;;394:10;389:3;385:20;382:1;375:31;429:4;426:1;419:15;457:4;454:1;447:15;328:144;481:25;;;537:2;522:18;515:34;146:409;:::o;:::-;65:14967:0;;;;;;",
  "sourcePath": "contracts/1_GP_LamportBase2.sol",
  "type": "contract"
}