{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MAX_MINT_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PLAYERS_PER_SUBMISSION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINT_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKENS_PER_SECOND",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "playerNames",
          "type": "string[]"
        }
      ],
      "name": "getValidRewardAddressesByNames",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "hashToPlayerList",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isValidator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintContract",
      "outputs": [
        {
          "internalType": "contract IGP_Mint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performMassMinting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "serverSubmissions",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "playerListHash",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "canMint",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mintContractAddress",
          "type": "address"
        }
      ],
      "name": "setMintContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "playerDatabaseAddress",
          "type": "address"
        }
      ],
      "name": "setPlayerDatabaseAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "serverIP",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "playerNames",
              "type": "string[]"
            }
          ],
          "internalType": "struct GameValidator.ServerPlayers[]",
          "name": "serverPlayerLists",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "validatorID",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "canMintFlag",
          "type": "bool"
        }
      ],
      "name": "submitPlayerList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "3": "contracts/4_GP_Validator_0-10.sol"
  },
  "ast": {
    "absolutePath": "contracts/4_GP_Validator_0-10.sol",
    "exportedSymbols": {
      "GameValidator": [
        3709
      ],
      "IGP_Mint": [
        2997
      ],
      "IPlayerDatabase": [
        2989
      ]
    },
    "id": 3710,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2958,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPlayerDatabase",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2989,
        "linearizedBaseContracts": [
          2989
        ],
        "name": "IPlayerDatabase",
        "nameLocation": "68:15:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8098dcff",
            "id": 2964,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllPlayerNames",
            "nameLocation": "99:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "116:2:3"
            },
            "returnParameters": {
              "id": 2963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2962,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2964,
                  "src": "142:15:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2960,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "142:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2961,
                    "nodeType": "ArrayTypeName",
                    "src": "142:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "141:17:3"
            },
            "scope": 2989,
            "src": "90:69:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "3dc0ff7d",
            "id": 2970,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getServerIPList",
            "nameLocation": "173:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "188:2:3"
            },
            "returnParameters": {
              "id": 2969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2970,
                  "src": "214:15:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2966,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "214:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2967,
                    "nodeType": "ArrayTypeName",
                    "src": "214:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "213:17:3"
            },
            "scope": 2989,
            "src": "164:67:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "85d8f13d",
            "id": 2981,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getValidRewardAddressesByNames",
            "nameLocation": "245:30:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2973,
                  "mutability": "mutable",
                  "name": "playerNames",
                  "nameLocation": "292:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "276:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2971,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "276:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2972,
                    "nodeType": "ArrayTypeName",
                    "src": "276:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2975,
                  "mutability": "mutable",
                  "name": "lastMintTime",
                  "nameLocation": "313:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "305:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:51:3"
            },
            "returnParameters": {
              "id": 2980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2979,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "350:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2977,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "350:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2978,
                    "nodeType": "ArrayTypeName",
                    "src": "350:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:18:3"
            },
            "scope": 2989,
            "src": "236:132:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "facd743b",
            "id": 2988,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidator",
            "nameLocation": "382:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2983,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "402:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2988,
                  "src": "394:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "393:18:3"
            },
            "returnParameters": {
              "id": 2987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2986,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2988,
                  "src": "435:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2985,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "434:6:3"
            },
            "scope": 2989,
            "src": "373:68:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3710,
        "src": "58:386:3",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IGP_Mint",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2997,
        "linearizedBaseContracts": [
          2997
        ],
        "name": "IGP_Mint",
        "nameLocation": "455:8:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "f0dda65c",
            "id": 2996,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokens",
            "nameLocation": "479:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2991,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "498:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2996,
                  "src": "490:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2993,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "510:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2996,
                  "src": "502:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:28:3"
            },
            "returnParameters": {
              "id": 2995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:0:3"
            },
            "scope": 2997,
            "src": "470:57:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3710,
        "src": "445:131:3",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GameValidator",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3709,
        "linearizedBaseContracts": [
          3709
        ],
        "name": "GameValidator",
        "nameLocation": "586:13:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3000,
            "mutability": "mutable",
            "name": "playerDatabase",
            "nameLocation": "623:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "607:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
              "typeString": "contract IPlayerDatabase"
            },
            "typeName": {
              "id": 2999,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2998,
                "name": "IPlayerDatabase",
                "nameLocations": [
                  "607:15:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2989,
                "src": "607:15:3"
              },
              "referencedDeclaration": 2989,
              "src": "607:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
                "typeString": "contract IPlayerDatabase"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "d0b6b6db",
            "id": 3003,
            "mutability": "mutable",
            "name": "mintContract",
            "nameLocation": "659:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "643:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IGP_Mint_$2997",
              "typeString": "contract IGP_Mint"
            },
            "typeName": {
              "id": 3002,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3001,
                "name": "IGP_Mint",
                "nameLocations": [
                  "643:8:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2997,
                "src": "643:8:3"
              },
              "referencedDeclaration": 2997,
              "src": "643:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGP_Mint_$2997",
                "typeString": "contract IGP_Mint"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3008,
            "mutability": "mutable",
            "name": "validatorsPerServerIP",
            "nameLocation": "715:21:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "678:58:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(string => address[])"
            },
            "typeName": {
              "id": 3007,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3004,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "686:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "678:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(string => address[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 3005,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "696:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 3006,
                "nodeType": "ArrayTypeName",
                "src": "696:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "5c9c3ed2",
            "id": 3015,
            "mutability": "mutable",
            "name": "serverSubmissions",
            "nameLocation": "805:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "742:80:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_ServerSubmission_$3066_storage_$_$",
              "typeString": "mapping(string => mapping(address => struct GameValidator.ServerSubmission))"
            },
            "typeName": {
              "id": 3014,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3009,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "750:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "742:55:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_ServerSubmission_$3066_storage_$_$",
                "typeString": "mapping(string => mapping(address => struct GameValidator.ServerSubmission))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3013,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 3010,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "768:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "760:36:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ServerSubmission_$3066_storage_$",
                  "typeString": "mapping(address => struct GameValidator.ServerSubmission)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 3012,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3011,
                    "name": "ServerSubmission",
                    "nameLocations": [
                      "779:16:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3066,
                    "src": "779:16:3"
                  },
                  "referencedDeclaration": 3066,
                  "src": "779:16:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ServerSubmission_$3066_storage_ptr",
                    "typeString": "struct GameValidator.ServerSubmission"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f785eb2a",
            "id": 3020,
            "mutability": "mutable",
            "name": "hashToPlayerList",
            "nameLocation": "865:16:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "829:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_string_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => string[])"
            },
            "typeName": {
              "id": 3019,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3016,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "837:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "829:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_string_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => string[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 3017,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "848:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 3018,
                "nodeType": "ArrayTypeName",
                "src": "848:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d463520",
            "id": 3022,
            "mutability": "mutable",
            "name": "lastMintTime",
            "nameLocation": "936:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "921:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3021,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "921:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "84e7e3d3",
            "id": 3025,
            "mutability": "constant",
            "name": "MINT_INTERVAL",
            "nameLocation": "978:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "954:49:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3023,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "954:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 3024,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "994:9:3",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_300_by_1",
                "typeString": "int_const 300"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "6f1aab4a",
            "id": 3028,
            "mutability": "constant",
            "name": "MAX_PLAYERS_PER_SUBMISSION",
            "nameLocation": "1033:26:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "1009:55:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3026,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1009:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3634",
              "id": 3027,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1062:2:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_64_by_1",
                "typeString": "int_const 64"
              },
              "value": "64"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f59cc978",
            "id": 3031,
            "mutability": "constant",
            "name": "MAX_MINT_TIME",
            "nameLocation": "1094:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "1070:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3029,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1070:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 3030,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1110:10:3",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "1e9ad446",
            "id": 3039,
            "mutability": "constant",
            "name": "TOKENS_PER_SECOND",
            "nameLocation": "1168:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "1144:60:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3032,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1144:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 3038,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_rational_60000000000000000000_by_1",
                      "typeString": "int_const 60000000000000000000"
                    },
                    "id": 3035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31653138",
                      "id": 3033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1189:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "3630",
                      "id": 3034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1196:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_60_by_1",
                        "typeString": "int_const 60"
                      },
                      "value": "60"
                    },
                    "src": "1189:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60000000000000000000_by_1",
                      "typeString": "int_const 60000000000000000000"
                    }
                  }
                ],
                "id": 3036,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1188:11:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60000000000000000000_by_1",
                  "typeString": "int_const 60000000000000000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "hexValue": "3630",
                "id": 3037,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1202:2:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "1188:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3042,
            "mutability": "mutable",
            "name": "_playerDatabaseAddress",
            "nameLocation": "1274:22:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "1266:75:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3040,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1266:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307842303341366146643434306132613964623838333446314136303933363830663032663131313443",
              "id": 3041,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1299:42:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xB03A6aFd440a2a9db8834F1A6093680f02f1114C"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3045,
            "mutability": "mutable",
            "name": "_mintContractAddress",
            "nameLocation": "1355:20:3",
            "nodeType": "VariableDeclaration",
            "scope": 3709,
            "src": "1347:73:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3043,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1347:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307861314430373046313038434265463441343846464331413739323538643543323445303544423638",
              "id": 3044,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1378:42:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xa1D070F108CBeF4A48FFC1A79258d5C24E05DB68"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3060,
              "nodeType": "Block",
              "src": "1440:128:3",
              "statements": [
                {
                  "expression": {
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3048,
                      "name": "playerDatabase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3000,
                      "src": "1450:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
                        "typeString": "contract IPlayerDatabase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3050,
                          "name": "_playerDatabaseAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3042,
                          "src": "1483:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3049,
                        "name": "IPlayerDatabase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2989,
                        "src": "1467:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPlayerDatabase_$2989_$",
                          "typeString": "type(contract IPlayerDatabase)"
                        }
                      },
                      "id": 3051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1467:39:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
                        "typeString": "contract IPlayerDatabase"
                      }
                    },
                    "src": "1450:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
                      "typeString": "contract IPlayerDatabase"
                    }
                  },
                  "id": 3053,
                  "nodeType": "ExpressionStatement",
                  "src": "1450:56:3"
                },
                {
                  "expression": {
                    "id": 3058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3054,
                      "name": "mintContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3003,
                      "src": "1516:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGP_Mint_$2997",
                        "typeString": "contract IGP_Mint"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3056,
                          "name": "_mintContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3045,
                          "src": "1540:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3055,
                        "name": "IGP_Mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "1531:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IGP_Mint_$2997_$",
                          "typeString": "type(contract IGP_Mint)"
                        }
                      },
                      "id": 3057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1531:30:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGP_Mint_$2997",
                        "typeString": "contract IGP_Mint"
                      }
                    },
                    "src": "1516:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGP_Mint_$2997",
                      "typeString": "contract IGP_Mint"
                    }
                  },
                  "id": 3059,
                  "nodeType": "ExpressionStatement",
                  "src": "1516:45:3"
                }
              ]
            },
            "id": 3061,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1437:2:3"
            },
            "returnParameters": {
              "id": 3047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1440:0:3"
            },
            "scope": 3709,
            "src": "1426:142:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "GameValidator.ServerSubmission",
            "id": 3066,
            "members": [
              {
                "constant": false,
                "id": 3063,
                "mutability": "mutable",
                "name": "playerListHash",
                "nameLocation": "1645:14:3",
                "nodeType": "VariableDeclaration",
                "scope": 3066,
                "src": "1637:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 3062,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1637:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3065,
                "mutability": "mutable",
                "name": "canMint",
                "nameLocation": "1720:7:3",
                "nodeType": "VariableDeclaration",
                "scope": 3066,
                "src": "1715:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3064,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1715:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ServerSubmission",
            "nameLocation": "1581:16:3",
            "nodeType": "StructDefinition",
            "scope": 3709,
            "src": "1574:160:3",
            "visibility": "public"
          },
          {
            "canonicalName": "GameValidator.ServerPlayers",
            "id": 3072,
            "members": [
              {
                "constant": false,
                "id": 3068,
                "mutability": "mutable",
                "name": "serverIP",
                "nameLocation": "1778:8:3",
                "nodeType": "VariableDeclaration",
                "scope": 3072,
                "src": "1771:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3067,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1771:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3071,
                "mutability": "mutable",
                "name": "playerNames",
                "nameLocation": "1805:11:3",
                "nodeType": "VariableDeclaration",
                "scope": 3072,
                "src": "1796:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 3069,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "id": 3070,
                  "nodeType": "ArrayTypeName",
                  "src": "1796:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                    "typeString": "string[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ServerPlayers",
            "nameLocation": "1747:13:3",
            "nodeType": "StructDefinition",
            "scope": 3709,
            "src": "1740:83:3",
            "visibility": "public"
          },
          {
            "canonicalName": "GameValidator.HashCount",
            "id": 3077,
            "members": [
              {
                "constant": false,
                "id": 3074,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1960:4:3",
                "nodeType": "VariableDeclaration",
                "scope": 3077,
                "src": "1952:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 3073,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1952:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3076,
                "mutability": "mutable",
                "name": "count",
                "nameLocation": "1982:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 3077,
                "src": "1974:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3075,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1974:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "HashCount",
            "nameLocation": "1932:9:3",
            "nodeType": "StructDefinition",
            "scope": 3709,
            "src": "1925:69:3",
            "visibility": "public"
          },
          {
            "body": {
              "id": 3088,
              "nodeType": "Block",
              "src": "2068:144:3",
              "statements": [
                {
                  "expression": {
                    "id": 3086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3082,
                      "name": "mintContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3003,
                      "src": "2161:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGP_Mint_$2997",
                        "typeString": "contract IGP_Mint"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3084,
                          "name": "mintContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3079,
                          "src": "2185:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3083,
                        "name": "IGP_Mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "2176:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IGP_Mint_$2997_$",
                          "typeString": "type(contract IGP_Mint)"
                        }
                      },
                      "id": 3085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2176:29:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGP_Mint_$2997",
                        "typeString": "contract IGP_Mint"
                      }
                    },
                    "src": "2161:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGP_Mint_$2997",
                      "typeString": "contract IGP_Mint"
                    }
                  },
                  "id": 3087,
                  "nodeType": "ExpressionStatement",
                  "src": "2161:44:3"
                }
              ]
            },
            "functionSelector": "e15336ef",
            "id": 3089,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMintContractAddress",
            "nameLocation": "2009:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3079,
                  "mutability": "mutable",
                  "name": "mintContractAddress",
                  "nameLocation": "2040:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3089,
                  "src": "2032:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2031:29:3"
            },
            "returnParameters": {
              "id": 3081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2068:0:3"
            },
            "scope": 3709,
            "src": "2000:212:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3100,
              "nodeType": "Block",
              "src": "2349:155:3",
              "statements": [
                {
                  "expression": {
                    "id": 3098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3094,
                      "name": "playerDatabase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3000,
                      "src": "2442:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
                        "typeString": "contract IPlayerDatabase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3096,
                          "name": "playerDatabaseAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3091,
                          "src": "2475:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3095,
                        "name": "IPlayerDatabase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2989,
                        "src": "2459:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPlayerDatabase_$2989_$",
                          "typeString": "type(contract IPlayerDatabase)"
                        }
                      },
                      "id": 3097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2459:38:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
                        "typeString": "contract IPlayerDatabase"
                      }
                    },
                    "src": "2442:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
                      "typeString": "contract IPlayerDatabase"
                    }
                  },
                  "id": 3099,
                  "nodeType": "ExpressionStatement",
                  "src": "2442:55:3"
                }
              ]
            },
            "functionSelector": "143acc71",
            "id": 3101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPlayerDatabaseAddress",
            "nameLocation": "2286:24:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3091,
                  "mutability": "mutable",
                  "name": "playerDatabaseAddress",
                  "nameLocation": "2319:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3101,
                  "src": "2311:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2310:31:3"
            },
            "returnParameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2349:0:3"
            },
            "scope": 3709,
            "src": "2277:227:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3126,
              "nodeType": "Block",
              "src": "2576:317:3",
              "statements": [
                {
                  "assignments": [
                    3107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3107,
                      "mutability": "mutable",
                      "name": "elapsedSeconds",
                      "nameLocation": "2594:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3126,
                      "src": "2586:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3106,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2586:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3112,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3108,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2611:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2617:9:3",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2611:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 3110,
                      "name": "lastMintTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3022,
                      "src": "2629:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2611:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2586:55:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3113,
                      "name": "elapsedSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3107,
                      "src": "2656:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 3114,
                      "name": "MAX_MINT_TIME",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3031,
                      "src": "2673:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2656:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3121,
                  "nodeType": "IfStatement",
                  "src": "2652:132:3",
                  "trueBody": {
                    "id": 3120,
                    "nodeType": "Block",
                    "src": "2688:96:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 3118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3116,
                            "name": "elapsedSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3107,
                            "src": "2702:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3117,
                            "name": "MAX_MINT_TIME",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3031,
                            "src": "2719:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3119,
                        "nodeType": "ExpressionStatement",
                        "src": "2702:30:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3122,
                      "name": "elapsedSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3107,
                      "src": "2801:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 3123,
                      "name": "TOKENS_PER_SECOND",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3039,
                      "src": "2818:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2801:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3105,
                  "id": 3125,
                  "nodeType": "Return",
                  "src": "2794:41:3"
                }
              ]
            },
            "id": 3127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateMintAmount",
            "nameLocation": "2523:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2542:2:3"
            },
            "returnParameters": {
              "id": 3105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3127,
                  "src": "2567:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2567:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2566:9:3"
            },
            "scope": 3709,
            "src": "2514:379:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3178,
              "nodeType": "Block",
              "src": "2980:378:3",
              "statements": [
                {
                  "assignments": [
                    3135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3135,
                      "mutability": "mutable",
                      "name": "validatorExists",
                      "nameLocation": "2995:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3178,
                      "src": "2990:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3134,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2990:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3137,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3013:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2990:28:3"
                },
                {
                  "body": {
                    "id": 3165,
                    "nodeType": "Block",
                    "src": "3094:155:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3151,
                                "name": "validatorsPerServerIP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3008,
                                "src": "3112:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(string memory => address[] storage ref)"
                                }
                              },
                              "id": 3153,
                              "indexExpression": {
                                "id": 3152,
                                "name": "serverIP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3129,
                                "src": "3134:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3112:31:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3155,
                            "indexExpression": {
                              "id": 3154,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3139,
                              "src": "3144:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3112:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3156,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3131,
                            "src": "3150:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3112:47:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3164,
                        "nodeType": "IfStatement",
                        "src": "3108:131:3",
                        "trueBody": {
                          "id": 3163,
                          "nodeType": "Block",
                          "src": "3161:78:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 3160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3158,
                                  "name": "validatorExists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3135,
                                  "src": "3179:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 3159,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3197:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3179:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3161,
                              "nodeType": "ExpressionStatement",
                              "src": "3179:22:3"
                            },
                            {
                              "id": 3162,
                              "nodeType": "Break",
                              "src": "3219:5:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3142,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3139,
                      "src": "3045:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3143,
                          "name": "validatorsPerServerIP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3008,
                          "src": "3049:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 3145,
                        "indexExpression": {
                          "id": 3144,
                          "name": "serverIP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3129,
                          "src": "3071:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3049:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3081:6:3",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3049:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3045:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3166,
                  "initializationExpression": {
                    "assignments": [
                      3139
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3139,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3038:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3166,
                        "src": "3033:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3138,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3141,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3042:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3033:10:3"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 3149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3089:3:3",
                      "subExpression": {
                        "id": 3148,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3139,
                        "src": "3089:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3150,
                    "nodeType": "ExpressionStatement",
                    "src": "3089:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "3028:221:3"
                },
                {
                  "condition": {
                    "id": 3168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3262:16:3",
                    "subExpression": {
                      "id": 3167,
                      "name": "validatorExists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3135,
                      "src": "3263:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3177,
                  "nodeType": "IfStatement",
                  "src": "3258:94:3",
                  "trueBody": {
                    "id": 3176,
                    "nodeType": "Block",
                    "src": "3280:72:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3173,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3131,
                              "src": "3331:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 3169,
                                "name": "validatorsPerServerIP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3008,
                                "src": "3294:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(string memory => address[] storage ref)"
                                }
                              },
                              "id": 3171,
                              "indexExpression": {
                                "id": 3170,
                                "name": "serverIP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3129,
                                "src": "3316:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3294:31:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3326:4:3",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3294:36:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 3174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3294:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3175,
                        "nodeType": "ExpressionStatement",
                        "src": "3294:47:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 3179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateValidatorsList",
            "nameLocation": "2908:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3129,
                  "mutability": "mutable",
                  "name": "serverIP",
                  "nameLocation": "2943:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3179,
                  "src": "2929:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3128,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2929:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3131,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "2961:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3179,
                  "src": "2953:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2953:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2928:43:3"
            },
            "returnParameters": {
              "id": 3133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2980:0:3"
            },
            "scope": 3709,
            "src": "2899:459:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3341,
              "nodeType": "Block",
              "src": "3478:1960:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3192,
                            "name": "validatorID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3185,
                            "src": "3508:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3191,
                          "name": "isValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3355,
                          "src": "3496:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3496:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206120726567697374657265642076616c696461746f72",
                        "id": 3194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3522:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c683d67988d13fc4c213b74b37492e3a0f610828af203a3627ea6c2b96a8cc60",
                          "typeString": "literal_string \"Caller is not a registered validator\""
                        },
                        "value": "Caller is not a registered validator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c683d67988d13fc4c213b74b37492e3a0f610828af203a3627ea6c2b96a8cc60",
                          "typeString": "literal_string \"Caller is not a registered validator\""
                        }
                      ],
                      "id": 3190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3488:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3488:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3196,
                  "nodeType": "ExpressionStatement",
                  "src": "3488:73:3"
                },
                {
                  "assignments": [
                    3198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3198,
                      "mutability": "mutable",
                      "name": "totalPlayerCount",
                      "nameLocation": "3580:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3341,
                      "src": "3572:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3197,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3572:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3200,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3599:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3572:28:3"
                },
                {
                  "body": {
                    "id": 3301,
                    "nodeType": "Block",
                    "src": "3664:1289:3",
                    "statements": [
                      {
                        "assignments": [
                          3213
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3213,
                            "mutability": "mutable",
                            "name": "serverPlayerCount",
                            "nameLocation": "3686:17:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3301,
                            "src": "3678:25:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3212,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3678:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3219,
                        "initialValue": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3214,
                                "name": "serverPlayerLists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3183,
                                "src": "3706:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$3072_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                }
                              },
                              "id": 3216,
                              "indexExpression": {
                                "id": 3215,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3202,
                                "src": "3724:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3706:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ServerPlayers_$3072_memory_ptr",
                                "typeString": "struct GameValidator.ServerPlayers memory"
                              }
                            },
                            "id": 3217,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3727:11:3",
                            "memberName": "playerNames",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3071,
                            "src": "3706:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 3218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3739:6:3",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3706:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3678:67:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3220,
                              "name": "totalPlayerCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3198,
                              "src": "3763:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3221,
                              "name": "serverPlayerCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3213,
                              "src": "3782:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3763:36:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3223,
                            "name": "MAX_PLAYERS_PER_SUBMISSION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3028,
                            "src": "3802:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3763:65:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3227,
                        "nodeType": "IfStatement",
                        "src": "3759:163:3",
                        "trueBody": {
                          "id": 3226,
                          "nodeType": "Block",
                          "src": "3830:92:3",
                          "statements": [
                            {
                              "id": 3225,
                              "nodeType": "Break",
                              "src": "3848:5:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 3230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3228,
                            "name": "totalPlayerCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3198,
                            "src": "3935:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3229,
                            "name": "serverPlayerCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3213,
                            "src": "3955:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3935:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3231,
                        "nodeType": "ExpressionStatement",
                        "src": "3935:37:3"
                      },
                      {
                        "assignments": [
                          3233
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3233,
                            "mutability": "mutable",
                            "name": "encodedPlayerNames",
                            "nameLocation": "4072:18:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3301,
                            "src": "4059:31:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 3232,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4059:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3234,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4059:31:3"
                      },
                      {
                        "body": {
                          "id": 3262,
                          "nodeType": "Block",
                          "src": "4171:127:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 3260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3249,
                                  "name": "encodedPlayerNames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3233,
                                  "src": "4189:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 3252,
                                      "name": "encodedPlayerNames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3233,
                                      "src": "4227:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 3253,
                                            "name": "serverPlayerLists",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3183,
                                            "src": "4247:17:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$3072_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                            }
                                          },
                                          "id": 3255,
                                          "indexExpression": {
                                            "id": 3254,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3202,
                                            "src": "4265:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4247:20:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ServerPlayers_$3072_memory_ptr",
                                            "typeString": "struct GameValidator.ServerPlayers memory"
                                          }
                                        },
                                        "id": 3256,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4268:11:3",
                                        "memberName": "playerNames",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3071,
                                        "src": "4247:32:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "string memory[] memory"
                                        }
                                      },
                                      "id": 3258,
                                      "indexExpression": {
                                        "id": 3257,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3236,
                                        "src": "4280:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4247:35:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      },
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3250,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "4210:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 3251,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "4214:12:3",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "4210:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 3259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4210:73:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "src": "4189:94:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 3261,
                              "nodeType": "ExpressionStatement",
                              "src": "4189:94:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3239,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3236,
                            "src": "4121:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3240,
                                  "name": "serverPlayerLists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3183,
                                  "src": "4125:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$3072_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                  }
                                },
                                "id": 3242,
                                "indexExpression": {
                                  "id": 3241,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3202,
                                  "src": "4143:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4125:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ServerPlayers_$3072_memory_ptr",
                                  "typeString": "struct GameValidator.ServerPlayers memory"
                                }
                              },
                              "id": 3243,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4146:11:3",
                              "memberName": "playerNames",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3071,
                              "src": "4125:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 3244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4158:6:3",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4125:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4121:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3263,
                        "initializationExpression": {
                          "assignments": [
                            3236
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3236,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "4114:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 3263,
                              "src": "4109:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3235,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4109:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3238,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4118:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4109:10:3"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4166:3:3",
                            "subExpression": {
                              "id": 3246,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3236,
                              "src": "4166:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3248,
                          "nodeType": "ExpressionStatement",
                          "src": "4166:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "4104:194:3"
                      },
                      {
                        "assignments": [
                          3265
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3265,
                            "mutability": "mutable",
                            "name": "playerListHash",
                            "nameLocation": "4383:14:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3301,
                            "src": "4375:22:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3264,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4375:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3269,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3267,
                              "name": "encodedPlayerNames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3233,
                              "src": "4410:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3266,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4400:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4400:29:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4375:54:3"
                      },
                      {
                        "expression": {
                          "id": 3277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3270,
                              "name": "hashToPlayerList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3020,
                              "src": "4443:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_string_storage_$dyn_storage_$",
                                "typeString": "mapping(bytes32 => string storage ref[] storage ref)"
                              }
                            },
                            "id": 3272,
                            "indexExpression": {
                              "id": 3271,
                              "name": "playerListHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3265,
                              "src": "4460:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4443:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                              "typeString": "string storage ref[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3273,
                                "name": "serverPlayerLists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3183,
                                "src": "4478:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$3072_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                }
                              },
                              "id": 3275,
                              "indexExpression": {
                                "id": 3274,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3202,
                                "src": "4496:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4478:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ServerPlayers_$3072_memory_ptr",
                                "typeString": "struct GameValidator.ServerPlayers memory"
                              }
                            },
                            "id": 3276,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4499:11:3",
                            "memberName": "playerNames",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3071,
                            "src": "4478:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "src": "4443:67:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 3278,
                        "nodeType": "ExpressionStatement",
                        "src": "4443:67:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 3280,
                                  "name": "serverPlayerLists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3183,
                                  "src": "4620:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$3072_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                  }
                                },
                                "id": 3282,
                                "indexExpression": {
                                  "id": 3281,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3202,
                                  "src": "4638:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4620:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ServerPlayers_$3072_memory_ptr",
                                  "typeString": "struct GameValidator.ServerPlayers memory"
                                }
                              },
                              "id": 3283,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4641:8:3",
                              "memberName": "serverIP",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3068,
                              "src": "4620:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3284,
                              "name": "validatorID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3185,
                              "src": "4651:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3279,
                            "name": "updateValidatorsList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3179,
                            "src": "4599:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address)"
                            }
                          },
                          "id": 3285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4599:64:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3286,
                        "nodeType": "ExpressionStatement",
                        "src": "4599:64:3"
                      },
                      {
                        "expression": {
                          "id": 3299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3287,
                                "name": "serverSubmissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3015,
                                "src": "4760:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_ServerSubmission_$3066_storage_$_$",
                                  "typeString": "mapping(string memory => mapping(address => struct GameValidator.ServerSubmission storage ref))"
                                }
                              },
                              "id": 3293,
                              "indexExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3288,
                                    "name": "serverPlayerLists",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3183,
                                    "src": "4778:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$3072_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                    }
                                  },
                                  "id": 3290,
                                  "indexExpression": {
                                    "id": 3289,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3202,
                                    "src": "4796:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4778:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ServerPlayers_$3072_memory_ptr",
                                    "typeString": "struct GameValidator.ServerPlayers memory"
                                  }
                                },
                                "id": 3291,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4799:8:3",
                                "memberName": "serverIP",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3068,
                                "src": "4778:29:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4760:48:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ServerSubmission_$3066_storage_$",
                                "typeString": "mapping(address => struct GameValidator.ServerSubmission storage ref)"
                              }
                            },
                            "id": 3294,
                            "indexExpression": {
                              "id": 3292,
                              "name": "validatorID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3185,
                              "src": "4809:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4760:61:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ServerSubmission_$3066_storage",
                              "typeString": "struct GameValidator.ServerSubmission storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3296,
                                "name": "playerListHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3265,
                                "src": "4875:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 3297,
                                "name": "canMintFlag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3187,
                                "src": "4916:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 3295,
                              "name": "ServerSubmission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3066,
                              "src": "4824:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ServerSubmission_$3066_storage_ptr_$",
                                "typeString": "type(struct GameValidator.ServerSubmission storage pointer)"
                              }
                            },
                            "id": 3298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "4859:14:3",
                              "4907:7:3"
                            ],
                            "names": [
                              "playerListHash",
                              "canMint"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "4824:118:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ServerSubmission_$3066_memory_ptr",
                              "typeString": "struct GameValidator.ServerSubmission memory"
                            }
                          },
                          "src": "4760:182:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ServerSubmission_$3066_storage",
                            "typeString": "struct GameValidator.ServerSubmission storage ref"
                          }
                        },
                        "id": 3300,
                        "nodeType": "ExpressionStatement",
                        "src": "4760:182:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3205,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3202,
                      "src": "3629:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3206,
                        "name": "serverPlayerLists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "3633:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$3072_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                        }
                      },
                      "id": 3207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3651:6:3",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3633:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3629:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3302,
                  "initializationExpression": {
                    "assignments": [
                      3202
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3202,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3622:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3302,
                        "src": "3617:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3201,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3617:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3204,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3626:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3617:10:3"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 3210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3659:3:3",
                      "subExpression": {
                        "id": 3209,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3202,
                        "src": "3659:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3211,
                    "nodeType": "ExpressionStatement",
                    "src": "3659:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "3612:1341:3"
                },
                {
                  "assignments": [
                    3304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3304,
                      "mutability": "mutable",
                      "name": "currentTime",
                      "nameLocation": "5024:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3341,
                      "src": "5016:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3303,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5016:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3307,
                  "initialValue": {
                    "expression": {
                      "id": 3305,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "5038:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 3306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5044:9:3",
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "5038:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5016:37:3"
                },
                {
                  "assignments": [
                    3309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3309,
                      "mutability": "mutable",
                      "name": "timeSinceLastMint",
                      "nameLocation": "5071:17:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3341,
                      "src": "5063:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3308,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5063:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3313,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3310,
                      "name": "currentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3304,
                      "src": "5091:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 3311,
                      "name": "lastMintTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3022,
                      "src": "5105:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5091:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5063:54:3"
                },
                {
                  "assignments": [
                    3315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3315,
                      "mutability": "mutable",
                      "name": "timeToNextInterval",
                      "nameLocation": "5135:18:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3341,
                      "src": "5127:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3314,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5127:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3322,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3316,
                      "name": "MINT_INTERVAL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3025,
                      "src": "5156:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3317,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3304,
                            "src": "5173:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 3318,
                            "name": "MINT_INTERVAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3025,
                            "src": "5187:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5173:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3320,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5172:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5156:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5127:74:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3323,
                        "name": "timeSinceLastMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3309,
                        "src": "5216:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 3324,
                        "name": "MINT_INTERVAL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3025,
                        "src": "5237:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5216:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3326,
                        "name": "timeToNextInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3315,
                        "src": "5254:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 3327,
                        "name": "MINT_INTERVAL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3025,
                        "src": "5275:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5254:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5216:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3340,
                  "nodeType": "IfStatement",
                  "src": "5212:220:3",
                  "trueBody": {
                    "id": 3339,
                    "nodeType": "Block",
                    "src": "5290:142:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3330,
                            "name": "performMassMinting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3473,
                            "src": "5304:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5304:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3332,
                        "nodeType": "ExpressionStatement",
                        "src": "5304:20:3"
                      },
                      {
                        "expression": {
                          "id": 3337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3333,
                            "name": "lastMintTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3022,
                            "src": "5338:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3334,
                              "name": "currentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3304,
                              "src": "5353:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 3335,
                              "name": "timeToNextInterval",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3315,
                              "src": "5367:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5353:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5338:47:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3338,
                        "nodeType": "ExpressionStatement",
                        "src": "5338:47:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b8f41a3c",
            "id": 3342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitPlayerList",
            "nameLocation": "3373:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3183,
                  "mutability": "mutable",
                  "name": "serverPlayerLists",
                  "nameLocation": "3413:17:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "3390:40:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$3072_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct GameValidator.ServerPlayers[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3181,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3180,
                        "name": "ServerPlayers",
                        "nameLocations": [
                          "3390:13:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3072,
                        "src": "3390:13:3"
                      },
                      "referencedDeclaration": 3072,
                      "src": "3390:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ServerPlayers_$3072_storage_ptr",
                        "typeString": "struct GameValidator.ServerPlayers"
                      }
                    },
                    "id": 3182,
                    "nodeType": "ArrayTypeName",
                    "src": "3390:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$3072_storage_$dyn_storage_ptr",
                      "typeString": "struct GameValidator.ServerPlayers[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3185,
                  "mutability": "mutable",
                  "name": "validatorID",
                  "nameLocation": "3440:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "3432:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3187,
                  "mutability": "mutable",
                  "name": "canMintFlag",
                  "nameLocation": "3458:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "3453:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3186,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3453:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3389:81:3"
            },
            "returnParameters": {
              "id": 3189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3478:0:3"
            },
            "scope": 3709,
            "src": "3364:2074:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3354,
              "nodeType": "Block",
              "src": "6707:141:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3351,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3344,
                        "src": "6832:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3349,
                        "name": "playerDatabase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3000,
                        "src": "6805:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
                          "typeString": "contract IPlayerDatabase"
                        }
                      },
                      "id": 3350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6820:11:3",
                      "memberName": "isValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2988,
                      "src": "6805:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 3352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6805:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3348,
                  "id": 3353,
                  "nodeType": "Return",
                  "src": "6798:43:3"
                }
              ]
            },
            "functionSelector": "facd743b",
            "id": 3355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidator",
            "nameLocation": "6650:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3344,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6670:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "6662:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6662:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6661:18:3"
            },
            "returnParameters": {
              "id": 3348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3347,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "6701:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3346,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6701:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6700:6:3"
            },
            "scope": 3709,
            "src": "6641:207:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3419,
              "nodeType": "Block",
              "src": "6890:416:3",
              "statements": [
                {
                  "assignments": [
                    3362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3362,
                      "mutability": "mutable",
                      "name": "serverIPs",
                      "nameLocation": "6916:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3419,
                      "src": "6900:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3360,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6900:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 3361,
                        "nodeType": "ArrayTypeName",
                        "src": "6900:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3366,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3363,
                        "name": "playerDatabase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3000,
                        "src": "6928:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
                          "typeString": "contract IPlayerDatabase"
                        }
                      },
                      "id": 3364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6943:15:3",
                      "memberName": "getServerIPList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2970,
                      "src": "6928:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (string memory[] memory)"
                      }
                    },
                    "id": 3365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6928:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6900:60:3"
                },
                {
                  "body": {
                    "id": 3417,
                    "nodeType": "Block",
                    "src": "7014:286:3",
                    "statements": [
                      {
                        "assignments": [
                          3379
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3379,
                            "mutability": "mutable",
                            "name": "serverIP",
                            "nameLocation": "7042:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3417,
                            "src": "7028:22:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 3378,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "7028:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3383,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3380,
                            "name": "serverIPs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3362,
                            "src": "7053:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 3382,
                          "indexExpression": {
                            "id": 3381,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3368,
                            "src": "7063:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7053:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7028:37:3"
                      },
                      {
                        "assignments": [
                          3388
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3388,
                            "mutability": "mutable",
                            "name": "validators",
                            "nameLocation": "7096:10:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3417,
                            "src": "7079:27:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3386,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7079:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3387,
                              "nodeType": "ArrayTypeName",
                              "src": "7079:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3392,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3389,
                            "name": "validatorsPerServerIP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3008,
                            "src": "7109:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                              "typeString": "mapping(string memory => address[] storage ref)"
                            }
                          },
                          "id": 3391,
                          "indexExpression": {
                            "id": 3390,
                            "name": "serverIP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3379,
                            "src": "7131:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7109:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7079:61:3"
                      },
                      {
                        "body": {
                          "id": 3415,
                          "nodeType": "Block",
                          "src": "7199:91:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 3413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 3404,
                                        "name": "serverSubmissions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3015,
                                        "src": "7217:17:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_ServerSubmission_$3066_storage_$_$",
                                          "typeString": "mapping(string memory => mapping(address => struct GameValidator.ServerSubmission storage ref))"
                                        }
                                      },
                                      "id": 3409,
                                      "indexExpression": {
                                        "id": 3405,
                                        "name": "serverIP",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3379,
                                        "src": "7235:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7217:27:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ServerSubmission_$3066_storage_$",
                                        "typeString": "mapping(address => struct GameValidator.ServerSubmission storage ref)"
                                      }
                                    },
                                    "id": 3410,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 3406,
                                        "name": "validators",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3388,
                                        "src": "7245:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 3408,
                                      "indexExpression": {
                                        "id": 3407,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3394,
                                        "src": "7256:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7245:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7217:42:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ServerSubmission_$3066_storage",
                                      "typeString": "struct GameValidator.ServerSubmission storage ref"
                                    }
                                  },
                                  "id": 3411,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7260:7:3",
                                  "memberName": "canMint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3065,
                                  "src": "7217:50:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 3412,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7270:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "7217:58:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3414,
                              "nodeType": "ExpressionStatement",
                              "src": "7217:58:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3397,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3394,
                            "src": "7171:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3398,
                              "name": "validators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3388,
                              "src": "7175:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7186:6:3",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7175:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7171:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3416,
                        "initializationExpression": {
                          "assignments": [
                            3394
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3394,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "7164:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 3416,
                              "src": "7159:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3393,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "7159:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3396,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7168:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7159:10:3"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7194:3:3",
                            "subExpression": {
                              "id": 3401,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3394,
                              "src": "7194:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3403,
                          "nodeType": "ExpressionStatement",
                          "src": "7194:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "7154:136:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3371,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3368,
                      "src": "6987:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3372,
                        "name": "serverIPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3362,
                        "src": "6991:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 3373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7001:6:3",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6991:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6987:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3418,
                  "initializationExpression": {
                    "assignments": [
                      3368
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3368,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6980:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3418,
                        "src": "6975:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3367,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6975:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3370,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6984:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6975:10:3"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 3376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7009:3:3",
                      "subExpression": {
                        "id": 3375,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3368,
                        "src": "7009:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3377,
                    "nodeType": "ExpressionStatement",
                    "src": "7009:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "6970:330:3"
                }
              ]
            },
            "id": 3420,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetSubmissions",
            "nameLocation": "6863:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6879:2:3"
            },
            "returnParameters": {
              "id": 3357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6890:0:3"
            },
            "scope": 3709,
            "src": "6854:452:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3472,
              "nodeType": "Block",
              "src": "7389:384:3",
              "statements": [
                {
                  "assignments": [
                    3427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3427,
                      "mutability": "mutable",
                      "name": "serverIPs",
                      "nameLocation": "7415:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3472,
                      "src": "7399:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3425,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7399:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 3426,
                        "nodeType": "ArrayTypeName",
                        "src": "7399:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3431,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3428,
                        "name": "playerDatabase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3000,
                        "src": "7427:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
                          "typeString": "contract IPlayerDatabase"
                        }
                      },
                      "id": 3429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7442:15:3",
                      "memberName": "getServerIPList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2970,
                      "src": "7427:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (string memory[] memory)"
                      }
                    },
                    "id": 3430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7427:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7399:60:3"
                },
                {
                  "body": {
                    "id": 3467,
                    "nodeType": "Block",
                    "src": "7513:226:3",
                    "statements": [
                      {
                        "assignments": [
                          3444
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3444,
                            "mutability": "mutable",
                            "name": "serverIP",
                            "nameLocation": "7541:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3467,
                            "src": "7527:22:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 3443,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "7527:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3448,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3445,
                            "name": "serverIPs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3427,
                            "src": "7552:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 3447,
                          "indexExpression": {
                            "id": 3446,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3433,
                            "src": "7562:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7552:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7527:37:3"
                      },
                      {
                        "assignments": [
                          3450
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3450,
                            "mutability": "mutable",
                            "name": "commonHash",
                            "nameLocation": "7586:10:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3467,
                            "src": "7578:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3449,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7578:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3454,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3452,
                              "name": "serverIP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3444,
                              "src": "7618:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 3451,
                            "name": "findMostCommonHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3692,
                            "src": "7599:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory) view returns (bytes32)"
                            }
                          },
                          "id": 3453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7599:28:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7578:49:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 3460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3455,
                            "name": "commonHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3450,
                            "src": "7645:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7667:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7659:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 3456,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "7659:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7659:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "7645:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3466,
                        "nodeType": "IfStatement",
                        "src": "7641:88:3",
                        "trueBody": {
                          "id": 3465,
                          "nodeType": "Block",
                          "src": "7671:58:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3462,
                                    "name": "commonHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3450,
                                    "src": "7703:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 3461,
                                  "name": "mintForServer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3534,
                                  "src": "7689:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32)"
                                  }
                                },
                                "id": 3463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7689:25:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3464,
                              "nodeType": "ExpressionStatement",
                              "src": "7689:25:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3436,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3433,
                      "src": "7486:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3437,
                        "name": "serverIPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3427,
                        "src": "7490:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 3438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7500:6:3",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7490:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7486:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3468,
                  "initializationExpression": {
                    "assignments": [
                      3433
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3433,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7479:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3468,
                        "src": "7474:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3432,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7474:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3435,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7483:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7474:10:3"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 3441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7508:3:3",
                      "subExpression": {
                        "id": 3440,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3433,
                        "src": "7508:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3442,
                    "nodeType": "ExpressionStatement",
                    "src": "7508:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "7469:270:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3469,
                      "name": "resetSubmissions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3420,
                      "src": "7748:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7748:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3471,
                  "nodeType": "ExpressionStatement",
                  "src": "7748:18:3"
                }
              ]
            },
            "functionSelector": "64c8c5a7",
            "id": 3473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performMassMinting",
            "nameLocation": "7361:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7379:2:3"
            },
            "returnParameters": {
              "id": 3422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7389:0:3"
            },
            "scope": 3709,
            "src": "7352:421:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3533,
              "nodeType": "Block",
              "src": "7833:581:3",
              "statements": [
                {
                  "assignments": [
                    3482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3482,
                      "mutability": "mutable",
                      "name": "playerList",
                      "nameLocation": "7914:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3533,
                      "src": "7898:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3480,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7898:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 3481,
                        "nodeType": "ArrayTypeName",
                        "src": "7898:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3486,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3483,
                      "name": "hashToPlayerList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3020,
                      "src": "7927:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_string_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => string storage ref[] storage ref)"
                      }
                    },
                    "id": 3485,
                    "indexExpression": {
                      "id": 3484,
                      "name": "playerListHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3475,
                      "src": "7944:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7927:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7898:61:3"
                },
                {
                  "assignments": [
                    3491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3491,
                      "mutability": "mutable",
                      "name": "rewardAddresses",
                      "nameLocation": "7986:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3533,
                      "src": "7969:32:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3489,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7969:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3490,
                        "nodeType": "ArrayTypeName",
                        "src": "7969:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3495,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3493,
                        "name": "playerList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3482,
                        "src": "8035:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      ],
                      "id": 3492,
                      "name": "getValidRewardAddressesByNames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3708,
                      "src": "8004:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (string memory[] memory) view returns (address[] memory)"
                      }
                    },
                    "id": 3494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8004:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7969:77:3"
                },
                {
                  "assignments": [
                    3497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3497,
                      "mutability": "mutable",
                      "name": "mintAmount",
                      "nameLocation": "8065:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3533,
                      "src": "8057:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3496,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8057:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3500,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3498,
                      "name": "calculateMintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3127,
                      "src": "8078:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 3499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8078:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8057:42:3"
                },
                {
                  "body": {
                    "id": 3531,
                    "nodeType": "Block",
                    "src": "8231:177:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 3512,
                              "name": "rewardAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3491,
                              "src": "8249:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3514,
                            "indexExpression": {
                              "id": 3513,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3502,
                              "src": "8265:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8249:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8279:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8271:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3515,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8271:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8271:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8249:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3530,
                        "nodeType": "IfStatement",
                        "src": "8245:153:3",
                        "trueBody": {
                          "id": 3529,
                          "nodeType": "Block",
                          "src": "8283:115:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 3523,
                                      "name": "rewardAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3491,
                                      "src": "8352:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 3525,
                                    "indexExpression": {
                                      "id": 3524,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3502,
                                      "src": "8368:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8352:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3526,
                                    "name": "mintAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3497,
                                    "src": "8372:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3520,
                                    "name": "mintContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3003,
                                    "src": "8328:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IGP_Mint_$2997",
                                      "typeString": "contract IGP_Mint"
                                    }
                                  },
                                  "id": 3522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8341:10:3",
                                  "memberName": "mintTokens",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2996,
                                  "src": "8328:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 3527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8328:55:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3528,
                              "nodeType": "ExpressionStatement",
                              "src": "8328:55:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3505,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3502,
                      "src": "8198:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3506,
                        "name": "rewardAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3491,
                        "src": "8202:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 3507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8218:6:3",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8202:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8198:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3532,
                  "initializationExpression": {
                    "assignments": [
                      3502
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3502,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8191:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3532,
                        "src": "8186:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3501,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8186:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3504,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8195:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8186:10:3"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 3510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8226:3:3",
                      "subExpression": {
                        "id": 3509,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3502,
                        "src": "8226:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3511,
                    "nodeType": "ExpressionStatement",
                    "src": "8226:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "8181:227:3"
                }
              ]
            },
            "id": 3534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintForServer",
            "nameLocation": "7787:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3475,
                  "mutability": "mutable",
                  "name": "playerListHash",
                  "nameLocation": "7809:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3534,
                  "src": "7801:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3474,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7801:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7800:24:3"
            },
            "returnParameters": {
              "id": 3477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7833:0:3"
            },
            "scope": 3709,
            "src": "7778:636:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3691,
              "nodeType": "Block",
              "src": "8502:1511:3",
              "statements": [
                {
                  "assignments": [
                    3545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3545,
                      "mutability": "mutable",
                      "name": "validators",
                      "nameLocation": "8619:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3691,
                      "src": "8602:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3543,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8602:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3544,
                        "nodeType": "ArrayTypeName",
                        "src": "8602:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3549,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3546,
                      "name": "validatorsPerServerIP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3008,
                      "src": "8632:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 3548,
                    "indexExpression": {
                      "id": 3547,
                      "name": "serverIP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3536,
                      "src": "8654:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8632:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8602:61:3"
                },
                {
                  "assignments": [
                    3551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3551,
                      "mutability": "mutable",
                      "name": "majorityThreshold",
                      "nameLocation": "8681:17:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3691,
                      "src": "8673:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3550,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8673:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3559,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3552,
                              "name": "validators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3545,
                              "src": "8702:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8713:6:3",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8702:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 3554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8722:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "8702:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3556,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8701:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8728:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "8701:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8673:58:3"
                },
                {
                  "assignments": [
                    3561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3561,
                      "mutability": "mutable",
                      "name": "majorityHash",
                      "nameLocation": "8777:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3691,
                      "src": "8769:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3560,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8769:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3566,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 3564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8800:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8792:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 3562,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8792:7:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8792:10:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8769:33:3"
                },
                {
                  "assignments": [
                    3568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3568,
                      "mutability": "mutable",
                      "name": "highestCount",
                      "nameLocation": "8820:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3691,
                      "src": "8812:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8812:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3570,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8835:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8812:24:3"
                },
                {
                  "assignments": [
                    3575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3575,
                      "mutability": "mutable",
                      "name": "hashCounts",
                      "nameLocation": "8928:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3691,
                      "src": "8909:29:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_HashCount_$3077_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct GameValidator.HashCount[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3573,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3572,
                            "name": "HashCount",
                            "nameLocations": [
                              "8909:9:3"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3077,
                            "src": "8909:9:3"
                          },
                          "referencedDeclaration": 3077,
                          "src": "8909:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HashCount_$3077_storage_ptr",
                            "typeString": "struct GameValidator.HashCount"
                          }
                        },
                        "id": 3574,
                        "nodeType": "ArrayTypeName",
                        "src": "8909:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_HashCount_$3077_storage_$dyn_storage_ptr",
                          "typeString": "struct GameValidator.HashCount[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3583,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3580,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3545,
                          "src": "8957:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 3581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8968:6:3",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "8957:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8941:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_HashCount_$3077_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct GameValidator.HashCount memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3577,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3576,
                            "name": "HashCount",
                            "nameLocations": [
                              "8945:9:3"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3077,
                            "src": "8945:9:3"
                          },
                          "referencedDeclaration": 3077,
                          "src": "8945:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HashCount_$3077_storage_ptr",
                            "typeString": "struct GameValidator.HashCount"
                          }
                        },
                        "id": 3578,
                        "nodeType": "ArrayTypeName",
                        "src": "8945:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_HashCount_$3077_storage_$dyn_storage_ptr",
                          "typeString": "struct GameValidator.HashCount[]"
                        }
                      }
                    },
                    "id": 3582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8941:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_HashCount_$3077_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct GameValidator.HashCount memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8909:66:3"
                },
                {
                  "body": {
                    "id": 3677,
                    "nodeType": "Block",
                    "src": "9073:725:3",
                    "statements": [
                      {
                        "assignments": [
                          3596
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3596,
                            "mutability": "mutable",
                            "name": "currentHash",
                            "nameLocation": "9095:11:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3677,
                            "src": "9087:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3595,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9087:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3605,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3597,
                                "name": "serverSubmissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3015,
                                "src": "9109:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_ServerSubmission_$3066_storage_$_$",
                                  "typeString": "mapping(string memory => mapping(address => struct GameValidator.ServerSubmission storage ref))"
                                }
                              },
                              "id": 3599,
                              "indexExpression": {
                                "id": 3598,
                                "name": "serverIP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3536,
                                "src": "9127:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9109:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ServerSubmission_$3066_storage_$",
                                "typeString": "mapping(address => struct GameValidator.ServerSubmission storage ref)"
                              }
                            },
                            "id": 3603,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3600,
                                "name": "validators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3545,
                                "src": "9137:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 3602,
                              "indexExpression": {
                                "id": 3601,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3585,
                                "src": "9148:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9137:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9109:42:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ServerSubmission_$3066_storage",
                              "typeString": "struct GameValidator.ServerSubmission storage ref"
                            }
                          },
                          "id": 3604,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9152:14:3",
                          "memberName": "playerListHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3063,
                          "src": "9109:57:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9087:79:3"
                      },
                      {
                        "assignments": [
                          3607
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3607,
                            "mutability": "mutable",
                            "name": "found",
                            "nameLocation": "9185:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3677,
                            "src": "9180:10:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3606,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9180:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3609,
                        "initialValue": {
                          "hexValue": "66616c7365",
                          "id": 3608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9193:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9180:18:3"
                      },
                      {
                        "body": {
                          "id": 3640,
                          "nodeType": "Block",
                          "src": "9258:194:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 3626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3621,
                                      "name": "hashCounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3575,
                                      "src": "9280:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_HashCount_$3077_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct GameValidator.HashCount memory[] memory"
                                      }
                                    },
                                    "id": 3623,
                                    "indexExpression": {
                                      "id": 3622,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3611,
                                      "src": "9291:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9280:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HashCount_$3077_memory_ptr",
                                      "typeString": "struct GameValidator.HashCount memory"
                                    }
                                  },
                                  "id": 3624,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9294:4:3",
                                  "memberName": "hash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3074,
                                  "src": "9280:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3625,
                                  "name": "currentHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3596,
                                  "src": "9302:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "9280:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3639,
                              "nodeType": "IfStatement",
                              "src": "9276:162:3",
                              "trueBody": {
                                "id": 3638,
                                "nodeType": "Block",
                                "src": "9315:123:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 3631,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "9337:21:3",
                                      "subExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 3627,
                                            "name": "hashCounts",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3575,
                                            "src": "9337:10:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_HashCount_$3077_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct GameValidator.HashCount memory[] memory"
                                            }
                                          },
                                          "id": 3629,
                                          "indexExpression": {
                                            "id": 3628,
                                            "name": "j",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3611,
                                            "src": "9348:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9337:13:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_HashCount_$3077_memory_ptr",
                                            "typeString": "struct GameValidator.HashCount memory"
                                          }
                                        },
                                        "id": 3630,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "9351:5:3",
                                        "memberName": "count",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3076,
                                        "src": "9337:19:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3632,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9337:21:3"
                                  },
                                  {
                                    "expression": {
                                      "id": 3635,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 3633,
                                        "name": "found",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3607,
                                        "src": "9380:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 3634,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9388:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "9380:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3636,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9380:12:3"
                                  },
                                  {
                                    "id": 3637,
                                    "nodeType": "Break",
                                    "src": "9414:5:3"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3614,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3611,
                            "src": "9230:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3615,
                              "name": "hashCounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3575,
                              "src": "9234:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HashCount_$3077_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct GameValidator.HashCount memory[] memory"
                              }
                            },
                            "id": 3616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9245:6:3",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9234:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9230:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3641,
                        "initializationExpression": {
                          "assignments": [
                            3611
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3611,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "9223:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 3641,
                              "src": "9218:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3610,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9218:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3613,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9227:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9218:10:3"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9253:3:3",
                            "subExpression": {
                              "id": 3618,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3611,
                              "src": "9253:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3620,
                          "nodeType": "ExpressionStatement",
                          "src": "9253:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "9213:239:3"
                      },
                      {
                        "condition": {
                          "id": 3643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9470:6:3",
                          "subExpression": {
                            "id": 3642,
                            "name": "found",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3607,
                            "src": "9471:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3654,
                        "nodeType": "IfStatement",
                        "src": "9466:101:3",
                        "trueBody": {
                          "id": 3653,
                          "nodeType": "Block",
                          "src": "9478:89:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 3651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3644,
                                    "name": "hashCounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3575,
                                    "src": "9496:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_HashCount_$3077_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct GameValidator.HashCount memory[] memory"
                                    }
                                  },
                                  "id": 3646,
                                  "indexExpression": {
                                    "id": 3645,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3585,
                                    "src": "9507:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9496:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HashCount_$3077_memory_ptr",
                                    "typeString": "struct GameValidator.HashCount memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 3648,
                                      "name": "currentHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3596,
                                      "src": "9529:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "hexValue": "31",
                                      "id": 3649,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9549:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "id": 3647,
                                    "name": "HashCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3077,
                                    "src": "9512:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_HashCount_$3077_storage_ptr_$",
                                      "typeString": "type(struct GameValidator.HashCount storage pointer)"
                                    }
                                  },
                                  "id": 3650,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [
                                    "9523:4:3",
                                    "9542:5:3"
                                  ],
                                  "names": [
                                    "hash",
                                    "count"
                                  ],
                                  "nodeType": "FunctionCall",
                                  "src": "9512:40:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HashCount_$3077_memory_ptr",
                                    "typeString": "struct GameValidator.HashCount memory"
                                  }
                                },
                                "src": "9496:56:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_HashCount_$3077_memory_ptr",
                                  "typeString": "struct GameValidator.HashCount memory"
                                }
                              },
                              "id": 3652,
                              "nodeType": "ExpressionStatement",
                              "src": "9496:56:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3655,
                                "name": "hashCounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3575,
                                "src": "9634:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_HashCount_$3077_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct GameValidator.HashCount memory[] memory"
                                }
                              },
                              "id": 3657,
                              "indexExpression": {
                                "id": 3656,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3585,
                                "src": "9645:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9634:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HashCount_$3077_memory_ptr",
                                "typeString": "struct GameValidator.HashCount memory"
                              }
                            },
                            "id": 3658,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9648:5:3",
                            "memberName": "count",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3076,
                            "src": "9634:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3659,
                            "name": "highestCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3568,
                            "src": "9656:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9634:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3676,
                        "nodeType": "IfStatement",
                        "src": "9630:158:3",
                        "trueBody": {
                          "id": 3675,
                          "nodeType": "Block",
                          "src": "9670:118:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 3666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3661,
                                  "name": "highestCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3568,
                                  "src": "9688:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3662,
                                      "name": "hashCounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3575,
                                      "src": "9703:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_HashCount_$3077_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct GameValidator.HashCount memory[] memory"
                                      }
                                    },
                                    "id": 3664,
                                    "indexExpression": {
                                      "id": 3663,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3585,
                                      "src": "9714:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9703:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HashCount_$3077_memory_ptr",
                                      "typeString": "struct GameValidator.HashCount memory"
                                    }
                                  },
                                  "id": 3665,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9717:5:3",
                                  "memberName": "count",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3076,
                                  "src": "9703:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9688:34:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3667,
                              "nodeType": "ExpressionStatement",
                              "src": "9688:34:3"
                            },
                            {
                              "expression": {
                                "id": 3673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3668,
                                  "name": "majorityHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3561,
                                  "src": "9740:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3669,
                                      "name": "hashCounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3575,
                                      "src": "9755:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_HashCount_$3077_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct GameValidator.HashCount memory[] memory"
                                      }
                                    },
                                    "id": 3671,
                                    "indexExpression": {
                                      "id": 3670,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3585,
                                      "src": "9766:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9755:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HashCount_$3077_memory_ptr",
                                      "typeString": "struct GameValidator.HashCount memory"
                                    }
                                  },
                                  "id": 3672,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9769:4:3",
                                  "memberName": "hash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3074,
                                  "src": "9755:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "9740:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 3674,
                              "nodeType": "ExpressionStatement",
                              "src": "9740:33:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3588,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3585,
                      "src": "9045:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3589,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3545,
                        "src": "9049:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 3590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9060:6:3",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9049:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9045:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3678,
                  "initializationExpression": {
                    "assignments": [
                      3585
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3585,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9038:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3678,
                        "src": "9033:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3584,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9033:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3587,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9042:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9033:10:3"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 3593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9068:3:3",
                      "subExpression": {
                        "id": 3592,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3585,
                        "src": "9068:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3594,
                    "nodeType": "ExpressionStatement",
                    "src": "9068:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "9028:770:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3679,
                      "name": "highestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3568,
                      "src": "9879:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 3680,
                      "name": "majorityThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3551,
                      "src": "9895:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9879:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3685,
                  "nodeType": "IfStatement",
                  "src": "9875:83:3",
                  "trueBody": {
                    "id": 3684,
                    "nodeType": "Block",
                    "src": "9914:44:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 3682,
                          "name": "majorityHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3561,
                          "src": "9935:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 3540,
                        "id": 3683,
                        "nodeType": "Return",
                        "src": "9928:19:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 3688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9983:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9975:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 3686,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9975:7:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9975:10:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3540,
                  "id": 3690,
                  "nodeType": "Return",
                  "src": "9968:17:3"
                }
              ]
            },
            "id": 3692,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findMostCommonHash",
            "nameLocation": "8428:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3536,
                  "mutability": "mutable",
                  "name": "serverIP",
                  "nameLocation": "8461:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3692,
                  "src": "8447:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3535,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8447:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8446:24:3"
            },
            "returnParameters": {
              "id": 3540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3539,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3692,
                  "src": "8493:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8493:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8492:9:3"
            },
            "scope": 3709,
            "src": "8419:1594:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3707,
              "nodeType": "Block",
              "src": "10212:96:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3703,
                        "name": "playerNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3695,
                        "src": "10275:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
                        "id": 3704,
                        "name": "lastMintTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3022,
                        "src": "10288:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3701,
                        "name": "playerDatabase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3000,
                        "src": "10229:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPlayerDatabase_$2989",
                          "typeString": "contract IPlayerDatabase"
                        }
                      },
                      "id": 3702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10244:30:3",
                      "memberName": "getValidRewardAddressesByNames",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2981,
                      "src": "10229:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (string memory[] memory,uint256) view external returns (address[] memory)"
                      }
                    },
                    "id": 3705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10229:72:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 3700,
                  "id": 3706,
                  "nodeType": "Return",
                  "src": "10222:79:3"
                }
              ]
            },
            "functionSelector": "3592696d",
            "id": 3708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidRewardAddressesByNames",
            "nameLocation": "10113:30:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3695,
                  "mutability": "mutable",
                  "name": "playerNames",
                  "nameLocation": "10160:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "10144:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3693,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "10144:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 3694,
                    "nodeType": "ArrayTypeName",
                    "src": "10144:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10143:29:3"
            },
            "returnParameters": {
              "id": 3700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3699,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "10194:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3697,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10194:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3698,
                    "nodeType": "ArrayTypeName",
                    "src": "10194:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10193:18:3"
            },
            "scope": 3709,
            "src": "10104:204:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3710,
        "src": "577:9767:3",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "33:10312:3"
  },
  "bytecode": "",
  "bytecodeSha1": "6f2e4b88a2e5546b85b935de920d088e2fdea9a6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.24+commit.e11b9ed9"
  },
  "contractName": "GameValidator",
  "coverageMap": {
    "branches": {
      "3": {
        "GameValidator.calculateMintAmount": {
          "50": [
            2656,
            2686,
            false
          ]
        },
        "GameValidator.findMostCommonHash": {
          "43": [
            9280,
            9313,
            false
          ],
          "44": [
            9471,
            9476,
            false
          ],
          "45": [
            9634,
            9668,
            false
          ],
          "46": [
            9879,
            9912,
            false
          ]
        },
        "GameValidator.mintForServer": {
          "47": [
            8249,
            8281,
            false
          ]
        },
        "GameValidator.performMassMinting": {
          "38": [
            7645,
            7669,
            false
          ]
        },
        "GameValidator.submitPlayerList": {
          "39": [
            3496,
            3520,
            true
          ],
          "40": [
            3763,
            3828,
            false
          ],
          "41": [
            5216,
            5250,
            false
          ],
          "42": [
            5254,
            5288,
            false
          ]
        },
        "GameValidator.updateValidatorsList": {
          "48": [
            3112,
            3159,
            false
          ],
          "49": [
            3263,
            3278,
            false
          ]
        }
      }
    },
    "statements": {
      "3": {
        "GameValidator.calculateMintAmount": {
          "37": [
            2794,
            2835
          ]
        },
        "GameValidator.findMostCommonHash": {
          "18": [
            9337,
            9358
          ],
          "19": [
            9380,
            9392
          ],
          "20": [
            9414,
            9419
          ],
          "21": [
            9253,
            9256
          ],
          "22": [
            9496,
            9552
          ],
          "23": [
            9688,
            9722
          ],
          "24": [
            9740,
            9773
          ],
          "25": [
            9068,
            9071
          ],
          "26": [
            9928,
            9947
          ],
          "27": [
            9968,
            9985
          ]
        },
        "GameValidator.getValidRewardAddressesByNames": {
          "2": [
            10222,
            10301
          ]
        },
        "GameValidator.isValidator": {
          "17": [
            6798,
            6841
          ]
        },
        "GameValidator.mintForServer": {
          "28": [
            8328,
            8383
          ],
          "29": [
            8226,
            8229
          ]
        },
        "GameValidator.performMassMinting": {
          "3": [
            7689,
            7714
          ],
          "4": [
            7508,
            7511
          ],
          "5": [
            7748,
            7766
          ]
        },
        "GameValidator.resetSubmissions": {
          "30": [
            7217,
            7275
          ],
          "31": [
            7194,
            7197
          ],
          "32": [
            7009,
            7012
          ]
        },
        "GameValidator.setMintContractAddress": {
          "1": [
            2161,
            2205
          ]
        },
        "GameValidator.setPlayerDatabaseAddress": {
          "0": [
            2442,
            2497
          ]
        },
        "GameValidator.submitPlayerList": {
          "6": [
            3488,
            3561
          ],
          "7": [
            3848,
            3853
          ],
          "8": [
            3935,
            3972
          ],
          "9": [
            4189,
            4283
          ],
          "10": [
            4166,
            4169
          ],
          "11": [
            4443,
            4510
          ],
          "12": [
            4599,
            4663
          ],
          "13": [
            4760,
            4942
          ],
          "14": [
            3659,
            3662
          ],
          "15": [
            5304,
            5324
          ],
          "16": [
            5338,
            5385
          ]
        },
        "GameValidator.updateValidatorsList": {
          "33": [
            3179,
            3201
          ],
          "34": [
            3219,
            3224
          ],
          "35": [
            3089,
            3092
          ],
          "36": [
            3294,
            3341
          ]
        }
      }
    }
  },
  "dependencies": [
    "IGP_Mint",
    "IPlayerDatabase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "577:9767:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2277:227;;;;;;:::i;:::-;2442:14;:55;;-1:-1:-1;;;;;;2442:55:3;-1:-1:-1;;;;;2442:55:3;;;;;;;;;;2277:227;;;1144:60;;1188:16;1144:60;;;;;687:25:6;;;675:2;660:18;1144:60:3;;;;;;;;10104:204;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;742:80::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:80:3;;;;;;;;;;;;;;;;;;;;;4792:25:6;;;4860:14;;4853:22;4848:2;4833:18;;4826:50;4765:18;742:80:3;4624:258:6;7352:421:3;;;:::i;1009:55::-;;1062:2;1009:55;;954:49;;994:9;954:49;;921:27;;;;;;3364:2074;;;;;;:::i;:::-;;:::i;643:28::-;;;;;-1:-1:-1;;;;;643:28:3;;;;;;-1:-1:-1;;;;;7272:32:6;;;7254:51;;7242:2;7227:18;643:28:3;7091:220:6;2000:212:3;;;;;;:::i;:::-;2161:12;:44;;-1:-1:-1;;;;;;2161:44:3;-1:-1:-1;;;;;2161:44:3;;;;;;;;;;2000:212;1070:50;;1110:10;1070:50;;829:52;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6641:207::-;;;;;;:::i;:::-;;:::i;:::-;;;8490:14:6;;8483:22;8465:41;;8453:2;8438:18;6641:207:3;8325:187:6;10104:204:3;10229:14;;10288:12;;10229:72;;-1:-1:-1;;;10229:72:3;;10194:16;;-1:-1:-1;;;;;10229:14:3;;:45;;:72;;10275:11;;10229:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10229:72:3;;;;;;;;;;;;:::i;:::-;10222:79;10104:204;-1:-1:-1;;10104:204:3:o;7352:421::-;7399:25;7427:14;;;;;;;;;-1:-1:-1;;;;;7427:14:3;-1:-1:-1;;;;;7427:30:3;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7427:32:3;;;;;;;;;;;;:::i;:::-;7399:60;;7474:6;7469:270;7490:9;:16;7486:1;:20;7469:270;;;7527:22;7552:9;7562:1;7552:12;;;;;;;;:::i;:::-;;;;;;;7527:37;;7578:18;7599:28;7618:8;7599:18;:28::i;:::-;7578:49;-1:-1:-1;7645:24:3;;7641:88;;7689:25;7703:10;7689:13;:25::i;:::-;-1:-1:-1;;7508:3:3;;7469:270;;;;7748:18;:16;:18::i;:::-;7389:384;7352:421::o;3364:2074::-;3496:24;3508:11;3496;:24::i;:::-;3488:73;;;;-1:-1:-1;;;3488:73:3;;12340:2:6;3488:73:3;;;12322:21:6;12379:2;12359:18;;;12352:30;12418:34;12398:18;;;12391:62;-1:-1:-1;;;12469:18:6;;;12462:34;12513:19;;3488:73:3;;;;;;;;3572:24;3617:6;3612:1341;3633:17;:24;3629:1;:28;3612:1341;;;3678:25;3706:17;3724:1;3706:20;;;;;;;;:::i;:::-;;;;;;;:32;;;:39;3678:67;;1062:2;3782:17;3763:16;:36;;;;:::i;:::-;:65;3759:163;;;3848:5;;;3759:163;3935:37;3955:17;3935:37;;:::i;:::-;;;4059:31;4109:6;4104:194;4125:17;4143:1;4125:20;;;;;;;;:::i;:::-;;;;;;;:32;;;:39;4121:1;:43;4104:194;;;4227:18;4247:17;4265:1;4247:20;;;;;;;;:::i;:::-;;;;;;;:32;;;4280:1;4247:35;;;;;;;;:::i;:::-;;;;;;;4210:73;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4210:73:3;;;;;;;;;;-1:-1:-1;4166:3:3;;4104:194;;;-1:-1:-1;4400:29:3;;;;;;4478:20;;:17;;4496:1;;4478:20;;;;;;:::i;:::-;;;;;;;:32;;;4443:16;:32;4460:14;4443:32;;;;;;;;;;;:67;;;;;;;;;;;;:::i;:::-;;4599:64;4620:17;4638:1;4620:20;;;;;;;;:::i;:::-;;;;;;;:29;;;4651:11;4599:20;:64::i;:::-;4824:118;;;;;;;;4875:14;4824:118;;;;4916:11;4824:118;;;;;4760:17;4778;4796:1;4778:20;;;;;;;;:::i;:::-;;;;;;;:29;;;4760:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4760:61:3;;;;;;;;;;:182;;;;;;;;;;;;;-1:-1:-1;;4760:182:3;;;;;;;;;;3659:3;;;;;-1:-1:-1;3612:1341:3;;-1:-1:-1;;3612:1341:3;;-1:-1:-1;5105:12:3;;5038:15;;5016:19;;5091:26;;5038:15;5091:26;:::i;:::-;5063:54;-1:-1:-1;5127:26:3;5173:27;994:9;5173:11;:27;:::i;:::-;5156:45;;994:9;5156:45;:::i;:::-;5127:74;;994:9;5216:17;:34;;:72;;;;;994:9;5254:18;:34;5216:72;5212:220;;;5304:20;:18;:20::i;:::-;5353:32;5367:18;5353:11;:32;:::i;:::-;5338:12;:47;5212:220;3478:1960;;;;3364:2074;;;:::o;829:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6641:207::-;6701:4;6805:14;;:36;;-1:-1:-1;;;6805:36:3;;-1:-1:-1;;;;;7272:32:6;;;6805:36:3;;;7254:51:6;6805:14:3;;;;:26;;7227:18:6;;6805:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8419:1594::-;8493:7;8602:27;8632:21;8654:8;8632:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8602:61;;;;;;;;;;;;;;;8632:31;8602:61;;;8632:31;8602:61;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8602:61:3;;;;;;;;;;;;;;;;;;;;;;;8673:25;8728:3;8702:10;:17;8722:2;8702:22;;;;:::i;:::-;8701:30;;;;:::i;:::-;8957:17;;8673:58;;-1:-1:-1;8769:20:3;;;;;;8941:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;8941:34:3;;;;;;;;;;;;;;;;8909:66;;9033:6;9028:770;9049:10;:17;9045:1;:21;9028:770;;;9087:19;9109:17;9127:8;9109:27;;;;;;:::i;:::-;;;;;;;;;;;;;:42;9137:10;9148:1;9137:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9109:42:3;-1:-1:-1;;;;;9109:42:3;;;;;;;;;;;;:57;;;9087:79;;9180:10;9218:6;9213:239;9234:10;:17;9230:1;:21;9213:239;;;9302:11;9280:10;9291:1;9280:13;;;;;;;;:::i;:::-;;;;;;;:18;;;:33;9276:162;;9337:10;9348:1;9337:13;;;;;;;;:::i;:::-;;;;;;;:19;;:21;;;;;;;;:::i;:::-;;;-1:-1:-1;9388:4:3;;-1:-1:-1;9414:5:3;;9276:162;9253:3;;9213:239;;;;9471:5;9466:101;;9512:40;;;;;;;;9529:11;9512:40;;;;9549:1;9512:40;;;9496:10;9507:1;9496:13;;;;;;;;:::i;:::-;;;;;;:56;;;;9466:101;9656:12;9634:10;9645:1;9634:13;;;;;;;;:::i;:::-;;;;;;;:19;;;:34;9630:158;;;9703:10;9714:1;9703:13;;;;;;;;:::i;:::-;;;;;;;:19;;;9688:34;;9755:10;9766:1;9755:13;;;;;;;;:::i;:::-;;;;;;;:18;;;9740:33;;9630:158;-1:-1:-1;;9068:3:3;;9028:770;;;;9895:17;9879:12;:33;9875:83;;-1:-1:-1;9935:12:3;;8419:1594;-1:-1:-1;;;;;8419:1594:3:o;9875:83::-;-1:-1:-1;9983:1:3;;8419:1594;-1:-1:-1;;;;;;8419:1594:3:o;7778:636::-;7898:26;7927:32;;;:16;:32;;;;;;;;7898:61;;;;;;;;;;;;;;;;;;;7927:32;;7898:61;:26;;:61;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7969:32;8004:42;8035:10;8004:30;:42::i;:::-;7969:77;;8057:18;8078:21;:19;:21::i;:::-;8057:42;;8186:6;8181:227;8202:15;:22;8198:1;:26;8181:227;;;8279:1;-1:-1:-1;;;;;8249:32:3;:15;8265:1;8249:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8249:32:3;;8245:153;;8328:12;;8352:18;;-1:-1:-1;;;;;8328:12:3;;;;:23;;8352:15;;8368:1;;8352:18;;;;;;:::i;:::-;;;;;;;8372:10;8328:55;;;;;;;;;;;;;;;-1:-1:-1;;;;;15453:32:6;;;;15435:51;;15517:2;15502:18;;15495:34;15423:2;15408:18;;15261:274;8328:55:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8245:153;8226:3;;8181:227;;;;7833:581;;;7778:636;:::o;6854:452::-;6900:25;6928:14;;;;;;;;;-1:-1:-1;;;;;6928:14:3;-1:-1:-1;;;;;6928:30:3;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6928:32:3;;;;;;;;;;;;:::i;:::-;6900:60;;6975:6;6970:330;6991:9;:16;6987:1;:20;6970:330;;;7028:22;7053:9;7063:1;7053:12;;;;;;;;:::i;:::-;;;;;;;7028:37;;7079:27;7109:21;7131:8;7109:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7079:61;;;;;;;;;;;;;;;7109:31;7079:61;;;7109:31;7079:61;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7079:61:3;;;;;;;;;;;;;;;;;;;;;;;7159:6;7154:136;7175:10;:17;7171:1;:21;7154:136;;;7270:5;7217:17;7235:8;7217:27;;;;;;:::i;:::-;;;;;;;;;;;;;:42;7245:10;7256:1;7245:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7217:42:3;;;;;;;;;;;-1:-1:-1;7217:42:3;:50;;;;:58;;-1:-1:-1;;7217:58:3;;;;;;;;;;;7194:3;7154:136;;;-1:-1:-1;;;7009:3:3;;6970:330;;;;6890:416;6854:452::o;2899:459::-;2990:20;3033:6;3028:221;3049:21;3071:8;3049:31;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;3045:42;;3028:221;;;3150:9;-1:-1:-1;;;;;3112:47:3;:21;3134:8;3112:31;;;;;;:::i;:::-;;;;;;;;;;;;;3144:1;3112:34;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3112:34:3;:47;3108:131;;3197:4;3179:22;;3219:5;;3108:131;3089:3;;3028:221;;;;3263:15;3258:94;;3294:21;3316:8;3294:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;:47;;;;;;;-1:-1:-1;3294:47:3;;;;;;;;;-1:-1:-1;;;;;;3294:47:3;-1:-1:-1;;;;;3294:47:3;;;;;3258:94;2980:378;2899:459;;:::o;2514:379::-;2567:7;2586:22;2629:12;;2611:15;:30;;;;:::i;:::-;2586:55;;1110:10;2656:14;:30;2652:132;;;-1:-1:-1;1110:10:3;2652:132;2801:34;1188:16;2801:14;:34;:::i;:::-;2794:41;;;2514:379;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:6;-1:-1:-1;;;;;89:31:6;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:247::-;348:6;401:2;389:9;380:7;376:23;372:32;369:52;;;417:1;414;407:12;369:52;456:9;443:23;475:31;500:5;475:31;:::i;:::-;525:5;289:247;-1:-1:-1;;;289:247:6:o;723:127::-;784:10;779:3;775:20;772:1;765:31;815:4;812:1;805:15;839:4;836:1;829:15;855:257;927:4;921:11;;;959:17;;1006:18;991:34;;1027:22;;;988:62;985:88;;;1053:18;;:::i;:::-;1089:4;1082:24;855:257;:::o;1117:275::-;1188:2;1182:9;1253:2;1234:13;;-1:-1:-1;;1230:27:6;1218:40;;1288:18;1273:34;;1309:22;;;1270:62;1267:88;;;1335:18;;:::i;:::-;1371:2;1364:22;1117:275;;-1:-1:-1;1117:275:6:o;1397:182::-;1456:4;1489:18;1481:6;1478:30;1475:56;;;1511:18;;:::i;:::-;-1:-1:-1;1556:1:6;1552:14;1568:4;1548:25;;1397:182::o;1584:187::-;1633:4;1666:18;1658:6;1655:30;1652:56;;;1688:18;;:::i;:::-;-1:-1:-1;1754:2:6;1733:15;-1:-1:-1;;1729:29:6;1760:4;1725:40;;1584:187::o;1776:464::-;1819:5;1872:3;1865:4;1857:6;1853:17;1849:27;1839:55;;1890:1;1887;1880:12;1839:55;1926:6;1913:20;1957:49;1973:32;2002:2;1973:32;:::i;:::-;1957:49;:::i;:::-;2031:2;2022:7;2015:19;2077:3;2070:4;2065:2;2057:6;2053:15;2049:26;2046:35;2043:55;;;2094:1;2091;2084:12;2043:55;2159:2;2152:4;2144:6;2140:17;2133:4;2124:7;2120:18;2107:55;2207:1;2182:16;;;2200:4;2178:27;2171:38;;;;2186:7;1776:464;-1:-1:-1;;;1776:464:6:o;2245:887::-;2298:5;2351:3;2344:4;2336:6;2332:17;2328:27;2318:55;;2369:1;2366;2359:12;2318:55;2405:6;2392:20;2431:4;2455:59;2471:42;2510:2;2471:42;:::i;2455:59::-;2548:15;;;2634:1;2630:10;;;;2618:23;;2614:32;;;2579:12;;;;2658:15;;;2655:35;;;2686:1;2683;2676:12;2655:35;2722:2;2714:6;2710:15;2734:369;2750:6;2745:3;2742:15;2734:369;;;2836:3;2823:17;2872:18;2859:11;2856:35;2853:125;;;2932:1;2961:2;2957;2950:14;2853:125;3003:57;3056:3;3051:2;3037:11;3029:6;3025:24;3021:33;3003:57;:::i;:::-;2991:70;;-1:-1:-1;3081:12:6;;;;2767;;2734:369;;;-1:-1:-1;3121:5:6;2245:887;-1:-1:-1;;;;;;2245:887:6:o;3137:357::-;3231:6;3284:2;3272:9;3263:7;3259:23;3255:32;3252:52;;;3300:1;3297;3290:12;3252:52;3340:9;3327:23;3373:18;3365:6;3362:30;3359:50;;;3405:1;3402;3395:12;3359:50;3428:60;3480:7;3471:6;3460:9;3456:22;3428:60;:::i;:::-;3418:70;3137:357;-1:-1:-1;;;;3137:357:6:o;3499:658::-;3670:2;3722:21;;;3792:13;;3695:18;;;3814:22;;;3641:4;;3670:2;3893:15;;;;3867:2;3852:18;;;3641:4;3936:195;3950:6;3947:1;3944:13;3936:195;;;4015:13;;-1:-1:-1;;;;;4011:39:6;3999:52;;4106:15;;;;4071:12;;;;4047:1;3965:9;3936:195;;;-1:-1:-1;4148:3:6;;3499:658;-1:-1:-1;;;;;;3499:658:6:o;4162:457::-;4240:6;4248;4301:2;4289:9;4280:7;4276:23;4272:32;4269:52;;;4317:1;4314;4307:12;4269:52;4357:9;4344:23;4390:18;4382:6;4379:30;4376:50;;;4422:1;4419;4412:12;4376:50;4445;4487:7;4478:6;4467:9;4463:22;4445:50;:::i;:::-;4435:60;;;4545:2;4534:9;4530:18;4517:32;4558:31;4583:5;4558:31;:::i;:::-;4608:5;4598:15;;;4162:457;;;;;:::o;4887:118::-;4973:5;4966:13;4959:21;4952:5;4949:32;4939:60;;4995:1;4992;4985:12;5010:128;5075:20;;5104:28;5075:20;5104:28;:::i;5143:1943::-;5273:6;5281;5289;5342:2;5330:9;5321:7;5317:23;5313:32;5310:52;;;5358:1;5355;5348:12;5310:52;5398:9;5385:23;5427:18;5468:2;5460:6;5457:14;5454:34;;;5484:1;5481;5474:12;5454:34;5522:6;5511:9;5507:22;5497:32;;5567:7;5560:4;5556:2;5552:13;5548:27;5538:55;;5589:1;5586;5579:12;5538:55;5625:2;5612:16;5647:4;5671:59;5687:42;5726:2;5687:42;:::i;5671:59::-;5764:15;;;5846:1;5842:10;;;;5834:19;;5830:28;;;5795:12;;;;5870:19;;;5867:39;;;5902:1;5899;5892:12;5867:39;5934:2;5930;5926:11;5946:997;5962:6;5957:3;5954:15;5946:997;;;6048:3;6035:17;6084:2;6071:11;6068:19;6065:39;;;6100:1;6097;6090:12;6065:39;6127:20;;6199:4;6171:16;;;-1:-1:-1;;6167:30:6;6163:41;6160:131;;;6245:1;6274:2;6270;6263:14;6160:131;6317:22;;:::i;:::-;6389:2;6385;6381:11;6368:25;6422:2;6412:8;6409:16;6406:106;;;6466:1;6495:2;6491;6484:14;6406:106;6539:54;6585:7;6580:2;6569:8;6565:2;6561:17;6557:26;6539:54;:::i;:::-;6532:5;6525:69;;6644:4;6640:2;6636:13;6623:27;6679:2;6669:8;6666:16;6663:106;;;6723:1;6752:2;6748;6741:14;6663:106;6805:64;6861:7;6856:2;6845:8;6841:2;6837:17;6833:26;6805:64;:::i;:::-;6789:14;;;6782:88;-1:-1:-1;6883:18:6;;-1:-1:-1;6921:12:6;;;;5979;;5946:997;;;-1:-1:-1;6962:5:6;-1:-1:-1;6986:38:6;;-1:-1:-1;7005:18:6;;;6986:38;:::i;:::-;6976:48;;;;;;7043:37;7074:4;7063:9;7059:20;7043:37;:::i;:::-;7033:47;;5143:1943;;;;;:::o;7316:248::-;7384:6;7392;7445:2;7433:9;7424:7;7420:23;7416:32;7413:52;;;7461:1;7458;7451:12;7413:52;-1:-1:-1;;7484:23:6;;;7554:2;7539:18;;;7526:32;;-1:-1:-1;7316:248:6:o;7569:250::-;7654:1;7664:113;7678:6;7675:1;7672:13;7664:113;;;7754:11;;;7748:18;7735:11;;;7728:39;7700:2;7693:10;7664:113;;;-1:-1:-1;;7811:1:6;7793:16;;7786:27;7569:250::o;7824:271::-;7866:3;7904:5;7898:12;7931:6;7926:3;7919:19;7947:76;8016:6;8009:4;8004:3;8000:14;7993:4;7986:5;7982:16;7947:76;:::i;:::-;8077:2;8056:15;-1:-1:-1;;8052:29:6;8043:39;;;;8084:4;8039:50;;7824:271;-1:-1:-1;;7824:271:6:o;8100:220::-;8249:2;8238:9;8231:21;8212:4;8269:45;8310:2;8299:9;8295:18;8287:6;8269:45;:::i;8517:880::-;8707:4;8755:2;8744:9;8740:18;8785:2;8774:9;8767:21;8808:6;8843;8837:13;8874:6;8866;8859:22;8912:2;8901:9;8897:18;8890:25;;8974:2;8964:6;8961:1;8957:14;8946:9;8942:30;8938:39;8924:53;;8996:4;9035;9027:6;9023:17;9058:1;9068:255;9082:6;9079:1;9076:13;9068:255;;;9175:2;9171:7;9159:9;9151:6;9147:22;9143:36;9138:3;9131:49;9203:40;9236:6;9227;9221:13;9203:40;:::i;:::-;9193:50;-1:-1:-1;9301:12:6;;;;9266:15;;;;9104:1;9097:9;9068:255;;;-1:-1:-1;;;;;9377:4:6;9362:20;;;;9355:36;;;;9340:6;8517:880;-1:-1:-1;;8517:880:6:o;9402:955::-;9497:6;9528:2;9571;9559:9;9550:7;9546:23;9542:32;9539:52;;;9587:1;9584;9577:12;9539:52;9620:9;9614:16;9653:18;9645:6;9642:30;9639:50;;;9685:1;9682;9675:12;9639:50;9708:22;;9761:4;9753:13;;9749:27;-1:-1:-1;9739:55:6;;9790:1;9787;9780:12;9739:55;9819:2;9813:9;9842:59;9858:42;9897:2;9858:42;:::i;9842:59::-;9935:15;;;10017:1;10013:10;;;;10005:19;;10001:28;;;9966:12;;;;10041:19;;;10038:39;;;10073:1;10070;10063:12;10038:39;10097:11;;;;10117:210;10133:6;10128:3;10125:15;10117:210;;;10206:3;10200:10;10223:31;10248:5;10223:31;:::i;:::-;10267:18;;10150:12;;;;10305;;;;10117:210;;;10346:5;9402:955;-1:-1:-1;;;;;;;9402:955:6:o;10362:1639::-;10467:6;10498:2;10541;10529:9;10520:7;10516:23;10512:32;10509:52;;;10557:1;10554;10547:12;10509:52;10590:9;10584:16;10619:18;10660:2;10652:6;10649:14;10646:34;;;10676:1;10673;10666:12;10646:34;10714:6;10703:9;10699:22;10689:32;;10759:7;10752:4;10748:2;10744:13;10740:27;10730:55;;10781:1;10778;10771:12;10730:55;10810:2;10804:9;10833:59;10849:42;10888:2;10849:42;:::i;10833:59::-;10926:15;;;11008:1;11004:10;;;;10996:19;;10992:28;;;10957:12;;;;11032:19;;;11029:39;;;11064:1;11061;11054:12;11029:39;11096:2;11092;11088:11;11108:863;11124:6;11119:3;11116:15;11108:863;;;11203:3;11197:10;11239:2;11226:11;11223:19;11220:109;;;11283:1;11312:2;11308;11301:14;11220:109;11352:20;;11407:2;11399:11;;11395:25;-1:-1:-1;11385:123:6;;11462:1;11491:2;11487;11480:14;11385:123;11545:2;11541;11537:11;11531:18;11572:2;11600:49;11616:32;11645:2;11616:32;:::i;11600:49::-;11676:2;11669:5;11662:17;11720:7;11715:2;11710;11706;11702:11;11698:20;11695:33;11692:126;;;11770:1;11800:3;11795;11788:16;11692:126;11831:67;11895:2;11890;11883:5;11879:14;11874:2;11870;11866:11;11831:67;:::i;:::-;11911:18;;-1:-1:-1;;;11949:12:6;;;;11141;;11108:863;;;-1:-1:-1;11990:5:6;10362:1639;-1:-1:-1;;;;;;;;10362:1639:6:o;12006:127::-;12067:10;12062:3;12058:20;12055:1;12048:31;12098:4;12095:1;12088:15;12122:4;12119:1;12112:15;12543:127;12604:10;12599:3;12595:20;12592:1;12585:31;12635:4;12632:1;12625:15;12659:4;12656:1;12649:15;12675:125;12740:9;;;12761:10;;;12758:36;;;12774:18;;:::i;12805:494::-;12982:3;13020:6;13014:13;13036:66;13095:6;13090:3;13083:4;13075:6;13071:17;13036:66;:::i;:::-;13165:13;;13124:16;;;;13187:70;13165:13;13124:16;13234:4;13222:17;;13187:70;:::i;:::-;13273:20;;12805:494;-1:-1:-1;;;;12805:494:6:o;13304:289::-;13435:3;13473:6;13467:13;13489:66;13548:6;13543:3;13536:4;13528:6;13524:17;13489:66;:::i;:::-;13571:16;;;;;13304:289;-1:-1:-1;;13304:289:6:o;13598:128::-;13665:9;;;13686:11;;;13683:37;;;13700:18;;:::i;13731:127::-;13792:10;13787:3;13783:20;13780:1;13773:31;13823:4;13820:1;13813:15;13847:4;13844:1;13837:15;13863:112;13895:1;13921;13911:35;;13926:18;;:::i;:::-;-1:-1:-1;13960:9:6;;13863:112::o;13980:380::-;14059:1;14055:12;;;;14102;;;14123:61;;14177:4;14169:6;14165:17;14155:27;;14123:61;14230:2;14222:6;14219:14;14199:18;14196:38;14193:161;;14276:10;14271:3;14267:20;14264:1;14257:31;14311:4;14308:1;14301:15;14339:4;14336:1;14329:15;14193:161;;13980:380;;;:::o;14573:245::-;14640:6;14693:2;14681:9;14672:7;14668:23;14664:32;14661:52;;;14709:1;14706;14699:12;14661:52;14741:9;14735:16;14760:28;14782:5;14760:28;:::i;14823:168::-;14896:9;;;14927;;14944:15;;;14938:22;;14924:37;14914:71;;14965:18;;:::i;14996:120::-;15036:1;15062;15052:35;;15067:18;;:::i;:::-;-1:-1:-1;15101:9:6;;14996:120::o;15121:135::-;15160:3;15181:17;;;15178:43;;15201:18;;:::i;:::-;-1:-1:-1;15248:1:6;15237:13;;15121:135::o;15666:543::-;15768:2;15763:3;15760:11;15757:446;;;15804:1;15828:5;15825:1;15818:16;15872:4;15869:1;15859:18;15942:2;15930:10;15926:19;15923:1;15919:27;15913:4;15909:38;15978:4;15966:10;15963:20;15960:47;;;-1:-1:-1;16001:4:6;15960:47;16056:2;16051:3;16047:12;16044:1;16040:20;16034:4;16030:31;16020:41;;16111:82;16129:2;16122:5;16119:13;16111:82;;;16174:17;;;16155:1;16144:13;16111:82;;;16115:3;;;15666:543;;;:::o;16385:1345::-;16511:3;16505:10;16538:18;16530:6;16527:30;16524:56;;;16560:18;;:::i;:::-;16589:97;16679:6;16639:38;16671:4;16665:11;16639:38;:::i;:::-;16633:4;16589:97;:::i;:::-;16741:4;;16798:2;16787:14;;16815:1;16810:663;;;;17517:1;17534:6;17531:89;;;-1:-1:-1;17586:19:6;;;17580:26;17531:89;-1:-1:-1;;16342:1:6;16338:11;;;16334:24;16330:29;16320:40;16366:1;16362:11;;;16317:57;17633:81;;16780:944;;16810:663;15613:1;15606:14;;;15650:4;15637:18;;-1:-1:-1;;16846:20:6;;;16964:236;16978:7;16975:1;16972:14;16964:236;;;17067:19;;;17061:26;17046:42;;17159:27;;;;17127:1;17115:14;;;;16994:19;;16964:236;;;16968:3;17228:6;17219:7;17216:19;17213:201;;;17289:19;;;17283:26;-1:-1:-1;;17372:1:6;17368:14;;;17384:3;17364:24;17360:37;17356:42;17341:58;17326:74;;17213:201;-1:-1:-1;;;;;17460:1:6;17444:14;;;17440:22;17427:36;;-1:-1:-1;16385:1345:6:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    577,
    10344
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D463520 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE15336EF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE15336EF EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xF59CC978 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF785EB2A EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xFACD743B EQ PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D463520 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB8F41A3C EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xD0B6B6DB EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C9C3ED2 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5C9C3ED2 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x64C8C5A7 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x6F1AAB4A EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x84E7E3D3 EQ PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x143ACC71 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x1E9AD446 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x3592696D EQ PUSH2 0x143 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x1249 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x3 DUP3 MSTORE SWAP3 DUP3 ADD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 KECCAK256 SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x11F PUSH2 0x318 JUMP JUMPDEST PUSH2 0x130 PUSH1 0x40 DUP2 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH2 0x130 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x205 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x11F PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x130 PUSH2 0x258 DUP2 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x289 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x85D8F13D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85D8F13D SWAP2 PUSH2 0x2CD SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x312 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x14D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3DC0FF7D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x394 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x156B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3B6 JUMPI PUSH2 0x3B6 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x3CB DUP3 PUSH2 0x7D2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH2 0x3DC DUP2 PUSH2 0xA78 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x399 JUMP JUMPDEST POP PUSH2 0x3EF PUSH2 0xC53 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3FB DUP3 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x457 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74206120726567697374657265642076616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x478 JUMPI PUSH2 0x478 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD MLOAD SWAP1 POP PUSH1 0x40 DUP2 DUP5 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST GT ISZERO PUSH2 0x4A1 JUMPI POP PUSH2 0x642 JUMP JUMPDEST PUSH2 0x4AB DUP2 DUP5 PUSH2 0x1684 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 PUSH1 0x0 JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4C4 JUMPI PUSH2 0x4C4 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x53B JUMPI DUP2 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4EB JUMPI PUSH2 0x4EB PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x508 JUMPI PUSH2 0x508 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x521 SWAP3 SWAP2 SWAP1 PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP2 POP PUSH1 0x1 ADD PUSH2 0x4B2 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 DUP8 MLOAD DUP9 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x589 SWAP3 SWAP2 SWAP1 PUSH2 0xF1C JUMP JUMPDEST POP PUSH2 0x5B1 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x59F JUMPI PUSH2 0x59F PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP9 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP8 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x3 DUP10 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x5DC JUMPI PUSH2 0x5DC PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP4 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x45B SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x5 SLOAD TIMESTAMP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x655 SWAP1 DUP4 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x665 PUSH2 0x12C DUP5 PUSH2 0x170B JUMP JUMPDEST PUSH2 0x671 SWAP1 PUSH2 0x12C PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x12C DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x686 JUMPI POP PUSH2 0x12C DUP2 LT JUMPDEST ISZERO PUSH2 0x6A1 JUMPI PUSH2 0x693 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x69D DUP2 DUP5 PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0x6E2 SWAP1 PUSH2 0x171F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x70E SWAP1 PUSH2 0x171F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x75B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x730 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x75B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x73E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xFACD743B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xFACD743B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP4 MUL DUP6 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 DUP5 MSTORE SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x841 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x823 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 MLOAD PUSH1 0x3C PUSH2 0x85A SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH2 0x864 SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x888 JUMPI PUSH2 0x888 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8CD JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x8A6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 PUSH1 0x3 DUP10 PUSH1 0x40 MLOAD PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x910 JUMPI PUSH2 0x910 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x9AE JUMPI DUP3 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x95E JUMPI PUSH2 0x95E PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SUB PUSH2 0x9A6 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x981 JUMPI PUSH2 0x981 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH2 0x99A SWAP1 PUSH2 0x17A1 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x1 SWAP2 POP PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x942 JUMP JUMPDEST POP DUP1 PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9DC JUMPI PUSH2 0x9DC PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP5 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9FB JUMPI PUSH2 0x9FB PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0xA4E JUMPI DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA1F JUMPI PUSH2 0xA1F PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP5 POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA3F JUMPI PUSH2 0xA3F PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP6 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x8D3 JUMP JUMPDEST POP DUP4 DUP3 LT PUSH2 0xA6B JUMPI POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB50 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xAC3 SWAP1 PUSH2 0x171F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAEF SWAP1 PUSH2 0x171F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xAA4 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xB61 DUP3 PUSH2 0x299 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB6D PUSH2 0xEE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xC4C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB98 JUMPI PUSH2 0xB98 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC44 JUMPI PUSH1 0x1 SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF0DDA65C SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xBD7 JUMPI PUSH2 0xBD7 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC11 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB72 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3DC0FF7D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xCCF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x156B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCF1 JUMPI PUSH2 0xCF1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP4 MUL DUP6 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 DUP5 MSTORE SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD69 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD4B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xDEE JUMPI PUSH1 0x0 PUSH1 0x3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD8E SWAP2 SWAP1 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xDB0 JUMPI PUSH2 0xDB0 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE ADD PUSH2 0xD73 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0xCD4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE11 SWAP2 SWAP1 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xE8C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE42 SWAP2 SWAP1 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE61 JUMPI PUSH2 0xE61 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE84 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xE01 JUMP JUMPDEST POP DUP1 PUSH2 0xEDD JUMPI PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEA2 SWAP2 SWAP1 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x258 DUP2 GT ISZERO PUSH2 0xF04 JUMPI POP PUSH2 0x258 JUMPDEST PUSH2 0xF16 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x1776 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xF62 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF62 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0xF52 SWAP1 DUP3 PUSH2 0x180A JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF3C JUMP JUMPDEST POP PUSH2 0xF6E SWAP3 SWAP2 POP PUSH2 0xF72 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xF6E JUMPI PUSH1 0x0 PUSH2 0xF86 DUP3 DUP3 PUSH2 0xF8F JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xF72 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0xF9B SWAP1 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xFAB JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xF6E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFF9 DUP2 PUSH2 0xFD9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1010 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x101B DUP2 PUSH2 0xFD9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x105B JUMPI PUSH2 0x105B PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x108A JUMPI PUSH2 0x108A PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10AC JUMPI PUSH2 0x10AC PUSH2 0x1022 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10D0 JUMPI PUSH2 0x10D0 PUSH2 0x1022 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1102 PUSH2 0x10FD DUP3 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x1061 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1155 PUSH2 0x10FD DUP4 PUSH2 0x1092 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x11B4 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1198 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x11A6 DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x10DE JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1178 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F4 DUP5 DUP3 DUP6 ADD PUSH2 0x1134 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x123D JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1218 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x125C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127F DUP6 DUP3 DUP7 ADD PUSH2 0x10DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1290 DUP2 PUSH2 0xFD9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFF9 DUP2 PUSH2 0x129B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1305 PUSH2 0x10FD DUP4 PUSH2 0x1092 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x13B5 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x133F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x40 DUP2 DUP15 SUB PUSH1 0x1F NOT ADD SLT ISZERO PUSH2 0x1356 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x135E PUSH2 0x1038 JUMP JUMPDEST DUP6 DUP3 ADD CALLDATALOAD DUP9 DUP2 GT ISZERO PUSH2 0x1370 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x137E DUP16 DUP9 DUP4 DUP7 ADD ADD PUSH2 0x10DE JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP9 DUP2 GT ISZERO PUSH2 0x1394 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x13A2 DUP16 DUP9 DUP4 DUP7 ADD ADD PUSH2 0x1134 JUMP JUMPDEST DUP3 DUP9 ADD MSTORE POP DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1328 JUMP JUMPDEST POP SWAP8 POP PUSH2 0x13C5 SWAP1 POP DUP9 DUP3 ADD PUSH2 0xFEE JUMP JUMPDEST SWAP6 POP POP POP POP POP PUSH2 0x13D7 PUSH1 0x40 DUP6 ADD PUSH2 0x12A9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x141D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1405 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x143E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x101B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1426 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP1 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14BC JUMPI PUSH1 0x5F NOT DUP9 DUP8 SUB ADD DUP6 MSTORE PUSH2 0x14AA DUP7 DUP4 MLOAD PUSH2 0x1426 JUMP JUMPDEST SWAP6 POP SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x148E JUMP JUMPDEST POP POP POP POP POP PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x150C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x151A PUSH2 0x10FD DUP3 PUSH2 0x1092 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1560 JUMPI DUP4 MLOAD PUSH2 0x1551 DUP2 PUSH2 0xFD9 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x153E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15B8 PUSH2 0x10FD DUP3 PUSH2 0x1092 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x15D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x164B JUMPI DUP1 MLOAD DUP6 DUP2 GT ISZERO PUSH2 0x15F3 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP7 ADD PUSH1 0x3F DUP2 ADD DUP12 SGT PUSH2 0x1605 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 DUP2 ADD MLOAD PUSH1 0x40 PUSH2 0x1617 PUSH2 0x10FD DUP4 PUSH2 0x10B6 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP14 DUP3 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x163B DUP4 DUP13 DUP4 ADD DUP5 DUP8 ADD PUSH2 0x1402 JUMP JUMPDEST DUP7 MSTORE POP POP POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x15DB JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x312 JUMPI PUSH2 0x312 PUSH2 0x166E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x16A9 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1402 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x16BD DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1402 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x16D8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1402 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x312 JUMPI PUSH2 0x312 PUSH2 0x166E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x171A JUMPI PUSH2 0x171A PUSH2 0x16F5 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1733 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1753 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x176B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x101B DUP2 PUSH2 0x129B JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x312 JUMPI PUSH2 0x312 PUSH2 0x166E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x179C JUMPI PUSH2 0x179C PUSH2 0x16F5 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x17B3 JUMPI PUSH2 0x17B3 PUSH2 0x166E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xEDD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x17E3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1802 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17EF JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH2 0x1824 PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x1838 DUP2 PUSH2 0x1832 DUP5 SLOAD PUSH2 0x171F JUMP JUMPDEST DUP5 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x186D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1855 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x189C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x187D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x18BA JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xE7 LOG3 0xDA 0xCF 0xAC 0xCF 0xA7 CODESIZE CREATE2 0x29 0xAC PUSH25 0x9622EC8E2439E31516CD69281528A8CE31201064736F6C6343 STOP ADDMOD XOR STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        577,
        10344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA"
    },
    "25": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9D463520"
    },
    "38": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE15336EF"
    },
    "49": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE15336EF"
    },
    "60": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21D"
    },
    "64": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF59CC978"
    },
    "71": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D"
    },
    "75": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF785EB2A"
    },
    "82": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x256"
    },
    "86": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFACD743B"
    },
    "93": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x276"
    },
    "97": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "REVERT",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9D463520"
    },
    "109": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D6"
    },
    "113": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB8F41A3C"
    },
    "120": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DF"
    },
    "124": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD0B6B6DB"
    },
    "131": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2"
    },
    "135": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "REVERT",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "142": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5C9C3ED2"
    },
    "147": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "GT",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC8"
    },
    "151": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "152": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "153": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5C9C3ED2"
    },
    "158": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x163"
    },
    "162": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x64C8C5A7"
    },
    "169": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BD"
    },
    "173": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6F1AAB4A"
    },
    "180": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C5"
    },
    "184": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x84E7E3D3"
    },
    "191": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CD"
    },
    "195": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "198": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "199": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "REVERT",
      "path": "3"
    },
    "200": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "202": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x143ACC71"
    },
    "207": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEF"
    },
    "211": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "212": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "213": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1E9AD446"
    },
    "218": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "219": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x121"
    },
    "222": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "223": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "224": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3592696D"
    },
    "229": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "EQ",
      "path": "3"
    },
    "230": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143"
    },
    "233": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "234": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "235": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "237": {
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "238": {
      "first_revert": true,
      "fn": null,
      "offset": [
        577,
        10344
      ],
      "op": "REVERT",
      "path": "3"
    },
    "239": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2277,
        2504
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "240": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2277,
        2504
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "243": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2277,
        2504
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFD"
    },
    "246": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2277,
        2504
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "247": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2277,
        2504
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "249": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2277,
        2504
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFE"
    },
    "252": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "jump": "i",
      "offset": [
        2277,
        2504
      ],
      "op": "JUMP",
      "path": "3"
    },
    "253": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2277,
        2504
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "254": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x0"
    },
    "256": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "DUP1",
      "path": "3"
    },
    "257": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "264": {
      "op": "SHL"
    },
    "265": {
      "op": "SUB"
    },
    "266": {
      "op": "NOT"
    },
    "267": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "AND",
      "path": "3"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "274": {
      "op": "SHL"
    },
    "275": {
      "op": "SUB"
    },
    "276": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "277": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "278": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "279": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "AND",
      "path": "3"
    },
    "280": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "281": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "282": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "283": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "OR",
      "path": "3"
    },
    "284": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "285": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2442,
        2497
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "286": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2277,
        2504
      ],
      "op": "JUMP",
      "path": "3"
    },
    "287": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2277,
        2504
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "288": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        2277,
        2504
      ],
      "op": "STOP",
      "path": "3"
    },
    "289": {
      "offset": [
        1144,
        1204
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "290": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x130"
    },
    "293": {
      "offset": [
        1188,
        1204
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "302": {
      "offset": [
        1144,
        1204
      ],
      "op": "DUP2",
      "path": "3"
    },
    "303": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "JUMP",
      "path": "3"
    },
    "304": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "305": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "307": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "308": {
      "op": "SWAP1"
    },
    "309": {
      "op": "DUP2"
    },
    "310": {
      "op": "MSTORE"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "313": {
      "op": "ADD"
    },
    "314": {
      "offset": [
        1144,
        1204
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "315": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "317": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "318": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "DUP1",
      "path": "3"
    },
    "319": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "320": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "SUB",
      "path": "3"
    },
    "321": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "322": {
      "fn": "GameValidator.setPlayerDatabaseAddress",
      "offset": [
        1144,
        1204
      ],
      "op": "RETURN",
      "path": "3"
    },
    "323": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "324": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x156"
    },
    "327": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x151"
    },
    "330": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "331": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "333": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11BF"
    },
    "336": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        10104,
        10308
      ],
      "op": "JUMP",
      "path": "3"
    },
    "337": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "338": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x299"
    },
    "341": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        10104,
        10308
      ],
      "op": "JUMP",
      "path": "3"
    },
    "342": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "343": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "345": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "346": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A"
    },
    "349": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "350": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "351": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11FC"
    },
    "354": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        10104,
        10308
      ],
      "op": "JUMP",
      "path": "3"
    },
    "355": {
      "offset": [
        742,
        822
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "356": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A8"
    },
    "359": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171"
    },
    "362": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "363": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "365": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1249"
    },
    "368": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        742,
        822
      ],
      "op": "JUMP",
      "path": "3"
    },
    "369": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "370": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP2",
      "path": "3"
    },
    "371": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "372": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "374": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP2",
      "path": "3"
    },
    "375": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP5",
      "path": "3"
    },
    "376": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "ADD",
      "path": "3"
    },
    "377": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP2",
      "path": "3"
    },
    "378": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "ADD",
      "path": "3"
    },
    "379": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP1",
      "path": "3"
    },
    "380": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "381": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "383": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP3",
      "path": "3"
    },
    "384": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "385": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "386": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP3",
      "path": "3"
    },
    "387": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "ADD",
      "path": "3"
    },
    "388": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "389": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP3",
      "path": "3"
    },
    "390": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "ADD",
      "path": "3"
    },
    "391": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "392": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "393": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "394": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "395": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "396": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "397": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "398": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "399": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "400": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "401": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "404": {
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "405": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP2",
      "path": "3"
    },
    "406": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "407": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "409": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "410": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "411": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP1",
      "path": "3"
    },
    "412": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "413": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "415": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "416": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "417": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "ADD",
      "path": "3"
    },
    "418": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "419": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "421": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "AND",
      "path": "3"
    },
    "422": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP3",
      "path": "3"
    },
    "423": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "JUMP",
      "path": "3"
    },
    "424": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "425": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "427": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP1",
      "path": "3"
    },
    "428": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "429": {
      "op": "SWAP3"
    },
    "430": {
      "op": "DUP4"
    },
    "431": {
      "op": "MSTORE"
    },
    "432": {
      "op": "SWAP1"
    },
    "433": {
      "op": "ISZERO"
    },
    "434": {
      "op": "ISZERO"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "437": {
      "op": "DUP4"
    },
    "438": {
      "op": "ADD"
    },
    "439": {
      "op": "MSTORE"
    },
    "440": {
      "op": "ADD"
    },
    "441": {
      "offset": [
        742,
        822
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A"
    },
    "444": {
      "op": "JUMP"
    },
    "445": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7352,
        7773
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "446": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7352,
        7773
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "449": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7352,
        7773
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x318"
    },
    "452": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7352,
        7773
      ],
      "op": "JUMP",
      "path": "3"
    },
    "453": {
      "offset": [
        1009,
        1064
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "454": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        1009,
        1064
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x130"
    },
    "457": {
      "offset": [
        1062,
        1064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "459": {
      "offset": [
        1009,
        1064
      ],
      "op": "DUP2",
      "path": "3"
    },
    "460": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        1009,
        1064
      ],
      "op": "JUMP",
      "path": "3"
    },
    "461": {
      "offset": [
        954,
        1003
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "462": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        954,
        1003
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x130"
    },
    "465": {
      "offset": [
        994,
        1003
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C"
    },
    "468": {
      "offset": [
        954,
        1003
      ],
      "op": "DUP2",
      "path": "3"
    },
    "469": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        954,
        1003
      ],
      "op": "JUMP",
      "path": "3"
    },
    "470": {
      "offset": [
        921,
        948
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "471": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        921,
        948
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x130"
    },
    "474": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        921,
        948
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "476": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        921,
        948
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "477": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        921,
        948
      ],
      "op": "DUP2",
      "path": "3"
    },
    "478": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        921,
        948
      ],
      "op": "JUMP",
      "path": "3"
    },
    "479": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "480": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "483": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ED"
    },
    "486": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "487": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "489": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12B4"
    },
    "492": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3364,
        5438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "493": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "494": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F2"
    },
    "497": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3364,
        5438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "498": {
      "offset": [
        643,
        671
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "499": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "501": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "502": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x205"
    },
    "505": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "512": {
      "op": "SHL"
    },
    "513": {
      "op": "SUB"
    },
    "514": {
      "offset": [
        643,
        671
      ],
      "op": "AND",
      "path": "3"
    },
    "515": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "DUP2",
      "path": "3"
    },
    "516": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "JUMP",
      "path": "3"
    },
    "517": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "518": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "520": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "527": {
      "op": "SHL"
    },
    "528": {
      "op": "SUB"
    },
    "529": {
      "op": "SWAP1"
    },
    "530": {
      "op": "SWAP2"
    },
    "531": {
      "op": "AND"
    },
    "532": {
      "op": "DUP2"
    },
    "533": {
      "op": "MSTORE"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "536": {
      "op": "ADD"
    },
    "537": {
      "offset": [
        643,
        671
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A"
    },
    "540": {
      "op": "JUMP"
    },
    "541": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2000,
        2212
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "542": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2000,
        2212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "545": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2000,
        2212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B"
    },
    "548": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2000,
        2212
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "549": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2000,
        2212
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "551": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2000,
        2212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFE"
    },
    "554": {
      "fn": "GameValidator.setMintContractAddress",
      "jump": "i",
      "offset": [
        2000,
        2212
      ],
      "op": "JUMP",
      "path": "3"
    },
    "555": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2000,
        2212
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "556": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2173
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x1"
    },
    "558": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "DUP1",
      "path": "3"
    },
    "559": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "566": {
      "op": "SHL"
    },
    "567": {
      "op": "SUB"
    },
    "568": {
      "op": "NOT"
    },
    "569": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "AND",
      "path": "3"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "576": {
      "op": "SHL"
    },
    "577": {
      "op": "SUB"
    },
    "578": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "579": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "580": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "581": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "AND",
      "path": "3"
    },
    "582": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "583": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "584": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "585": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "OR",
      "path": "3"
    },
    "586": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "587": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2161,
        2205
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "588": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        2000,
        2212
      ],
      "op": "JUMP",
      "path": "3"
    },
    "589": {
      "offset": [
        1070,
        1120
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "590": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        1070,
        1120
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x130"
    },
    "593": {
      "offset": [
        1110,
        1120
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x258"
    },
    "596": {
      "offset": [
        1070,
        1120
      ],
      "op": "DUP2",
      "path": "3"
    },
    "597": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        1070,
        1120
      ],
      "op": "JUMP",
      "path": "3"
    },
    "598": {
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "599": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x269"
    },
    "602": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x264"
    },
    "605": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "606": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "608": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E0"
    },
    "611": {
      "fn": "GameValidator.setMintContractAddress",
      "jump": "i",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "612": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "613": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6AA"
    },
    "616": {
      "fn": "GameValidator.setMintContractAddress",
      "jump": "i",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "617": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "618": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "620": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "621": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A"
    },
    "624": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "625": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "626": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1452"
    },
    "629": {
      "fn": "GameValidator.setMintContractAddress",
      "jump": "i",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "630": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "631": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x289"
    },
    "634": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "637": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "638": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "640": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFE"
    },
    "643": {
      "fn": "GameValidator.isValidator",
      "jump": "i",
      "offset": [
        6641,
        6848
      ],
      "op": "JUMP",
      "path": "3"
    },
    "644": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "645": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x763"
    },
    "648": {
      "fn": "GameValidator.isValidator",
      "jump": "i",
      "offset": [
        6641,
        6848
      ],
      "op": "JUMP",
      "path": "3"
    },
    "649": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "650": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "652": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "653": {
      "op": "SWAP1"
    },
    "654": {
      "op": "ISZERO"
    },
    "655": {
      "op": "ISZERO"
    },
    "656": {
      "op": "DUP2"
    },
    "657": {
      "op": "MSTORE"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "660": {
      "op": "ADD"
    },
    "661": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A"
    },
    "664": {
      "op": "JUMP"
    },
    "665": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "666": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10243
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x0"
    },
    "668": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10243
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "669": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10288,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "671": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10288,
        10300
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "672": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "674": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "675": {
      "op": "PUSH4",
      "value": "0x85D8F13D"
    },
    "680": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "682": {
      "op": "SHL"
    },
    "683": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "DUP2",
      "path": "3"
    },
    "684": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "685": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10194,
        10210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "687": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10194,
        10210
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "694": {
      "op": "SHL"
    },
    "695": {
      "op": "SUB"
    },
    "696": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10243
      ],
      "op": "AND",
      "path": "3"
    },
    "697": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10243
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "698": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10274
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x85D8F13D"
    },
    "703": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10274
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "704": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CD"
    },
    "707": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "708": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10275,
        10286
      ],
      "op": "DUP7",
      "path": "3"
    },
    "709": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10275,
        10286
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "710": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "712": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "ADD",
      "path": "3"
    },
    "713": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1465"
    },
    "716": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        10229,
        10301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "717": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "718": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "720": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "722": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "723": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "724": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "DUP4",
      "path": "3"
    },
    "725": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "SUB",
      "path": "3"
    },
    "726": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "DUP2",
      "path": "3"
    },
    "727": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "DUP7",
      "path": "3"
    },
    "728": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "GAS",
      "path": "3"
    },
    "729": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "730": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "731": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "732": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "733": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EA"
    },
    "736": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "737": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "738": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "740": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "741": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "742": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "743": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "745": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "REVERT",
      "path": "3"
    },
    "746": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "747": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "POP",
      "path": "3"
    },
    "748": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "POP",
      "path": "3"
    },
    "749": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "POP",
      "path": "3"
    },
    "750": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "POP",
      "path": "3"
    },
    "751": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "753": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "754": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "755": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "757": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "DUP3",
      "path": "3"
    },
    "758": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "759": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "761": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "762": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "763": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "DUP2",
      "path": "3"
    },
    "764": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "ADD",
      "path": "3"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "767": {
      "op": "NOT"
    },
    "768": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "AND",
      "path": "3"
    },
    "769": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "DUP3",
      "path": "3"
    },
    "770": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "ADD",
      "path": "3"
    },
    "771": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "773": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "774": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x312"
    },
    "777": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "778": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "779": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "DUP2",
      "path": "3"
    },
    "780": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "ADD",
      "path": "3"
    },
    "781": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "782": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14D1"
    },
    "785": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        10229,
        10301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "786": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10229,
        10301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "787": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10222,
        10301
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "788": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        10104,
        10308
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "789": {
      "op": "POP"
    },
    "790": {
      "op": "POP"
    },
    "791": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "o",
      "offset": [
        10104,
        10308
      ],
      "op": "JUMP",
      "path": "3"
    },
    "792": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7352,
        7773
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "793": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7399,
        7424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "795": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7441
      ],
      "op": "DUP1",
      "path": "3"
    },
    "796": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7441
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "798": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7441
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "799": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7441
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "800": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7441
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "801": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7441
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "804": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7441
      ],
      "op": "EXP",
      "path": "3"
    },
    "805": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7441
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "806": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7441
      ],
      "op": "DIV",
      "path": "3"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "813": {
      "op": "SHL"
    },
    "814": {
      "op": "SUB"
    },
    "815": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7441
      ],
      "op": "AND",
      "path": "3"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "op": "SUB"
    },
    "824": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7457
      ],
      "op": "AND",
      "path": "3"
    },
    "825": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7457
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3DC0FF7D"
    },
    "830": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "832": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "833": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP2",
      "path": "3"
    },
    "834": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "839": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "AND",
      "path": "3"
    },
    "840": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "842": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "SHL",
      "path": "3"
    },
    "843": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP2",
      "path": "3"
    },
    "844": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "845": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "847": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "ADD",
      "path": "3"
    },
    "848": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "850": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "852": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "853": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP1",
      "path": "3"
    },
    "854": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP4",
      "path": "3"
    },
    "855": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "SUB",
      "path": "3"
    },
    "856": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP2",
      "path": "3"
    },
    "857": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP7",
      "path": "3"
    },
    "858": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "GAS",
      "path": "3"
    },
    "859": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "860": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "861": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP1",
      "path": "3"
    },
    "862": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "863": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36C"
    },
    "866": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "867": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "868": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "870": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP1",
      "path": "3"
    },
    "871": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "872": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "873": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "875": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "REVERT",
      "path": "3"
    },
    "876": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "877": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "POP",
      "path": "3"
    },
    "878": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "POP",
      "path": "3"
    },
    "879": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "POP",
      "path": "3"
    },
    "880": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "POP",
      "path": "3"
    },
    "881": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "883": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "884": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "885": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "887": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP3",
      "path": "3"
    },
    "888": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "889": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "891": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "892": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "893": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP2",
      "path": "3"
    },
    "894": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "ADD",
      "path": "3"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "897": {
      "op": "NOT"
    },
    "898": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "AND",
      "path": "3"
    },
    "899": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP3",
      "path": "3"
    },
    "900": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "ADD",
      "path": "3"
    },
    "901": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "903": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "904": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x394"
    },
    "907": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "908": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "909": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "DUP2",
      "path": "3"
    },
    "910": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "ADD",
      "path": "3"
    },
    "911": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "912": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x156B"
    },
    "915": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7427,
        7459
      ],
      "op": "JUMP",
      "path": "3"
    },
    "916": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7427,
        7459
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "917": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7399,
        7459
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "918": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7399,
        7459
      ],
      "op": "POP",
      "path": "3"
    },
    "919": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7474,
        7480
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "921": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7469,
        7739
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "922": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7490,
        7499
      ],
      "op": "DUP2",
      "path": "3"
    },
    "923": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7490,
        7506
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "924": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7486,
        7487
      ],
      "op": "DUP2",
      "path": "3"
    },
    "925": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7486,
        7506
      ],
      "op": "LT",
      "path": "3"
    },
    "926": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7469,
        7739
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "927": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7469,
        7739
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E6"
    },
    "930": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7469,
        7739
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "931": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7527,
        7549
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "933": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7561
      ],
      "op": "DUP3",
      "path": "3"
    },
    "934": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7562,
        7563
      ],
      "op": "DUP3",
      "path": "3"
    },
    "935": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "936": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "937": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "938": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "LT",
      "path": "3"
    },
    "939": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B6"
    },
    "942": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "943": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B6"
    },
    "946": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "949": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7552,
        7564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "950": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "951": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "953": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "MUL",
      "path": "3"
    },
    "954": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "956": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "ADD",
      "path": "3"
    },
    "957": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "ADD",
      "path": "3"
    },
    "958": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7552,
        7564
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "959": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7527,
        7564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "960": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7527,
        7564
      ],
      "op": "POP",
      "path": "3"
    },
    "961": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7578,
        7596
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "963": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7599,
        7627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CB"
    },
    "966": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7618,
        7626
      ],
      "op": "DUP3",
      "path": "3"
    },
    "967": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7599,
        7617
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D2"
    },
    "970": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7599,
        7627
      ],
      "op": "JUMP",
      "path": "3"
    },
    "971": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7599,
        7627
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "972": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7578,
        7627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "973": {
      "op": "POP"
    },
    "974": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7645,
        7669
      ],
      "op": "DUP1",
      "path": "3"
    },
    "975": {
      "branch": 38,
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7645,
        7669
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "976": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7641,
        7729
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DC"
    },
    "979": {
      "branch": 38,
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7641,
        7729
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "980": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7689,
        7714
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 3,
      "value": "0x3DC"
    },
    "983": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7703,
        7713
      ],
      "op": "DUP2",
      "path": "3"
    },
    "984": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7689,
        7702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA78"
    },
    "987": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7689,
        7714
      ],
      "op": "JUMP",
      "path": "3"
    },
    "988": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7689,
        7714
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "989": {
      "op": "POP"
    },
    "990": {
      "op": "POP"
    },
    "991": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7508,
        7511
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x1"
    },
    "993": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7508,
        7511
      ],
      "op": "ADD",
      "path": "3"
    },
    "994": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7469,
        7739
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x399"
    },
    "997": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7469,
        7739
      ],
      "op": "JUMP",
      "path": "3"
    },
    "998": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7469,
        7739
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "999": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7469,
        7739
      ],
      "op": "POP",
      "path": "3"
    },
    "1000": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7748,
        7766
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 5,
      "value": "0x3EF"
    },
    "1003": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7748,
        7764
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC53"
    },
    "1006": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7748,
        7766
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1007": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7748,
        7766
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1008": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7389,
        7773
      ],
      "op": "POP",
      "path": "3"
    },
    "1009": {
      "fn": "GameValidator.performMassMinting",
      "jump": "o",
      "offset": [
        7352,
        7773
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1010": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1011": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3496,
        3520
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x3FB"
    },
    "1014": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3508,
        3519
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1015": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3496,
        3507
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x763"
    },
    "1018": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3496,
        3520
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1019": {
      "branch": 39,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3496,
        3520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1020": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x457"
    },
    "1023": {
      "branch": 39,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1024": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1026": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1033": {
      "op": "SHL"
    },
    "1034": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1035": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1038": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1040": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1041": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "ADD",
      "path": "3"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1045": {
      "op": "DUP1"
    },
    "1046": {
      "op": "DUP3"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "MSTORE"
    },
    "1049": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206973206E6F74206120726567697374657265642076616C6964"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1084": {
      "op": "DUP3"
    },
    "1085": {
      "op": "ADD"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "PUSH4",
      "value": "0x30BA37B9"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1097": {
      "op": "DUP3"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "op": "MSTORE"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1102": {
      "op": "ADD"
    },
    "1103": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1105": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1106": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1107": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1108": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "SUB",
      "path": "3"
    },
    "1109": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1110": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "1111": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3488,
        3561
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1112": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3572,
        3596
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1114": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3617,
        3623
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1115": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3612,
        4953
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1116": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3633,
        3650
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1117": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3633,
        3657
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1118": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3629,
        3630
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1119": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3629,
        3657
      ],
      "op": "LT",
      "path": "3"
    },
    "1120": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3612,
        4953
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1121": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3612,
        4953
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x642"
    },
    "1124": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3612,
        4953
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1125": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3678,
        3703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1127": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3723
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1128": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3724,
        3725
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1129": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1130": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1131": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1132": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "LT",
      "path": "3"
    },
    "1133": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x478"
    },
    "1136": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1137": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x478"
    },
    "1140": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "1143": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3706,
        3726
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1144": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1145": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1147": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "MUL",
      "path": "3"
    },
    "1148": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1150": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "ADD",
      "path": "3"
    },
    "1151": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "ADD",
      "path": "3"
    },
    "1152": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3726
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1153": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3738
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1155": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3738
      ],
      "op": "ADD",
      "path": "3"
    },
    "1156": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3738
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1157": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3745
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1158": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3678,
        3745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1159": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3678,
        3745
      ],
      "op": "POP",
      "path": "3"
    },
    "1160": {
      "offset": [
        1062,
        1064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1162": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3782,
        3799
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1163": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3763,
        3779
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1164": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3763,
        3799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x495"
    },
    "1167": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3763,
        3799
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1168": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3763,
        3799
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1169": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3763,
        3799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1684"
    },
    "1172": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3763,
        3799
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1173": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3763,
        3799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1174": {
      "branch": 40,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3763,
        3828
      ],
      "op": "GT",
      "path": "3"
    },
    "1175": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3759,
        3922
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1176": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3759,
        3922
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A1"
    },
    "1179": {
      "branch": 40,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3759,
        3922
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1180": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3848,
        3853
      ],
      "op": "POP",
      "path": "3",
      "statement": 7
    },
    "1181": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3848,
        3853
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x642"
    },
    "1184": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3848,
        3853
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1185": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3759,
        3922
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1186": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3935,
        3972
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0x4AB"
    },
    "1189": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3955,
        3972
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1190": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3935,
        3972
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1191": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3935,
        3972
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1684"
    },
    "1194": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3935,
        3972
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1195": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3935,
        3972
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1196": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3935,
        3972
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1197": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3935,
        3972
      ],
      "op": "POP",
      "path": "3"
    },
    "1198": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4059,
        4090
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1200": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4109,
        4115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1202": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4104,
        4298
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1203": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4142
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1204": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4143,
        4144
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1205": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1206": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1207": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1208": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "LT",
      "path": "3"
    },
    "1209": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C4"
    },
    "1212": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1213": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C4"
    },
    "1216": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "1219": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4125,
        4145
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1220": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1221": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1223": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "MUL",
      "path": "3"
    },
    "1224": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1226": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "ADD",
      "path": "3"
    },
    "1227": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "ADD",
      "path": "3"
    },
    "1228": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4145
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1229": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4157
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1231": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4157
      ],
      "op": "ADD",
      "path": "3"
    },
    "1232": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4157
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1233": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4125,
        4164
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1234": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4121,
        4122
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1235": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4121,
        4164
      ],
      "op": "LT",
      "path": "3"
    },
    "1236": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4104,
        4298
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1237": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4104,
        4298
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x53B"
    },
    "1240": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4104,
        4298
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1241": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4227,
        4245
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 9
    },
    "1242": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4264
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1243": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4265,
        4266
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1244": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1245": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1246": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1247": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "LT",
      "path": "3"
    },
    "1248": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4EB"
    },
    "1251": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1252": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4EB"
    },
    "1255": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "1258": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4247,
        4267
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1259": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1260": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1262": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "MUL",
      "path": "3"
    },
    "1263": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1265": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "ADD",
      "path": "3"
    },
    "1266": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "ADD",
      "path": "3"
    },
    "1267": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4267
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1268": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1270": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4279
      ],
      "op": "ADD",
      "path": "3"
    },
    "1271": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4279
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1272": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4280,
        4281
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1273": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1274": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1275": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1276": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "LT",
      "path": "3"
    },
    "1277": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x508"
    },
    "1280": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1281": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x508"
    },
    "1284": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "1287": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4247,
        4282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1288": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1289": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1291": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "MUL",
      "path": "3"
    },
    "1292": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1294": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "ADD",
      "path": "3"
    },
    "1295": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "ADD",
      "path": "3"
    },
    "1296": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4247,
        4282
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1297": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1299": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1300": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1302": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "ADD",
      "path": "3"
    },
    "1303": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x521"
    },
    "1306": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1307": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1308": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1309": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1697"
    },
    "1312": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4210,
        4283
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1313": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1314": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1316": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1317": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1320": {
      "op": "NOT"
    },
    "1321": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1322": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1323": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "SUB",
      "path": "3"
    },
    "1324": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "ADD",
      "path": "3"
    },
    "1325": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1326": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1327": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1328": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1329": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1330": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4210,
        4283
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4166,
        4169
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x1"
    },
    "1334": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4166,
        4169
      ],
      "op": "ADD",
      "path": "3"
    },
    "1335": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4104,
        4298
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B2"
    },
    "1338": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4104,
        4298
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1339": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4104,
        4298
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1340": {
      "op": "POP"
    },
    "1341": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4400,
        4429
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1342": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4400,
        4429
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1343": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4400,
        4429
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1345": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4400,
        4429
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1346": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4400,
        4429
      ],
      "op": "ADD",
      "path": "3"
    },
    "1347": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4400,
        4429
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1348": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "DUP8",
      "path": "3",
      "statement": 11
    },
    "1349": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1350": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4495
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1351": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1352": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4496,
        4497
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1353": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4496,
        4497
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1354": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1355": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "LT",
      "path": "3"
    },
    "1356": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x557"
    },
    "1359": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1360": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x557"
    },
    "1363": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "1366": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4478,
        4498
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1367": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1368": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1370": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "MUL",
      "path": "3"
    },
    "1371": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1373": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "ADD",
      "path": "3"
    },
    "1374": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "ADD",
      "path": "3"
    },
    "1375": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4498
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1376": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4510
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1378": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4510
      ],
      "op": "ADD",
      "path": "3"
    },
    "1379": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4478,
        4510
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1380": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1382": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1384": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4460,
        4474
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1385": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1386": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1387": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1389": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "ADD",
      "path": "3"
    },
    "1390": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1391": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1392": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1393": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1395": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "ADD",
      "path": "3"
    },
    "1396": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1398": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4475
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1399": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1400": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1401": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1402": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1403": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1405": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "ADD",
      "path": "3"
    },
    "1406": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1407": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x589"
    },
    "1410": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1411": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1412": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1413": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF1C"
    },
    "1416": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4443,
        4510
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1417": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1418": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4443,
        4510
      ],
      "op": "POP",
      "path": "3"
    },
    "1419": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4599,
        4663
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0x5B1"
    },
    "1422": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4637
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1423": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4638,
        4639
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1424": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1425": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1426": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1427": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "LT",
      "path": "3"
    },
    "1428": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59F"
    },
    "1431": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1432": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59F"
    },
    "1435": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "1438": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4620,
        4640
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1439": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1440": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1442": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "MUL",
      "path": "3"
    },
    "1443": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1445": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "ADD",
      "path": "3"
    },
    "1446": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "ADD",
      "path": "3"
    },
    "1447": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4640
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1448": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1450": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4649
      ],
      "op": "ADD",
      "path": "3"
    },
    "1451": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4620,
        4649
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1452": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4651,
        4662
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1453": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4599,
        4619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDFD"
    },
    "1456": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4599,
        4663
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1457": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4599,
        4663
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1458": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 13,
      "value": "0x40"
    },
    "1460": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1461": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1462": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1464": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "ADD",
      "path": "3"
    },
    "1465": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1467": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1468": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1469": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4875,
        4889
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1470": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1471": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1472": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1474": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "ADD",
      "path": "3"
    },
    "1475": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4916,
        4927
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1476": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1477": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1478": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1479": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1480": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4824,
        4942
      ],
      "op": "POP",
      "path": "3"
    },
    "1481": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1483": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4795
      ],
      "op": "DUP10",
      "path": "3"
    },
    "1484": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4796,
        4797
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1485": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1486": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1487": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1488": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "LT",
      "path": "3"
    },
    "1489": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5DC"
    },
    "1492": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1493": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5DC"
    },
    "1496": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "1499": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4778,
        4798
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1500": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1501": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1503": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "MUL",
      "path": "3"
    },
    "1504": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1506": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "ADD",
      "path": "3"
    },
    "1507": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "ADD",
      "path": "3"
    },
    "1508": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4798
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1509": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1511": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4807
      ],
      "op": "ADD",
      "path": "3"
    },
    "1512": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4778,
        4807
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1513": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1515": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1516": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F5"
    },
    "1519": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1520": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1521": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C6"
    },
    "1524": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4760,
        4808
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1525": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1526": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1527": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1528": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1529": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1531": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1532": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1533": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1535": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1536": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1537": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1538": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "SUB",
      "path": "3"
    },
    "1539": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1540": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "ADD",
      "path": "3"
    },
    "1541": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1542": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4808
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1549": {
      "op": "SHL"
    },
    "1550": {
      "op": "SUB"
    },
    "1551": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4821
      ],
      "op": "DUP12",
      "path": "3"
    },
    "1552": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4821
      ],
      "op": "AND",
      "path": "3"
    },
    "1553": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4821
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1555": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4821
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1556": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4821
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1557": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4821
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1558": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4821
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1559": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4821
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1560": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4821
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1561": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4821
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1562": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1563": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1564": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1565": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1566": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1567": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "ADD",
      "path": "3"
    },
    "1568": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1569": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1571": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1572": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1573": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "ADD",
      "path": "3"
    },
    "1574": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1575": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1578": {
      "op": "NOT"
    },
    "1579": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "AND",
      "path": "3"
    },
    "1580": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1581": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1582": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1583": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1584": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1585": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1586": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "OR",
      "path": "3"
    },
    "1587": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1588": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4760,
        4942
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1589": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3659,
        3662
      ],
      "op": "SWAP4",
      "path": "3",
      "statement": 14
    },
    "1590": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3659,
        3662
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1591": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3659,
        3662
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1592": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3659,
        3662
      ],
      "op": "ADD",
      "path": "3"
    },
    "1593": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3659,
        3662
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3612,
        4953
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45B"
    },
    "1598": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3612,
        4953
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "op": "POP"
    },
    "1601": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3612,
        4953
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1602": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3612,
        4953
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1603": {
      "op": "POP"
    },
    "1604": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5105,
        5117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1606": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5105,
        5117
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1607": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5038,
        5053
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "1608": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5038,
        5053
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1609": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5016,
        5035
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1611": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5016,
        5035
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1612": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5091,
        5117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x655"
    },
    "1615": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5091,
        5117
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1616": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5038,
        5053
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1617": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5091,
        5117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16E2"
    },
    "1620": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        5091,
        5117
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1621": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5091,
        5117
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1622": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5063,
        5117
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1623": {
      "op": "POP"
    },
    "1624": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5127,
        5153
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1626": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5173,
        5200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x665"
    },
    "1629": {
      "offset": [
        994,
        1003
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C"
    },
    "1632": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5173,
        5184
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1633": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5173,
        5200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x170B"
    },
    "1636": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        5173,
        5200
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1637": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5173,
        5200
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1638": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5156,
        5201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x671"
    },
    "1641": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5156,
        5201
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1642": {
      "offset": [
        994,
        1003
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C"
    },
    "1645": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5156,
        5201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16E2"
    },
    "1648": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        5156,
        5201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1649": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5156,
        5201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1650": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5127,
        5201
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1651": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5127,
        5201
      ],
      "op": "POP",
      "path": "3"
    },
    "1652": {
      "offset": [
        994,
        1003
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C"
    },
    "1655": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5216,
        5233
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1656": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5216,
        5250
      ],
      "op": "LT",
      "path": "3"
    },
    "1657": {
      "branch": 41,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5216,
        5250
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1658": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5216,
        5288
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1659": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5216,
        5288
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1660": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5216,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x686"
    },
    "1663": {
      "branch": 41,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5216,
        5288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1664": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5216,
        5288
      ],
      "op": "POP",
      "path": "3"
    },
    "1665": {
      "offset": [
        994,
        1003
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C"
    },
    "1668": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5254,
        5272
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1669": {
      "branch": 42,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5254,
        5288
      ],
      "op": "LT",
      "path": "3"
    },
    "1670": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5216,
        5288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1671": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5212,
        5432
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1672": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5212,
        5432
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A1"
    },
    "1675": {
      "branch": 42,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5212,
        5432
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1676": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5304,
        5324
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 15,
      "value": "0x693"
    },
    "1679": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5304,
        5322
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x318"
    },
    "1682": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        5304,
        5324
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1683": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5304,
        5324
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1684": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5353,
        5385
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 16,
      "value": "0x69D"
    },
    "1687": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5367,
        5385
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1688": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5353,
        5364
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1689": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5353,
        5385
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16E2"
    },
    "1692": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        5353,
        5385
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1693": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5353,
        5385
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1694": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5338,
        5350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1696": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5338,
        5385
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1697": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        5212,
        5432
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1698": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3478,
        5438
      ],
      "op": "POP",
      "path": "3"
    },
    "1699": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3478,
        5438
      ],
      "op": "POP",
      "path": "3"
    },
    "1700": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3478,
        5438
      ],
      "op": "POP",
      "path": "3"
    },
    "1701": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3478,
        5438
      ],
      "op": "POP",
      "path": "3"
    },
    "1702": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "POP",
      "path": "3"
    },
    "1703": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "POP",
      "path": "3"
    },
    "1704": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3364,
        5438
      ],
      "op": "POP",
      "path": "3"
    },
    "1705": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "o",
      "offset": [
        3364,
        5438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1706": {
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1707": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1709": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1711": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1712": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1713": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1715": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1716": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1718": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1720": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1721": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1722": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1723": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1724": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1725": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "LT",
      "path": "3"
    },
    "1726": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6C6"
    },
    "1729": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1730": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1732": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1733": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1734": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1735": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1736": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1738": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1739": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1741": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1743": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1744": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "3"
    },
    "1745": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1747": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1748": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "3"
    },
    "1749": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1750": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "3"
    },
    "1751": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "3"
    },
    "1752": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1753": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1754": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E2"
    },
    "1757": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1758": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171F"
    },
    "1761": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1762": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1763": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1764": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1766": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "3"
    },
    "1767": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1769": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1770": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1771": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DIV",
      "path": "3"
    },
    "1772": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MUL",
      "path": "3"
    },
    "1773": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1775": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "3"
    },
    "1776": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1778": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1779": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1780": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1781": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "3"
    },
    "1782": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1784": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1785": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1786": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1787": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1788": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1789": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1790": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1791": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1792": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1794": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "3"
    },
    "1795": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1796": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1797": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1798": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x70E"
    },
    "1801": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1802": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171F"
    },
    "1805": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1806": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1807": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1808": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1809": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x75B"
    },
    "1812": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1813": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1814": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1816": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "LT",
      "path": "3"
    },
    "1817": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x730"
    },
    "1820": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1821": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1824": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1825": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1826": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1827": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DIV",
      "path": "3"
    },
    "1828": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MUL",
      "path": "3"
    },
    "1829": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1830": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1831": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1832": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1834": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "3"
    },
    "1835": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1836": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x75B"
    },
    "1839": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1840": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1841": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1842": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "3"
    },
    "1843": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1844": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1845": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1847": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1848": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1850": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1852": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1853": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1854": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1855": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1856": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1857": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1858": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1859": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1860": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1862": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "3"
    },
    "1863": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1864": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1866": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "3"
    },
    "1867": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1868": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1869": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "GT",
      "path": "3"
    },
    "1870": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x73E"
    },
    "1873": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1874": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1875": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1876": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SUB",
      "path": "3"
    },
    "1877": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1879": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "AND",
      "path": "3"
    },
    "1880": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1881": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "3"
    },
    "1882": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1883": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1884": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "3"
    },
    "1885": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "3"
    },
    "1886": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "3"
    },
    "1887": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "3"
    },
    "1888": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "3"
    },
    "1889": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1890": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "o",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1891": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6641,
        6848
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1892": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6701,
        6705
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1894": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6819
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 17
    },
    "1895": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6819
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1896": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1898": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1899": {
      "op": "PUSH4",
      "value": "0xFACD743B"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1906": {
      "op": "SHL"
    },
    "1907": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1908": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "op": "SUB"
    },
    "1917": {
      "op": "DUP5"
    },
    "1918": {
      "op": "DUP2"
    },
    "1919": {
      "op": "AND"
    },
    "1920": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1922": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1923": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "ADD",
      "path": "3"
    },
    "1924": {
      "op": "MSTORE"
    },
    "1925": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6819
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1926": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6819
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1927": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6819
      ],
      "op": "AND",
      "path": "3"
    },
    "1928": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6819
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1929": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6831
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFACD743B"
    },
    "1934": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1937": {
      "op": "ADD"
    },
    "1938": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1940": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1942": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1943": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1944": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1945": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "SUB",
      "path": "3"
    },
    "1946": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1947": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1948": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "GAS",
      "path": "3"
    },
    "1949": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1950": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1951": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1952": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1953": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7AE"
    },
    "1956": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1957": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1958": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1960": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1961": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1962": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1963": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1965": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1966": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1967": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "POP",
      "path": "3"
    },
    "1968": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "POP",
      "path": "3"
    },
    "1969": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "POP",
      "path": "3"
    },
    "1970": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "POP",
      "path": "3"
    },
    "1971": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1973": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1974": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1975": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1977": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "NOT",
      "path": "3"
    },
    "1978": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1980": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1981": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "ADD",
      "path": "3"
    },
    "1982": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "AND",
      "path": "3"
    },
    "1983": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1984": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "ADD",
      "path": "3"
    },
    "1985": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1986": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1988": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1989": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "POP",
      "path": "3"
    },
    "1990": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1991": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "ADD",
      "path": "3"
    },
    "1992": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1993": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x312"
    },
    "1996": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1997": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1998": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6805,
        6841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1759"
    },
    "2001": {
      "fn": "GameValidator.isValidator",
      "jump": "i",
      "offset": [
        6805,
        6841
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2002": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8419,
        10013
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2003": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8493,
        8500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2005": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2006": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2008": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8654,
        8662
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2009": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2011": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2012": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E5"
    },
    "2015": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2016": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2017": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C6"
    },
    "2020": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8632,
        8663
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2021": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2022": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2023": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2024": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2025": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2027": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2028": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2029": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2030": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2031": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2032": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "SUB",
      "path": "3"
    },
    "2033": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2035": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2036": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2037": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "ADD",
      "path": "3"
    },
    "2038": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2039": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2040": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2041": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2042": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2043": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2044": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "MUL",
      "path": "3"
    },
    "2045": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2046": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "ADD",
      "path": "3"
    },
    "2047": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2048": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "ADD",
      "path": "3"
    },
    "2049": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2050": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2051": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2052": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2053": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2054": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2055": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2056": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2057": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2058": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "ADD",
      "path": "3"
    },
    "2059": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8632,
        8663
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2060": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2061": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2062": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2063": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x841"
    },
    "2066": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2067": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2069": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "MUL",
      "path": "3"
    },
    "2070": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2071": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "ADD",
      "path": "3"
    },
    "2072": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2073": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2074": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2076": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2077": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2079": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2081": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2082": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2083": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2084": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2085": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2092": {
      "op": "SHL"
    },
    "2093": {
      "op": "SUB"
    },
    "2094": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "AND",
      "path": "3"
    },
    "2095": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2096": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2097": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2099": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2100": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2101": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "ADD",
      "path": "3"
    },
    "2102": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2103": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2105": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "ADD",
      "path": "3"
    },
    "2106": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2107": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2108": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "GT",
      "path": "3"
    },
    "2109": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x823"
    },
    "2112": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2113": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2114": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "POP",
      "path": "3"
    },
    "2115": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "POP",
      "path": "3"
    },
    "2116": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "POP",
      "path": "3"
    },
    "2117": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "POP",
      "path": "3"
    },
    "2118": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "POP",
      "path": "3"
    },
    "2119": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2120": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8602,
        8663
      ],
      "op": "POP",
      "path": "3"
    },
    "2121": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8673,
        8698
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2123": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8728,
        8731
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2125": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8702,
        8712
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2126": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8702,
        8719
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2127": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3C"
    },
    "2129": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8702,
        8724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x85A"
    },
    "2132": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8702,
        8724
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2133": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8702,
        8724
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2134": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8702,
        8724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1776"
    },
    "2137": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8702,
        8724
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2138": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8702,
        8724
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2139": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8701,
        8731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x864"
    },
    "2142": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8701,
        8731
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2143": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8701,
        8731
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2144": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8701,
        8731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x178D"
    },
    "2147": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8701,
        8731
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2148": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8701,
        8731
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2149": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8957,
        8974
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2150": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8957,
        8974
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2151": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8673,
        8731
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2152": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8673,
        8731
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2153": {
      "op": "POP"
    },
    "2154": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8769,
        8789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2156": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8769,
        8789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2157": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8769,
        8789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2158": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8769,
        8789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2159": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8769,
        8789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2160": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8769,
        8789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2161": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2170": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2171": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "GT",
      "path": "3"
    },
    "2172": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2173": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x888"
    },
    "2176": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2177": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x888"
    },
    "2180": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1022"
    },
    "2183": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8941,
        8975
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2184": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2185": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2187": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2188": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2189": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2190": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2191": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2192": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2193": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2195": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "MUL",
      "path": "3"
    },
    "2196": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2198": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "ADD",
      "path": "3"
    },
    "2199": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2200": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "ADD",
      "path": "3"
    },
    "2201": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2203": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2204": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2205": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2206": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8CD"
    },
    "2209": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2210": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2211": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2213": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "ADD",
      "path": "3"
    },
    "2214": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2217": {
      "op": "DUP1"
    },
    "2218": {
      "op": "MLOAD"
    },
    "2219": {
      "op": "DUP1"
    },
    "2220": {
      "op": "DUP3"
    },
    "2221": {
      "op": "ADD"
    },
    "2222": {
      "op": "SWAP1"
    },
    "2223": {
      "op": "SWAP2"
    },
    "2224": {
      "op": "MSTORE"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2227": {
      "op": "DUP1"
    },
    "2228": {
      "op": "DUP3"
    },
    "2229": {
      "op": "MSTORE"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2232": {
      "op": "DUP3"
    },
    "2233": {
      "op": "ADD"
    },
    "2234": {
      "op": "MSTORE"
    },
    "2235": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2236": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2237": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2239": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "ADD",
      "path": "3"
    },
    "2240": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2241": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2243": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2244": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "SUB",
      "path": "3"
    },
    "2245": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2246": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2247": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A6"
    },
    "2250": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2251": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2252": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "POP",
      "path": "3"
    },
    "2253": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2254": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8941,
        8975
      ],
      "op": "POP",
      "path": "3"
    },
    "2255": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8909,
        8975
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2256": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8909,
        8975
      ],
      "op": "POP",
      "path": "3"
    },
    "2257": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9033,
        9039
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2259": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9028,
        9798
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2260": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9049,
        9059
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2261": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9049,
        9066
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2262": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9045,
        9046
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2263": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9045,
        9066
      ],
      "op": "LT",
      "path": "3"
    },
    "2264": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9028,
        9798
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2265": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9028,
        9798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA58"
    },
    "2268": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9028,
        9798
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2269": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9087,
        9106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2271": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2273": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9127,
        9135
      ],
      "op": "DUP10",
      "path": "3"
    },
    "2274": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2276": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2277": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8EE"
    },
    "2280": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2281": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2282": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C6"
    },
    "2285": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9109,
        9136
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2286": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2287": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2288": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2289": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2290": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2292": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "ADD",
      "path": "3"
    },
    "2293": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2295": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2296": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2297": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2298": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "SUB",
      "path": "3"
    },
    "2299": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2300": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9136
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2301": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2303": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9147
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2304": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9148,
        9149
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2305": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2306": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2307": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2308": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "LT",
      "path": "3"
    },
    "2309": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x910"
    },
    "2312": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2313": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x910"
    },
    "2316": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "2319": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9137,
        9150
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2320": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2321": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2323": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "MUL",
      "path": "3"
    },
    "2324": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2326": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "ADD",
      "path": "3"
    },
    "2327": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "ADD",
      "path": "3"
    },
    "2328": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9137,
        9150
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2335": {
      "op": "SHL"
    },
    "2336": {
      "op": "SUB"
    },
    "2337": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "AND",
      "path": "3"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2344": {
      "op": "SHL"
    },
    "2345": {
      "op": "SUB"
    },
    "2346": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "AND",
      "path": "3"
    },
    "2347": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2348": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2349": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2351": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "ADD",
      "path": "3"
    },
    "2352": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2353": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2354": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2355": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2357": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "ADD",
      "path": "3"
    },
    "2358": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2360": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9151
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2361": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9166
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2363": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9166
      ],
      "op": "ADD",
      "path": "3"
    },
    "2364": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9109,
        9166
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2365": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9087,
        9166
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2366": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9087,
        9166
      ],
      "op": "POP",
      "path": "3"
    },
    "2367": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9180,
        9190
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2369": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9218,
        9224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2370": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9213,
        9452
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2371": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9234,
        9244
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2372": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9234,
        9251
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2373": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9230,
        9231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2374": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9230,
        9251
      ],
      "op": "LT",
      "path": "3"
    },
    "2375": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9213,
        9452
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2376": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9213,
        9452
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9AE"
    },
    "2379": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9213,
        9452
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2380": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9302,
        9313
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2381": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9290
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2382": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9291,
        9292
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2383": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2384": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2385": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2386": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "LT",
      "path": "3"
    },
    "2387": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x95E"
    },
    "2390": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2391": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x95E"
    },
    "2394": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "2397": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9280,
        9293
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2398": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2399": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2401": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "MUL",
      "path": "3"
    },
    "2402": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2404": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "ADD",
      "path": "3"
    },
    "2405": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "ADD",
      "path": "3"
    },
    "2406": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9293
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2407": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9298
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2409": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9298
      ],
      "op": "ADD",
      "path": "3"
    },
    "2410": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9298
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2411": {
      "branch": 43,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9280,
        9313
      ],
      "op": "SUB",
      "path": "3"
    },
    "2412": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9276,
        9438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9A6"
    },
    "2415": {
      "branch": 43,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9276,
        9438
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2416": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9347
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 18
    },
    "2417": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9348,
        9349
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2418": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2419": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2420": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2421": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "LT",
      "path": "3"
    },
    "2422": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x981"
    },
    "2425": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2426": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x981"
    },
    "2429": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "2432": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9337,
        9350
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2433": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2434": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2436": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "MUL",
      "path": "3"
    },
    "2437": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2439": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "ADD",
      "path": "3"
    },
    "2440": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "ADD",
      "path": "3"
    },
    "2441": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9350
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2442": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2444": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9356
      ],
      "op": "ADD",
      "path": "3"
    },
    "2445": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9358
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2446": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9358
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2447": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9358
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2448": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9358
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2449": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2450": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9358
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x99A"
    },
    "2453": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2454": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9358
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17A1"
    },
    "2457": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9337,
        9358
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2458": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9358
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2459": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2460": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9337,
        9358
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2461": {
      "op": "POP"
    },
    "2462": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9388,
        9392
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0x1"
    },
    "2464": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9388,
        9392
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2465": {
      "op": "POP"
    },
    "2466": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9414,
        9419
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 20,
      "value": "0x9AE"
    },
    "2469": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9414,
        9419
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2470": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9276,
        9438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2471": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9253,
        9256
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x1"
    },
    "2473": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9253,
        9256
      ],
      "op": "ADD",
      "path": "3"
    },
    "2474": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9213,
        9452
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x942"
    },
    "2477": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9213,
        9452
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2478": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9213,
        9452
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2479": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9213,
        9452
      ],
      "op": "POP",
      "path": "3"
    },
    "2480": {
      "branch": 44,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9471,
        9476
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2481": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9466,
        9567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E8"
    },
    "2484": {
      "branch": 44,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9466,
        9567
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2485": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 22,
      "value": "0x40"
    },
    "2487": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2488": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2489": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2491": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "ADD",
      "path": "3"
    },
    "2492": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2494": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2495": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2496": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9529,
        9540
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2497": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2498": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2499": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2501": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "ADD",
      "path": "3"
    },
    "2502": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9549,
        9550
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2504": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2505": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2506": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9512,
        9552
      ],
      "op": "POP",
      "path": "3"
    },
    "2507": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9506
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2508": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9507,
        9508
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2509": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2510": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2511": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2512": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "LT",
      "path": "3"
    },
    "2513": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9DC"
    },
    "2516": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2517": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9DC"
    },
    "2520": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "2523": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9496,
        9509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2524": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2525": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2527": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "MUL",
      "path": "3"
    },
    "2528": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2530": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "ADD",
      "path": "3"
    },
    "2531": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9509
      ],
      "op": "ADD",
      "path": "3"
    },
    "2532": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9552
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2533": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9552
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2534": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9552
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2535": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9496,
        9552
      ],
      "op": "POP",
      "path": "3"
    },
    "2536": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9466,
        9567
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2537": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9656,
        9668
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2538": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9644
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2539": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9645,
        9646
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2540": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2541": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2542": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2543": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "LT",
      "path": "3"
    },
    "2544": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9FB"
    },
    "2547": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2548": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9FB"
    },
    "2551": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "2554": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9634,
        9647
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2555": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2556": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2558": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "MUL",
      "path": "3"
    },
    "2559": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2561": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "ADD",
      "path": "3"
    },
    "2562": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "ADD",
      "path": "3"
    },
    "2563": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9647
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2564": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2566": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9653
      ],
      "op": "ADD",
      "path": "3"
    },
    "2567": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9653
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2568": {
      "branch": 45,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9634,
        9668
      ],
      "op": "GT",
      "path": "3"
    },
    "2569": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9630,
        9788
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2570": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9630,
        9788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA4E"
    },
    "2573": {
      "branch": 45,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9630,
        9788
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2574": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9713
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 23
    },
    "2575": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9714,
        9715
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2576": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2577": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2578": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2579": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "LT",
      "path": "3"
    },
    "2580": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA1F"
    },
    "2583": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2584": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA1F"
    },
    "2587": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "2590": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9703,
        9716
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2591": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2592": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2594": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "MUL",
      "path": "3"
    },
    "2595": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2597": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "ADD",
      "path": "3"
    },
    "2598": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "ADD",
      "path": "3"
    },
    "2599": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9716
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2600": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2602": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9722
      ],
      "op": "ADD",
      "path": "3"
    },
    "2603": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9703,
        9722
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2604": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9688,
        9722
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2605": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9688,
        9722
      ],
      "op": "POP",
      "path": "3"
    },
    "2606": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9765
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 24
    },
    "2607": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9766,
        9767
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2608": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2609": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2610": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2611": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "LT",
      "path": "3"
    },
    "2612": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA3F"
    },
    "2615": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2616": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA3F"
    },
    "2619": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "2622": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9755,
        9768
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2623": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2624": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2626": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "MUL",
      "path": "3"
    },
    "2627": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2629": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "ADD",
      "path": "3"
    },
    "2630": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "ADD",
      "path": "3"
    },
    "2631": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9768
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2632": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2634": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9773
      ],
      "op": "ADD",
      "path": "3"
    },
    "2635": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9755,
        9773
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2636": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9740,
        9773
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2637": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9740,
        9773
      ],
      "op": "POP",
      "path": "3"
    },
    "2638": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9630,
        9788
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2639": {
      "op": "POP"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9068,
        9071
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 25,
      "value": "0x1"
    },
    "2643": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9068,
        9071
      ],
      "op": "ADD",
      "path": "3"
    },
    "2644": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9028,
        9798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D3"
    },
    "2647": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9028,
        9798
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2648": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9028,
        9798
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2649": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9028,
        9798
      ],
      "op": "POP",
      "path": "3"
    },
    "2650": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9895,
        9912
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2651": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9879,
        9891
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2652": {
      "branch": 46,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9879,
        9912
      ],
      "op": "LT",
      "path": "3"
    },
    "2653": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9875,
        9958
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6B"
    },
    "2656": {
      "branch": 46,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9875,
        9958
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2657": {
      "op": "POP"
    },
    "2658": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9935,
        9947
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 26
    },
    "2659": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9935,
        9947
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2660": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8419,
        10013
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2661": {
      "op": "POP"
    },
    "2662": {
      "op": "POP"
    },
    "2663": {
      "op": "POP"
    },
    "2664": {
      "op": "POP"
    },
    "2665": {
      "op": "POP"
    },
    "2666": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "o",
      "offset": [
        8419,
        10013
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2667": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9875,
        9958
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2668": {
      "op": "POP"
    },
    "2669": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9983,
        9984
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 27,
      "value": "0x0"
    },
    "2671": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9983,
        9984
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "2672": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8419,
        10013
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2673": {
      "op": "POP"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "op": "POP"
    },
    "2676": {
      "op": "POP"
    },
    "2677": {
      "op": "POP"
    },
    "2678": {
      "op": "POP"
    },
    "2679": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "o",
      "offset": [
        8419,
        10013
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2680": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7778,
        8414
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2681": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2683": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2684": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2685": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2686": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2688": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2690": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2691": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2692": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2693": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2695": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2696": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2697": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2698": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2699": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2700": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2701": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2702": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2703": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2704": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MUL",
      "path": "3"
    },
    "2705": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2706": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2707": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2708": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2709": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2710": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2711": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2712": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2713": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2714": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2715": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2716": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2717": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2718": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7927,
        7959
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2719": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2720": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7924
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2721": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7924
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2722": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2723": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2724": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2725": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2726": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2727": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "LT",
      "path": "3"
    },
    "2728": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2729": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "2732": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2733": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2734": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2735": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2736": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2738": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2739": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2741": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2743": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2744": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2745": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2746": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2747": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAC3"
    },
    "2750": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2751": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171F"
    },
    "2754": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2755": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2756": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2757": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2759": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2760": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2762": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2763": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2764": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DIV",
      "path": "3"
    },
    "2765": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MUL",
      "path": "3"
    },
    "2766": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2768": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2769": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2771": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2772": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2773": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2774": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2775": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2777": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2778": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2779": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2780": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2781": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2782": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2783": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2784": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2785": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2787": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2788": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2789": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2790": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2791": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAEF"
    },
    "2794": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2795": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171F"
    },
    "2798": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2799": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2800": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2801": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2802": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB3C"
    },
    "2805": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2806": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2807": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2809": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "LT",
      "path": "3"
    },
    "2810": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB11"
    },
    "2813": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2814": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2817": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2818": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2819": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2820": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DIV",
      "path": "3"
    },
    "2821": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MUL",
      "path": "3"
    },
    "2822": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2823": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2824": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2825": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2827": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2828": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2829": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB3C"
    },
    "2832": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2833": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2834": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2835": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2836": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2837": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2838": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2840": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2841": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2843": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2845": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2846": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2847": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2848": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2849": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2850": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2851": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2852": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2853": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2855": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2856": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2857": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2859": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2860": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2861": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2862": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "GT",
      "path": "3"
    },
    "2863": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB1F"
    },
    "2866": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2867": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2868": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2869": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SUB",
      "path": "3"
    },
    "2870": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2872": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "AND",
      "path": "3"
    },
    "2873": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2874": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2875": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2876": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2877": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "2878": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "2879": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "2880": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "2881": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "2882": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2883": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2884": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2886": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2887": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2888": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2890": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "ADD",
      "path": "3"
    },
    "2891": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2892": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAA4"
    },
    "2895": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2896": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2897": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "2898": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "2899": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "2900": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "2901": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2902": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7898,
        7959
      ],
      "op": "POP",
      "path": "3"
    },
    "2903": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7969,
        8001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2905": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8004,
        8046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB61"
    },
    "2908": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8035,
        8045
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2909": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8004,
        8034
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x299"
    },
    "2912": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        8004,
        8046
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2913": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8004,
        8046
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2914": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7969,
        8046
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2915": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7969,
        8046
      ],
      "op": "POP",
      "path": "3"
    },
    "2916": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8057,
        8075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2918": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8078,
        8099
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6D"
    },
    "2921": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8078,
        8097
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEE2"
    },
    "2924": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        8078,
        8099
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2925": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8078,
        8099
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2926": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8057,
        8099
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2927": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8057,
        8099
      ],
      "op": "POP",
      "path": "3"
    },
    "2928": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8186,
        8192
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2930": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8181,
        8408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2931": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8202,
        8217
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2932": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8202,
        8224
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2933": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8198,
        8199
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2934": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8198,
        8224
      ],
      "op": "LT",
      "path": "3"
    },
    "2935": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8181,
        8408
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2936": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8181,
        8408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC4C"
    },
    "2939": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8181,
        8408
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2940": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8279,
        8280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2948": {
      "op": "SHL"
    },
    "2949": {
      "op": "SUB"
    },
    "2950": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8281
      ],
      "op": "AND",
      "path": "3"
    },
    "2951": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8264
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2952": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8265,
        8266
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2953": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2954": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2955": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2956": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "LT",
      "path": "3"
    },
    "2957": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB98"
    },
    "2960": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2961": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB98"
    },
    "2964": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "2967": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        8249,
        8267
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2968": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2969": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2971": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "MUL",
      "path": "3"
    },
    "2972": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2974": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "ADD",
      "path": "3"
    },
    "2975": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "ADD",
      "path": "3"
    },
    "2976": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8267
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2983": {
      "op": "SHL"
    },
    "2984": {
      "op": "SUB"
    },
    "2985": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8281
      ],
      "op": "AND",
      "path": "3"
    },
    "2986": {
      "branch": 47,
      "fn": "GameValidator.mintForServer",
      "offset": [
        8249,
        8281
      ],
      "op": "EQ",
      "path": "3"
    },
    "2987": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8245,
        8398
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC44"
    },
    "2990": {
      "branch": 47,
      "fn": "GameValidator.mintForServer",
      "offset": [
        8245,
        8398
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2991": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8340
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 28,
      "value": "0x1"
    },
    "2993": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8340
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2994": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2995": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3002": {
      "op": "SHL"
    },
    "3003": {
      "op": "SUB"
    },
    "3004": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8340
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3005": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8340
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3006": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8340
      ],
      "op": "AND",
      "path": "3"
    },
    "3007": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8340
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3008": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8351
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF0DDA65C"
    },
    "3013": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3014": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8367
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3015": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8367
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3016": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8368,
        8369
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3017": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8368,
        8369
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3018": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3019": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "LT",
      "path": "3"
    },
    "3020": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD7"
    },
    "3023": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3024": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD7"
    },
    "3027": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "3030": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        8352,
        8370
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3031": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3032": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3034": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "MUL",
      "path": "3"
    },
    "3035": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3037": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "ADD",
      "path": "3"
    },
    "3038": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "ADD",
      "path": "3"
    },
    "3039": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8352,
        8370
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3040": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8372,
        8382
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3041": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3043": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3044": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3045": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3050": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "AND",
      "path": "3"
    },
    "3051": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3053": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "SHL",
      "path": "3"
    },
    "3054": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3055": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3056": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3058": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "ADD",
      "path": "3"
    },
    "3059": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC11"
    },
    "3062": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3063": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3064": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3071": {
      "op": "SHL"
    },
    "3072": {
      "op": "SUB"
    },
    "3073": {
      "op": "SWAP3"
    },
    "3074": {
      "op": "SWAP1"
    },
    "3075": {
      "op": "SWAP3"
    },
    "3076": {
      "op": "AND"
    },
    "3077": {
      "op": "DUP3"
    },
    "3078": {
      "op": "MSTORE"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3081": {
      "op": "DUP3"
    },
    "3082": {
      "op": "ADD"
    },
    "3083": {
      "op": "MSTORE"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3086": {
      "op": "ADD"
    },
    "3087": {
      "op": "SWAP1"
    },
    "3088": {
      "op": "JUMP"
    },
    "3089": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3090": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3092": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3094": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3095": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3096": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3097": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "SUB",
      "path": "3"
    },
    "3098": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3099": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3101": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3102": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3103": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "3104": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3105": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3106": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3107": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC2B"
    },
    "3110": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3111": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3113": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3114": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3115": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3116": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "POP",
      "path": "3"
    },
    "3117": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "GAS",
      "path": "3"
    },
    "3118": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "CALL",
      "path": "3"
    },
    "3119": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3120": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3121": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3122": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3F"
    },
    "3125": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3126": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3127": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3129": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3130": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3131": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3132": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3134": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3135": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3136": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "POP",
      "path": "3"
    },
    "3137": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "POP",
      "path": "3"
    },
    "3138": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "POP",
      "path": "3"
    },
    "3139": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8328,
        8383
      ],
      "op": "POP",
      "path": "3"
    },
    "3140": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8245,
        8398
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3141": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8226,
        8229
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 29,
      "value": "0x1"
    },
    "3143": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8226,
        8229
      ],
      "op": "ADD",
      "path": "3"
    },
    "3144": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8181,
        8408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB72"
    },
    "3147": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8181,
        8408
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3148": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8181,
        8408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3149": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        8181,
        8408
      ],
      "op": "POP",
      "path": "3"
    },
    "3150": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7833,
        8414
      ],
      "op": "POP",
      "path": "3"
    },
    "3151": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7833,
        8414
      ],
      "op": "POP",
      "path": "3"
    },
    "3152": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7833,
        8414
      ],
      "op": "POP",
      "path": "3"
    },
    "3153": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7778,
        8414
      ],
      "op": "POP",
      "path": "3"
    },
    "3154": {
      "fn": "GameValidator.mintForServer",
      "jump": "o",
      "offset": [
        7778,
        8414
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3155": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6854,
        7306
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3156": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6900,
        6925
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3158": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6942
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3159": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6942
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3161": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6942
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3162": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6942
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3163": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6942
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3164": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6942
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "3167": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6942
      ],
      "op": "EXP",
      "path": "3"
    },
    "3168": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6942
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3169": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6942
      ],
      "op": "DIV",
      "path": "3"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3176": {
      "op": "SHL"
    },
    "3177": {
      "op": "SUB"
    },
    "3178": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6942
      ],
      "op": "AND",
      "path": "3"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3185": {
      "op": "SHL"
    },
    "3186": {
      "op": "SUB"
    },
    "3187": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6958
      ],
      "op": "AND",
      "path": "3"
    },
    "3188": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6958
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3DC0FF7D"
    },
    "3193": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3195": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3196": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3197": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3202": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "AND",
      "path": "3"
    },
    "3203": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3205": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "SHL",
      "path": "3"
    },
    "3206": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3207": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3208": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3210": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "ADD",
      "path": "3"
    },
    "3211": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3213": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3215": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3216": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3217": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3218": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "SUB",
      "path": "3"
    },
    "3219": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3220": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3221": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "GAS",
      "path": "3"
    },
    "3222": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "3223": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3224": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3225": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3226": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCA7"
    },
    "3229": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3230": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3231": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3233": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3234": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3235": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3236": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3238": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3239": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3240": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "POP",
      "path": "3"
    },
    "3241": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "POP",
      "path": "3"
    },
    "3242": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "POP",
      "path": "3"
    },
    "3243": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "POP",
      "path": "3"
    },
    "3244": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3246": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3247": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3248": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3250": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3251": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3252": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3254": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3255": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3256": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3257": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "ADD",
      "path": "3"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3260": {
      "op": "NOT"
    },
    "3261": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "AND",
      "path": "3"
    },
    "3262": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3263": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "ADD",
      "path": "3"
    },
    "3264": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3266": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3267": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCCF"
    },
    "3270": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3271": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3272": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3273": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "ADD",
      "path": "3"
    },
    "3274": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3275": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x156B"
    },
    "3278": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        6928,
        6960
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3279": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6928,
        6960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3280": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6900,
        6960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3281": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6900,
        6960
      ],
      "op": "POP",
      "path": "3"
    },
    "3282": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6975,
        6981
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3284": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6970,
        7300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3285": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6991,
        7000
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3286": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6991,
        7007
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3287": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6987,
        6988
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3288": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6987,
        7007
      ],
      "op": "LT",
      "path": "3"
    },
    "3289": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6970,
        7300
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3290": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6970,
        7300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF9"
    },
    "3293": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6970,
        7300
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3294": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7028,
        7050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3296": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7062
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3297": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7063,
        7064
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3298": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3299": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3300": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3301": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "LT",
      "path": "3"
    },
    "3302": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF1"
    },
    "3305": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3306": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF1"
    },
    "3309": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "3312": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        7053,
        7065
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3313": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3314": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3316": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "MUL",
      "path": "3"
    },
    "3317": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3319": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "ADD",
      "path": "3"
    },
    "3320": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "ADD",
      "path": "3"
    },
    "3321": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7053,
        7065
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3322": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7028,
        7065
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3323": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7028,
        7065
      ],
      "op": "POP",
      "path": "3"
    },
    "3324": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3326": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7130
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3328": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7131,
        7139
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3329": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3331": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3332": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD0D"
    },
    "3335": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3336": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3337": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C6"
    },
    "3340": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        7109,
        7140
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3341": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3342": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3343": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3344": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3345": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3347": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3348": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3349": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3350": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3351": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3352": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "SUB",
      "path": "3"
    },
    "3353": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3355": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3356": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3357": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "ADD",
      "path": "3"
    },
    "3358": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3359": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3360": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3361": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3362": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3363": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3364": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "MUL",
      "path": "3"
    },
    "3365": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3366": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "ADD",
      "path": "3"
    },
    "3367": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3368": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "ADD",
      "path": "3"
    },
    "3369": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3370": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3371": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3372": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3373": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3374": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3375": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3376": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3377": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3378": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "ADD",
      "path": "3"
    },
    "3379": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7109,
        7140
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3380": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3381": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3382": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3383": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD69"
    },
    "3386": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3387": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3389": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "MUL",
      "path": "3"
    },
    "3390": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3391": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "ADD",
      "path": "3"
    },
    "3392": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3393": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3394": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3396": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3397": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3399": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3401": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3402": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3403": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3404": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3405": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3412": {
      "op": "SHL"
    },
    "3413": {
      "op": "SUB"
    },
    "3414": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "AND",
      "path": "3"
    },
    "3415": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3416": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3417": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3419": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3420": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3421": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "ADD",
      "path": "3"
    },
    "3422": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3423": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3425": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "ADD",
      "path": "3"
    },
    "3426": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3427": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3428": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "GT",
      "path": "3"
    },
    "3429": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD4B"
    },
    "3432": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3433": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3434": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "POP",
      "path": "3"
    },
    "3435": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "POP",
      "path": "3"
    },
    "3436": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "POP",
      "path": "3"
    },
    "3437": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "POP",
      "path": "3"
    },
    "3438": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "POP",
      "path": "3"
    },
    "3439": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3440": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7079,
        7140
      ],
      "op": "POP",
      "path": "3"
    },
    "3441": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7159,
        7165
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3443": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7154,
        7290
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3444": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7175,
        7185
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3445": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7175,
        7192
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3446": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7171,
        7172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3447": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7171,
        7192
      ],
      "op": "LT",
      "path": "3"
    },
    "3448": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7154,
        7290
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3449": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7154,
        7290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDEE"
    },
    "3452": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7154,
        7290
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3453": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7270,
        7275
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 30,
      "value": "0x0"
    },
    "3455": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7234
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3457": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7235,
        7243
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3458": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3460": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3461": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD8E"
    },
    "3464": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3465": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3466": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C6"
    },
    "3469": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        7217,
        7244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3470": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3471": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3472": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3473": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3474": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3476": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "ADD",
      "path": "3"
    },
    "3477": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3479": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3480": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3481": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3482": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "SUB",
      "path": "3"
    },
    "3483": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3484": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7244
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3485": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3487": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7255
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3488": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7256,
        7257
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3489": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3490": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3491": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3492": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "LT",
      "path": "3"
    },
    "3493": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDB0"
    },
    "3496": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3497": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDB0"
    },
    "3500": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "3503": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        7245,
        7258
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3504": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3505": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3507": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3508": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3509": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "MUL",
      "path": "3"
    },
    "3510": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3511": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3512": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3513": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "ADD",
      "path": "3"
    },
    "3514": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3515": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "ADD",
      "path": "3"
    },
    "3516": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7245,
        7258
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3523": {
      "op": "SHL"
    },
    "3524": {
      "op": "SUB"
    },
    "3525": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "AND",
      "path": "3"
    },
    "3526": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3527": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3528": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3529": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "ADD",
      "path": "3"
    },
    "3530": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3531": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3532": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3533": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3534": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3536": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "ADD",
      "path": "3"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3539": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7259
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3540": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3542": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7267
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3543": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3544": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7267
      ],
      "op": "ADD",
      "path": "3"
    },
    "3545": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3546": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3549": {
      "op": "NOT"
    },
    "3550": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "AND",
      "path": "3"
    },
    "3551": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3552": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3553": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3554": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3555": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3556": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3557": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "OR",
      "path": "3"
    },
    "3558": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3559": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3560": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7217,
        7275
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3561": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7194,
        7197
      ],
      "op": "ADD",
      "path": "3",
      "statement": 31
    },
    "3562": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7154,
        7290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD73"
    },
    "3565": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7154,
        7290
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3566": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7154,
        7290
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3567": {
      "op": "POP"
    },
    "3568": {
      "op": "POP"
    },
    "3569": {
      "op": "POP"
    },
    "3570": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7009,
        7012
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 32,
      "value": "0x1"
    },
    "3572": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        7009,
        7012
      ],
      "op": "ADD",
      "path": "3"
    },
    "3573": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6970,
        7300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCD4"
    },
    "3576": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6970,
        7300
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3577": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6970,
        7300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3578": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6970,
        7300
      ],
      "op": "POP",
      "path": "3"
    },
    "3579": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6890,
        7306
      ],
      "op": "POP",
      "path": "3"
    },
    "3580": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "o",
      "offset": [
        6854,
        7306
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3581": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2899,
        3358
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3582": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2990,
        3010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3584": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3033,
        3039
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3585": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3028,
        3249
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3586": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3070
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3588": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3071,
        3079
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3589": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3591": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3592": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE11"
    },
    "3595": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3596": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3597": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C6"
    },
    "3600": {
      "fn": "GameValidator.updateValidatorsList",
      "jump": "i",
      "offset": [
        3049,
        3080
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3601": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3602": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3603": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3604": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3605": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3607": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3608": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3609": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3610": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3611": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "SUB",
      "path": "3"
    },
    "3612": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3614": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "ADD",
      "path": "3"
    },
    "3615": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3616": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3080
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3617": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3049,
        3087
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3618": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3045,
        3087
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3619": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3045,
        3087
      ],
      "op": "LT",
      "path": "3"
    },
    "3620": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3028,
        3249
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3621": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3028,
        3249
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE8C"
    },
    "3624": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3028,
        3249
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3625": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3150,
        3159
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3632": {
      "op": "SHL"
    },
    "3633": {
      "op": "SUB"
    },
    "3634": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3159
      ],
      "op": "AND",
      "path": "3"
    },
    "3635": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3637": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3134,
        3142
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3638": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3640": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3641": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE42"
    },
    "3644": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3645": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3646": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C6"
    },
    "3649": {
      "fn": "GameValidator.updateValidatorsList",
      "jump": "i",
      "offset": [
        3112,
        3143
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3650": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3651": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3652": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3653": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3654": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3656": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "ADD",
      "path": "3"
    },
    "3657": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3659": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3660": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3661": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3662": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "SUB",
      "path": "3"
    },
    "3663": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3664": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3143
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3665": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3144,
        3145
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3666": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3667": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3668": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3669": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "LT",
      "path": "3"
    },
    "3670": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE61"
    },
    "3673": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3674": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE61"
    },
    "3677": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "3680": {
      "fn": "GameValidator.updateValidatorsList",
      "jump": "i",
      "offset": [
        3112,
        3146
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3681": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3682": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3684": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3685": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3686": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3687": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3689": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3690": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3691": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3692": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "ADD",
      "path": "3"
    },
    "3693": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3146
      ],
      "op": "AND",
      "path": "3"
    },
    "3703": {
      "branch": 48,
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3112,
        3159
      ],
      "op": "SUB",
      "path": "3"
    },
    "3704": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3108,
        3239
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE84"
    },
    "3707": {
      "branch": 48,
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3108,
        3239
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3708": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3197,
        3201
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 33,
      "value": "0x1"
    },
    "3710": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3179,
        3201
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3711": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3179,
        3201
      ],
      "op": "POP",
      "path": "3"
    },
    "3712": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3219,
        3224
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 34,
      "value": "0xE8C"
    },
    "3715": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3219,
        3224
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3716": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3108,
        3239
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3717": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3089,
        3092
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 35,
      "value": "0x1"
    },
    "3719": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3089,
        3092
      ],
      "op": "ADD",
      "path": "3"
    },
    "3720": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3028,
        3249
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE01"
    },
    "3723": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3028,
        3249
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3724": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3028,
        3249
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3725": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3028,
        3249
      ],
      "op": "POP",
      "path": "3"
    },
    "3726": {
      "branch": 49,
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3263,
        3278
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3727": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3258,
        3352
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEDD"
    },
    "3730": {
      "branch": 49,
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3258,
        3352
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3731": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3315
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 36,
      "value": "0x2"
    },
    "3733": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3316,
        3324
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3734": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3736": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3737": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA2"
    },
    "3740": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3741": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3742": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C6"
    },
    "3745": {
      "fn": "GameValidator.updateValidatorsList",
      "jump": "i",
      "offset": [
        3294,
        3325
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3746": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3747": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3748": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3749": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3750": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3752": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3753": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3755": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3756": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3757": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3758": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "SUB",
      "path": "3"
    },
    "3759": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3760": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "ADD",
      "path": "3"
    },
    "3761": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3762": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3325
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3763": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3764": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3765": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3767": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3768": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "ADD",
      "path": "3"
    },
    "3769": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3770": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3773": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3774": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3775": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3776": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3777": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3778": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3779": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "ADD",
      "path": "3"
    },
    "3780": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3781": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3788": {
      "op": "SHL"
    },
    "3789": {
      "op": "SUB"
    },
    "3790": {
      "op": "NOT"
    },
    "3791": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "AND",
      "path": "3"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3798": {
      "op": "SHL"
    },
    "3799": {
      "op": "SUB"
    },
    "3800": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3801": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "AND",
      "path": "3"
    },
    "3802": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "OR",
      "path": "3"
    },
    "3803": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3804": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3294,
        3341
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3805": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        3258,
        3352
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3806": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2980,
        3358
      ],
      "op": "POP",
      "path": "3"
    },
    "3807": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2899,
        3358
      ],
      "op": "POP",
      "path": "3"
    },
    "3808": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2899,
        3358
      ],
      "op": "POP",
      "path": "3"
    },
    "3809": {
      "fn": "GameValidator.updateValidatorsList",
      "jump": "o",
      "offset": [
        2899,
        3358
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3810": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2514,
        2893
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3811": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2567,
        2574
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3813": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2586,
        2608
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3814": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2629,
        2641
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "3816": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2629,
        2641
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3817": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2611,
        2626
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "3818": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2611,
        2641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEF3"
    },
    "3821": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2611,
        2641
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3822": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2611,
        2641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3823": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2611,
        2641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16E2"
    },
    "3826": {
      "fn": "GameValidator.calculateMintAmount",
      "jump": "i",
      "offset": [
        2611,
        2641
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3827": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2611,
        2641
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3828": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2586,
        2641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3829": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2586,
        2641
      ],
      "op": "POP",
      "path": "3"
    },
    "3830": {
      "offset": [
        1110,
        1120
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x258"
    },
    "3833": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2656,
        2670
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3834": {
      "branch": 50,
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2656,
        2686
      ],
      "op": "GT",
      "path": "3"
    },
    "3835": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2652,
        2784
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3836": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2652,
        2784
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF04"
    },
    "3839": {
      "branch": 50,
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2652,
        2784
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3840": {
      "op": "POP"
    },
    "3841": {
      "offset": [
        1110,
        1120
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x258"
    },
    "3844": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2652,
        2784
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3845": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2801,
        2835
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 37,
      "value": "0xF16"
    },
    "3848": {
      "offset": [
        1188,
        1204
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "3857": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2801,
        2815
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3858": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2801,
        2835
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1776"
    },
    "3861": {
      "fn": "GameValidator.calculateMintAmount",
      "jump": "i",
      "offset": [
        2801,
        2835
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3862": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2801,
        2835
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3863": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2794,
        2835
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3864": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2794,
        2835
      ],
      "op": "POP",
      "path": "3"
    },
    "3865": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2794,
        2835
      ],
      "op": "POP",
      "path": "3"
    },
    "3866": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2514,
        2893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3867": {
      "fn": "GameValidator.calculateMintAmount",
      "jump": "o",
      "offset": [
        2514,
        2893
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3868": {
      "op": "JUMPDEST"
    },
    "3869": {
      "op": "DUP3"
    },
    "3870": {
      "op": "DUP1"
    },
    "3871": {
      "op": "SLOAD"
    },
    "3872": {
      "op": "DUP3"
    },
    "3873": {
      "op": "DUP3"
    },
    "3874": {
      "op": "SSTORE"
    },
    "3875": {
      "op": "SWAP1"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3878": {
      "op": "MSTORE"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3883": {
      "op": "KECCAK256"
    },
    "3884": {
      "op": "SWAP1"
    },
    "3885": {
      "op": "DUP2"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "SWAP3"
    },
    "3888": {
      "op": "DUP3"
    },
    "3889": {
      "op": "ISZERO"
    },
    "3890": {
      "op": "PUSH2",
      "value": "0xF62"
    },
    "3893": {
      "op": "JUMPI"
    },
    "3894": {
      "op": "SWAP2"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3897": {
      "op": "MUL"
    },
    "3898": {
      "op": "DUP3"
    },
    "3899": {
      "op": "ADD"
    },
    "3900": {
      "op": "JUMPDEST"
    },
    "3901": {
      "op": "DUP3"
    },
    "3902": {
      "op": "DUP2"
    },
    "3903": {
      "op": "GT"
    },
    "3904": {
      "op": "ISZERO"
    },
    "3905": {
      "op": "PUSH2",
      "value": "0xF62"
    },
    "3908": {
      "op": "JUMPI"
    },
    "3909": {
      "op": "DUP3"
    },
    "3910": {
      "op": "MLOAD"
    },
    "3911": {
      "op": "DUP3"
    },
    "3912": {
      "op": "SWAP1"
    },
    "3913": {
      "op": "PUSH2",
      "value": "0xF52"
    },
    "3916": {
      "op": "SWAP1"
    },
    "3917": {
      "op": "DUP3"
    },
    "3918": {
      "op": "PUSH2",
      "value": "0x180A"
    },
    "3921": {
      "jump": "i",
      "op": "JUMP"
    },
    "3922": {
      "op": "JUMPDEST"
    },
    "3923": {
      "op": "POP"
    },
    "3924": {
      "op": "SWAP2"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3927": {
      "op": "ADD"
    },
    "3928": {
      "op": "SWAP2"
    },
    "3929": {
      "op": "SWAP1"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3932": {
      "op": "ADD"
    },
    "3933": {
      "op": "SWAP1"
    },
    "3934": {
      "op": "PUSH2",
      "value": "0xF3C"
    },
    "3937": {
      "op": "JUMP"
    },
    "3938": {
      "op": "JUMPDEST"
    },
    "3939": {
      "op": "POP"
    },
    "3940": {
      "op": "PUSH2",
      "value": "0xF6E"
    },
    "3943": {
      "op": "SWAP3"
    },
    "3944": {
      "op": "SWAP2"
    },
    "3945": {
      "op": "POP"
    },
    "3946": {
      "op": "PUSH2",
      "value": "0xF72"
    },
    "3949": {
      "jump": "i",
      "op": "JUMP"
    },
    "3950": {
      "op": "JUMPDEST"
    },
    "3951": {
      "op": "POP"
    },
    "3952": {
      "op": "SWAP1"
    },
    "3953": {
      "jump": "o",
      "op": "JUMP"
    },
    "3954": {
      "op": "JUMPDEST"
    },
    "3955": {
      "op": "DUP1"
    },
    "3956": {
      "op": "DUP3"
    },
    "3957": {
      "op": "GT"
    },
    "3958": {
      "op": "ISZERO"
    },
    "3959": {
      "op": "PUSH2",
      "value": "0xF6E"
    },
    "3962": {
      "op": "JUMPI"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3965": {
      "op": "PUSH2",
      "value": "0xF86"
    },
    "3968": {
      "op": "DUP3"
    },
    "3969": {
      "op": "DUP3"
    },
    "3970": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "3973": {
      "jump": "i",
      "op": "JUMP"
    },
    "3974": {
      "op": "JUMPDEST"
    },
    "3975": {
      "op": "POP"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3978": {
      "op": "ADD"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0xF72"
    },
    "3982": {
      "op": "JUMP"
    },
    "3983": {
      "op": "JUMPDEST"
    },
    "3984": {
      "op": "POP"
    },
    "3985": {
      "op": "DUP1"
    },
    "3986": {
      "op": "SLOAD"
    },
    "3987": {
      "op": "PUSH2",
      "value": "0xF9B"
    },
    "3990": {
      "op": "SWAP1"
    },
    "3991": {
      "op": "PUSH2",
      "value": "0x171F"
    },
    "3994": {
      "jump": "i",
      "op": "JUMP"
    },
    "3995": {
      "op": "JUMPDEST"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3998": {
      "op": "DUP3"
    },
    "3999": {
      "op": "SSTORE"
    },
    "4000": {
      "op": "DUP1"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4003": {
      "op": "LT"
    },
    "4004": {
      "op": "PUSH2",
      "value": "0xFAB"
    },
    "4007": {
      "op": "JUMPI"
    },
    "4008": {
      "op": "POP"
    },
    "4009": {
      "op": "POP"
    },
    "4010": {
      "jump": "o",
      "op": "JUMP"
    },
    "4011": {
      "op": "JUMPDEST"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4014": {
      "op": "ADD"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4017": {
      "op": "SWAP1"
    },
    "4018": {
      "op": "DIV"
    },
    "4019": {
      "op": "SWAP1"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4022": {
      "op": "MSTORE"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4027": {
      "op": "KECCAK256"
    },
    "4028": {
      "op": "SWAP1"
    },
    "4029": {
      "op": "DUP2"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "op": "SWAP1"
    },
    "4032": {
      "op": "PUSH2",
      "value": "0x3EF"
    },
    "4035": {
      "op": "SWAP2"
    },
    "4036": {
      "op": "SWAP1"
    },
    "4037": {
      "op": "JUMPDEST"
    },
    "4038": {
      "op": "DUP1"
    },
    "4039": {
      "op": "DUP3"
    },
    "4040": {
      "op": "GT"
    },
    "4041": {
      "op": "ISZERO"
    },
    "4042": {
      "op": "PUSH2",
      "value": "0xF6E"
    },
    "4045": {
      "op": "JUMPI"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4048": {
      "op": "DUP2"
    },
    "4049": {
      "op": "SSTORE"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4052": {
      "op": "ADD"
    },
    "4053": {
      "op": "PUSH2",
      "value": "0xFC5"
    },
    "4056": {
      "op": "JUMP"
    },
    "4057": {
      "op": "JUMPDEST"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4064": {
      "op": "SHL"
    },
    "4065": {
      "op": "SUB"
    },
    "4066": {
      "op": "DUP2"
    },
    "4067": {
      "op": "AND"
    },
    "4068": {
      "op": "DUP2"
    },
    "4069": {
      "op": "EQ"
    },
    "4070": {
      "op": "PUSH2",
      "value": "0x3EF"
    },
    "4073": {
      "op": "JUMPI"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4076": {
      "op": "DUP1"
    },
    "4077": {
      "op": "REVERT"
    },
    "4078": {
      "op": "JUMPDEST"
    },
    "4079": {
      "op": "DUP1"
    },
    "4080": {
      "op": "CALLDATALOAD"
    },
    "4081": {
      "op": "PUSH2",
      "value": "0xFF9"
    },
    "4084": {
      "op": "DUP2"
    },
    "4085": {
      "op": "PUSH2",
      "value": "0xFD9"
    },
    "4088": {
      "jump": "i",
      "op": "JUMP"
    },
    "4089": {
      "op": "JUMPDEST"
    },
    "4090": {
      "op": "SWAP2"
    },
    "4091": {
      "op": "SWAP1"
    },
    "4092": {
      "op": "POP"
    },
    "4093": {
      "jump": "o",
      "op": "JUMP"
    },
    "4094": {
      "op": "JUMPDEST"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4099": {
      "op": "DUP3"
    },
    "4100": {
      "op": "DUP5"
    },
    "4101": {
      "op": "SUB"
    },
    "4102": {
      "op": "SLT"
    },
    "4103": {
      "op": "ISZERO"
    },
    "4104": {
      "op": "PUSH2",
      "value": "0x1010"
    },
    "4107": {
      "op": "JUMPI"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4110": {
      "op": "DUP1"
    },
    "4111": {
      "op": "REVERT"
    },
    "4112": {
      "op": "JUMPDEST"
    },
    "4113": {
      "op": "DUP2"
    },
    "4114": {
      "op": "CALLDATALOAD"
    },
    "4115": {
      "op": "PUSH2",
      "value": "0x101B"
    },
    "4118": {
      "op": "DUP2"
    },
    "4119": {
      "op": "PUSH2",
      "value": "0xFD9"
    },
    "4122": {
      "jump": "i",
      "op": "JUMP"
    },
    "4123": {
      "op": "JUMPDEST"
    },
    "4124": {
      "op": "SWAP4"
    },
    "4125": {
      "op": "SWAP3"
    },
    "4126": {
      "op": "POP"
    },
    "4127": {
      "op": "POP"
    },
    "4128": {
      "op": "POP"
    },
    "4129": {
      "jump": "o",
      "op": "JUMP"
    },
    "4130": {
      "op": "JUMPDEST"
    },
    "4131": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4138": {
      "op": "SHL"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4141": {
      "op": "MSTORE"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4146": {
      "op": "MSTORE"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4151": {
      "op": "REVERT"
    },
    "4152": {
      "op": "JUMPDEST"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4155": {
      "op": "DUP1"
    },
    "4156": {
      "op": "MLOAD"
    },
    "4157": {
      "op": "SWAP1"
    },
    "4158": {
      "op": "DUP2"
    },
    "4159": {
      "op": "ADD"
    },
    "4160": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4169": {
      "op": "DUP2"
    },
    "4170": {
      "op": "GT"
    },
    "4171": {
      "op": "DUP3"
    },
    "4172": {
      "op": "DUP3"
    },
    "4173": {
      "op": "LT"
    },
    "4174": {
      "op": "OR"
    },
    "4175": {
      "op": "ISZERO"
    },
    "4176": {
      "op": "PUSH2",
      "value": "0x105B"
    },
    "4179": {
      "op": "JUMPI"
    },
    "4180": {
      "op": "PUSH2",
      "value": "0x105B"
    },
    "4183": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "4186": {
      "jump": "i",
      "op": "JUMP"
    },
    "4187": {
      "op": "JUMPDEST"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4190": {
      "op": "MSTORE"
    },
    "4191": {
      "op": "SWAP1"
    },
    "4192": {
      "jump": "o",
      "op": "JUMP"
    },
    "4193": {
      "op": "JUMPDEST"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4196": {
      "op": "MLOAD"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4199": {
      "op": "DUP3"
    },
    "4200": {
      "op": "ADD"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4203": {
      "op": "NOT"
    },
    "4204": {
      "op": "AND"
    },
    "4205": {
      "op": "DUP2"
    },
    "4206": {
      "op": "ADD"
    },
    "4207": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4216": {
      "op": "DUP2"
    },
    "4217": {
      "op": "GT"
    },
    "4218": {
      "op": "DUP3"
    },
    "4219": {
      "op": "DUP3"
    },
    "4220": {
      "op": "LT"
    },
    "4221": {
      "op": "OR"
    },
    "4222": {
      "op": "ISZERO"
    },
    "4223": {
      "op": "PUSH2",
      "value": "0x108A"
    },
    "4226": {
      "op": "JUMPI"
    },
    "4227": {
      "op": "PUSH2",
      "value": "0x108A"
    },
    "4230": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "4233": {
      "jump": "i",
      "op": "JUMP"
    },
    "4234": {
      "op": "JUMPDEST"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4237": {
      "op": "MSTORE"
    },
    "4238": {
      "op": "SWAP2"
    },
    "4239": {
      "op": "SWAP1"
    },
    "4240": {
      "op": "POP"
    },
    "4241": {
      "jump": "o",
      "op": "JUMP"
    },
    "4242": {
      "op": "JUMPDEST"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4245": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4254": {
      "op": "DUP3"
    },
    "4255": {
      "op": "GT"
    },
    "4256": {
      "op": "ISZERO"
    },
    "4257": {
      "op": "PUSH2",
      "value": "0x10AC"
    },
    "4260": {
      "op": "JUMPI"
    },
    "4261": {
      "op": "PUSH2",
      "value": "0x10AC"
    },
    "4264": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "4267": {
      "jump": "i",
      "op": "JUMP"
    },
    "4268": {
      "op": "JUMPDEST"
    },
    "4269": {
      "op": "POP"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4272": {
      "op": "SHL"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4275": {
      "op": "ADD"
    },
    "4276": {
      "op": "SWAP1"
    },
    "4277": {
      "jump": "o",
      "op": "JUMP"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4281": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4290": {
      "op": "DUP3"
    },
    "4291": {
      "op": "GT"
    },
    "4292": {
      "op": "ISZERO"
    },
    "4293": {
      "op": "PUSH2",
      "value": "0x10D0"
    },
    "4296": {
      "op": "JUMPI"
    },
    "4297": {
      "op": "PUSH2",
      "value": "0x10D0"
    },
    "4300": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "4303": {
      "jump": "i",
      "op": "JUMP"
    },
    "4304": {
      "op": "JUMPDEST"
    },
    "4305": {
      "op": "POP"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4308": {
      "op": "ADD"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4311": {
      "op": "NOT"
    },
    "4312": {
      "op": "AND"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4315": {
      "op": "ADD"
    },
    "4316": {
      "op": "SWAP1"
    },
    "4317": {
      "jump": "o",
      "op": "JUMP"
    },
    "4318": {
      "op": "JUMPDEST"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4321": {
      "op": "DUP3"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4324": {
      "op": "DUP4"
    },
    "4325": {
      "op": "ADD"
    },
    "4326": {
      "op": "SLT"
    },
    "4327": {
      "op": "PUSH2",
      "value": "0x10EF"
    },
    "4330": {
      "op": "JUMPI"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4333": {
      "op": "DUP1"
    },
    "4334": {
      "op": "REVERT"
    },
    "4335": {
      "op": "JUMPDEST"
    },
    "4336": {
      "op": "DUP2"
    },
    "4337": {
      "op": "CALLDATALOAD"
    },
    "4338": {
      "op": "PUSH2",
      "value": "0x1102"
    },
    "4341": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "4344": {
      "op": "DUP3"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4348": {
      "jump": "i",
      "op": "JUMP"
    },
    "4349": {
      "op": "JUMPDEST"
    },
    "4350": {
      "op": "PUSH2",
      "value": "0x1061"
    },
    "4353": {
      "jump": "i",
      "op": "JUMP"
    },
    "4354": {
      "op": "JUMPDEST"
    },
    "4355": {
      "op": "DUP2"
    },
    "4356": {
      "op": "DUP2"
    },
    "4357": {
      "op": "MSTORE"
    },
    "4358": {
      "op": "DUP5"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4361": {
      "op": "DUP4"
    },
    "4362": {
      "op": "DUP7"
    },
    "4363": {
      "op": "ADD"
    },
    "4364": {
      "op": "ADD"
    },
    "4365": {
      "op": "GT"
    },
    "4366": {
      "op": "ISZERO"
    },
    "4367": {
      "op": "PUSH2",
      "value": "0x1117"
    },
    "4370": {
      "op": "JUMPI"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4373": {
      "op": "DUP1"
    },
    "4374": {
      "op": "REVERT"
    },
    "4375": {
      "op": "JUMPDEST"
    },
    "4376": {
      "op": "DUP2"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4379": {
      "op": "DUP6"
    },
    "4380": {
      "op": "ADD"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4383": {
      "op": "DUP4"
    },
    "4384": {
      "op": "ADD"
    },
    "4385": {
      "op": "CALLDATACOPY"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4388": {
      "op": "SWAP2"
    },
    "4389": {
      "op": "DUP2"
    },
    "4390": {
      "op": "ADD"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4393": {
      "op": "ADD"
    },
    "4394": {
      "op": "SWAP2"
    },
    "4395": {
      "op": "SWAP1"
    },
    "4396": {
      "op": "SWAP2"
    },
    "4397": {
      "op": "MSTORE"
    },
    "4398": {
      "op": "SWAP4"
    },
    "4399": {
      "op": "SWAP3"
    },
    "4400": {
      "op": "POP"
    },
    "4401": {
      "op": "POP"
    },
    "4402": {
      "op": "POP"
    },
    "4403": {
      "jump": "o",
      "op": "JUMP"
    },
    "4404": {
      "op": "JUMPDEST"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4407": {
      "op": "DUP3"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4410": {
      "op": "DUP4"
    },
    "4411": {
      "op": "ADD"
    },
    "4412": {
      "op": "SLT"
    },
    "4413": {
      "op": "PUSH2",
      "value": "0x1145"
    },
    "4416": {
      "op": "JUMPI"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4419": {
      "op": "DUP1"
    },
    "4420": {
      "op": "REVERT"
    },
    "4421": {
      "op": "JUMPDEST"
    },
    "4422": {
      "op": "DUP2"
    },
    "4423": {
      "op": "CALLDATALOAD"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4426": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4429": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "4432": {
      "op": "DUP4"
    },
    "4433": {
      "op": "PUSH2",
      "value": "0x1092"
    },
    "4436": {
      "jump": "i",
      "op": "JUMP"
    },
    "4437": {
      "op": "JUMPDEST"
    },
    "4438": {
      "op": "DUP3"
    },
    "4439": {
      "op": "DUP2"
    },
    "4440": {
      "op": "MSTORE"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4443": {
      "op": "SWAP3"
    },
    "4444": {
      "op": "SWAP1"
    },
    "4445": {
      "op": "SWAP3"
    },
    "4446": {
      "op": "SHL"
    },
    "4447": {
      "op": "DUP5"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "DUP2"
    },
    "4450": {
      "op": "ADD"
    },
    "4451": {
      "op": "SWAP2"
    },
    "4452": {
      "op": "DUP2"
    },
    "4453": {
      "op": "DUP2"
    },
    "4454": {
      "op": "ADD"
    },
    "4455": {
      "op": "SWAP1"
    },
    "4456": {
      "op": "DUP7"
    },
    "4457": {
      "op": "DUP5"
    },
    "4458": {
      "op": "GT"
    },
    "4459": {
      "op": "ISZERO"
    },
    "4460": {
      "op": "PUSH2",
      "value": "0x1174"
    },
    "4463": {
      "op": "JUMPI"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4466": {
      "op": "DUP1"
    },
    "4467": {
      "op": "REVERT"
    },
    "4468": {
      "op": "JUMPDEST"
    },
    "4469": {
      "op": "DUP3"
    },
    "4470": {
      "op": "DUP7"
    },
    "4471": {
      "op": "ADD"
    },
    "4472": {
      "op": "JUMPDEST"
    },
    "4473": {
      "op": "DUP5"
    },
    "4474": {
      "op": "DUP2"
    },
    "4475": {
      "op": "LT"
    },
    "4476": {
      "op": "ISZERO"
    },
    "4477": {
      "op": "PUSH2",
      "value": "0x11B4"
    },
    "4480": {
      "op": "JUMPI"
    },
    "4481": {
      "op": "DUP1"
    },
    "4482": {
      "op": "CALLDATALOAD"
    },
    "4483": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4492": {
      "op": "DUP2"
    },
    "4493": {
      "op": "GT"
    },
    "4494": {
      "op": "ISZERO"
    },
    "4495": {
      "op": "PUSH2",
      "value": "0x1198"
    },
    "4498": {
      "op": "JUMPI"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4501": {
      "op": "DUP1"
    },
    "4502": {
      "op": "DUP2"
    },
    "4503": {
      "op": "REVERT"
    },
    "4504": {
      "op": "JUMPDEST"
    },
    "4505": {
      "op": "PUSH2",
      "value": "0x11A6"
    },
    "4508": {
      "op": "DUP10"
    },
    "4509": {
      "op": "DUP7"
    },
    "4510": {
      "op": "DUP4"
    },
    "4511": {
      "op": "DUP12"
    },
    "4512": {
      "op": "ADD"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "op": "PUSH2",
      "value": "0x10DE"
    },
    "4517": {
      "jump": "i",
      "op": "JUMP"
    },
    "4518": {
      "op": "JUMPDEST"
    },
    "4519": {
      "op": "DUP5"
    },
    "4520": {
      "op": "MSTORE"
    },
    "4521": {
      "op": "POP"
    },
    "4522": {
      "op": "SWAP2"
    },
    "4523": {
      "op": "DUP4"
    },
    "4524": {
      "op": "ADD"
    },
    "4525": {
      "op": "SWAP2"
    },
    "4526": {
      "op": "DUP4"
    },
    "4527": {
      "op": "ADD"
    },
    "4528": {
      "op": "PUSH2",
      "value": "0x1178"
    },
    "4531": {
      "op": "JUMP"
    },
    "4532": {
      "op": "JUMPDEST"
    },
    "4533": {
      "op": "POP"
    },
    "4534": {
      "op": "SWAP7"
    },
    "4535": {
      "op": "SWAP6"
    },
    "4536": {
      "op": "POP"
    },
    "4537": {
      "op": "POP"
    },
    "4538": {
      "op": "POP"
    },
    "4539": {
      "op": "POP"
    },
    "4540": {
      "op": "POP"
    },
    "4541": {
      "op": "POP"
    },
    "4542": {
      "jump": "o",
      "op": "JUMP"
    },
    "4543": {
      "op": "JUMPDEST"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4548": {
      "op": "DUP3"
    },
    "4549": {
      "op": "DUP5"
    },
    "4550": {
      "op": "SUB"
    },
    "4551": {
      "op": "SLT"
    },
    "4552": {
      "op": "ISZERO"
    },
    "4553": {
      "op": "PUSH2",
      "value": "0x11D1"
    },
    "4556": {
      "op": "JUMPI"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4559": {
      "op": "DUP1"
    },
    "4560": {
      "op": "REVERT"
    },
    "4561": {
      "op": "JUMPDEST"
    },
    "4562": {
      "op": "DUP2"
    },
    "4563": {
      "op": "CALLDATALOAD"
    },
    "4564": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4573": {
      "op": "DUP2"
    },
    "4574": {
      "op": "GT"
    },
    "4575": {
      "op": "ISZERO"
    },
    "4576": {
      "op": "PUSH2",
      "value": "0x11E8"
    },
    "4579": {
      "op": "JUMPI"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4582": {
      "op": "DUP1"
    },
    "4583": {
      "op": "REVERT"
    },
    "4584": {
      "op": "JUMPDEST"
    },
    "4585": {
      "op": "PUSH2",
      "value": "0x11F4"
    },
    "4588": {
      "op": "DUP5"
    },
    "4589": {
      "op": "DUP3"
    },
    "4590": {
      "op": "DUP6"
    },
    "4591": {
      "op": "ADD"
    },
    "4592": {
      "op": "PUSH2",
      "value": "0x1134"
    },
    "4595": {
      "jump": "i",
      "op": "JUMP"
    },
    "4596": {
      "op": "JUMPDEST"
    },
    "4597": {
      "op": "SWAP5"
    },
    "4598": {
      "op": "SWAP4"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "POP"
    },
    "4601": {
      "op": "POP"
    },
    "4602": {
      "op": "POP"
    },
    "4603": {
      "jump": "o",
      "op": "JUMP"
    },
    "4604": {
      "op": "JUMPDEST"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4607": {
      "op": "DUP1"
    },
    "4608": {
      "op": "DUP3"
    },
    "4609": {
      "op": "MSTORE"
    },
    "4610": {
      "op": "DUP3"
    },
    "4611": {
      "op": "MLOAD"
    },
    "4612": {
      "op": "DUP3"
    },
    "4613": {
      "op": "DUP3"
    },
    "4614": {
      "op": "ADD"
    },
    "4615": {
      "op": "DUP2"
    },
    "4616": {
      "op": "SWAP1"
    },
    "4617": {
      "op": "MSTORE"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4620": {
      "op": "SWAP2"
    },
    "4621": {
      "op": "SWAP1"
    },
    "4622": {
      "op": "DUP5"
    },
    "4623": {
      "op": "DUP3"
    },
    "4624": {
      "op": "ADD"
    },
    "4625": {
      "op": "SWAP1"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4628": {
      "op": "DUP6"
    },
    "4629": {
      "op": "ADD"
    },
    "4630": {
      "op": "SWAP1"
    },
    "4631": {
      "op": "DUP5"
    },
    "4632": {
      "op": "JUMPDEST"
    },
    "4633": {
      "op": "DUP2"
    },
    "4634": {
      "op": "DUP2"
    },
    "4635": {
      "op": "LT"
    },
    "4636": {
      "op": "ISZERO"
    },
    "4637": {
      "op": "PUSH2",
      "value": "0x123D"
    },
    "4640": {
      "op": "JUMPI"
    },
    "4641": {
      "op": "DUP4"
    },
    "4642": {
      "op": "MLOAD"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4649": {
      "op": "SHL"
    },
    "4650": {
      "op": "SUB"
    },
    "4651": {
      "op": "AND"
    },
    "4652": {
      "op": "DUP4"
    },
    "4653": {
      "op": "MSTORE"
    },
    "4654": {
      "op": "SWAP3"
    },
    "4655": {
      "op": "DUP5"
    },
    "4656": {
      "op": "ADD"
    },
    "4657": {
      "op": "SWAP3"
    },
    "4658": {
      "op": "SWAP2"
    },
    "4659": {
      "op": "DUP5"
    },
    "4660": {
      "op": "ADD"
    },
    "4661": {
      "op": "SWAP2"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4664": {
      "op": "ADD"
    },
    "4665": {
      "op": "PUSH2",
      "value": "0x1218"
    },
    "4668": {
      "op": "JUMP"
    },
    "4669": {
      "op": "JUMPDEST"
    },
    "4670": {
      "op": "POP"
    },
    "4671": {
      "op": "SWAP1"
    },
    "4672": {
      "op": "SWAP7"
    },
    "4673": {
      "op": "SWAP6"
    },
    "4674": {
      "op": "POP"
    },
    "4675": {
      "op": "POP"
    },
    "4676": {
      "op": "POP"
    },
    "4677": {
      "op": "POP"
    },
    "4678": {
      "op": "POP"
    },
    "4679": {
      "op": "POP"
    },
    "4680": {
      "jump": "o",
      "op": "JUMP"
    },
    "4681": {
      "op": "JUMPDEST"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4684": {
      "op": "DUP1"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4687": {
      "op": "DUP4"
    },
    "4688": {
      "op": "DUP6"
    },
    "4689": {
      "op": "SUB"
    },
    "4690": {
      "op": "SLT"
    },
    "4691": {
      "op": "ISZERO"
    },
    "4692": {
      "op": "PUSH2",
      "value": "0x125C"
    },
    "4695": {
      "op": "JUMPI"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4698": {
      "op": "DUP1"
    },
    "4699": {
      "op": "REVERT"
    },
    "4700": {
      "op": "JUMPDEST"
    },
    "4701": {
      "op": "DUP3"
    },
    "4702": {
      "op": "CALLDATALOAD"
    },
    "4703": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4712": {
      "op": "DUP2"
    },
    "4713": {
      "op": "GT"
    },
    "4714": {
      "op": "ISZERO"
    },
    "4715": {
      "op": "PUSH2",
      "value": "0x1273"
    },
    "4718": {
      "op": "JUMPI"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4721": {
      "op": "DUP1"
    },
    "4722": {
      "op": "REVERT"
    },
    "4723": {
      "op": "JUMPDEST"
    },
    "4724": {
      "op": "PUSH2",
      "value": "0x127F"
    },
    "4727": {
      "op": "DUP6"
    },
    "4728": {
      "op": "DUP3"
    },
    "4729": {
      "op": "DUP7"
    },
    "4730": {
      "op": "ADD"
    },
    "4731": {
      "op": "PUSH2",
      "value": "0x10DE"
    },
    "4734": {
      "jump": "i",
      "op": "JUMP"
    },
    "4735": {
      "op": "JUMPDEST"
    },
    "4736": {
      "op": "SWAP3"
    },
    "4737": {
      "op": "POP"
    },
    "4738": {
      "op": "POP"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4741": {
      "op": "DUP4"
    },
    "4742": {
      "op": "ADD"
    },
    "4743": {
      "op": "CALLDATALOAD"
    },
    "4744": {
      "op": "PUSH2",
      "value": "0x1290"
    },
    "4747": {
      "op": "DUP2"
    },
    "4748": {
      "op": "PUSH2",
      "value": "0xFD9"
    },
    "4751": {
      "jump": "i",
      "op": "JUMP"
    },
    "4752": {
      "op": "JUMPDEST"
    },
    "4753": {
      "op": "DUP1"
    },
    "4754": {
      "op": "SWAP2"
    },
    "4755": {
      "op": "POP"
    },
    "4756": {
      "op": "POP"
    },
    "4757": {
      "op": "SWAP3"
    },
    "4758": {
      "op": "POP"
    },
    "4759": {
      "op": "SWAP3"
    },
    "4760": {
      "op": "SWAP1"
    },
    "4761": {
      "op": "POP"
    },
    "4762": {
      "jump": "o",
      "op": "JUMP"
    },
    "4763": {
      "op": "JUMPDEST"
    },
    "4764": {
      "op": "DUP1"
    },
    "4765": {
      "op": "ISZERO"
    },
    "4766": {
      "op": "ISZERO"
    },
    "4767": {
      "op": "DUP2"
    },
    "4768": {
      "op": "EQ"
    },
    "4769": {
      "op": "PUSH2",
      "value": "0x3EF"
    },
    "4772": {
      "op": "JUMPI"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4775": {
      "op": "DUP1"
    },
    "4776": {
      "op": "REVERT"
    },
    "4777": {
      "op": "JUMPDEST"
    },
    "4778": {
      "op": "DUP1"
    },
    "4779": {
      "op": "CALLDATALOAD"
    },
    "4780": {
      "op": "PUSH2",
      "value": "0xFF9"
    },
    "4783": {
      "op": "DUP2"
    },
    "4784": {
      "op": "PUSH2",
      "value": "0x129B"
    },
    "4787": {
      "jump": "i",
      "op": "JUMP"
    },
    "4788": {
      "op": "JUMPDEST"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4791": {
      "op": "DUP1"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4796": {
      "op": "DUP5"
    },
    "4797": {
      "op": "DUP7"
    },
    "4798": {
      "op": "SUB"
    },
    "4799": {
      "op": "SLT"
    },
    "4800": {
      "op": "ISZERO"
    },
    "4801": {
      "op": "PUSH2",
      "value": "0x12C9"
    },
    "4804": {
      "op": "JUMPI"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4807": {
      "op": "DUP1"
    },
    "4808": {
      "op": "REVERT"
    },
    "4809": {
      "op": "JUMPDEST"
    },
    "4810": {
      "op": "DUP4"
    },
    "4811": {
      "op": "CALLDATALOAD"
    },
    "4812": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4821": {
      "op": "DUP1"
    },
    "4822": {
      "op": "DUP3"
    },
    "4823": {
      "op": "GT"
    },
    "4824": {
      "op": "ISZERO"
    },
    "4825": {
      "op": "PUSH2",
      "value": "0x12E1"
    },
    "4828": {
      "op": "JUMPI"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4831": {
      "op": "DUP1"
    },
    "4832": {
      "op": "REVERT"
    },
    "4833": {
      "op": "JUMPDEST"
    },
    "4834": {
      "op": "DUP2"
    },
    "4835": {
      "op": "DUP7"
    },
    "4836": {
      "op": "ADD"
    },
    "4837": {
      "op": "SWAP2"
    },
    "4838": {
      "op": "POP"
    },
    "4839": {
      "op": "DUP7"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4842": {
      "op": "DUP4"
    },
    "4843": {
      "op": "ADD"
    },
    "4844": {
      "op": "SLT"
    },
    "4845": {
      "op": "PUSH2",
      "value": "0x12F5"
    },
    "4848": {
      "op": "JUMPI"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4851": {
      "op": "DUP1"
    },
    "4852": {
      "op": "REVERT"
    },
    "4853": {
      "op": "JUMPDEST"
    },
    "4854": {
      "op": "DUP2"
    },
    "4855": {
      "op": "CALLDATALOAD"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4858": {
      "op": "PUSH2",
      "value": "0x1305"
    },
    "4861": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "4864": {
      "op": "DUP4"
    },
    "4865": {
      "op": "PUSH2",
      "value": "0x1092"
    },
    "4868": {
      "jump": "i",
      "op": "JUMP"
    },
    "4869": {
      "op": "JUMPDEST"
    },
    "4870": {
      "op": "DUP3"
    },
    "4871": {
      "op": "DUP2"
    },
    "4872": {
      "op": "MSTORE"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4875": {
      "op": "SWAP3"
    },
    "4876": {
      "op": "SWAP1"
    },
    "4877": {
      "op": "SWAP3"
    },
    "4878": {
      "op": "SHL"
    },
    "4879": {
      "op": "DUP5"
    },
    "4880": {
      "op": "ADD"
    },
    "4881": {
      "op": "DUP2"
    },
    "4882": {
      "op": "ADD"
    },
    "4883": {
      "op": "SWAP2"
    },
    "4884": {
      "op": "DUP2"
    },
    "4885": {
      "op": "DUP2"
    },
    "4886": {
      "op": "ADD"
    },
    "4887": {
      "op": "SWAP1"
    },
    "4888": {
      "op": "DUP11"
    },
    "4889": {
      "op": "DUP5"
    },
    "4890": {
      "op": "GT"
    },
    "4891": {
      "op": "ISZERO"
    },
    "4892": {
      "op": "PUSH2",
      "value": "0x1324"
    },
    "4895": {
      "op": "JUMPI"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4898": {
      "op": "DUP1"
    },
    "4899": {
      "op": "REVERT"
    },
    "4900": {
      "op": "JUMPDEST"
    },
    "4901": {
      "op": "DUP3"
    },
    "4902": {
      "op": "DUP7"
    },
    "4903": {
      "op": "ADD"
    },
    "4904": {
      "op": "JUMPDEST"
    },
    "4905": {
      "op": "DUP5"
    },
    "4906": {
      "op": "DUP2"
    },
    "4907": {
      "op": "LT"
    },
    "4908": {
      "op": "ISZERO"
    },
    "4909": {
      "op": "PUSH2",
      "value": "0x13B5"
    },
    "4912": {
      "op": "JUMPI"
    },
    "4913": {
      "op": "DUP1"
    },
    "4914": {
      "op": "CALLDATALOAD"
    },
    "4915": {
      "op": "DUP7"
    },
    "4916": {
      "op": "DUP2"
    },
    "4917": {
      "op": "GT"
    },
    "4918": {
      "op": "ISZERO"
    },
    "4919": {
      "op": "PUSH2",
      "value": "0x133F"
    },
    "4922": {
      "op": "JUMPI"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4925": {
      "op": "DUP1"
    },
    "4926": {
      "op": "REVERT"
    },
    "4927": {
      "op": "JUMPDEST"
    },
    "4928": {
      "op": "DUP8"
    },
    "4929": {
      "op": "ADD"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4932": {
      "op": "DUP2"
    },
    "4933": {
      "op": "DUP15"
    },
    "4934": {
      "op": "SUB"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4937": {
      "op": "NOT"
    },
    "4938": {
      "op": "ADD"
    },
    "4939": {
      "op": "SLT"
    },
    "4940": {
      "op": "ISZERO"
    },
    "4941": {
      "op": "PUSH2",
      "value": "0x1356"
    },
    "4944": {
      "op": "JUMPI"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4947": {
      "op": "DUP1"
    },
    "4948": {
      "op": "DUP2"
    },
    "4949": {
      "op": "REVERT"
    },
    "4950": {
      "op": "JUMPDEST"
    },
    "4951": {
      "op": "PUSH2",
      "value": "0x135E"
    },
    "4954": {
      "op": "PUSH2",
      "value": "0x1038"
    },
    "4957": {
      "jump": "i",
      "op": "JUMP"
    },
    "4958": {
      "op": "JUMPDEST"
    },
    "4959": {
      "op": "DUP6"
    },
    "4960": {
      "op": "DUP3"
    },
    "4961": {
      "op": "ADD"
    },
    "4962": {
      "op": "CALLDATALOAD"
    },
    "4963": {
      "op": "DUP9"
    },
    "4964": {
      "op": "DUP2"
    },
    "4965": {
      "op": "GT"
    },
    "4966": {
      "op": "ISZERO"
    },
    "4967": {
      "op": "PUSH2",
      "value": "0x1370"
    },
    "4970": {
      "op": "JUMPI"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4973": {
      "op": "DUP1"
    },
    "4974": {
      "op": "DUP2"
    },
    "4975": {
      "op": "REVERT"
    },
    "4976": {
      "op": "JUMPDEST"
    },
    "4977": {
      "op": "PUSH2",
      "value": "0x137E"
    },
    "4980": {
      "op": "DUP16"
    },
    "4981": {
      "op": "DUP9"
    },
    "4982": {
      "op": "DUP4"
    },
    "4983": {
      "op": "DUP7"
    },
    "4984": {
      "op": "ADD"
    },
    "4985": {
      "op": "ADD"
    },
    "4986": {
      "op": "PUSH2",
      "value": "0x10DE"
    },
    "4989": {
      "jump": "i",
      "op": "JUMP"
    },
    "4990": {
      "op": "JUMPDEST"
    },
    "4991": {
      "op": "DUP3"
    },
    "4992": {
      "op": "MSTORE"
    },
    "4993": {
      "op": "POP"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4996": {
      "op": "DUP3"
    },
    "4997": {
      "op": "ADD"
    },
    "4998": {
      "op": "CALLDATALOAD"
    },
    "4999": {
      "op": "DUP9"
    },
    "5000": {
      "op": "DUP2"
    },
    "5001": {
      "op": "GT"
    },
    "5002": {
      "op": "ISZERO"
    },
    "5003": {
      "op": "PUSH2",
      "value": "0x1394"
    },
    "5006": {
      "op": "JUMPI"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5009": {
      "op": "DUP1"
    },
    "5010": {
      "op": "DUP2"
    },
    "5011": {
      "op": "REVERT"
    },
    "5012": {
      "op": "JUMPDEST"
    },
    "5013": {
      "op": "PUSH2",
      "value": "0x13A2"
    },
    "5016": {
      "op": "DUP16"
    },
    "5017": {
      "op": "DUP9"
    },
    "5018": {
      "op": "DUP4"
    },
    "5019": {
      "op": "DUP7"
    },
    "5020": {
      "op": "ADD"
    },
    "5021": {
      "op": "ADD"
    },
    "5022": {
      "op": "PUSH2",
      "value": "0x1134"
    },
    "5025": {
      "jump": "i",
      "op": "JUMP"
    },
    "5026": {
      "op": "JUMPDEST"
    },
    "5027": {
      "op": "DUP3"
    },
    "5028": {
      "op": "DUP9"
    },
    "5029": {
      "op": "ADD"
    },
    "5030": {
      "op": "MSTORE"
    },
    "5031": {
      "op": "POP"
    },
    "5032": {
      "op": "DUP5"
    },
    "5033": {
      "op": "MSTORE"
    },
    "5034": {
      "op": "POP"
    },
    "5035": {
      "op": "SWAP2"
    },
    "5036": {
      "op": "DUP4"
    },
    "5037": {
      "op": "ADD"
    },
    "5038": {
      "op": "SWAP2"
    },
    "5039": {
      "op": "DUP4"
    },
    "5040": {
      "op": "ADD"
    },
    "5041": {
      "op": "PUSH2",
      "value": "0x1328"
    },
    "5044": {
      "op": "JUMP"
    },
    "5045": {
      "op": "JUMPDEST"
    },
    "5046": {
      "op": "POP"
    },
    "5047": {
      "op": "SWAP8"
    },
    "5048": {
      "op": "POP"
    },
    "5049": {
      "op": "PUSH2",
      "value": "0x13C5"
    },
    "5052": {
      "op": "SWAP1"
    },
    "5053": {
      "op": "POP"
    },
    "5054": {
      "op": "DUP9"
    },
    "5055": {
      "op": "DUP3"
    },
    "5056": {
      "op": "ADD"
    },
    "5057": {
      "op": "PUSH2",
      "value": "0xFEE"
    },
    "5060": {
      "jump": "i",
      "op": "JUMP"
    },
    "5061": {
      "op": "JUMPDEST"
    },
    "5062": {
      "op": "SWAP6"
    },
    "5063": {
      "op": "POP"
    },
    "5064": {
      "op": "POP"
    },
    "5065": {
      "op": "POP"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "op": "POP"
    },
    "5068": {
      "op": "PUSH2",
      "value": "0x13D7"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5073": {
      "op": "DUP6"
    },
    "5074": {
      "op": "ADD"
    },
    "5075": {
      "op": "PUSH2",
      "value": "0x12A9"
    },
    "5078": {
      "jump": "i",
      "op": "JUMP"
    },
    "5079": {
      "op": "JUMPDEST"
    },
    "5080": {
      "op": "SWAP1"
    },
    "5081": {
      "op": "POP"
    },
    "5082": {
      "op": "SWAP3"
    },
    "5083": {
      "op": "POP"
    },
    "5084": {
      "op": "SWAP3"
    },
    "5085": {
      "op": "POP"
    },
    "5086": {
      "op": "SWAP3"
    },
    "5087": {
      "jump": "o",
      "op": "JUMP"
    },
    "5088": {
      "op": "JUMPDEST"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5091": {
      "op": "DUP1"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5094": {
      "op": "DUP4"
    },
    "5095": {
      "op": "DUP6"
    },
    "5096": {
      "op": "SUB"
    },
    "5097": {
      "op": "SLT"
    },
    "5098": {
      "op": "ISZERO"
    },
    "5099": {
      "op": "PUSH2",
      "value": "0x13F3"
    },
    "5102": {
      "op": "JUMPI"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5105": {
      "op": "DUP1"
    },
    "5106": {
      "op": "REVERT"
    },
    "5107": {
      "op": "JUMPDEST"
    },
    "5108": {
      "op": "POP"
    },
    "5109": {
      "op": "POP"
    },
    "5110": {
      "op": "DUP1"
    },
    "5111": {
      "op": "CALLDATALOAD"
    },
    "5112": {
      "op": "SWAP3"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5115": {
      "op": "SWAP1"
    },
    "5116": {
      "op": "SWAP2"
    },
    "5117": {
      "op": "ADD"
    },
    "5118": {
      "op": "CALLDATALOAD"
    },
    "5119": {
      "op": "SWAP2"
    },
    "5120": {
      "op": "POP"
    },
    "5121": {
      "jump": "o",
      "op": "JUMP"
    },
    "5122": {
      "op": "JUMPDEST"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5125": {
      "op": "JUMPDEST"
    },
    "5126": {
      "op": "DUP4"
    },
    "5127": {
      "op": "DUP2"
    },
    "5128": {
      "op": "LT"
    },
    "5129": {
      "op": "ISZERO"
    },
    "5130": {
      "op": "PUSH2",
      "value": "0x141D"
    },
    "5133": {
      "op": "JUMPI"
    },
    "5134": {
      "op": "DUP2"
    },
    "5135": {
      "op": "DUP2"
    },
    "5136": {
      "op": "ADD"
    },
    "5137": {
      "op": "MLOAD"
    },
    "5138": {
      "op": "DUP4"
    },
    "5139": {
      "op": "DUP3"
    },
    "5140": {
      "op": "ADD"
    },
    "5141": {
      "op": "MSTORE"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5144": {
      "op": "ADD"
    },
    "5145": {
      "op": "PUSH2",
      "value": "0x1405"
    },
    "5148": {
      "op": "JUMP"
    },
    "5149": {
      "op": "JUMPDEST"
    },
    "5150": {
      "op": "POP"
    },
    "5151": {
      "op": "POP"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5154": {
      "op": "SWAP2"
    },
    "5155": {
      "op": "ADD"
    },
    "5156": {
      "op": "MSTORE"
    },
    "5157": {
      "jump": "o",
      "op": "JUMP"
    },
    "5158": {
      "op": "JUMPDEST"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5161": {
      "op": "DUP2"
    },
    "5162": {
      "op": "MLOAD"
    },
    "5163": {
      "op": "DUP1"
    },
    "5164": {
      "op": "DUP5"
    },
    "5165": {
      "op": "MSTORE"
    },
    "5166": {
      "op": "PUSH2",
      "value": "0x143E"
    },
    "5169": {
      "op": "DUP2"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5172": {
      "op": "DUP7"
    },
    "5173": {
      "op": "ADD"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5176": {
      "op": "DUP7"
    },
    "5177": {
      "op": "ADD"
    },
    "5178": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5181": {
      "jump": "i",
      "op": "JUMP"
    },
    "5182": {
      "op": "JUMPDEST"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5185": {
      "op": "ADD"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5188": {
      "op": "NOT"
    },
    "5189": {
      "op": "AND"
    },
    "5190": {
      "op": "SWAP3"
    },
    "5191": {
      "op": "SWAP1"
    },
    "5192": {
      "op": "SWAP3"
    },
    "5193": {
      "op": "ADD"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5196": {
      "op": "ADD"
    },
    "5197": {
      "op": "SWAP3"
    },
    "5198": {
      "op": "SWAP2"
    },
    "5199": {
      "op": "POP"
    },
    "5200": {
      "op": "POP"
    },
    "5201": {
      "jump": "o",
      "op": "JUMP"
    },
    "5202": {
      "op": "JUMPDEST"
    },
    "5203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5205": {
      "op": "DUP2"
    },
    "5206": {
      "op": "MSTORE"
    },
    "5207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5209": {
      "op": "PUSH2",
      "value": "0x101B"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5214": {
      "op": "DUP4"
    },
    "5215": {
      "op": "ADD"
    },
    "5216": {
      "op": "DUP5"
    },
    "5217": {
      "op": "PUSH2",
      "value": "0x1426"
    },
    "5220": {
      "jump": "i",
      "op": "JUMP"
    },
    "5221": {
      "op": "JUMPDEST"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5226": {
      "op": "DUP3"
    },
    "5227": {
      "op": "ADD"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5230": {
      "op": "DUP4"
    },
    "5231": {
      "op": "MSTORE"
    },
    "5232": {
      "op": "DUP1"
    },
    "5233": {
      "op": "DUP6"
    },
    "5234": {
      "op": "MLOAD"
    },
    "5235": {
      "op": "DUP1"
    },
    "5236": {
      "op": "DUP4"
    },
    "5237": {
      "op": "MSTORE"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5240": {
      "op": "DUP6"
    },
    "5241": {
      "op": "ADD"
    },
    "5242": {
      "op": "SWAP2"
    },
    "5243": {
      "op": "POP"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5246": {
      "op": "DUP2"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5249": {
      "op": "SHL"
    },
    "5250": {
      "op": "DUP7"
    },
    "5251": {
      "op": "ADD"
    },
    "5252": {
      "op": "ADD"
    },
    "5253": {
      "op": "SWAP3"
    },
    "5254": {
      "op": "POP"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5257": {
      "op": "DUP1"
    },
    "5258": {
      "op": "DUP9"
    },
    "5259": {
      "op": "ADD"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5262": {
      "op": "JUMPDEST"
    },
    "5263": {
      "op": "DUP4"
    },
    "5264": {
      "op": "DUP2"
    },
    "5265": {
      "op": "LT"
    },
    "5266": {
      "op": "ISZERO"
    },
    "5267": {
      "op": "PUSH2",
      "value": "0x14BC"
    },
    "5270": {
      "op": "JUMPI"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "5273": {
      "op": "NOT"
    },
    "5274": {
      "op": "DUP9"
    },
    "5275": {
      "op": "DUP8"
    },
    "5276": {
      "op": "SUB"
    },
    "5277": {
      "op": "ADD"
    },
    "5278": {
      "op": "DUP6"
    },
    "5279": {
      "op": "MSTORE"
    },
    "5280": {
      "op": "PUSH2",
      "value": "0x14AA"
    },
    "5283": {
      "op": "DUP7"
    },
    "5284": {
      "op": "DUP4"
    },
    "5285": {
      "op": "MLOAD"
    },
    "5286": {
      "op": "PUSH2",
      "value": "0x1426"
    },
    "5289": {
      "jump": "i",
      "op": "JUMP"
    },
    "5290": {
      "op": "JUMPDEST"
    },
    "5291": {
      "op": "SWAP6"
    },
    "5292": {
      "op": "POP"
    },
    "5293": {
      "op": "SWAP4"
    },
    "5294": {
      "op": "DUP3"
    },
    "5295": {
      "op": "ADD"
    },
    "5296": {
      "op": "SWAP4"
    },
    "5297": {
      "op": "SWAP1"
    },
    "5298": {
      "op": "DUP3"
    },
    "5299": {
      "op": "ADD"
    },
    "5300": {
      "op": "SWAP1"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5303": {
      "op": "ADD"
    },
    "5304": {
      "op": "PUSH2",
      "value": "0x148E"
    },
    "5307": {
      "op": "JUMP"
    },
    "5308": {
      "op": "JUMPDEST"
    },
    "5309": {
      "op": "POP"
    },
    "5310": {
      "op": "POP"
    },
    "5311": {
      "op": "POP"
    },
    "5312": {
      "op": "POP"
    },
    "5313": {
      "op": "POP"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5316": {
      "op": "SWAP3"
    },
    "5317": {
      "op": "SWAP1"
    },
    "5318": {
      "op": "SWAP3"
    },
    "5319": {
      "op": "ADD"
    },
    "5320": {
      "op": "SWAP3"
    },
    "5321": {
      "op": "SWAP1"
    },
    "5322": {
      "op": "SWAP3"
    },
    "5323": {
      "op": "MSTORE"
    },
    "5324": {
      "op": "SWAP3"
    },
    "5325": {
      "op": "SWAP2"
    },
    "5326": {
      "op": "POP"
    },
    "5327": {
      "op": "POP"
    },
    "5328": {
      "jump": "o",
      "op": "JUMP"
    },
    "5329": {
      "op": "JUMPDEST"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5334": {
      "op": "DUP1"
    },
    "5335": {
      "op": "DUP4"
    },
    "5336": {
      "op": "DUP6"
    },
    "5337": {
      "op": "SUB"
    },
    "5338": {
      "op": "SLT"
    },
    "5339": {
      "op": "ISZERO"
    },
    "5340": {
      "op": "PUSH2",
      "value": "0x14E4"
    },
    "5343": {
      "op": "JUMPI"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5346": {
      "op": "DUP1"
    },
    "5347": {
      "op": "REVERT"
    },
    "5348": {
      "op": "JUMPDEST"
    },
    "5349": {
      "op": "DUP3"
    },
    "5350": {
      "op": "MLOAD"
    },
    "5351": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5360": {
      "op": "DUP2"
    },
    "5361": {
      "op": "GT"
    },
    "5362": {
      "op": "ISZERO"
    },
    "5363": {
      "op": "PUSH2",
      "value": "0x14FB"
    },
    "5366": {
      "op": "JUMPI"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5369": {
      "op": "DUP1"
    },
    "5370": {
      "op": "REVERT"
    },
    "5371": {
      "op": "JUMPDEST"
    },
    "5372": {
      "op": "DUP4"
    },
    "5373": {
      "op": "ADD"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5376": {
      "op": "DUP2"
    },
    "5377": {
      "op": "ADD"
    },
    "5378": {
      "op": "DUP6"
    },
    "5379": {
      "op": "SGT"
    },
    "5380": {
      "op": "PUSH2",
      "value": "0x150C"
    },
    "5383": {
      "op": "JUMPI"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5386": {
      "op": "DUP1"
    },
    "5387": {
      "op": "REVERT"
    },
    "5388": {
      "op": "JUMPDEST"
    },
    "5389": {
      "op": "DUP1"
    },
    "5390": {
      "op": "MLOAD"
    },
    "5391": {
      "op": "PUSH2",
      "value": "0x151A"
    },
    "5394": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "5397": {
      "op": "DUP3"
    },
    "5398": {
      "op": "PUSH2",
      "value": "0x1092"
    },
    "5401": {
      "jump": "i",
      "op": "JUMP"
    },
    "5402": {
      "op": "JUMPDEST"
    },
    "5403": {
      "op": "DUP2"
    },
    "5404": {
      "op": "DUP2"
    },
    "5405": {
      "op": "MSTORE"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5408": {
      "op": "SWAP2"
    },
    "5409": {
      "op": "SWAP1"
    },
    "5410": {
      "op": "SWAP2"
    },
    "5411": {
      "op": "SHL"
    },
    "5412": {
      "op": "DUP3"
    },
    "5413": {
      "op": "ADD"
    },
    "5414": {
      "op": "DUP4"
    },
    "5415": {
      "op": "ADD"
    },
    "5416": {
      "op": "SWAP1"
    },
    "5417": {
      "op": "DUP4"
    },
    "5418": {
      "op": "DUP2"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "op": "SWAP1"
    },
    "5421": {
      "op": "DUP8"
    },
    "5422": {
      "op": "DUP4"
    },
    "5423": {
      "op": "GT"
    },
    "5424": {
      "op": "ISZERO"
    },
    "5425": {
      "op": "PUSH2",
      "value": "0x1539"
    },
    "5428": {
      "op": "JUMPI"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5431": {
      "op": "DUP1"
    },
    "5432": {
      "op": "REVERT"
    },
    "5433": {
      "op": "JUMPDEST"
    },
    "5434": {
      "op": "SWAP3"
    },
    "5435": {
      "op": "DUP5"
    },
    "5436": {
      "op": "ADD"
    },
    "5437": {
      "op": "SWAP3"
    },
    "5438": {
      "op": "JUMPDEST"
    },
    "5439": {
      "op": "DUP3"
    },
    "5440": {
      "op": "DUP5"
    },
    "5441": {
      "op": "LT"
    },
    "5442": {
      "op": "ISZERO"
    },
    "5443": {
      "op": "PUSH2",
      "value": "0x1560"
    },
    "5446": {
      "op": "JUMPI"
    },
    "5447": {
      "op": "DUP4"
    },
    "5448": {
      "op": "MLOAD"
    },
    "5449": {
      "op": "PUSH2",
      "value": "0x1551"
    },
    "5452": {
      "op": "DUP2"
    },
    "5453": {
      "op": "PUSH2",
      "value": "0xFD9"
    },
    "5456": {
      "jump": "i",
      "op": "JUMP"
    },
    "5457": {
      "op": "JUMPDEST"
    },
    "5458": {
      "op": "DUP3"
    },
    "5459": {
      "op": "MSTORE"
    },
    "5460": {
      "op": "SWAP3"
    },
    "5461": {
      "op": "DUP5"
    },
    "5462": {
      "op": "ADD"
    },
    "5463": {
      "op": "SWAP3"
    },
    "5464": {
      "op": "SWAP1"
    },
    "5465": {
      "op": "DUP5"
    },
    "5466": {
      "op": "ADD"
    },
    "5467": {
      "op": "SWAP1"
    },
    "5468": {
      "op": "PUSH2",
      "value": "0x153E"
    },
    "5471": {
      "op": "JUMP"
    },
    "5472": {
      "op": "JUMPDEST"
    },
    "5473": {
      "op": "SWAP8"
    },
    "5474": {
      "op": "SWAP7"
    },
    "5475": {
      "op": "POP"
    },
    "5476": {
      "op": "POP"
    },
    "5477": {
      "op": "POP"
    },
    "5478": {
      "op": "POP"
    },
    "5479": {
      "op": "POP"
    },
    "5480": {
      "op": "POP"
    },
    "5481": {
      "op": "POP"
    },
    "5482": {
      "jump": "o",
      "op": "JUMP"
    },
    "5483": {
      "op": "JUMPDEST"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5488": {
      "op": "DUP1"
    },
    "5489": {
      "op": "DUP4"
    },
    "5490": {
      "op": "DUP6"
    },
    "5491": {
      "op": "SUB"
    },
    "5492": {
      "op": "SLT"
    },
    "5493": {
      "op": "ISZERO"
    },
    "5494": {
      "op": "PUSH2",
      "value": "0x157E"
    },
    "5497": {
      "op": "JUMPI"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5500": {
      "op": "DUP1"
    },
    "5501": {
      "op": "REVERT"
    },
    "5502": {
      "op": "JUMPDEST"
    },
    "5503": {
      "op": "DUP3"
    },
    "5504": {
      "op": "MLOAD"
    },
    "5505": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5514": {
      "op": "DUP1"
    },
    "5515": {
      "op": "DUP3"
    },
    "5516": {
      "op": "GT"
    },
    "5517": {
      "op": "ISZERO"
    },
    "5518": {
      "op": "PUSH2",
      "value": "0x1596"
    },
    "5521": {
      "op": "JUMPI"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5524": {
      "op": "DUP1"
    },
    "5525": {
      "op": "REVERT"
    },
    "5526": {
      "op": "JUMPDEST"
    },
    "5527": {
      "op": "DUP2"
    },
    "5528": {
      "op": "DUP6"
    },
    "5529": {
      "op": "ADD"
    },
    "5530": {
      "op": "SWAP2"
    },
    "5531": {
      "op": "POP"
    },
    "5532": {
      "op": "DUP6"
    },
    "5533": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5535": {
      "op": "DUP4"
    },
    "5536": {
      "op": "ADD"
    },
    "5537": {
      "op": "SLT"
    },
    "5538": {
      "op": "PUSH2",
      "value": "0x15AA"
    },
    "5541": {
      "op": "JUMPI"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5544": {
      "op": "DUP1"
    },
    "5545": {
      "op": "REVERT"
    },
    "5546": {
      "op": "JUMPDEST"
    },
    "5547": {
      "op": "DUP2"
    },
    "5548": {
      "op": "MLOAD"
    },
    "5549": {
      "op": "PUSH2",
      "value": "0x15B8"
    },
    "5552": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "5555": {
      "op": "DUP3"
    },
    "5556": {
      "op": "PUSH2",
      "value": "0x1092"
    },
    "5559": {
      "jump": "i",
      "op": "JUMP"
    },
    "5560": {
      "op": "JUMPDEST"
    },
    "5561": {
      "op": "DUP2"
    },
    "5562": {
      "op": "DUP2"
    },
    "5563": {
      "op": "MSTORE"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5566": {
      "op": "SWAP2"
    },
    "5567": {
      "op": "SWAP1"
    },
    "5568": {
      "op": "SWAP2"
    },
    "5569": {
      "op": "SHL"
    },
    "5570": {
      "op": "DUP4"
    },
    "5571": {
      "op": "ADD"
    },
    "5572": {
      "op": "DUP5"
    },
    "5573": {
      "op": "ADD"
    },
    "5574": {
      "op": "SWAP1"
    },
    "5575": {
      "op": "DUP5"
    },
    "5576": {
      "op": "DUP2"
    },
    "5577": {
      "op": "ADD"
    },
    "5578": {
      "op": "SWAP1"
    },
    "5579": {
      "op": "DUP9"
    },
    "5580": {
      "op": "DUP4"
    },
    "5581": {
      "op": "GT"
    },
    "5582": {
      "op": "ISZERO"
    },
    "5583": {
      "op": "PUSH2",
      "value": "0x15D7"
    },
    "5586": {
      "op": "JUMPI"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5589": {
      "op": "DUP1"
    },
    "5590": {
      "op": "REVERT"
    },
    "5591": {
      "op": "JUMPDEST"
    },
    "5592": {
      "op": "DUP6"
    },
    "5593": {
      "op": "DUP6"
    },
    "5594": {
      "op": "ADD"
    },
    "5595": {
      "op": "JUMPDEST"
    },
    "5596": {
      "op": "DUP4"
    },
    "5597": {
      "op": "DUP2"
    },
    "5598": {
      "op": "LT"
    },
    "5599": {
      "op": "ISZERO"
    },
    "5600": {
      "op": "PUSH2",
      "value": "0x164B"
    },
    "5603": {
      "op": "JUMPI"
    },
    "5604": {
      "op": "DUP1"
    },
    "5605": {
      "op": "MLOAD"
    },
    "5606": {
      "op": "DUP6"
    },
    "5607": {
      "op": "DUP2"
    },
    "5608": {
      "op": "GT"
    },
    "5609": {
      "op": "ISZERO"
    },
    "5610": {
      "op": "PUSH2",
      "value": "0x15F3"
    },
    "5613": {
      "op": "JUMPI"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5616": {
      "op": "DUP1"
    },
    "5617": {
      "op": "DUP2"
    },
    "5618": {
      "op": "REVERT"
    },
    "5619": {
      "op": "JUMPDEST"
    },
    "5620": {
      "op": "DUP7"
    },
    "5621": {
      "op": "ADD"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5624": {
      "op": "DUP2"
    },
    "5625": {
      "op": "ADD"
    },
    "5626": {
      "op": "DUP12"
    },
    "5627": {
      "op": "SGT"
    },
    "5628": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "5631": {
      "op": "JUMPI"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5634": {
      "op": "DUP1"
    },
    "5635": {
      "op": "DUP2"
    },
    "5636": {
      "op": "REVERT"
    },
    "5637": {
      "op": "JUMPDEST"
    },
    "5638": {
      "op": "DUP8"
    },
    "5639": {
      "op": "DUP2"
    },
    "5640": {
      "op": "ADD"
    },
    "5641": {
      "op": "MLOAD"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5644": {
      "op": "PUSH2",
      "value": "0x1617"
    },
    "5647": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "5650": {
      "op": "DUP4"
    },
    "5651": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "5654": {
      "jump": "i",
      "op": "JUMP"
    },
    "5655": {
      "op": "JUMPDEST"
    },
    "5656": {
      "op": "DUP3"
    },
    "5657": {
      "op": "DUP2"
    },
    "5658": {
      "op": "MSTORE"
    },
    "5659": {
      "op": "DUP14"
    },
    "5660": {
      "op": "DUP3"
    },
    "5661": {
      "op": "DUP5"
    },
    "5662": {
      "op": "DUP7"
    },
    "5663": {
      "op": "ADD"
    },
    "5664": {
      "op": "ADD"
    },
    "5665": {
      "op": "GT"
    },
    "5666": {
      "op": "ISZERO"
    },
    "5667": {
      "op": "PUSH2",
      "value": "0x162C"
    },
    "5670": {
      "op": "JUMPI"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5673": {
      "op": "DUP1"
    },
    "5674": {
      "op": "DUP2"
    },
    "5675": {
      "op": "REVERT"
    },
    "5676": {
      "op": "JUMPDEST"
    },
    "5677": {
      "op": "PUSH2",
      "value": "0x163B"
    },
    "5680": {
      "op": "DUP4"
    },
    "5681": {
      "op": "DUP13"
    },
    "5682": {
      "op": "DUP4"
    },
    "5683": {
      "op": "ADD"
    },
    "5684": {
      "op": "DUP5"
    },
    "5685": {
      "op": "DUP8"
    },
    "5686": {
      "op": "ADD"
    },
    "5687": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5690": {
      "jump": "i",
      "op": "JUMP"
    },
    "5691": {
      "op": "JUMPDEST"
    },
    "5692": {
      "op": "DUP7"
    },
    "5693": {
      "op": "MSTORE"
    },
    "5694": {
      "op": "POP"
    },
    "5695": {
      "op": "POP"
    },
    "5696": {
      "op": "POP"
    },
    "5697": {
      "op": "SWAP2"
    },
    "5698": {
      "op": "DUP7"
    },
    "5699": {
      "op": "ADD"
    },
    "5700": {
      "op": "SWAP2"
    },
    "5701": {
      "op": "DUP7"
    },
    "5702": {
      "op": "ADD"
    },
    "5703": {
      "op": "PUSH2",
      "value": "0x15DB"
    },
    "5706": {
      "op": "JUMP"
    },
    "5707": {
      "op": "JUMPDEST"
    },
    "5708": {
      "op": "POP"
    },
    "5709": {
      "op": "SWAP9"
    },
    "5710": {
      "op": "SWAP8"
    },
    "5711": {
      "op": "POP"
    },
    "5712": {
      "op": "POP"
    },
    "5713": {
      "op": "POP"
    },
    "5714": {
      "op": "POP"
    },
    "5715": {
      "op": "POP"
    },
    "5716": {
      "op": "POP"
    },
    "5717": {
      "op": "POP"
    },
    "5718": {
      "op": "POP"
    },
    "5719": {
      "jump": "o",
      "op": "JUMP"
    },
    "5720": {
      "op": "JUMPDEST"
    },
    "5721": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5728": {
      "op": "SHL"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5731": {
      "op": "MSTORE"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5736": {
      "op": "MSTORE"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5741": {
      "op": "REVERT"
    },
    "5742": {
      "op": "JUMPDEST"
    },
    "5743": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5750": {
      "op": "SHL"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5753": {
      "op": "MSTORE"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5758": {
      "op": "MSTORE"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5763": {
      "op": "REVERT"
    },
    "5764": {
      "op": "JUMPDEST"
    },
    "5765": {
      "op": "DUP1"
    },
    "5766": {
      "op": "DUP3"
    },
    "5767": {
      "op": "ADD"
    },
    "5768": {
      "op": "DUP1"
    },
    "5769": {
      "op": "DUP3"
    },
    "5770": {
      "op": "GT"
    },
    "5771": {
      "op": "ISZERO"
    },
    "5772": {
      "op": "PUSH2",
      "value": "0x312"
    },
    "5775": {
      "op": "JUMPI"
    },
    "5776": {
      "op": "PUSH2",
      "value": "0x312"
    },
    "5779": {
      "op": "PUSH2",
      "value": "0x166E"
    },
    "5782": {
      "jump": "i",
      "op": "JUMP"
    },
    "5783": {
      "op": "JUMPDEST"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5786": {
      "op": "DUP4"
    },
    "5787": {
      "op": "MLOAD"
    },
    "5788": {
      "op": "PUSH2",
      "value": "0x16A9"
    },
    "5791": {
      "op": "DUP2"
    },
    "5792": {
      "op": "DUP5"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5795": {
      "op": "DUP9"
    },
    "5796": {
      "op": "ADD"
    },
    "5797": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5800": {
      "jump": "i",
      "op": "JUMP"
    },
    "5801": {
      "op": "JUMPDEST"
    },
    "5802": {
      "op": "DUP4"
    },
    "5803": {
      "op": "MLOAD"
    },
    "5804": {
      "op": "SWAP1"
    },
    "5805": {
      "op": "DUP4"
    },
    "5806": {
      "op": "ADD"
    },
    "5807": {
      "op": "SWAP1"
    },
    "5808": {
      "op": "PUSH2",
      "value": "0x16BD"
    },
    "5811": {
      "op": "DUP2"
    },
    "5812": {
      "op": "DUP4"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5815": {
      "op": "DUP9"
    },
    "5816": {
      "op": "ADD"
    },
    "5817": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5820": {
      "jump": "i",
      "op": "JUMP"
    },
    "5821": {
      "op": "JUMPDEST"
    },
    "5822": {
      "op": "ADD"
    },
    "5823": {
      "op": "SWAP5"
    },
    "5824": {
      "op": "SWAP4"
    },
    "5825": {
      "op": "POP"
    },
    "5826": {
      "op": "POP"
    },
    "5827": {
      "op": "POP"
    },
    "5828": {
      "op": "POP"
    },
    "5829": {
      "jump": "o",
      "op": "JUMP"
    },
    "5830": {
      "op": "JUMPDEST"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5833": {
      "op": "DUP3"
    },
    "5834": {
      "op": "MLOAD"
    },
    "5835": {
      "op": "PUSH2",
      "value": "0x16D8"
    },
    "5838": {
      "op": "DUP2"
    },
    "5839": {
      "op": "DUP5"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5842": {
      "op": "DUP8"
    },
    "5843": {
      "op": "ADD"
    },
    "5844": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5847": {
      "jump": "i",
      "op": "JUMP"
    },
    "5848": {
      "op": "JUMPDEST"
    },
    "5849": {
      "op": "SWAP2"
    },
    "5850": {
      "op": "SWAP1"
    },
    "5851": {
      "op": "SWAP2"
    },
    "5852": {
      "op": "ADD"
    },
    "5853": {
      "op": "SWAP3"
    },
    "5854": {
      "op": "SWAP2"
    },
    "5855": {
      "op": "POP"
    },
    "5856": {
      "op": "POP"
    },
    "5857": {
      "jump": "o",
      "op": "JUMP"
    },
    "5858": {
      "op": "JUMPDEST"
    },
    "5859": {
      "op": "DUP2"
    },
    "5860": {
      "op": "DUP2"
    },
    "5861": {
      "op": "SUB"
    },
    "5862": {
      "op": "DUP2"
    },
    "5863": {
      "op": "DUP2"
    },
    "5864": {
      "op": "GT"
    },
    "5865": {
      "op": "ISZERO"
    },
    "5866": {
      "op": "PUSH2",
      "value": "0x312"
    },
    "5869": {
      "op": "JUMPI"
    },
    "5870": {
      "op": "PUSH2",
      "value": "0x312"
    },
    "5873": {
      "op": "PUSH2",
      "value": "0x166E"
    },
    "5876": {
      "jump": "i",
      "op": "JUMP"
    },
    "5877": {
      "op": "JUMPDEST"
    },
    "5878": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5883": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5885": {
      "op": "SHL"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5888": {
      "op": "MSTORE"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5893": {
      "op": "MSTORE"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5898": {
      "op": "REVERT"
    },
    "5899": {
      "op": "JUMPDEST"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5902": {
      "op": "DUP3"
    },
    "5903": {
      "op": "PUSH2",
      "value": "0x171A"
    },
    "5906": {
      "op": "JUMPI"
    },
    "5907": {
      "op": "PUSH2",
      "value": "0x171A"
    },
    "5910": {
      "op": "PUSH2",
      "value": "0x16F5"
    },
    "5913": {
      "jump": "i",
      "op": "JUMP"
    },
    "5914": {
      "op": "JUMPDEST"
    },
    "5915": {
      "op": "POP"
    },
    "5916": {
      "op": "MOD"
    },
    "5917": {
      "op": "SWAP1"
    },
    "5918": {
      "jump": "o",
      "op": "JUMP"
    },
    "5919": {
      "op": "JUMPDEST"
    },
    "5920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5922": {
      "op": "DUP2"
    },
    "5923": {
      "op": "DUP2"
    },
    "5924": {
      "op": "SHR"
    },
    "5925": {
      "op": "SWAP1"
    },
    "5926": {
      "op": "DUP3"
    },
    "5927": {
      "op": "AND"
    },
    "5928": {
      "op": "DUP1"
    },
    "5929": {
      "op": "PUSH2",
      "value": "0x1733"
    },
    "5932": {
      "op": "JUMPI"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5935": {
      "op": "DUP3"
    },
    "5936": {
      "op": "AND"
    },
    "5937": {
      "op": "SWAP2"
    },
    "5938": {
      "op": "POP"
    },
    "5939": {
      "op": "JUMPDEST"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5942": {
      "op": "DUP3"
    },
    "5943": {
      "op": "LT"
    },
    "5944": {
      "op": "DUP2"
    },
    "5945": {
      "op": "SUB"
    },
    "5946": {
      "op": "PUSH2",
      "value": "0x1753"
    },
    "5949": {
      "op": "JUMPI"
    },
    "5950": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5957": {
      "op": "SHL"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5960": {
      "op": "MSTORE"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5965": {
      "op": "MSTORE"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5970": {
      "op": "REVERT"
    },
    "5971": {
      "op": "JUMPDEST"
    },
    "5972": {
      "op": "POP"
    },
    "5973": {
      "op": "SWAP2"
    },
    "5974": {
      "op": "SWAP1"
    },
    "5975": {
      "op": "POP"
    },
    "5976": {
      "jump": "o",
      "op": "JUMP"
    },
    "5977": {
      "op": "JUMPDEST"
    },
    "5978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5982": {
      "op": "DUP3"
    },
    "5983": {
      "op": "DUP5"
    },
    "5984": {
      "op": "SUB"
    },
    "5985": {
      "op": "SLT"
    },
    "5986": {
      "op": "ISZERO"
    },
    "5987": {
      "op": "PUSH2",
      "value": "0x176B"
    },
    "5990": {
      "op": "JUMPI"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5993": {
      "op": "DUP1"
    },
    "5994": {
      "op": "REVERT"
    },
    "5995": {
      "op": "JUMPDEST"
    },
    "5996": {
      "op": "DUP2"
    },
    "5997": {
      "op": "MLOAD"
    },
    "5998": {
      "op": "PUSH2",
      "value": "0x101B"
    },
    "6001": {
      "op": "DUP2"
    },
    "6002": {
      "op": "PUSH2",
      "value": "0x129B"
    },
    "6005": {
      "jump": "i",
      "op": "JUMP"
    },
    "6006": {
      "op": "JUMPDEST"
    },
    "6007": {
      "op": "DUP1"
    },
    "6008": {
      "op": "DUP3"
    },
    "6009": {
      "op": "MUL"
    },
    "6010": {
      "op": "DUP2"
    },
    "6011": {
      "op": "ISZERO"
    },
    "6012": {
      "op": "DUP3"
    },
    "6013": {
      "op": "DUP3"
    },
    "6014": {
      "op": "DIV"
    },
    "6015": {
      "op": "DUP5"
    },
    "6016": {
      "op": "EQ"
    },
    "6017": {
      "op": "OR"
    },
    "6018": {
      "op": "PUSH2",
      "value": "0x312"
    },
    "6021": {
      "op": "JUMPI"
    },
    "6022": {
      "op": "PUSH2",
      "value": "0x312"
    },
    "6025": {
      "op": "PUSH2",
      "value": "0x166E"
    },
    "6028": {
      "jump": "i",
      "op": "JUMP"
    },
    "6029": {
      "op": "JUMPDEST"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6032": {
      "op": "DUP3"
    },
    "6033": {
      "op": "PUSH2",
      "value": "0x179C"
    },
    "6036": {
      "op": "JUMPI"
    },
    "6037": {
      "op": "PUSH2",
      "value": "0x179C"
    },
    "6040": {
      "op": "PUSH2",
      "value": "0x16F5"
    },
    "6043": {
      "jump": "i",
      "op": "JUMP"
    },
    "6044": {
      "op": "JUMPDEST"
    },
    "6045": {
      "op": "POP"
    },
    "6046": {
      "op": "DIV"
    },
    "6047": {
      "op": "SWAP1"
    },
    "6048": {
      "jump": "o",
      "op": "JUMP"
    },
    "6049": {
      "op": "JUMPDEST"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6054": {
      "op": "DUP3"
    },
    "6055": {
      "op": "ADD"
    },
    "6056": {
      "op": "PUSH2",
      "value": "0x17B3"
    },
    "6059": {
      "op": "JUMPI"
    },
    "6060": {
      "op": "PUSH2",
      "value": "0x17B3"
    },
    "6063": {
      "op": "PUSH2",
      "value": "0x166E"
    },
    "6066": {
      "jump": "i",
      "op": "JUMP"
    },
    "6067": {
      "op": "JUMPDEST"
    },
    "6068": {
      "op": "POP"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6071": {
      "op": "ADD"
    },
    "6072": {
      "op": "SWAP1"
    },
    "6073": {
      "jump": "o",
      "op": "JUMP"
    },
    "6074": {
      "op": "JUMPDEST"
    },
    "6075": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6077": {
      "op": "DUP3"
    },
    "6078": {
      "op": "GT"
    },
    "6079": {
      "op": "ISZERO"
    },
    "6080": {
      "op": "PUSH2",
      "value": "0xEDD"
    },
    "6083": {
      "op": "JUMPI"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6086": {
      "op": "DUP2"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6089": {
      "op": "MSTORE"
    },
    "6090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6094": {
      "op": "KECCAK256"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6097": {
      "op": "DUP6"
    },
    "6098": {
      "op": "ADD"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6101": {
      "op": "SHR"
    },
    "6102": {
      "op": "DUP2"
    },
    "6103": {
      "op": "ADD"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6106": {
      "op": "DUP7"
    },
    "6107": {
      "op": "LT"
    },
    "6108": {
      "op": "ISZERO"
    },
    "6109": {
      "op": "PUSH2",
      "value": "0x17E3"
    },
    "6112": {
      "op": "JUMPI"
    },
    "6113": {
      "op": "POP"
    },
    "6114": {
      "op": "DUP1"
    },
    "6115": {
      "op": "JUMPDEST"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6118": {
      "op": "DUP6"
    },
    "6119": {
      "op": "ADD"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6122": {
      "op": "SHR"
    },
    "6123": {
      "op": "DUP3"
    },
    "6124": {
      "op": "ADD"
    },
    "6125": {
      "op": "SWAP2"
    },
    "6126": {
      "op": "POP"
    },
    "6127": {
      "op": "JUMPDEST"
    },
    "6128": {
      "op": "DUP2"
    },
    "6129": {
      "op": "DUP2"
    },
    "6130": {
      "op": "LT"
    },
    "6131": {
      "op": "ISZERO"
    },
    "6132": {
      "op": "PUSH2",
      "value": "0x1802"
    },
    "6135": {
      "op": "JUMPI"
    },
    "6136": {
      "op": "DUP3"
    },
    "6137": {
      "op": "DUP2"
    },
    "6138": {
      "op": "SSTORE"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6141": {
      "op": "ADD"
    },
    "6142": {
      "op": "PUSH2",
      "value": "0x17EF"
    },
    "6145": {
      "op": "JUMP"
    },
    "6146": {
      "op": "JUMPDEST"
    },
    "6147": {
      "op": "POP"
    },
    "6148": {
      "op": "POP"
    },
    "6149": {
      "op": "POP"
    },
    "6150": {
      "op": "POP"
    },
    "6151": {
      "op": "POP"
    },
    "6152": {
      "op": "POP"
    },
    "6153": {
      "jump": "o",
      "op": "JUMP"
    },
    "6154": {
      "op": "JUMPDEST"
    },
    "6155": {
      "op": "DUP2"
    },
    "6156": {
      "op": "MLOAD"
    },
    "6157": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6166": {
      "op": "DUP2"
    },
    "6167": {
      "op": "GT"
    },
    "6168": {
      "op": "ISZERO"
    },
    "6169": {
      "op": "PUSH2",
      "value": "0x1824"
    },
    "6172": {
      "op": "JUMPI"
    },
    "6173": {
      "op": "PUSH2",
      "value": "0x1824"
    },
    "6176": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "6179": {
      "jump": "i",
      "op": "JUMP"
    },
    "6180": {
      "op": "JUMPDEST"
    },
    "6181": {
      "op": "PUSH2",
      "value": "0x1838"
    },
    "6184": {
      "op": "DUP2"
    },
    "6185": {
      "op": "PUSH2",
      "value": "0x1832"
    },
    "6188": {
      "op": "DUP5"
    },
    "6189": {
      "op": "SLOAD"
    },
    "6190": {
      "op": "PUSH2",
      "value": "0x171F"
    },
    "6193": {
      "jump": "i",
      "op": "JUMP"
    },
    "6194": {
      "op": "JUMPDEST"
    },
    "6195": {
      "op": "DUP5"
    },
    "6196": {
      "op": "PUSH2",
      "value": "0x17BA"
    },
    "6199": {
      "jump": "i",
      "op": "JUMP"
    },
    "6200": {
      "op": "JUMPDEST"
    },
    "6201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6203": {
      "op": "DUP1"
    },
    "6204": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6206": {
      "op": "DUP4"
    },
    "6207": {
      "op": "GT"
    },
    "6208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6210": {
      "op": "DUP2"
    },
    "6211": {
      "op": "EQ"
    },
    "6212": {
      "op": "PUSH2",
      "value": "0x186D"
    },
    "6215": {
      "op": "JUMPI"
    },
    "6216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6218": {
      "op": "DUP5"
    },
    "6219": {
      "op": "ISZERO"
    },
    "6220": {
      "op": "PUSH2",
      "value": "0x1855"
    },
    "6223": {
      "op": "JUMPI"
    },
    "6224": {
      "op": "POP"
    },
    "6225": {
      "op": "DUP6"
    },
    "6226": {
      "op": "DUP4"
    },
    "6227": {
      "op": "ADD"
    },
    "6228": {
      "op": "MLOAD"
    },
    "6229": {
      "op": "JUMPDEST"
    },
    "6230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6232": {
      "op": "NOT"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6235": {
      "op": "DUP7"
    },
    "6236": {
      "op": "SWAP1"
    },
    "6237": {
      "op": "SHL"
    },
    "6238": {
      "op": "SHR"
    },
    "6239": {
      "op": "NOT"
    },
    "6240": {
      "op": "AND"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6243": {
      "op": "DUP6"
    },
    "6244": {
      "op": "SWAP1"
    },
    "6245": {
      "op": "SHL"
    },
    "6246": {
      "op": "OR"
    },
    "6247": {
      "op": "DUP6"
    },
    "6248": {
      "op": "SSTORE"
    },
    "6249": {
      "op": "PUSH2",
      "value": "0x1802"
    },
    "6252": {
      "op": "JUMP"
    },
    "6253": {
      "op": "JUMPDEST"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6256": {
      "op": "DUP6"
    },
    "6257": {
      "op": "DUP2"
    },
    "6258": {
      "op": "MSTORE"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6261": {
      "op": "DUP2"
    },
    "6262": {
      "op": "KECCAK256"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6265": {
      "op": "NOT"
    },
    "6266": {
      "op": "DUP7"
    },
    "6267": {
      "op": "AND"
    },
    "6268": {
      "op": "SWAP2"
    },
    "6269": {
      "op": "JUMPDEST"
    },
    "6270": {
      "op": "DUP3"
    },
    "6271": {
      "op": "DUP2"
    },
    "6272": {
      "op": "LT"
    },
    "6273": {
      "op": "ISZERO"
    },
    "6274": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "6277": {
      "op": "JUMPI"
    },
    "6278": {
      "op": "DUP9"
    },
    "6279": {
      "op": "DUP7"
    },
    "6280": {
      "op": "ADD"
    },
    "6281": {
      "op": "MLOAD"
    },
    "6282": {
      "op": "DUP3"
    },
    "6283": {
      "op": "SSTORE"
    },
    "6284": {
      "op": "SWAP5"
    },
    "6285": {
      "op": "DUP5"
    },
    "6286": {
      "op": "ADD"
    },
    "6287": {
      "op": "SWAP5"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6290": {
      "op": "SWAP1"
    },
    "6291": {
      "op": "SWAP2"
    },
    "6292": {
      "op": "ADD"
    },
    "6293": {
      "op": "SWAP1"
    },
    "6294": {
      "op": "DUP5"
    },
    "6295": {
      "op": "ADD"
    },
    "6296": {
      "op": "PUSH2",
      "value": "0x187D"
    },
    "6299": {
      "op": "JUMP"
    },
    "6300": {
      "op": "JUMPDEST"
    },
    "6301": {
      "op": "POP"
    },
    "6302": {
      "op": "DUP6"
    },
    "6303": {
      "op": "DUP3"
    },
    "6304": {
      "op": "LT"
    },
    "6305": {
      "op": "ISZERO"
    },
    "6306": {
      "op": "PUSH2",
      "value": "0x18BA"
    },
    "6309": {
      "op": "JUMPI"
    },
    "6310": {
      "op": "DUP8"
    },
    "6311": {
      "op": "DUP6"
    },
    "6312": {
      "op": "ADD"
    },
    "6313": {
      "op": "MLOAD"
    },
    "6314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6316": {
      "op": "NOT"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6319": {
      "op": "DUP9"
    },
    "6320": {
      "op": "SWAP1"
    },
    "6321": {
      "op": "SHL"
    },
    "6322": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6324": {
      "op": "AND"
    },
    "6325": {
      "op": "SHR"
    },
    "6326": {
      "op": "NOT"
    },
    "6327": {
      "op": "AND"
    },
    "6328": {
      "op": "DUP2"
    },
    "6329": {
      "op": "SSTORE"
    },
    "6330": {
      "op": "JUMPDEST"
    },
    "6331": {
      "op": "POP"
    },
    "6332": {
      "op": "POP"
    },
    "6333": {
      "op": "POP"
    },
    "6334": {
      "op": "POP"
    },
    "6335": {
      "op": "POP"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6338": {
      "op": "SWAP1"
    },
    "6339": {
      "op": "DUP2"
    },
    "6340": {
      "op": "SHL"
    },
    "6341": {
      "op": "ADD"
    },
    "6342": {
      "op": "SWAP1"
    },
    "6343": {
      "op": "SSTORE"
    },
    "6344": {
      "op": "POP"
    },
    "6345": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "c29f3522f8df8e585440c6085ebc5c15e233be38",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IPlayerDatabase {\n    function getAllPlayerNames() external view returns (string[] memory);\n    function getServerIPList() external view returns (string[] memory);\n    function getValidRewardAddressesByNames(string[] memory playerNames, uint256 lastMintTime) external view returns (address[] memory);\n    function isValidator(address _address) external view returns (bool);\n\n}\ninterface IGP_Mint {\n    function mintTokens(address to, uint256 amount) external;\n    // Add other function signatures as needed\n}\ncontract GameValidator {\n\n    IPlayerDatabase playerDatabase;\n    IGP_Mint public mintContract;\n\n    mapping(string => address[]) private validatorsPerServerIP;\n    mapping(string => mapping(address => ServerSubmission)) public serverSubmissions; \n    mapping(bytes32 => string[]) public hashToPlayerList; // playerListHash -> playerNames\n\n    uint256 public lastMintTime;\n    uint256 public constant MINT_INTERVAL = 5 minutes;\n    uint256 public constant MAX_PLAYERS_PER_SUBMISSION = 64;\n    uint256 public constant MAX_MINT_TIME = 10 minutes; // 10 minutes cap\n    uint256 public constant TOKENS_PER_SECOND = (1e18 * 60) / 60; // 1e18 represents 1 token, and we divide by 60 seconds\n    address _playerDatabaseAddress = 0xB03A6aFd440a2a9db8834F1A6093680f02f1114C;\n    address _mintContractAddress = 0xa1D070F108CBeF4A48FFC1A79258d5C24E05DB68;\n    constructor() {\n        playerDatabase = IPlayerDatabase(_playerDatabaseAddress);\n        mintContract = IGP_Mint(_mintContractAddress);\n    }\n\n    struct ServerSubmission {\n        //address validator;\n        bytes32 playerListHash; // Hash of the player list for gas efficiency\n        bool canMint;\n    }\n\n    struct ServerPlayers {\n        string serverIP;\n        string[] playerNames;\n    }\n    //mapping(string => ServerSubmission[]) public serverSubmissions; // serverIP -> submissions\n    struct HashCount {\n        bytes32 hash;\n        uint256 count;\n    }\n\n    function setMintContractAddress(address mintContractAddress) public {\n        // Implement access control checks (e.g., onlyOwner or a similar modifier)\n        mintContract = IGP_Mint(mintContractAddress);\n    }\n\n    // Function to set the PlayerDatabase contract address\n    function setPlayerDatabaseAddress(address playerDatabaseAddress) public {\n        // Implement access control checks (e.g., onlyOwner or a similar modifier)\n        playerDatabase = IPlayerDatabase(playerDatabaseAddress);\n    }\n    \n    function calculateMintAmount() private view returns (uint256) {\n        uint256 elapsedSeconds = block.timestamp - lastMintTime;\n\n        if (elapsedSeconds > MAX_MINT_TIME) {\n            elapsedSeconds = MAX_MINT_TIME; // Cap the elapsed time to MAX_MINT_TIME\n        }\n\n        return elapsedSeconds * TOKENS_PER_SECOND; // Calculate the mint amount based on elapsed time\n    }\n\n    function updateValidatorsList(string memory serverIP, address validator) private {\n        bool validatorExists = false;\n        for (uint i = 0; i < validatorsPerServerIP[serverIP].length; i++) {\n            if (validatorsPerServerIP[serverIP][i] == validator) {\n                validatorExists = true;\n                break;\n            }\n        }\n        if (!validatorExists) {\n            validatorsPerServerIP[serverIP].push(validator);\n        }\n    }\n\n    function submitPlayerList(ServerPlayers[] memory serverPlayerLists, address validatorID, bool canMintFlag) public {\n        require(isValidator(validatorID), \"Caller is not a registered validator\");\n\n        uint256 totalPlayerCount = 0;\n\n\n        for (uint i = 0; i < serverPlayerLists.length; i++) {\n            uint256 serverPlayerCount = serverPlayerLists[i].playerNames.length;\n            if (totalPlayerCount + serverPlayerCount > MAX_PLAYERS_PER_SUBMISSION) {\n                break; // Stop if the max players per submission is exceeded\n            }\n            totalPlayerCount += serverPlayerCount;\n\n            // Encode each string in the playerNames array individually\n            bytes memory encodedPlayerNames;\n            for (uint j = 0; j < serverPlayerLists[i].playerNames.length; j++) {\n                encodedPlayerNames = abi.encodePacked(encodedPlayerNames, serverPlayerLists[i].playerNames[j]);\n            }\n\n            // Compute the hash of the concatenated byte array\n            bytes32 playerListHash = keccak256(encodedPlayerNames);\n            hashToPlayerList[playerListHash] = serverPlayerLists[i].playerNames;\n\n            // Update or add the validator to the list for this server IP\n            updateValidatorsList(serverPlayerLists[i].serverIP, validatorID);\n\n            // Overwrite the existing submission for this server IP and validator\n            serverSubmissions[serverPlayerLists[i].serverIP][validatorID] = ServerSubmission({\n                playerListHash: playerListHash,\n                canMint: canMintFlag\n            });\n        }\n        // Check if it's time to perform mass minting\n        uint256 currentTime = block.timestamp;\n        uint256 timeSinceLastMint = currentTime - lastMintTime;\n        uint256 timeToNextInterval = MINT_INTERVAL - (currentTime % MINT_INTERVAL);\n\n        if (timeSinceLastMint >= MINT_INTERVAL && timeToNextInterval < MINT_INTERVAL) {\n            performMassMinting();\n            lastMintTime = currentTime - timeToNextInterval; // Align with the 5-minute interval\n        }\n    }\n    // function submitPlayerList(ServerPlayers[] memory serverPlayerLists, address validatorID, bool canMintFlag) public {\n    //     require(isValidator(validatorID), \"Caller is not a registered validator\");\n\n    //     uint256 totalPlayerCount = 0;\n\n    //     for (uint i = 0; i < serverPlayerLists.length; i++) {\n    //         uint256 serverPlayerCount = serverPlayerLists[i].playerNames.length;\n    //         if (totalPlayerCount + serverPlayerCount > MAX_PLAYERS_PER_SUBMISSION) {\n    //             break; // Stop if the max players per submission is exceeded\n    //         }\n\n    //         totalPlayerCount += serverPlayerCount;\n\n    //         // Create a hash for the player list\n    //         bytes32 playerListHash = keccak256(abi.encodePacked(serverPlayerLists[i].playerNames));\n    //         hashToPlayerList[playerListHash] = serverPlayerLists[i].playerNames;\n\n    //         // Overwrite the existing submission for this server IP and validator\n    //         serverSubmissions[serverPlayerLists[i].serverIP][validatorID] = ServerSubmission({\n    //             playerListHash: playerListHash,\n    //             canMint: canMintFlag\n    //         });\n    //     }\n    // }\n\n    function isValidator(address _address) public view returns (bool) {\n        //PlayerDatabase playerDatabase = PlayerDatabase(playerDatabaseAddress);\n        return playerDatabase.isValidator(_address);\n    }\n\n    function resetSubmissions() private {\n        string[] memory serverIPs = playerDatabase.getServerIPList();\n        for (uint i = 0; i < serverIPs.length; i++) {\n            string memory serverIP = serverIPs[i];\n            address[] memory validators = validatorsPerServerIP[serverIP];\n            for (uint j = 0; j < validators.length; j++) {\n                serverSubmissions[serverIP][validators[j]].canMint = false;\n            }\n        }\n    }\n\n    // Function to perform mass minting\n    function performMassMinting() public {\n        string[] memory serverIPs = playerDatabase.getServerIPList();\n        for (uint i = 0; i < serverIPs.length; i++) {\n            string memory serverIP = serverIPs[i];\n            bytes32 commonHash = findMostCommonHash(serverIP);\n            if (commonHash != bytes32(0)) {\n                mintForServer(commonHash);\n            }\n        }\n        resetSubmissions();\n    }\n    function mintForServer(bytes32 playerListHash) private {\n        // Retrieve the player list for the given hash\n        string[] memory playerList = hashToPlayerList[playerListHash];\n        address[] memory rewardAddresses = getValidRewardAddressesByNames(playerList);\n\n        uint256 mintAmount = calculateMintAmount(); // Define logic for mint amount\n\n        // Mint tokens for each player\n        for (uint i = 0; i < rewardAddresses.length; i++) {\n            if (rewardAddresses[i] != address(0)) { // Check for valid address\n                mintContract.mintTokens(rewardAddresses[i], mintAmount);\n            }\n        }\n    }\n    function findMostCommonHash(string memory serverIP) private view returns (bytes32) {\n        // Assume validatorsPerServerIP is a mapping that tracks validators per server IP\n        address[] memory validators = validatorsPerServerIP[serverIP];\n        uint256 majorityThreshold = (validators.length * 60) / 100; // 60% of total validators\n\n        bytes32 majorityHash = bytes32(0);\n        uint256 highestCount = 0;\n\n        // Use a structure to keep track of each hash count\n\n\n        HashCount[] memory hashCounts = new HashCount[](validators.length);\n\n        // Count occurrences of each hash\n        for (uint i = 0; i < validators.length; i++) {\n            bytes32 currentHash = serverSubmissions[serverIP][validators[i]].playerListHash;\n            bool found = false;\n\n            for (uint j = 0; j < hashCounts.length; j++) {\n                if (hashCounts[j].hash == currentHash) {\n                    hashCounts[j].count++;\n                    found = true;\n                    break;\n                }\n            }\n\n            if (!found) {\n                hashCounts[i] = HashCount({hash: currentHash, count: 1});\n            }\n\n            // Update majority hash if necessary\n            if (hashCounts[i].count > highestCount) {\n                highestCount = hashCounts[i].count;\n                majorityHash = hashCounts[i].hash;\n            }\n        }\n\n        // Check if the highest count meets the majority threshold\n        if (highestCount >= majorityThreshold) {\n            return majorityHash;\n        }\n\n        return bytes32(0); // No majority found\n    }\n\n    // Helper function to check if a hash is present in the tempUniqueHashes array\n\n\n    function getValidRewardAddressesByNames(string[] memory playerNames) public view returns (address[] memory) {\n        return playerDatabase.getValidRewardAddressesByNames(playerNames, lastMintTime);\n    }\n\n\n\n    // Additional functions...\n}\n",
  "sourceMap": "577:9767:3:-:0;;;1266:75;;;-1:-1:-1;;;;;;1266:75:3;;;1299:42;1266:75;;;;1347:73;;;;;;1378:42;1347:73;;;1426:142;;;;;;;;;-1:-1:-1;1483:22:3;;;1450:56;;-1:-1:-1;;;;;;1450:56:3;;;-1:-1:-1;;;;;1483:22:3;;;1450:56;;;;1540:20;;1483:22;1516:45;;;;;1540:20;;1516:45;;;;;;577:9767;;;;;;",
  "sourcePath": "contracts/4_GP_Validator_0-10.sol",
  "type": "contract"
}