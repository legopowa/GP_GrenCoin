{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_playerDatabaseAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mintContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MAX_MINT_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PLAYERS_PER_SUBMISSION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINT_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKENS_PER_SECOND",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "playerNames",
          "type": "string[]"
        }
      ],
      "name": "getValidRewardAddressesByNames",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "hashToPlayerList",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isValidator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintContract",
      "outputs": [
        {
          "internalType": "contract IGP_Mint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performMassMinting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "serverSubmissions",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "playerListHash",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "canMint",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mintContractAddress",
          "type": "address"
        }
      ],
      "name": "setMintContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "serverIP",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "playerNames",
              "type": "string[]"
            }
          ],
          "internalType": "struct GameValidator.ServerPlayers[]",
          "name": "serverPlayerLists",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "validatorID",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "canMintFlag",
          "type": "bool"
        }
      ],
      "name": "submitPlayerList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "4": "contracts/4_GP_Validator_0-10.sol"
  },
  "ast": {
    "absolutePath": "contracts/4_GP_Validator_0-10.sol",
    "exportedSymbols": {
      "GameValidator": [
        2032
      ],
      "IGP_Mint": [
        1340
      ],
      "IPlayerDatabase": [
        1332
      ]
    },
    "id": 2033,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1301,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPlayerDatabase",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1332,
        "linearizedBaseContracts": [
          1332
        ],
        "name": "IPlayerDatabase",
        "nameLocation": "68:15:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8098dcff",
            "id": 1307,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllPlayerNames",
            "nameLocation": "99:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "116:2:4"
            },
            "returnParameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1305,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1307,
                  "src": "142:15:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1303,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "142:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1304,
                    "nodeType": "ArrayTypeName",
                    "src": "142:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "141:17:4"
            },
            "scope": 1332,
            "src": "90:69:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "3dc0ff7d",
            "id": 1313,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getServerIPList",
            "nameLocation": "173:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "188:2:4"
            },
            "returnParameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1311,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "214:15:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1309,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "214:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1310,
                    "nodeType": "ArrayTypeName",
                    "src": "214:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "213:17:4"
            },
            "scope": 1332,
            "src": "164:67:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "85d8f13d",
            "id": 1324,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getValidRewardAddressesByNames",
            "nameLocation": "245:30:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "playerNames",
                  "nameLocation": "292:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "276:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1314,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "276:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1315,
                    "nodeType": "ArrayTypeName",
                    "src": "276:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "lastMintTime",
                  "nameLocation": "313:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "305:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:51:4"
            },
            "returnParameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1322,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "350:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1320,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "350:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1321,
                    "nodeType": "ArrayTypeName",
                    "src": "350:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:18:4"
            },
            "scope": 1332,
            "src": "236:132:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "facd743b",
            "id": 1331,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidator",
            "nameLocation": "382:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1326,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "402:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "394:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "393:18:4"
            },
            "returnParameters": {
              "id": 1330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1329,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "435:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1328,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "434:6:4"
            },
            "scope": 1332,
            "src": "373:68:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2033,
        "src": "58:386:4",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IGP_Mint",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1340,
        "linearizedBaseContracts": [
          1340
        ],
        "name": "IGP_Mint",
        "nameLocation": "455:8:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "f0dda65c",
            "id": 1339,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokens",
            "nameLocation": "479:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1334,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "498:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "490:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1336,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "510:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "502:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:28:4"
            },
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:0:4"
            },
            "scope": 1340,
            "src": "470:57:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2033,
        "src": "445:131:4",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GameValidator",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2032,
        "linearizedBaseContracts": [
          2032
        ],
        "name": "GameValidator",
        "nameLocation": "586:13:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1343,
            "mutability": "mutable",
            "name": "playerDatabase",
            "nameLocation": "623:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 2032,
            "src": "607:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPlayerDatabase_$1332",
              "typeString": "contract IPlayerDatabase"
            },
            "typeName": {
              "id": 1342,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1341,
                "name": "IPlayerDatabase",
                "nameLocations": [
                  "607:15:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1332,
                "src": "607:15:4"
              },
              "referencedDeclaration": 1332,
              "src": "607:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPlayerDatabase_$1332",
                "typeString": "contract IPlayerDatabase"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "d0b6b6db",
            "id": 1346,
            "mutability": "mutable",
            "name": "mintContract",
            "nameLocation": "659:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 2032,
            "src": "643:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IGP_Mint_$1340",
              "typeString": "contract IGP_Mint"
            },
            "typeName": {
              "id": 1345,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1344,
                "name": "IGP_Mint",
                "nameLocations": [
                  "643:8:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1340,
                "src": "643:8:4"
              },
              "referencedDeclaration": 1340,
              "src": "643:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGP_Mint_$1340",
                "typeString": "contract IGP_Mint"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1351,
            "mutability": "mutable",
            "name": "validatorsPerServerIP",
            "nameLocation": "715:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 2032,
            "src": "678:58:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(string => address[])"
            },
            "typeName": {
              "id": 1350,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1347,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "686:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "678:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(string => address[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 1348,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "696:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1349,
                "nodeType": "ArrayTypeName",
                "src": "696:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "5c9c3ed2",
            "id": 1358,
            "mutability": "mutable",
            "name": "serverSubmissions",
            "nameLocation": "805:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 2032,
            "src": "742:80:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_ServerSubmission_$1407_storage_$_$",
              "typeString": "mapping(string => mapping(address => struct GameValidator.ServerSubmission))"
            },
            "typeName": {
              "id": 1357,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1352,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "750:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "742:55:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_ServerSubmission_$1407_storage_$_$",
                "typeString": "mapping(string => mapping(address => struct GameValidator.ServerSubmission))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1356,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 1353,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "768:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "760:36:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ServerSubmission_$1407_storage_$",
                  "typeString": "mapping(address => struct GameValidator.ServerSubmission)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 1355,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1354,
                    "name": "ServerSubmission",
                    "nameLocations": [
                      "779:16:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1407,
                    "src": "779:16:4"
                  },
                  "referencedDeclaration": 1407,
                  "src": "779:16:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ServerSubmission_$1407_storage_ptr",
                    "typeString": "struct GameValidator.ServerSubmission"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f785eb2a",
            "id": 1363,
            "mutability": "mutable",
            "name": "hashToPlayerList",
            "nameLocation": "865:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 2032,
            "src": "829:52:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_string_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => string[])"
            },
            "typeName": {
              "id": 1362,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1359,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "837:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "829:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_string_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => string[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 1360,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "848:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 1361,
                "nodeType": "ArrayTypeName",
                "src": "848:8:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d463520",
            "id": 1365,
            "mutability": "mutable",
            "name": "lastMintTime",
            "nameLocation": "936:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 2032,
            "src": "921:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1364,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "921:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "84e7e3d3",
            "id": 1368,
            "mutability": "constant",
            "name": "MINT_INTERVAL",
            "nameLocation": "978:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 2032,
            "src": "954:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1366,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "954:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 1367,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "994:9:4",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_300_by_1",
                "typeString": "int_const 300"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "6f1aab4a",
            "id": 1371,
            "mutability": "constant",
            "name": "MAX_PLAYERS_PER_SUBMISSION",
            "nameLocation": "1033:26:4",
            "nodeType": "VariableDeclaration",
            "scope": 2032,
            "src": "1009:55:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1369,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1009:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3634",
              "id": 1370,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1062:2:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_64_by_1",
                "typeString": "int_const 64"
              },
              "value": "64"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f59cc978",
            "id": 1374,
            "mutability": "constant",
            "name": "MAX_MINT_TIME",
            "nameLocation": "1094:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 2032,
            "src": "1070:50:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1372,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1070:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 1373,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1110:10:4",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "1e9ad446",
            "id": 1382,
            "mutability": "constant",
            "name": "TOKENS_PER_SECOND",
            "nameLocation": "1168:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 2032,
            "src": "1144:60:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1375,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1144:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 1381,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_rational_60000000000000000000_by_1",
                      "typeString": "int_const 60000000000000000000"
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31653138",
                      "id": 1376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1189:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "3630",
                      "id": 1377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1196:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_60_by_1",
                        "typeString": "int_const 60"
                      },
                      "value": "60"
                    },
                    "src": "1189:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60000000000000000000_by_1",
                      "typeString": "int_const 60000000000000000000"
                    }
                  }
                ],
                "id": 1379,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1188:11:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60000000000000000000_by_1",
                  "typeString": "int_const 60000000000000000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "hexValue": "3630",
                "id": 1380,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1202:2:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "1188:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "1341:128:4",
              "statements": [
                {
                  "expression": {
                    "id": 1393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1389,
                      "name": "playerDatabase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "1351:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPlayerDatabase_$1332",
                        "typeString": "contract IPlayerDatabase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1391,
                          "name": "_playerDatabaseAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1384,
                          "src": "1384:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1390,
                        "name": "IPlayerDatabase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1332,
                        "src": "1368:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPlayerDatabase_$1332_$",
                          "typeString": "type(contract IPlayerDatabase)"
                        }
                      },
                      "id": 1392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1368:39:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPlayerDatabase_$1332",
                        "typeString": "contract IPlayerDatabase"
                      }
                    },
                    "src": "1351:56:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPlayerDatabase_$1332",
                      "typeString": "contract IPlayerDatabase"
                    }
                  },
                  "id": 1394,
                  "nodeType": "ExpressionStatement",
                  "src": "1351:56:4"
                },
                {
                  "expression": {
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1395,
                      "name": "mintContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1346,
                      "src": "1417:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGP_Mint_$1340",
                        "typeString": "contract IGP_Mint"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1397,
                          "name": "_mintContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1386,
                          "src": "1441:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1396,
                        "name": "IGP_Mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "1432:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IGP_Mint_$1340_$",
                          "typeString": "type(contract IGP_Mint)"
                        }
                      },
                      "id": 1398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1432:30:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGP_Mint_$1340",
                        "typeString": "contract IGP_Mint"
                      }
                    },
                    "src": "1417:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGP_Mint_$1340",
                      "typeString": "contract IGP_Mint"
                    }
                  },
                  "id": 1400,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:45:4"
                }
              ]
            },
            "id": 1402,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1384,
                  "mutability": "mutable",
                  "name": "_playerDatabaseAddress",
                  "nameLocation": "1287:22:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "1279:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1386,
                  "mutability": "mutable",
                  "name": "_mintContractAddress",
                  "nameLocation": "1319:20:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "1311:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:62:4"
            },
            "returnParameters": {
              "id": 1388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1341:0:4"
            },
            "scope": 2032,
            "src": "1267:202:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "GameValidator.ServerSubmission",
            "id": 1407,
            "members": [
              {
                "constant": false,
                "id": 1404,
                "mutability": "mutable",
                "name": "playerListHash",
                "nameLocation": "1546:14:4",
                "nodeType": "VariableDeclaration",
                "scope": 1407,
                "src": "1538:22:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1403,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1538:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1406,
                "mutability": "mutable",
                "name": "canMint",
                "nameLocation": "1621:7:4",
                "nodeType": "VariableDeclaration",
                "scope": 1407,
                "src": "1616:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1405,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1616:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ServerSubmission",
            "nameLocation": "1482:16:4",
            "nodeType": "StructDefinition",
            "scope": 2032,
            "src": "1475:160:4",
            "visibility": "public"
          },
          {
            "canonicalName": "GameValidator.ServerPlayers",
            "id": 1413,
            "members": [
              {
                "constant": false,
                "id": 1409,
                "mutability": "mutable",
                "name": "serverIP",
                "nameLocation": "1679:8:4",
                "nodeType": "VariableDeclaration",
                "scope": 1413,
                "src": "1672:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1408,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1672:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1412,
                "mutability": "mutable",
                "name": "playerNames",
                "nameLocation": "1706:11:4",
                "nodeType": "VariableDeclaration",
                "scope": 1413,
                "src": "1697:20:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 1410,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1697:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "id": 1411,
                  "nodeType": "ArrayTypeName",
                  "src": "1697:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                    "typeString": "string[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ServerPlayers",
            "nameLocation": "1648:13:4",
            "nodeType": "StructDefinition",
            "scope": 2032,
            "src": "1641:83:4",
            "visibility": "public"
          },
          {
            "canonicalName": "GameValidator.HashCount",
            "id": 1418,
            "members": [
              {
                "constant": false,
                "id": 1415,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1861:4:4",
                "nodeType": "VariableDeclaration",
                "scope": 1418,
                "src": "1853:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1414,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1853:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1417,
                "mutability": "mutable",
                "name": "count",
                "nameLocation": "1883:5:4",
                "nodeType": "VariableDeclaration",
                "scope": 1418,
                "src": "1875:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1416,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1875:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "HashCount",
            "nameLocation": "1833:9:4",
            "nodeType": "StructDefinition",
            "scope": 2032,
            "src": "1826:69:4",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1423,
              "nodeType": "Block",
              "src": "2023:71:4",
              "statements": []
            },
            "functionSelector": "e15336ef",
            "id": 1424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMintContractAddress",
            "nameLocation": "1963:22:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1420,
                  "mutability": "mutable",
                  "name": "_mintContractAddress",
                  "nameLocation": "1994:20:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "1986:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:30:4"
            },
            "returnParameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2023:0:4"
            },
            "scope": 2032,
            "src": "1954:140:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1449,
              "nodeType": "Block",
              "src": "2161:317:4",
              "statements": [
                {
                  "assignments": [
                    1430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1430,
                      "mutability": "mutable",
                      "name": "elapsedSeconds",
                      "nameLocation": "2179:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1449,
                      "src": "2171:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1429,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2171:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1435,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1431,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2196:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2202:9:4",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2196:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1433,
                      "name": "lastMintTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1365,
                      "src": "2214:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2196:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2171:55:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1436,
                      "name": "elapsedSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1430,
                      "src": "2241:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1437,
                      "name": "MAX_MINT_TIME",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "2258:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2241:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1444,
                  "nodeType": "IfStatement",
                  "src": "2237:132:4",
                  "trueBody": {
                    "id": 1443,
                    "nodeType": "Block",
                    "src": "2273:96:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1439,
                            "name": "elapsedSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1430,
                            "src": "2287:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1440,
                            "name": "MAX_MINT_TIME",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1374,
                            "src": "2304:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2287:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1442,
                        "nodeType": "ExpressionStatement",
                        "src": "2287:30:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1445,
                      "name": "elapsedSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1430,
                      "src": "2386:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1446,
                      "name": "TOKENS_PER_SECOND",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1382,
                      "src": "2403:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2386:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1428,
                  "id": 1448,
                  "nodeType": "Return",
                  "src": "2379:41:4"
                }
              ]
            },
            "id": 1450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateMintAmount",
            "nameLocation": "2108:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2127:2:4"
            },
            "returnParameters": {
              "id": 1428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1427,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1450,
                  "src": "2152:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2152:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2151:9:4"
            },
            "scope": 2032,
            "src": "2099:379:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1501,
              "nodeType": "Block",
              "src": "2565:378:4",
              "statements": [
                {
                  "assignments": [
                    1458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1458,
                      "mutability": "mutable",
                      "name": "validatorExists",
                      "nameLocation": "2580:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1501,
                      "src": "2575:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1457,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2575:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1460,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2598:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2575:28:4"
                },
                {
                  "body": {
                    "id": 1488,
                    "nodeType": "Block",
                    "src": "2679:155:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1474,
                                "name": "validatorsPerServerIP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1351,
                                "src": "2697:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(string memory => address[] storage ref)"
                                }
                              },
                              "id": 1476,
                              "indexExpression": {
                                "id": 1475,
                                "name": "serverIP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1452,
                                "src": "2719:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2697:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1478,
                            "indexExpression": {
                              "id": 1477,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1462,
                              "src": "2729:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2697:34:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1479,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "2735:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2697:47:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1487,
                        "nodeType": "IfStatement",
                        "src": "2693:131:4",
                        "trueBody": {
                          "id": 1486,
                          "nodeType": "Block",
                          "src": "2746:78:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1481,
                                  "name": "validatorExists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1458,
                                  "src": "2764:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1482,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2782:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2764:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1484,
                              "nodeType": "ExpressionStatement",
                              "src": "2764:22:4"
                            },
                            {
                              "id": 1485,
                              "nodeType": "Break",
                              "src": "2804:5:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1465,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1462,
                      "src": "2630:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1466,
                          "name": "validatorsPerServerIP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1351,
                          "src": "2634:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 1468,
                        "indexExpression": {
                          "id": 1467,
                          "name": "serverIP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1452,
                          "src": "2656:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2634:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2666:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2634:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2630:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1489,
                  "initializationExpression": {
                    "assignments": [
                      1462
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1462,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2623:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1489,
                        "src": "2618:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1461,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2618:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1464,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2627:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2618:10:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2674:3:4",
                      "subExpression": {
                        "id": 1471,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "2674:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1473,
                    "nodeType": "ExpressionStatement",
                    "src": "2674:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "2613:221:4"
                },
                {
                  "condition": {
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2847:16:4",
                    "subExpression": {
                      "id": 1490,
                      "name": "validatorExists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "2848:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1500,
                  "nodeType": "IfStatement",
                  "src": "2843:94:4",
                  "trueBody": {
                    "id": 1499,
                    "nodeType": "Block",
                    "src": "2865:72:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1496,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1454,
                              "src": "2916:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1492,
                                "name": "validatorsPerServerIP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1351,
                                "src": "2879:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(string memory => address[] storage ref)"
                                }
                              },
                              "id": 1494,
                              "indexExpression": {
                                "id": 1493,
                                "name": "serverIP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1452,
                                "src": "2901:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2879:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2911:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2879:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2879:47:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1498,
                        "nodeType": "ExpressionStatement",
                        "src": "2879:47:4"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateValidatorsList",
            "nameLocation": "2493:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1452,
                  "mutability": "mutable",
                  "name": "serverIP",
                  "nameLocation": "2528:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1502,
                  "src": "2514:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1451,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2514:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1454,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "2546:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1502,
                  "src": "2538:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2538:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2513:43:4"
            },
            "returnParameters": {
              "id": 1456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2565:0:4"
            },
            "scope": 2032,
            "src": "2484:459:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1664,
              "nodeType": "Block",
              "src": "3063:1960:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1515,
                            "name": "validatorID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1508,
                            "src": "3093:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1514,
                          "name": "isValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1678,
                          "src": "3081:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3081:24:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206120726567697374657265642076616c696461746f72",
                        "id": 1517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3107:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c683d67988d13fc4c213b74b37492e3a0f610828af203a3627ea6c2b96a8cc60",
                          "typeString": "literal_string \"Caller is not a registered validator\""
                        },
                        "value": "Caller is not a registered validator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c683d67988d13fc4c213b74b37492e3a0f610828af203a3627ea6c2b96a8cc60",
                          "typeString": "literal_string \"Caller is not a registered validator\""
                        }
                      ],
                      "id": 1513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3073:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3073:73:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1519,
                  "nodeType": "ExpressionStatement",
                  "src": "3073:73:4"
                },
                {
                  "assignments": [
                    1521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1521,
                      "mutability": "mutable",
                      "name": "totalPlayerCount",
                      "nameLocation": "3165:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "3157:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3157:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1523,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3184:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3157:28:4"
                },
                {
                  "body": {
                    "id": 1624,
                    "nodeType": "Block",
                    "src": "3249:1289:4",
                    "statements": [
                      {
                        "assignments": [
                          1536
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1536,
                            "mutability": "mutable",
                            "name": "serverPlayerCount",
                            "nameLocation": "3271:17:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1624,
                            "src": "3263:25:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1535,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3263:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1542,
                        "initialValue": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1537,
                                "name": "serverPlayerLists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1506,
                                "src": "3291:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$1413_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                }
                              },
                              "id": 1539,
                              "indexExpression": {
                                "id": 1538,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1525,
                                "src": "3309:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3291:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ServerPlayers_$1413_memory_ptr",
                                "typeString": "struct GameValidator.ServerPlayers memory"
                              }
                            },
                            "id": 1540,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3312:11:4",
                            "memberName": "playerNames",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1412,
                            "src": "3291:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3324:6:4",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3291:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3263:67:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1543,
                              "name": "totalPlayerCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1521,
                              "src": "3348:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1544,
                              "name": "serverPlayerCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1536,
                              "src": "3367:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3348:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1546,
                            "name": "MAX_PLAYERS_PER_SUBMISSION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1371,
                            "src": "3387:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3348:65:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1550,
                        "nodeType": "IfStatement",
                        "src": "3344:163:4",
                        "trueBody": {
                          "id": 1549,
                          "nodeType": "Block",
                          "src": "3415:92:4",
                          "statements": [
                            {
                              "id": 1548,
                              "nodeType": "Break",
                              "src": "3433:5:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1551,
                            "name": "totalPlayerCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "3520:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1552,
                            "name": "serverPlayerCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1536,
                            "src": "3540:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3520:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1554,
                        "nodeType": "ExpressionStatement",
                        "src": "3520:37:4"
                      },
                      {
                        "assignments": [
                          1556
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1556,
                            "mutability": "mutable",
                            "name": "encodedPlayerNames",
                            "nameLocation": "3657:18:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1624,
                            "src": "3644:31:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1555,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3644:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1557,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3644:31:4"
                      },
                      {
                        "body": {
                          "id": 1585,
                          "nodeType": "Block",
                          "src": "3756:127:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1572,
                                  "name": "encodedPlayerNames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1556,
                                  "src": "3774:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1575,
                                      "name": "encodedPlayerNames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1556,
                                      "src": "3812:18:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1576,
                                            "name": "serverPlayerLists",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1506,
                                            "src": "3832:17:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$1413_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                            }
                                          },
                                          "id": 1578,
                                          "indexExpression": {
                                            "id": 1577,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1525,
                                            "src": "3850:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "3832:20:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ServerPlayers_$1413_memory_ptr",
                                            "typeString": "struct GameValidator.ServerPlayers memory"
                                          }
                                        },
                                        "id": 1579,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3853:11:4",
                                        "memberName": "playerNames",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1412,
                                        "src": "3832:32:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "string memory[] memory"
                                        }
                                      },
                                      "id": 1581,
                                      "indexExpression": {
                                        "id": 1580,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1559,
                                        "src": "3865:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3832:35:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      },
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1573,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "3795:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 1574,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "3799:12:4",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "3795:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 1582,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3795:73:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "src": "3774:94:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1584,
                              "nodeType": "ExpressionStatement",
                              "src": "3774:94:4"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1562,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1559,
                            "src": "3706:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1563,
                                  "name": "serverPlayerLists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1506,
                                  "src": "3710:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$1413_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                  }
                                },
                                "id": 1565,
                                "indexExpression": {
                                  "id": 1564,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1525,
                                  "src": "3728:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3710:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ServerPlayers_$1413_memory_ptr",
                                  "typeString": "struct GameValidator.ServerPlayers memory"
                                }
                              },
                              "id": 1566,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3731:11:4",
                              "memberName": "playerNames",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1412,
                              "src": "3710:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 1567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3743:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3710:39:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3706:43:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1586,
                        "initializationExpression": {
                          "assignments": [
                            1559
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1559,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "3699:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 1586,
                              "src": "3694:6:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1558,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3694:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1561,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3703:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3694:10:4"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3751:3:4",
                            "subExpression": {
                              "id": 1569,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1559,
                              "src": "3751:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1571,
                          "nodeType": "ExpressionStatement",
                          "src": "3751:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "3689:194:4"
                      },
                      {
                        "assignments": [
                          1588
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1588,
                            "mutability": "mutable",
                            "name": "playerListHash",
                            "nameLocation": "3968:14:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1624,
                            "src": "3960:22:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1587,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3960:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1592,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1590,
                              "name": "encodedPlayerNames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1556,
                              "src": "3995:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1589,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3985:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3985:29:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3960:54:4"
                      },
                      {
                        "expression": {
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1593,
                              "name": "hashToPlayerList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "4028:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_string_storage_$dyn_storage_$",
                                "typeString": "mapping(bytes32 => string storage ref[] storage ref)"
                              }
                            },
                            "id": 1595,
                            "indexExpression": {
                              "id": 1594,
                              "name": "playerListHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1588,
                              "src": "4045:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4028:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                              "typeString": "string storage ref[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1596,
                                "name": "serverPlayerLists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1506,
                                "src": "4063:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$1413_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                }
                              },
                              "id": 1598,
                              "indexExpression": {
                                "id": 1597,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1525,
                                "src": "4081:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4063:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ServerPlayers_$1413_memory_ptr",
                                "typeString": "struct GameValidator.ServerPlayers memory"
                              }
                            },
                            "id": 1599,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4084:11:4",
                            "memberName": "playerNames",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1412,
                            "src": "4063:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "src": "4028:67:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 1601,
                        "nodeType": "ExpressionStatement",
                        "src": "4028:67:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1603,
                                  "name": "serverPlayerLists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1506,
                                  "src": "4205:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$1413_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                  }
                                },
                                "id": 1605,
                                "indexExpression": {
                                  "id": 1604,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1525,
                                  "src": "4223:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4205:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ServerPlayers_$1413_memory_ptr",
                                  "typeString": "struct GameValidator.ServerPlayers memory"
                                }
                              },
                              "id": 1606,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4226:8:4",
                              "memberName": "serverIP",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1409,
                              "src": "4205:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1607,
                              "name": "validatorID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1508,
                              "src": "4236:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1602,
                            "name": "updateValidatorsList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1502,
                            "src": "4184:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address)"
                            }
                          },
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4184:64:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1609,
                        "nodeType": "ExpressionStatement",
                        "src": "4184:64:4"
                      },
                      {
                        "expression": {
                          "id": 1622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1610,
                                "name": "serverSubmissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1358,
                                "src": "4345:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_ServerSubmission_$1407_storage_$_$",
                                  "typeString": "mapping(string memory => mapping(address => struct GameValidator.ServerSubmission storage ref))"
                                }
                              },
                              "id": 1616,
                              "indexExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1611,
                                    "name": "serverPlayerLists",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1506,
                                    "src": "4363:17:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$1413_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                                    }
                                  },
                                  "id": 1613,
                                  "indexExpression": {
                                    "id": 1612,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1525,
                                    "src": "4381:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4363:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ServerPlayers_$1413_memory_ptr",
                                    "typeString": "struct GameValidator.ServerPlayers memory"
                                  }
                                },
                                "id": 1614,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4384:8:4",
                                "memberName": "serverIP",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1409,
                                "src": "4363:29:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4345:48:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ServerSubmission_$1407_storage_$",
                                "typeString": "mapping(address => struct GameValidator.ServerSubmission storage ref)"
                              }
                            },
                            "id": 1617,
                            "indexExpression": {
                              "id": 1615,
                              "name": "validatorID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1508,
                              "src": "4394:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4345:61:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ServerSubmission_$1407_storage",
                              "typeString": "struct GameValidator.ServerSubmission storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1619,
                                "name": "playerListHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1588,
                                "src": "4460:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 1620,
                                "name": "canMintFlag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1510,
                                "src": "4501:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 1618,
                              "name": "ServerSubmission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1407,
                              "src": "4409:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ServerSubmission_$1407_storage_ptr_$",
                                "typeString": "type(struct GameValidator.ServerSubmission storage pointer)"
                              }
                            },
                            "id": 1621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "4444:14:4",
                              "4492:7:4"
                            ],
                            "names": [
                              "playerListHash",
                              "canMint"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "4409:118:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ServerSubmission_$1407_memory_ptr",
                              "typeString": "struct GameValidator.ServerSubmission memory"
                            }
                          },
                          "src": "4345:182:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ServerSubmission_$1407_storage",
                            "typeString": "struct GameValidator.ServerSubmission storage ref"
                          }
                        },
                        "id": 1623,
                        "nodeType": "ExpressionStatement",
                        "src": "4345:182:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1528,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1525,
                      "src": "3214:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1529,
                        "name": "serverPlayerLists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1506,
                        "src": "3218:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$1413_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct GameValidator.ServerPlayers memory[] memory"
                        }
                      },
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3236:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3218:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3214:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1625,
                  "initializationExpression": {
                    "assignments": [
                      1525
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1525,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3207:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1625,
                        "src": "3202:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1524,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3202:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1527,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3211:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3202:10:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3244:3:4",
                      "subExpression": {
                        "id": 1532,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1525,
                        "src": "3244:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1534,
                    "nodeType": "ExpressionStatement",
                    "src": "3244:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "3197:1341:4"
                },
                {
                  "assignments": [
                    1627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1627,
                      "mutability": "mutable",
                      "name": "currentTime",
                      "nameLocation": "4609:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4601:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1626,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4601:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1630,
                  "initialValue": {
                    "expression": {
                      "id": 1628,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "4623:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4629:9:4",
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "4623:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4601:37:4"
                },
                {
                  "assignments": [
                    1632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1632,
                      "mutability": "mutable",
                      "name": "timeSinceLastMint",
                      "nameLocation": "4656:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4648:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1631,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4648:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1636,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1633,
                      "name": "currentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1627,
                      "src": "4676:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1634,
                      "name": "lastMintTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1365,
                      "src": "4690:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4676:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4648:54:4"
                },
                {
                  "assignments": [
                    1638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1638,
                      "mutability": "mutable",
                      "name": "timeToNextInterval",
                      "nameLocation": "4720:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1664,
                      "src": "4712:26:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1637,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4712:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1645,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1639,
                      "name": "MINT_INTERVAL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "4741:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1640,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1627,
                            "src": "4758:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 1641,
                            "name": "MINT_INTERVAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1368,
                            "src": "4772:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4758:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1643,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4757:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4741:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4712:74:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1646,
                        "name": "timeSinceLastMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1632,
                        "src": "4801:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 1647,
                        "name": "MINT_INTERVAL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1368,
                        "src": "4822:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4801:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1649,
                        "name": "timeToNextInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1638,
                        "src": "4839:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1650,
                        "name": "MINT_INTERVAL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1368,
                        "src": "4860:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4839:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4801:72:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1663,
                  "nodeType": "IfStatement",
                  "src": "4797:220:4",
                  "trueBody": {
                    "id": 1662,
                    "nodeType": "Block",
                    "src": "4875:142:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1653,
                            "name": "performMassMinting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1796,
                            "src": "4889:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4889:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1655,
                        "nodeType": "ExpressionStatement",
                        "src": "4889:20:4"
                      },
                      {
                        "expression": {
                          "id": 1660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1656,
                            "name": "lastMintTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1365,
                            "src": "4923:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1657,
                              "name": "currentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1627,
                              "src": "4938:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1658,
                              "name": "timeToNextInterval",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1638,
                              "src": "4952:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4938:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4923:47:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1661,
                        "nodeType": "ExpressionStatement",
                        "src": "4923:47:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b8f41a3c",
            "id": 1665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitPlayerList",
            "nameLocation": "2958:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1506,
                  "mutability": "mutable",
                  "name": "serverPlayerLists",
                  "nameLocation": "2998:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1665,
                  "src": "2975:40:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$1413_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct GameValidator.ServerPlayers[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1504,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1503,
                        "name": "ServerPlayers",
                        "nameLocations": [
                          "2975:13:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1413,
                        "src": "2975:13:4"
                      },
                      "referencedDeclaration": 1413,
                      "src": "2975:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ServerPlayers_$1413_storage_ptr",
                        "typeString": "struct GameValidator.ServerPlayers"
                      }
                    },
                    "id": 1505,
                    "nodeType": "ArrayTypeName",
                    "src": "2975:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ServerPlayers_$1413_storage_$dyn_storage_ptr",
                      "typeString": "struct GameValidator.ServerPlayers[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1508,
                  "mutability": "mutable",
                  "name": "validatorID",
                  "nameLocation": "3025:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1665,
                  "src": "3017:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1510,
                  "mutability": "mutable",
                  "name": "canMintFlag",
                  "nameLocation": "3043:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1665,
                  "src": "3038:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1509,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3038:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2974:81:4"
            },
            "returnParameters": {
              "id": 1512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3063:0:4"
            },
            "scope": 2032,
            "src": "2949:2074:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1677,
              "nodeType": "Block",
              "src": "6292:141:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1674,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1667,
                        "src": "6417:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1672,
                        "name": "playerDatabase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "6390:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPlayerDatabase_$1332",
                          "typeString": "contract IPlayerDatabase"
                        }
                      },
                      "id": 1673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6405:11:4",
                      "memberName": "isValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1331,
                      "src": "6390:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 1675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6390:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1671,
                  "id": 1676,
                  "nodeType": "Return",
                  "src": "6383:43:4"
                }
              ]
            },
            "functionSelector": "facd743b",
            "id": 1678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidator",
            "nameLocation": "6235:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1667,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6255:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1678,
                  "src": "6247:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6247:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6246:18:4"
            },
            "returnParameters": {
              "id": 1671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1678,
                  "src": "6286:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1669,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6286:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6285:6:4"
            },
            "scope": 2032,
            "src": "6226:207:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1742,
              "nodeType": "Block",
              "src": "6475:416:4",
              "statements": [
                {
                  "assignments": [
                    1685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1685,
                      "mutability": "mutable",
                      "name": "serverIPs",
                      "nameLocation": "6501:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1742,
                      "src": "6485:25:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1683,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6485:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1684,
                        "nodeType": "ArrayTypeName",
                        "src": "6485:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1689,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1686,
                        "name": "playerDatabase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "6513:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPlayerDatabase_$1332",
                          "typeString": "contract IPlayerDatabase"
                        }
                      },
                      "id": 1687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6528:15:4",
                      "memberName": "getServerIPList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1313,
                      "src": "6513:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (string memory[] memory)"
                      }
                    },
                    "id": 1688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6513:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6485:60:4"
                },
                {
                  "body": {
                    "id": 1740,
                    "nodeType": "Block",
                    "src": "6599:286:4",
                    "statements": [
                      {
                        "assignments": [
                          1702
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1702,
                            "mutability": "mutable",
                            "name": "serverIP",
                            "nameLocation": "6627:8:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1740,
                            "src": "6613:22:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 1701,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "6613:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1706,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1703,
                            "name": "serverIPs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "6638:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 1705,
                          "indexExpression": {
                            "id": 1704,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1691,
                            "src": "6648:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6638:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6613:37:4"
                      },
                      {
                        "assignments": [
                          1711
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1711,
                            "mutability": "mutable",
                            "name": "validators",
                            "nameLocation": "6681:10:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1740,
                            "src": "6664:27:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1709,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6664:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1710,
                              "nodeType": "ArrayTypeName",
                              "src": "6664:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1715,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1712,
                            "name": "validatorsPerServerIP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1351,
                            "src": "6694:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                              "typeString": "mapping(string memory => address[] storage ref)"
                            }
                          },
                          "id": 1714,
                          "indexExpression": {
                            "id": 1713,
                            "name": "serverIP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1702,
                            "src": "6716:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6694:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6664:61:4"
                      },
                      {
                        "body": {
                          "id": 1738,
                          "nodeType": "Block",
                          "src": "6784:91:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1727,
                                        "name": "serverSubmissions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1358,
                                        "src": "6802:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_ServerSubmission_$1407_storage_$_$",
                                          "typeString": "mapping(string memory => mapping(address => struct GameValidator.ServerSubmission storage ref))"
                                        }
                                      },
                                      "id": 1732,
                                      "indexExpression": {
                                        "id": 1728,
                                        "name": "serverIP",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1702,
                                        "src": "6820:8:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6802:27:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ServerSubmission_$1407_storage_$",
                                        "typeString": "mapping(address => struct GameValidator.ServerSubmission storage ref)"
                                      }
                                    },
                                    "id": 1733,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 1729,
                                        "name": "validators",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1711,
                                        "src": "6830:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 1731,
                                      "indexExpression": {
                                        "id": 1730,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1717,
                                        "src": "6841:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6830:13:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6802:42:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ServerSubmission_$1407_storage",
                                      "typeString": "struct GameValidator.ServerSubmission storage ref"
                                    }
                                  },
                                  "id": 1734,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "6845:7:4",
                                  "memberName": "canMint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1406,
                                  "src": "6802:50:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1735,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6855:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6802:58:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1737,
                              "nodeType": "ExpressionStatement",
                              "src": "6802:58:4"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1720,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1717,
                            "src": "6756:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1721,
                              "name": "validators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1711,
                              "src": "6760:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6771:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6760:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6756:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1739,
                        "initializationExpression": {
                          "assignments": [
                            1717
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1717,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "6749:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 1739,
                              "src": "6744:6:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1716,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6744:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1719,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6753:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6744:10:4"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6779:3:4",
                            "subExpression": {
                              "id": 1724,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1717,
                              "src": "6779:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1726,
                          "nodeType": "ExpressionStatement",
                          "src": "6779:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "6739:136:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1694,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1691,
                      "src": "6572:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1695,
                        "name": "serverIPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1685,
                        "src": "6576:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 1696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6586:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6576:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6572:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1741,
                  "initializationExpression": {
                    "assignments": [
                      1691
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1691,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6565:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1741,
                        "src": "6560:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1690,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6560:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1693,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6569:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6560:10:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6594:3:4",
                      "subExpression": {
                        "id": 1698,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1691,
                        "src": "6594:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1700,
                    "nodeType": "ExpressionStatement",
                    "src": "6594:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "6555:330:4"
                }
              ]
            },
            "id": 1743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetSubmissions",
            "nameLocation": "6448:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6464:2:4"
            },
            "returnParameters": {
              "id": 1680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6475:0:4"
            },
            "scope": 2032,
            "src": "6439:452:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1795,
              "nodeType": "Block",
              "src": "6974:384:4",
              "statements": [
                {
                  "assignments": [
                    1750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1750,
                      "mutability": "mutable",
                      "name": "serverIPs",
                      "nameLocation": "7000:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1795,
                      "src": "6984:25:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1748,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6984:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1749,
                        "nodeType": "ArrayTypeName",
                        "src": "6984:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1754,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1751,
                        "name": "playerDatabase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "7012:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPlayerDatabase_$1332",
                          "typeString": "contract IPlayerDatabase"
                        }
                      },
                      "id": 1752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7027:15:4",
                      "memberName": "getServerIPList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1313,
                      "src": "7012:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (string memory[] memory)"
                      }
                    },
                    "id": 1753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7012:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6984:60:4"
                },
                {
                  "body": {
                    "id": 1790,
                    "nodeType": "Block",
                    "src": "7098:226:4",
                    "statements": [
                      {
                        "assignments": [
                          1767
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1767,
                            "mutability": "mutable",
                            "name": "serverIP",
                            "nameLocation": "7126:8:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1790,
                            "src": "7112:22:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 1766,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "7112:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1771,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1768,
                            "name": "serverIPs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1750,
                            "src": "7137:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 1770,
                          "indexExpression": {
                            "id": 1769,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1756,
                            "src": "7147:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7137:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7112:37:4"
                      },
                      {
                        "assignments": [
                          1773
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1773,
                            "mutability": "mutable",
                            "name": "commonHash",
                            "nameLocation": "7171:10:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1790,
                            "src": "7163:18:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1772,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7163:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1777,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1775,
                              "name": "serverIP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1767,
                              "src": "7203:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1774,
                            "name": "findMostCommonHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2015,
                            "src": "7184:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory) view returns (bytes32)"
                            }
                          },
                          "id": 1776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7184:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7163:49:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1778,
                            "name": "commonHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1773,
                            "src": "7230:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7252:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7244:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 1779,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "7244:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7244:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "7230:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1789,
                        "nodeType": "IfStatement",
                        "src": "7226:88:4",
                        "trueBody": {
                          "id": 1788,
                          "nodeType": "Block",
                          "src": "7256:58:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1785,
                                    "name": "commonHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1773,
                                    "src": "7288:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 1784,
                                  "name": "mintForServer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1857,
                                  "src": "7274:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32)"
                                  }
                                },
                                "id": 1786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7274:25:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1787,
                              "nodeType": "ExpressionStatement",
                              "src": "7274:25:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1759,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1756,
                      "src": "7071:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1760,
                        "name": "serverIPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1750,
                        "src": "7075:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 1761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7085:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7075:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7071:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1791,
                  "initializationExpression": {
                    "assignments": [
                      1756
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1756,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7064:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1791,
                        "src": "7059:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1755,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7059:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1758,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7068:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7059:10:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7093:3:4",
                      "subExpression": {
                        "id": 1763,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1756,
                        "src": "7093:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1765,
                    "nodeType": "ExpressionStatement",
                    "src": "7093:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "7054:270:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1792,
                      "name": "resetSubmissions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1743,
                      "src": "7333:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7333:18:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1794,
                  "nodeType": "ExpressionStatement",
                  "src": "7333:18:4"
                }
              ]
            },
            "functionSelector": "64c8c5a7",
            "id": 1796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performMassMinting",
            "nameLocation": "6946:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6964:2:4"
            },
            "returnParameters": {
              "id": 1745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6974:0:4"
            },
            "scope": 2032,
            "src": "6937:421:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1856,
              "nodeType": "Block",
              "src": "7418:581:4",
              "statements": [
                {
                  "assignments": [
                    1805
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1805,
                      "mutability": "mutable",
                      "name": "playerList",
                      "nameLocation": "7499:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1856,
                      "src": "7483:26:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1803,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7483:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 1804,
                        "nodeType": "ArrayTypeName",
                        "src": "7483:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1809,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1806,
                      "name": "hashToPlayerList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1363,
                      "src": "7512:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_string_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => string storage ref[] storage ref)"
                      }
                    },
                    "id": 1808,
                    "indexExpression": {
                      "id": 1807,
                      "name": "playerListHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1798,
                      "src": "7529:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7512:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7483:61:4"
                },
                {
                  "assignments": [
                    1814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1814,
                      "mutability": "mutable",
                      "name": "rewardAddresses",
                      "nameLocation": "7571:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1856,
                      "src": "7554:32:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1812,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7554:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1813,
                        "nodeType": "ArrayTypeName",
                        "src": "7554:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1818,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1816,
                        "name": "playerList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "7620:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      ],
                      "id": 1815,
                      "name": "getValidRewardAddressesByNames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2031,
                      "src": "7589:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (string memory[] memory) view returns (address[] memory)"
                      }
                    },
                    "id": 1817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7589:42:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7554:77:4"
                },
                {
                  "assignments": [
                    1820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1820,
                      "mutability": "mutable",
                      "name": "mintAmount",
                      "nameLocation": "7650:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1856,
                      "src": "7642:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1819,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7642:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1823,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1821,
                      "name": "calculateMintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1450,
                      "src": "7663:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7663:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7642:42:4"
                },
                {
                  "body": {
                    "id": 1854,
                    "nodeType": "Block",
                    "src": "7816:177:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1835,
                              "name": "rewardAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1814,
                              "src": "7834:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1837,
                            "indexExpression": {
                              "id": 1836,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1825,
                              "src": "7850:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7834:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7864:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7856:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1838,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7856:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7856:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7834:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1853,
                        "nodeType": "IfStatement",
                        "src": "7830:153:4",
                        "trueBody": {
                          "id": 1852,
                          "nodeType": "Block",
                          "src": "7868:115:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1846,
                                      "name": "rewardAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1814,
                                      "src": "7937:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 1848,
                                    "indexExpression": {
                                      "id": 1847,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1825,
                                      "src": "7953:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7937:18:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1849,
                                    "name": "mintAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1820,
                                    "src": "7957:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1843,
                                    "name": "mintContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1346,
                                    "src": "7913:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IGP_Mint_$1340",
                                      "typeString": "contract IGP_Mint"
                                    }
                                  },
                                  "id": 1845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7926:10:4",
                                  "memberName": "mintTokens",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1339,
                                  "src": "7913:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 1850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7913:55:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1851,
                              "nodeType": "ExpressionStatement",
                              "src": "7913:55:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1828,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1825,
                      "src": "7783:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1829,
                        "name": "rewardAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "7787:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7803:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7787:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7783:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1855,
                  "initializationExpression": {
                    "assignments": [
                      1825
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1825,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7776:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1855,
                        "src": "7771:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1824,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7771:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1827,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7780:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7771:10:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7811:3:4",
                      "subExpression": {
                        "id": 1832,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "7811:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1834,
                    "nodeType": "ExpressionStatement",
                    "src": "7811:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "7766:227:4"
                }
              ]
            },
            "id": 1857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintForServer",
            "nameLocation": "7372:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1798,
                  "mutability": "mutable",
                  "name": "playerListHash",
                  "nameLocation": "7394:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1857,
                  "src": "7386:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1797,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7386:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7385:24:4"
            },
            "returnParameters": {
              "id": 1800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7418:0:4"
            },
            "scope": 2032,
            "src": "7363:636:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2014,
              "nodeType": "Block",
              "src": "8087:1511:4",
              "statements": [
                {
                  "assignments": [
                    1868
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1868,
                      "mutability": "mutable",
                      "name": "validators",
                      "nameLocation": "8204:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2014,
                      "src": "8187:27:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8187:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1867,
                        "nodeType": "ArrayTypeName",
                        "src": "8187:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1872,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1869,
                      "name": "validatorsPerServerIP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1351,
                      "src": "8217:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 1871,
                    "indexExpression": {
                      "id": 1870,
                      "name": "serverIP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "8239:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8217:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8187:61:4"
                },
                {
                  "assignments": [
                    1874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1874,
                      "mutability": "mutable",
                      "name": "majorityThreshold",
                      "nameLocation": "8266:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2014,
                      "src": "8258:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1873,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8258:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1882,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1875,
                              "name": "validators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1868,
                              "src": "8287:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8298:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8287:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 1877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8307:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "8287:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1879,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8286:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8313:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "8286:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8258:58:4"
                },
                {
                  "assignments": [
                    1884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1884,
                      "mutability": "mutable",
                      "name": "majorityHash",
                      "nameLocation": "8362:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2014,
                      "src": "8354:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1883,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8354:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1889,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 1887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8385:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8377:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 1885,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8377:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8377:10:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8354:33:4"
                },
                {
                  "assignments": [
                    1891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1891,
                      "mutability": "mutable",
                      "name": "highestCount",
                      "nameLocation": "8405:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2014,
                      "src": "8397:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1890,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8397:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1893,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8420:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8397:24:4"
                },
                {
                  "assignments": [
                    1898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1898,
                      "mutability": "mutable",
                      "name": "hashCounts",
                      "nameLocation": "8513:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2014,
                      "src": "8494:29:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_HashCount_$1418_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct GameValidator.HashCount[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1896,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1895,
                            "name": "HashCount",
                            "nameLocations": [
                              "8494:9:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1418,
                            "src": "8494:9:4"
                          },
                          "referencedDeclaration": 1418,
                          "src": "8494:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HashCount_$1418_storage_ptr",
                            "typeString": "struct GameValidator.HashCount"
                          }
                        },
                        "id": 1897,
                        "nodeType": "ArrayTypeName",
                        "src": "8494:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_HashCount_$1418_storage_$dyn_storage_ptr",
                          "typeString": "struct GameValidator.HashCount[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1906,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1903,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1868,
                          "src": "8542:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8553:6:4",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "8542:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8526:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_HashCount_$1418_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct GameValidator.HashCount memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1900,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1899,
                            "name": "HashCount",
                            "nameLocations": [
                              "8530:9:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1418,
                            "src": "8530:9:4"
                          },
                          "referencedDeclaration": 1418,
                          "src": "8530:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HashCount_$1418_storage_ptr",
                            "typeString": "struct GameValidator.HashCount"
                          }
                        },
                        "id": 1901,
                        "nodeType": "ArrayTypeName",
                        "src": "8530:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_HashCount_$1418_storage_$dyn_storage_ptr",
                          "typeString": "struct GameValidator.HashCount[]"
                        }
                      }
                    },
                    "id": 1905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8526:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_HashCount_$1418_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct GameValidator.HashCount memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8494:66:4"
                },
                {
                  "body": {
                    "id": 2000,
                    "nodeType": "Block",
                    "src": "8658:725:4",
                    "statements": [
                      {
                        "assignments": [
                          1919
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1919,
                            "mutability": "mutable",
                            "name": "currentHash",
                            "nameLocation": "8680:11:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 2000,
                            "src": "8672:19:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1918,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8672:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1928,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1920,
                                "name": "serverSubmissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1358,
                                "src": "8694:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_ServerSubmission_$1407_storage_$_$",
                                  "typeString": "mapping(string memory => mapping(address => struct GameValidator.ServerSubmission storage ref))"
                                }
                              },
                              "id": 1922,
                              "indexExpression": {
                                "id": 1921,
                                "name": "serverIP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1859,
                                "src": "8712:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8694:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ServerSubmission_$1407_storage_$",
                                "typeString": "mapping(address => struct GameValidator.ServerSubmission storage ref)"
                              }
                            },
                            "id": 1926,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1923,
                                "name": "validators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1868,
                                "src": "8722:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1925,
                              "indexExpression": {
                                "id": 1924,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1908,
                                "src": "8733:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8722:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8694:42:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ServerSubmission_$1407_storage",
                              "typeString": "struct GameValidator.ServerSubmission storage ref"
                            }
                          },
                          "id": 1927,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8737:14:4",
                          "memberName": "playerListHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1404,
                          "src": "8694:57:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8672:79:4"
                      },
                      {
                        "assignments": [
                          1930
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1930,
                            "mutability": "mutable",
                            "name": "found",
                            "nameLocation": "8770:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 2000,
                            "src": "8765:10:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1929,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8765:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1932,
                        "initialValue": {
                          "hexValue": "66616c7365",
                          "id": 1931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8778:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8765:18:4"
                      },
                      {
                        "body": {
                          "id": 1963,
                          "nodeType": "Block",
                          "src": "8843:194:4",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 1949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1944,
                                      "name": "hashCounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1898,
                                      "src": "8865:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_HashCount_$1418_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct GameValidator.HashCount memory[] memory"
                                      }
                                    },
                                    "id": 1946,
                                    "indexExpression": {
                                      "id": 1945,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1934,
                                      "src": "8876:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8865:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HashCount_$1418_memory_ptr",
                                      "typeString": "struct GameValidator.HashCount memory"
                                    }
                                  },
                                  "id": 1947,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8879:4:4",
                                  "memberName": "hash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1415,
                                  "src": "8865:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1948,
                                  "name": "currentHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1919,
                                  "src": "8887:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "8865:33:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1962,
                              "nodeType": "IfStatement",
                              "src": "8861:162:4",
                              "trueBody": {
                                "id": 1961,
                                "nodeType": "Block",
                                "src": "8900:123:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1954,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "8922:21:4",
                                      "subExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1950,
                                            "name": "hashCounts",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1898,
                                            "src": "8922:10:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_HashCount_$1418_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct GameValidator.HashCount memory[] memory"
                                            }
                                          },
                                          "id": 1952,
                                          "indexExpression": {
                                            "id": 1951,
                                            "name": "j",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1934,
                                            "src": "8933:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8922:13:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_HashCount_$1418_memory_ptr",
                                            "typeString": "struct GameValidator.HashCount memory"
                                          }
                                        },
                                        "id": 1953,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "8936:5:4",
                                        "memberName": "count",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1417,
                                        "src": "8922:19:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1955,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8922:21:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 1958,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1956,
                                        "name": "found",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1930,
                                        "src": "8965:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 1957,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8973:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "8965:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1959,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8965:12:4"
                                  },
                                  {
                                    "id": 1960,
                                    "nodeType": "Break",
                                    "src": "8999:5:4"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1937,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "8815:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1938,
                              "name": "hashCounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1898,
                              "src": "8819:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_HashCount_$1418_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct GameValidator.HashCount memory[] memory"
                              }
                            },
                            "id": 1939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8830:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8819:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8815:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1964,
                        "initializationExpression": {
                          "assignments": [
                            1934
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1934,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "8808:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 1964,
                              "src": "8803:6:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1933,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8803:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1936,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8812:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8803:10:4"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8838:3:4",
                            "subExpression": {
                              "id": 1941,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1934,
                              "src": "8838:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1943,
                          "nodeType": "ExpressionStatement",
                          "src": "8838:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "8798:239:4"
                      },
                      {
                        "condition": {
                          "id": 1966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9055:6:4",
                          "subExpression": {
                            "id": 1965,
                            "name": "found",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "9056:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1977,
                        "nodeType": "IfStatement",
                        "src": "9051:101:4",
                        "trueBody": {
                          "id": 1976,
                          "nodeType": "Block",
                          "src": "9063:89:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1967,
                                    "name": "hashCounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1898,
                                    "src": "9081:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_HashCount_$1418_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct GameValidator.HashCount memory[] memory"
                                    }
                                  },
                                  "id": 1969,
                                  "indexExpression": {
                                    "id": 1968,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1908,
                                    "src": "9092:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9081:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HashCount_$1418_memory_ptr",
                                    "typeString": "struct GameValidator.HashCount memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1971,
                                      "name": "currentHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1919,
                                      "src": "9114:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "hexValue": "31",
                                      "id": 1972,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9134:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "id": 1970,
                                    "name": "HashCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1418,
                                    "src": "9097:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_HashCount_$1418_storage_ptr_$",
                                      "typeString": "type(struct GameValidator.HashCount storage pointer)"
                                    }
                                  },
                                  "id": 1973,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [
                                    "9108:4:4",
                                    "9127:5:4"
                                  ],
                                  "names": [
                                    "hash",
                                    "count"
                                  ],
                                  "nodeType": "FunctionCall",
                                  "src": "9097:40:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HashCount_$1418_memory_ptr",
                                    "typeString": "struct GameValidator.HashCount memory"
                                  }
                                },
                                "src": "9081:56:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_HashCount_$1418_memory_ptr",
                                  "typeString": "struct GameValidator.HashCount memory"
                                }
                              },
                              "id": 1975,
                              "nodeType": "ExpressionStatement",
                              "src": "9081:56:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1978,
                                "name": "hashCounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1898,
                                "src": "9219:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_HashCount_$1418_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct GameValidator.HashCount memory[] memory"
                                }
                              },
                              "id": 1980,
                              "indexExpression": {
                                "id": 1979,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1908,
                                "src": "9230:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9219:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HashCount_$1418_memory_ptr",
                                "typeString": "struct GameValidator.HashCount memory"
                              }
                            },
                            "id": 1981,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9233:5:4",
                            "memberName": "count",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1417,
                            "src": "9219:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1982,
                            "name": "highestCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1891,
                            "src": "9241:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9219:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1999,
                        "nodeType": "IfStatement",
                        "src": "9215:158:4",
                        "trueBody": {
                          "id": 1998,
                          "nodeType": "Block",
                          "src": "9255:118:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1989,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1984,
                                  "name": "highestCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1891,
                                  "src": "9273:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1985,
                                      "name": "hashCounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1898,
                                      "src": "9288:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_HashCount_$1418_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct GameValidator.HashCount memory[] memory"
                                      }
                                    },
                                    "id": 1987,
                                    "indexExpression": {
                                      "id": 1986,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1908,
                                      "src": "9299:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9288:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HashCount_$1418_memory_ptr",
                                      "typeString": "struct GameValidator.HashCount memory"
                                    }
                                  },
                                  "id": 1988,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9302:5:4",
                                  "memberName": "count",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1417,
                                  "src": "9288:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9273:34:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1990,
                              "nodeType": "ExpressionStatement",
                              "src": "9273:34:4"
                            },
                            {
                              "expression": {
                                "id": 1996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1991,
                                  "name": "majorityHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1884,
                                  "src": "9325:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1992,
                                      "name": "hashCounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1898,
                                      "src": "9340:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_HashCount_$1418_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct GameValidator.HashCount memory[] memory"
                                      }
                                    },
                                    "id": 1994,
                                    "indexExpression": {
                                      "id": 1993,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1908,
                                      "src": "9351:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9340:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HashCount_$1418_memory_ptr",
                                      "typeString": "struct GameValidator.HashCount memory"
                                    }
                                  },
                                  "id": 1995,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9354:4:4",
                                  "memberName": "hash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1415,
                                  "src": "9340:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "9325:33:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1997,
                              "nodeType": "ExpressionStatement",
                              "src": "9325:33:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1911,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1908,
                      "src": "8630:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1912,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1868,
                        "src": "8634:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8645:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8634:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8630:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2001,
                  "initializationExpression": {
                    "assignments": [
                      1908
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1908,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8623:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2001,
                        "src": "8618:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1907,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8618:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1910,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8627:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8618:10:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8653:3:4",
                      "subExpression": {
                        "id": 1915,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1908,
                        "src": "8653:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1917,
                    "nodeType": "ExpressionStatement",
                    "src": "8653:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "8613:770:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2002,
                      "name": "highestCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1891,
                      "src": "9464:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 2003,
                      "name": "majorityThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1874,
                      "src": "9480:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9464:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2008,
                  "nodeType": "IfStatement",
                  "src": "9460:83:4",
                  "trueBody": {
                    "id": 2007,
                    "nodeType": "Block",
                    "src": "9499:44:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2005,
                          "name": "majorityHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1884,
                          "src": "9520:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1863,
                        "id": 2006,
                        "nodeType": "Return",
                        "src": "9513:19:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9568:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 2010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9560:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 2009,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9560:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9560:10:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1863,
                  "id": 2013,
                  "nodeType": "Return",
                  "src": "9553:17:4"
                }
              ]
            },
            "id": 2015,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findMostCommonHash",
            "nameLocation": "8013:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "serverIP",
                  "nameLocation": "8046:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2015,
                  "src": "8032:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8032:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8031:24:4"
            },
            "returnParameters": {
              "id": 1863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2015,
                  "src": "8078:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1861,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8078:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8077:9:4"
            },
            "scope": 2032,
            "src": "8004:1594:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2030,
              "nodeType": "Block",
              "src": "9797:96:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2026,
                        "name": "playerNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2018,
                        "src": "9860:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
                        "id": 2027,
                        "name": "lastMintTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1365,
                        "src": "9873:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2024,
                        "name": "playerDatabase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "9814:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPlayerDatabase_$1332",
                          "typeString": "contract IPlayerDatabase"
                        }
                      },
                      "id": 2025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9829:30:4",
                      "memberName": "getValidRewardAddressesByNames",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1324,
                      "src": "9814:45:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (string memory[] memory,uint256) view external returns (address[] memory)"
                      }
                    },
                    "id": 2028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9814:72:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 2023,
                  "id": 2029,
                  "nodeType": "Return",
                  "src": "9807:79:4"
                }
              ]
            },
            "functionSelector": "3592696d",
            "id": 2031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidRewardAddressesByNames",
            "nameLocation": "9698:30:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2018,
                  "mutability": "mutable",
                  "name": "playerNames",
                  "nameLocation": "9745:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2031,
                  "src": "9729:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2016,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "9729:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 2017,
                    "nodeType": "ArrayTypeName",
                    "src": "9729:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9728:29:4"
            },
            "returnParameters": {
              "id": 2023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2031,
                  "src": "9779:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2020,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9779:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2021,
                    "nodeType": "ArrayTypeName",
                    "src": "9779:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9778:18:4"
            },
            "scope": 2032,
            "src": "9689:204:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2033,
        "src": "577:9352:4",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "33:9897:4"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620019b4380380620019b4833981016040819052620000349162000083565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055620000bb565b80516001600160a01b03811681146200007e57600080fd5b919050565b600080604083850312156200009757600080fd5b620000a28362000066565b9150620000b26020840162000066565b90509250929050565b6118e980620000cb6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639d4635201161008c578063e15336ef11610066578063e15336ef146101d2578063f59cc978146101e3578063f785eb2a146101ec578063facd743b1461020c57600080fd5b80639d4635201461018b578063b8f41a3c14610194578063d0b6b6db146101a757600080fd5b80631e9ad446146100d45780633592696d146100f65780635c9c3ed21461011657806364c8c5a7146101705780636f1aab4a1461017a57806384e7e3d314610182575b600080fd5b6100e3670de0b6b3a764000081565b6040519081526020015b60405180910390f35b610109610104366004611164565b61022f565b6040516100ed91906111a1565b61015b610124366004611213565b8151602081840181018051600382529282019482019490942091909352909152600090815260409020805460019091015460ff1682565b604080519283529015156020830152016100ed565b6101786102ae565b005b6100e3604081565b6100e361012c81565b6100e360055481565b6101786101a236600461127e565b610390565b6001546101ba906001600160a01b031681565b6040516001600160a01b0390911681526020016100ed565b6101786101e03660046113aa565b50565b6100e361025881565b6101ff6101fa3660046113ce565b61065b565b6040516100ed9190611440565b61021f61021a3660046113aa565b610714565b60405190151581526020016100ed565b6000546005546040516385d8f13d60e01b81526060926001600160a01b0316916385d8f13d91610263918691600401611453565b600060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102a891908101906114bc565b92915050565b60008060009054906101000a90046001600160a01b03166001600160a01b0316633dc0ff7d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610302573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261032a9190810190611556565b905060005b815181101561038757600082828151811061034c5761034c611643565b60200260200101519050600061036182610783565b905080156103725761037281610a3e565b5050808061037f9061166f565b91505061032f565b506101e0610c23565b61039982610714565b6103f55760405162461bcd60e51b8152602060048201526024808201527f43616c6c6572206973206e6f74206120726567697374657265642076616c696460448201526330ba37b960e11b606482015260840160405180910390fd5b6000805b84518110156105f357600085828151811061041657610416611643565b602002602001015160200151519050604081846104339190611688565b111561043f57506105f3565b6104498184611688565b9250606060005b87848151811061046257610462611643565b602002602001015160200151518110156104e3578188858151811061048957610489611643565b60200260200101516020015182815181106104a6576104a6611643565b60200260200101516040516020016104bf92919061169b565b604051602081830303815290604052915080806104db9061166f565b915050610450565b508051602082012087518890859081106104ff576104ff611643565b602002602001015160200151600460008381526020019081526020016000209080519060200190610531929190610f0a565b5061055988858151811061054757610547611643565b60200260200101516000015188610de1565b6040518060400160405280828152602001871515815250600389868151811061058457610584611643565b60200260200101516000015160405161059d91906116ca565b90815260408051602092819003830190206001600160a01b038b16600090815290835220825181559101516001909101805460ff1916911515919091179055508291506105eb90508161166f565b9150506103f9565b50600554429060009061060690836116e6565b9050600061061661012c8461170f565b6106229061012c6116e6565b905061012c8210158015610637575061012c81105b15610652576106446102ae565b61064e81846116e6565b6005555b50505050505050565b6004602052816000526040600020818154811061067757600080fd5b9060005260206000200160009150915050805461069390611723565b80601f01602080910402602001604051908101604052809291908181526020018280546106bf90611723565b801561070c5780601f106106e15761010080835404028352916020019161070c565b820191906000526020600020905b8154815290600101906020018083116106ef57829003601f168201915b505050505081565b6000805460405163facd743b60e01b81526001600160a01b0384811660048301529091169063facd743b90602401602060405180830381865afa15801561075f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a8919061175d565b60008060028360405161079691906116ca565b90815260408051918290036020908101832080548083028501830190935282845291908301828280156107f257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107d4575b50505050509050600060648251603c61080b919061177a565b6108159190611791565b82519091506000908190819067ffffffffffffffff81111561083957610839610fc7565b60405190808252806020026020018201604052801561087e57816020015b60408051808201909152600080825260208201528152602001906001900390816108575790505b50905060005b8551811015610a1e57600060038960405161089f91906116ca565b908152602001604051809103902060008884815181106108c1576108c1611643565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015490506000805b8451811015610969578285828151811061090f5761090f611643565b602002602001015160000151036109575784818151811061093257610932611643565b6020026020010151602001805180919061094b9061166f565b90525060019150610969565b806109618161166f565b9150506108f3565b50806109a3576040518060400160405280838152602001600181525084848151811061099757610997611643565b60200260200101819052505b848484815181106109b6576109b6611643565b6020026020010151602001511115610a09578383815181106109da576109da611643565b60200260200101516020015194508383815181106109fa576109fa611643565b60200260200101516000015195505b50508080610a169061166f565b915050610884565b50838210610a3157509095945050505050565b5060009695505050505050565b600081815260046020908152604080832080548251818502810185019093528083529192909190849084015b82821015610b16578382906000526020600020018054610a8990611723565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab590611723565b8015610b025780601f10610ad757610100808354040283529160200191610b02565b820191906000526020600020905b815481529060010190602001808311610ae557829003601f168201915b505050505081526020019060010190610a6a565b5050505090506000610b278261022f565b90506000610b33610ed0565b905060005b8251811015610c1c5760006001600160a01b0316838281518110610b5e57610b5e611643565b60200260200101516001600160a01b031614610c0a5760015483516001600160a01b039091169063f0dda65c90859084908110610b9d57610b9d611643565b6020026020010151846040518363ffffffff1660e01b8152600401610bd79291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b158015610bf157600080fd5b505af1158015610c05573d6000803e3d6000fd5b505050505b80610c148161166f565b915050610b38565b5050505050565b60008060009054906101000a90046001600160a01b03166001600160a01b0316633dc0ff7d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610c77573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c9f9190810190611556565b905060005b8151811015610ddd576000828281518110610cc157610cc1611643565b602002602001015190506000600282604051610cdd91906116ca565b9081526040805191829003602090810183208054808302850183019093528284529190830182828015610d3957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d1b575b5050505050905060005b8151811015610dc7576000600384604051610d5e91906116ca565b90815260200160405180910390206000848481518110610d8057610d80611643565b6020908102919091018101516001600160a01b03168252810191909152604001600020600101805460ff191691151591909117905580610dbf8161166f565b915050610d43565b5050508080610dd59061166f565b915050610ca4565b5050565b6000805b600284604051610df591906116ca565b90815260405190819003602001902054811015610e7a57826001600160a01b0316600285604051610e2691906116ca565b90815260200160405180910390208281548110610e4557610e45611643565b6000918252602090912001546001600160a01b031603610e685760019150610e7a565b80610e728161166f565b915050610de5565b5080610ecb57600283604051610e9091906116ca565b90815260405160209181900382019020805460018101825560009182529190200180546001600160a01b0319166001600160a01b0384161790555b505050565b60008060055442610ee191906116e6565b9050610258811115610ef257506102585b610f04670de0b6b3a76400008261177a565b91505090565b828054828255906000526020600020908101928215610f50579160200282015b82811115610f505782518290610f4090826117f3565b5091602001919060010190610f2a565b50610f5c929150610f60565b5090565b80821115610f5c576000610f748282610f7d565b50600101610f60565b508054610f8990611723565b6000825580601f10610f99575050565b601f0160209004906000526020600020908101906101e091905b80821115610f5c5760008155600101610fb3565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561100057611000610fc7565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561102f5761102f610fc7565b604052919050565b600067ffffffffffffffff82111561105157611051610fc7565b5060051b60200190565b600067ffffffffffffffff82111561107557611075610fc7565b50601f01601f191660200190565b600082601f83011261109457600080fd5b81356110a76110a28261105b565b611006565b8181528460208386010111156110bc57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126110ea57600080fd5b813560206110fa6110a283611037565b82815260059290921b8401810191818101908684111561111957600080fd5b8286015b8481101561115957803567ffffffffffffffff81111561113d5760008081fd5b61114b8986838b0101611083565b84525091830191830161111d565b509695505050505050565b60006020828403121561117657600080fd5b813567ffffffffffffffff81111561118d57600080fd5b611199848285016110d9565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156111e25783516001600160a01b0316835292840192918401916001016111bd565b50909695505050505050565b6001600160a01b03811681146101e057600080fd5b803561120e816111ee565b919050565b6000806040838503121561122657600080fd5b823567ffffffffffffffff81111561123d57600080fd5b61124985828601611083565b925050602083013561125a816111ee565b809150509250929050565b80151581146101e057600080fd5b803561120e81611265565b60008060006060848603121561129357600080fd5b833567ffffffffffffffff808211156112ab57600080fd5b818601915086601f8301126112bf57600080fd5b813560206112cf6110a283611037565b82815260059290921b8401810191818101908a8411156112ee57600080fd5b8286015b8481101561137f5780358681111561130957600080fd5b87016040818e03601f190112156113205760008081fd5b611328610fdd565b858201358881111561133a5760008081fd5b6113488f8883860101611083565b82525060408201358881111561135e5760008081fd5b61136c8f88838601016110d9565b82880152508452509183019183016112f2565b50975061138f9050888201611203565b9550505050506113a160408501611273565b90509250925092565b6000602082840312156113bc57600080fd5b81356113c7816111ee565b9392505050565b600080604083850312156113e157600080fd5b50508035926020909101359150565b60005b8381101561140b5781810151838201526020016113f3565b50506000910152565b6000815180845261142c8160208601602086016113f0565b601f01601f19169290920160200192915050565b6020815260006113c76020830184611414565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156114aa57605f19888703018552611498868351611414565b9550938201939082019060010161147c565b50509490940194909452949350505050565b600060208083850312156114cf57600080fd5b825167ffffffffffffffff8111156114e657600080fd5b8301601f810185136114f757600080fd5b80516115056110a282611037565b81815260059190911b8201830190838101908783111561152457600080fd5b928401925b8284101561154b57835161153c816111ee565b82529284019290840190611529565b979650505050505050565b6000602080838503121561156957600080fd5b825167ffffffffffffffff8082111561158157600080fd5b818501915085601f83011261159557600080fd5b81516115a36110a282611037565b81815260059190911b830184019084810190888311156115c257600080fd5b8585015b83811015611636578051858111156115de5760008081fd5b8601603f81018b136115f05760008081fd5b8781015160406116026110a28361105b565b8281528d828486010111156116175760008081fd5b611626838c83018487016113f0565b86525050509186019186016115c6565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161168157611681611659565b5060010190565b808201808211156102a8576102a8611659565b600083516116ad8184602088016113f0565b8351908301906116c18183602088016113f0565b01949350505050565b600082516116dc8184602087016113f0565b9190910192915050565b818103818111156102a8576102a8611659565b634e487b7160e01b600052601260045260246000fd5b60008261171e5761171e6116f9565b500690565b600181811c9082168061173757607f821691505b60208210810361175757634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561176f57600080fd5b81516113c781611265565b80820281158282048414176102a8576102a8611659565b6000826117a0576117a06116f9565b500490565b601f821115610ecb57600081815260208120601f850160051c810160208610156117cc5750805b601f850160051c820191505b818110156117eb578281556001016117d8565b505050505050565b815167ffffffffffffffff81111561180d5761180d610fc7565b6118218161181b8454611723565b846117a5565b602080601f831160018114611856576000841561183e5750858301515b600019600386901b1c1916600185901b1785556117eb565b600085815260208120601f198616915b8281101561188557888601518255948401946001909101908401611866565b50858210156118a35787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220c29de15245d0ecaa97f290ae36fafcd6ceafc6ccb1911e1490fa81bdecc2904f64736f6c63430008150033",
  "bytecodeSha1": "eabcfc8d8439a15033e2490bbd1878c9ace8d329",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "GameValidator",
  "coverageMap": {
    "branches": {
      "4": {
        "GameValidator.calculateMintAmount": {
          "48": [
            2241,
            2271,
            false
          ]
        },
        "GameValidator.findMostCommonHash": {
          "41": [
            8865,
            8898,
            false
          ],
          "42": [
            9056,
            9061,
            false
          ],
          "43": [
            9219,
            9253,
            false
          ],
          "44": [
            9464,
            9497,
            false
          ]
        },
        "GameValidator.mintForServer": {
          "45": [
            7834,
            7866,
            false
          ]
        },
        "GameValidator.performMassMinting": {
          "36": [
            7230,
            7254,
            false
          ]
        },
        "GameValidator.submitPlayerList": {
          "37": [
            3081,
            3105,
            true
          ],
          "38": [
            3348,
            3413,
            false
          ],
          "39": [
            4801,
            4835,
            false
          ],
          "40": [
            4839,
            4873,
            false
          ]
        },
        "GameValidator.updateValidatorsList": {
          "46": [
            2697,
            2744,
            false
          ],
          "47": [
            2848,
            2863,
            false
          ]
        }
      }
    },
    "statements": {
      "4": {
        "GameValidator.calculateMintAmount": {
          "35": [
            2379,
            2420
          ]
        },
        "GameValidator.findMostCommonHash": {
          "16": [
            8922,
            8943
          ],
          "17": [
            8965,
            8977
          ],
          "18": [
            8999,
            9004
          ],
          "19": [
            8838,
            8841
          ],
          "20": [
            9081,
            9137
          ],
          "21": [
            9273,
            9307
          ],
          "22": [
            9325,
            9358
          ],
          "23": [
            8653,
            8656
          ],
          "24": [
            9513,
            9532
          ],
          "25": [
            9553,
            9570
          ]
        },
        "GameValidator.getValidRewardAddressesByNames": {
          "0": [
            9807,
            9886
          ]
        },
        "GameValidator.isValidator": {
          "15": [
            6383,
            6426
          ]
        },
        "GameValidator.mintForServer": {
          "26": [
            7913,
            7968
          ],
          "27": [
            7811,
            7814
          ]
        },
        "GameValidator.performMassMinting": {
          "1": [
            7274,
            7299
          ],
          "2": [
            7093,
            7096
          ],
          "3": [
            7333,
            7351
          ]
        },
        "GameValidator.resetSubmissions": {
          "28": [
            6802,
            6860
          ],
          "29": [
            6779,
            6782
          ],
          "30": [
            6594,
            6597
          ]
        },
        "GameValidator.submitPlayerList": {
          "4": [
            3073,
            3146
          ],
          "5": [
            3433,
            3438
          ],
          "6": [
            3520,
            3557
          ],
          "7": [
            3774,
            3868
          ],
          "8": [
            3751,
            3754
          ],
          "9": [
            4028,
            4095
          ],
          "10": [
            4184,
            4248
          ],
          "11": [
            4345,
            4527
          ],
          "12": [
            3244,
            3247
          ],
          "13": [
            4889,
            4909
          ],
          "14": [
            4923,
            4970
          ]
        },
        "GameValidator.updateValidatorsList": {
          "31": [
            2764,
            2786
          ],
          "32": [
            2804,
            2809
          ],
          "33": [
            2674,
            2677
          ],
          "34": [
            2879,
            2926
          ]
        }
      }
    }
  },
  "dependencies": [
    "IGP_Mint",
    "IPlayerDatabase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "577:9352:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:60;;1188:16;1144:60;;;;;160:25:7;;;148:2;133:18;1144:60:4;;;;;;;;9689:204;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;742:80::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:80:4;;;;;;;;;;;;;;;;;;;;;4540:25:7;;;4608:14;;4601:22;4596:2;4581:18;;4574:50;4513:18;742:80:4;4372:258:7;6937:421:4;;;:::i;:::-;;1009:55;;1062:2;1009:55;;954:49;;994:9;954:49;;921:27;;;;;;2949:2074;;;;;;:::i;:::-;;:::i;643:28::-;;;;;-1:-1:-1;;;;;643:28:4;;;;;;-1:-1:-1;;;;;7020:32:7;;;7002:51;;6990:2;6975:18;643:28:4;6839:220:7;1954:140:4;;;;;;:::i;:::-;6974:384;6937:421;1070:50;;1110:10;1070:50;;829:52;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6226:207::-;;;;;;:::i;:::-;;:::i;:::-;;;8490:14:7;;8483:22;8465:41;;8453:2;8438:18;6226:207:4;8325:187:7;9689:204:4;9814:14;;9873:12;;9814:72;;-1:-1:-1;;;9814:72:4;;9779:16;;-1:-1:-1;;;;;9814:14:4;;:45;;:72;;9860:11;;9814:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9814:72:4;;;;;;;;;;;;:::i;:::-;9807:79;9689:204;-1:-1:-1;;9689:204:4:o;6937:421::-;6984:25;7012:14;;;;;;;;;-1:-1:-1;;;;;7012:14:4;-1:-1:-1;;;;;7012:30:4;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7012:32:4;;;;;;;;;;;;:::i;:::-;6984:60;;7059:6;7054:270;7075:9;:16;7071:1;:20;7054:270;;;7112:22;7137:9;7147:1;7137:12;;;;;;;;:::i;:::-;;;;;;;7112:37;;7163:18;7184:28;7203:8;7184:18;:28::i;:::-;7163:49;-1:-1:-1;7230:24:4;;7226:88;;7274:25;7288:10;7274:13;:25::i;:::-;7098:226;;7093:3;;;;;:::i;:::-;;;;7054:270;;;;7333:18;:16;:18::i;2949:2074::-;3081:24;3093:11;3081;:24::i;:::-;3073:73;;;;-1:-1:-1;;;3073:73:4;;12608:2:7;3073:73:4;;;12590:21:7;12647:2;12627:18;;;12620:30;12686:34;12666:18;;;12659:62;-1:-1:-1;;;12737:18:7;;;12730:34;12781:19;;3073:73:4;;;;;;;;3157:24;3202:6;3197:1341;3218:17;:24;3214:1;:28;3197:1341;;;3263:25;3291:17;3309:1;3291:20;;;;;;;;:::i;:::-;;;;;;;:32;;;:39;3263:67;;1062:2;3367:17;3348:16;:36;;;;:::i;:::-;:65;3344:163;;;3433:5;;;3344:163;3520:37;3540:17;3520:37;;:::i;:::-;;;3644:31;3694:6;3689:194;3710:17;3728:1;3710:20;;;;;;;;:::i;:::-;;;;;;;:32;;;:39;3706:1;:43;3689:194;;;3812:18;3832:17;3850:1;3832:20;;;;;;;;:::i;:::-;;;;;;;:32;;;3865:1;3832:35;;;;;;;;:::i;:::-;;;;;;;3795:73;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3774:94;;3751:3;;;;;:::i;:::-;;;;3689:194;;;-1:-1:-1;3985:29:4;;;;;;4063:20;;:17;;4081:1;;4063:20;;;;;;:::i;:::-;;;;;;;:32;;;4028:16;:32;4045:14;4028:32;;;;;;;;;;;:67;;;;;;;;;;;;:::i;:::-;;4184:64;4205:17;4223:1;4205:20;;;;;;;;:::i;:::-;;;;;;;:29;;;4236:11;4184:20;:64::i;:::-;4409:118;;;;;;;;4460:14;4409:118;;;;4501:11;4409:118;;;;;4345:17;4363;4381:1;4363:20;;;;;;;;:::i;:::-;;;;;;;:29;;;4345:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4345:61:4;;;;;;;;;;:182;;;;;;;;;;;;;-1:-1:-1;;4345:182:4;;;;;;;;;;-1:-1:-1;3244:3:4;;-1:-1:-1;3244:3:4;;-1:-1:-1;3244:3:4;;:::i;:::-;;;;3197:1341;;;-1:-1:-1;4690:12:4;;4623:15;;4601:19;;4676:26;;4623:15;4676:26;:::i;:::-;4648:54;-1:-1:-1;4712:26:4;4758:27;994:9;4758:11;:27;:::i;:::-;4741:45;;994:9;4741:45;:::i;:::-;4712:74;;994:9;4801:17;:34;;:72;;;;;994:9;4839:18;:34;4801:72;4797:220;;;4889:20;:18;:20::i;:::-;4938:32;4952:18;4938:11;:32;:::i;:::-;4923:12;:47;4797:220;3063:1960;;;;2949:2074;;;:::o;829:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6226:207::-;6286:4;6390:14;;:36;;-1:-1:-1;;;6390:36:4;;-1:-1:-1;;;;;7020:32:7;;;6390:36:4;;;7002:51:7;6390:14:4;;;;:26;;6975:18:7;;6390:36:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8004:1594::-;8078:7;8187:27;8217:21;8239:8;8217:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8187:61;;;;;;;;;;;;;;;8217:31;8187:61;;;8217:31;8187:61;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8187:61:4;;;;;;;;;;;;;;;;;;;;;;;8258:25;8313:3;8287:10;:17;8307:2;8287:22;;;;:::i;:::-;8286:30;;;;:::i;:::-;8542:17;;8258:58;;-1:-1:-1;8354:20:4;;;;;;8526:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;8526:34:4;;;;;;;;;;;;;;;;8494:66;;8618:6;8613:770;8634:10;:17;8630:1;:21;8613:770;;;8672:19;8694:17;8712:8;8694:27;;;;;;:::i;:::-;;;;;;;;;;;;;:42;8722:10;8733:1;8722:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8694:42:4;-1:-1:-1;;;;;8694:42:4;;;;;;;;;;;;:57;;;8672:79;;8765:10;8803:6;8798:239;8819:10;:17;8815:1;:21;8798:239;;;8887:11;8865:10;8876:1;8865:13;;;;;;;;:::i;:::-;;;;;;;:18;;;:33;8861:162;;8922:10;8933:1;8922:13;;;;;;;;:::i;:::-;;;;;;;:19;;:21;;;;;;;;:::i;:::-;;;-1:-1:-1;8973:4:4;;-1:-1:-1;8999:5:4;;8861:162;8838:3;;;;:::i;:::-;;;;8798:239;;;;9056:5;9051:101;;9097:40;;;;;;;;9114:11;9097:40;;;;9134:1;9097:40;;;9081:10;9092:1;9081:13;;;;;;;;:::i;:::-;;;;;;:56;;;;9051:101;9241:12;9219:10;9230:1;9219:13;;;;;;;;:::i;:::-;;;;;;;:19;;;:34;9215:158;;;9288:10;9299:1;9288:13;;;;;;;;:::i;:::-;;;;;;;:19;;;9273:34;;9340:10;9351:1;9340:13;;;;;;;;:::i;:::-;;;;;;;:18;;;9325:33;;9215:158;8658:725;;8653:3;;;;;:::i;:::-;;;;8613:770;;;;9480:17;9464:12;:33;9460:83;;-1:-1:-1;9520:12:4;;8004:1594;-1:-1:-1;;;;;8004:1594:4:o;9460:83::-;-1:-1:-1;9568:1:4;;8004:1594;-1:-1:-1;;;;;;8004:1594:4:o;7363:636::-;7483:26;7512:32;;;:16;:32;;;;;;;;7483:61;;;;;;;;;;;;;;;;;;;7512:32;;7483:61;:26;;:61;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7554:32;7589:42;7620:10;7589:30;:42::i;:::-;7554:77;;7642:18;7663:21;:19;:21::i;:::-;7642:42;;7771:6;7766:227;7787:15;:22;7783:1;:26;7766:227;;;7864:1;-1:-1:-1;;;;;7834:32:4;:15;7850:1;7834:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7834:32:4;;7830:153;;7913:12;;7937:18;;-1:-1:-1;;;;;7913:12:4;;;;:23;;7937:15;;7953:1;;7937:18;;;;;;:::i;:::-;;;;;;;7957:10;7913:55;;;;;;;;;;;;;;;-1:-1:-1;;;;;15449:32:7;;;;15431:51;;15513:2;15498:18;;15491:34;15419:2;15404:18;;15257:274;7913:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7830:153;7811:3;;;;:::i;:::-;;;;7766:227;;;;7418:581;;;7363:636;:::o;6439:452::-;6485:25;6513:14;;;;;;;;;-1:-1:-1;;;;;6513:14:4;-1:-1:-1;;;;;6513:30:4;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6513:32:4;;;;;;;;;;;;:::i;:::-;6485:60;;6560:6;6555:330;6576:9;:16;6572:1;:20;6555:330;;;6613:22;6638:9;6648:1;6638:12;;;;;;;;:::i;:::-;;;;;;;6613:37;;6664:27;6694:21;6716:8;6694:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6664:61;;;;;;;;;;;;;;;6694:31;6664:61;;;6694:31;6664:61;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6664:61:4;;;;;;;;;;;;;;;;;;;;;;;6744:6;6739:136;6760:10;:17;6756:1;:21;6739:136;;;6855:5;6802:17;6820:8;6802:27;;;;;;:::i;:::-;;;;;;;;;;;;;:42;6830:10;6841:1;6830:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;6802:42:4;;;;;;;;;;;-1:-1:-1;6802:42:4;:50;;:58;;-1:-1:-1;;6802:58:4;;;;;;;;;;6779:3;;;;:::i;:::-;;;;6739:136;;;;6599:286;;6594:3;;;;;:::i;:::-;;;;6555:330;;;;6475:416;6439:452::o;2484:459::-;2575:20;2618:6;2613:221;2634:21;2656:8;2634:31;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;2630:42;;2613:221;;;2735:9;-1:-1:-1;;;;;2697:47:4;:21;2719:8;2697:31;;;;;;:::i;:::-;;;;;;;;;;;;;2729:1;2697:34;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2697:34:4;:47;2693:131;;2782:4;2764:22;;2804:5;;2693:131;2674:3;;;;:::i;:::-;;;;2613:221;;;;2848:15;2843:94;;2879:21;2901:8;2879:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;:47;;;;;;;-1:-1:-1;2879:47:4;;;;;;;;;-1:-1:-1;;;;;;2879:47:4;-1:-1:-1;;;;;2879:47:4;;;;;2843:94;2565:378;2484:459;;:::o;2099:379::-;2152:7;2171:22;2214:12;;2196:15;:30;;;;:::i;:::-;2171:55;;1110:10;2241:14;:30;2237:132;;;-1:-1:-1;1110:10:4;2237:132;2386:34;1188:16;2386:14;:34;:::i;:::-;2379:41;;;2099:379;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:127:7;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:257;400:4;394:11;;;432:17;;479:18;464:34;;500:22;;;461:62;458:88;;;526:18;;:::i;:::-;562:4;555:24;328:257;:::o;590:275::-;661:2;655:9;726:2;707:13;;-1:-1:-1;;703:27:7;691:40;;761:18;746:34;;782:22;;;743:62;740:88;;;808:18;;:::i;:::-;844:2;837:22;590:275;;-1:-1:-1;590:275:7:o;870:182::-;929:4;962:18;954:6;951:30;948:56;;;984:18;;:::i;:::-;-1:-1:-1;1029:1:7;1025:14;1041:4;1021:25;;870:182::o;1057:187::-;1106:4;1139:18;1131:6;1128:30;1125:56;;;1161:18;;:::i;:::-;-1:-1:-1;1227:2:7;1206:15;-1:-1:-1;;1202:29:7;1233:4;1198:40;;1057:187::o;1249:464::-;1292:5;1345:3;1338:4;1330:6;1326:17;1322:27;1312:55;;1363:1;1360;1353:12;1312:55;1399:6;1386:20;1430:49;1446:32;1475:2;1446:32;:::i;:::-;1430:49;:::i;:::-;1504:2;1495:7;1488:19;1550:3;1543:4;1538:2;1530:6;1526:15;1522:26;1519:35;1516:55;;;1567:1;1564;1557:12;1516:55;1632:2;1625:4;1617:6;1613:17;1606:4;1597:7;1593:18;1580:55;1680:1;1655:16;;;1673:4;1651:27;1644:38;;;;1659:7;1249:464;-1:-1:-1;;;1249:464:7:o;1718:887::-;1771:5;1824:3;1817:4;1809:6;1805:17;1801:27;1791:55;;1842:1;1839;1832:12;1791:55;1878:6;1865:20;1904:4;1928:59;1944:42;1983:2;1944:42;:::i;1928:59::-;2021:15;;;2107:1;2103:10;;;;2091:23;;2087:32;;;2052:12;;;;2131:15;;;2128:35;;;2159:1;2156;2149:12;2128:35;2195:2;2187:6;2183:15;2207:369;2223:6;2218:3;2215:15;2207:369;;;2309:3;2296:17;2345:18;2332:11;2329:35;2326:125;;;2405:1;2434:2;2430;2423:14;2326:125;2476:57;2529:3;2524:2;2510:11;2502:6;2498:24;2494:33;2476:57;:::i;:::-;2464:70;;-1:-1:-1;2554:12:7;;;;2240;;2207:369;;;-1:-1:-1;2594:5:7;1718:887;-1:-1:-1;;;;;;1718:887:7:o;2610:357::-;2704:6;2757:2;2745:9;2736:7;2732:23;2728:32;2725:52;;;2773:1;2770;2763:12;2725:52;2813:9;2800:23;2846:18;2838:6;2835:30;2832:50;;;2878:1;2875;2868:12;2832:50;2901:60;2953:7;2944:6;2933:9;2929:22;2901:60;:::i;:::-;2891:70;2610:357;-1:-1:-1;;;;2610:357:7:o;2972:658::-;3143:2;3195:21;;;3265:13;;3168:18;;;3287:22;;;3114:4;;3143:2;3366:15;;;;3340:2;3325:18;;;3114:4;3409:195;3423:6;3420:1;3417:13;3409:195;;;3488:13;;-1:-1:-1;;;;;3484:39:7;3472:52;;3579:15;;;;3544:12;;;;3520:1;3438:9;3409:195;;;-1:-1:-1;3621:3:7;;2972:658;-1:-1:-1;;;;;;2972:658:7:o;3635:131::-;-1:-1:-1;;;;;3710:31:7;;3700:42;;3690:70;;3756:1;3753;3746:12;3771:134;3839:20;;3868:31;3839:20;3868:31;:::i;:::-;3771:134;;;:::o;3910:457::-;3988:6;3996;4049:2;4037:9;4028:7;4024:23;4020:32;4017:52;;;4065:1;4062;4055:12;4017:52;4105:9;4092:23;4138:18;4130:6;4127:30;4124:50;;;4170:1;4167;4160:12;4124:50;4193;4235:7;4226:6;4215:9;4211:22;4193:50;:::i;:::-;4183:60;;;4293:2;4282:9;4278:18;4265:32;4306:31;4331:5;4306:31;:::i;:::-;4356:5;4346:15;;;3910:457;;;;;:::o;4635:118::-;4721:5;4714:13;4707:21;4700:5;4697:32;4687:60;;4743:1;4740;4733:12;4758:128;4823:20;;4852:28;4823:20;4852:28;:::i;4891:1943::-;5021:6;5029;5037;5090:2;5078:9;5069:7;5065:23;5061:32;5058:52;;;5106:1;5103;5096:12;5058:52;5146:9;5133:23;5175:18;5216:2;5208:6;5205:14;5202:34;;;5232:1;5229;5222:12;5202:34;5270:6;5259:9;5255:22;5245:32;;5315:7;5308:4;5304:2;5300:13;5296:27;5286:55;;5337:1;5334;5327:12;5286:55;5373:2;5360:16;5395:4;5419:59;5435:42;5474:2;5435:42;:::i;5419:59::-;5512:15;;;5594:1;5590:10;;;;5582:19;;5578:28;;;5543:12;;;;5618:19;;;5615:39;;;5650:1;5647;5640:12;5615:39;5682:2;5678;5674:11;5694:997;5710:6;5705:3;5702:15;5694:997;;;5796:3;5783:17;5832:2;5819:11;5816:19;5813:39;;;5848:1;5845;5838:12;5813:39;5875:20;;5947:4;5919:16;;;-1:-1:-1;;5915:30:7;5911:41;5908:131;;;5993:1;6022:2;6018;6011:14;5908:131;6065:22;;:::i;:::-;6137:2;6133;6129:11;6116:25;6170:2;6160:8;6157:16;6154:106;;;6214:1;6243:2;6239;6232:14;6154:106;6287:54;6333:7;6328:2;6317:8;6313:2;6309:17;6305:26;6287:54;:::i;:::-;6280:5;6273:69;;6392:4;6388:2;6384:13;6371:27;6427:2;6417:8;6414:16;6411:106;;;6471:1;6500:2;6496;6489:14;6411:106;6553:64;6609:7;6604:2;6593:8;6589:2;6585:17;6581:26;6553:64;:::i;:::-;6537:14;;;6530:88;-1:-1:-1;6631:18:7;;-1:-1:-1;6669:12:7;;;;5727;;5694:997;;;-1:-1:-1;6710:5:7;-1:-1:-1;6734:38:7;;-1:-1:-1;6753:18:7;;;6734:38;:::i;:::-;6724:48;;;;;;6791:37;6822:4;6811:9;6807:20;6791:37;:::i;:::-;6781:47;;4891:1943;;;;;:::o;7064:247::-;7123:6;7176:2;7164:9;7155:7;7151:23;7147:32;7144:52;;;7192:1;7189;7182:12;7144:52;7231:9;7218:23;7250:31;7275:5;7250:31;:::i;:::-;7300:5;7064:247;-1:-1:-1;;;7064:247:7:o;7316:248::-;7384:6;7392;7445:2;7433:9;7424:7;7420:23;7416:32;7413:52;;;7461:1;7458;7451:12;7413:52;-1:-1:-1;;7484:23:7;;;7554:2;7539:18;;;7526:32;;-1:-1:-1;7316:248:7:o;7569:250::-;7654:1;7664:113;7678:6;7675:1;7672:13;7664:113;;;7754:11;;;7748:18;7735:11;;;7728:39;7700:2;7693:10;7664:113;;;-1:-1:-1;;7811:1:7;7793:16;;7786:27;7569:250::o;7824:271::-;7866:3;7904:5;7898:12;7931:6;7926:3;7919:19;7947:76;8016:6;8009:4;8004:3;8000:14;7993:4;7986:5;7982:16;7947:76;:::i;:::-;8077:2;8056:15;-1:-1:-1;;8052:29:7;8043:39;;;;8084:4;8039:50;;7824:271;-1:-1:-1;;7824:271:7:o;8100:220::-;8249:2;8238:9;8231:21;8212:4;8269:45;8310:2;8299:9;8295:18;8287:6;8269:45;:::i;8517:876::-;8707:4;8755:2;8744:9;8740:18;8785:2;8774:9;8767:21;8808:6;8843;8837:13;8874:6;8866;8859:22;8912:2;8901:9;8897:18;8890:25;;8974:2;8964:6;8961:1;8957:14;8946:9;8942:30;8938:39;8924:53;;8996:4;9035:2;9027:6;9023:15;9056:1;9066:255;9080:6;9077:1;9074:13;9066:255;;;9173:2;9169:7;9157:9;9149:6;9145:22;9141:36;9136:3;9129:49;9201:40;9234:6;9225;9219:13;9201:40;:::i;:::-;9191:50;-1:-1:-1;9299:12:7;;;;9264:15;;;;9102:1;9095:9;9066:255;;;-1:-1:-1;;9360:18:7;;;;9353:34;;;;9338:6;8517:876;-1:-1:-1;;;;8517:876:7:o;9398:955::-;9493:6;9524:2;9567;9555:9;9546:7;9542:23;9538:32;9535:52;;;9583:1;9580;9573:12;9535:52;9616:9;9610:16;9649:18;9641:6;9638:30;9635:50;;;9681:1;9678;9671:12;9635:50;9704:22;;9757:4;9749:13;;9745:27;-1:-1:-1;9735:55:7;;9786:1;9783;9776:12;9735:55;9815:2;9809:9;9838:59;9854:42;9893:2;9854:42;:::i;9838:59::-;9931:15;;;10013:1;10009:10;;;;10001:19;;9997:28;;;9962:12;;;;10037:19;;;10034:39;;;10069:1;10066;10059:12;10034:39;10093:11;;;;10113:210;10129:6;10124:3;10121:15;10113:210;;;10202:3;10196:10;10219:31;10244:5;10219:31;:::i;:::-;10263:18;;10146:12;;;;10301;;;;10113:210;;;10342:5;9398:955;-1:-1:-1;;;;;;;9398:955:7:o;10358:1639::-;10463:6;10494:2;10537;10525:9;10516:7;10512:23;10508:32;10505:52;;;10553:1;10550;10543:12;10505:52;10586:9;10580:16;10615:18;10656:2;10648:6;10645:14;10642:34;;;10672:1;10669;10662:12;10642:34;10710:6;10699:9;10695:22;10685:32;;10755:7;10748:4;10744:2;10740:13;10736:27;10726:55;;10777:1;10774;10767:12;10726:55;10806:2;10800:9;10829:59;10845:42;10884:2;10845:42;:::i;10829:59::-;10922:15;;;11004:1;11000:10;;;;10992:19;;10988:28;;;10953:12;;;;11028:19;;;11025:39;;;11060:1;11057;11050:12;11025:39;11092:2;11088;11084:11;11104:863;11120:6;11115:3;11112:15;11104:863;;;11199:3;11193:10;11235:2;11222:11;11219:19;11216:109;;;11279:1;11308:2;11304;11297:14;11216:109;11348:20;;11403:2;11395:11;;11391:25;-1:-1:-1;11381:123:7;;11458:1;11487:2;11483;11476:14;11381:123;11541:2;11537;11533:11;11527:18;11568:2;11596:49;11612:32;11641:2;11612:32;:::i;11596:49::-;11672:2;11665:5;11658:17;11716:7;11711:2;11706;11702;11698:11;11694:20;11691:33;11688:126;;;11766:1;11796:3;11791;11784:16;11688:126;11827:67;11891:2;11886;11879:5;11875:14;11870:2;11866;11862:11;11827:67;:::i;:::-;11907:18;;-1:-1:-1;;;11945:12:7;;;;11137;;11104:863;;;-1:-1:-1;11986:5:7;10358:1639;-1:-1:-1;;;;;;;;10358:1639:7:o;12002:127::-;12063:10;12058:3;12054:20;12051:1;12044:31;12094:4;12091:1;12084:15;12118:4;12115:1;12108:15;12134:127;12195:10;12190:3;12186:20;12183:1;12176:31;12226:4;12223:1;12216:15;12250:4;12247:1;12240:15;12266:135;12305:3;12326:17;;;12323:43;;12346:18;;:::i;:::-;-1:-1:-1;12393:1:7;12382:13;;12266:135::o;12811:125::-;12876:9;;;12897:10;;;12894:36;;;12910:18;;:::i;12941:494::-;13118:3;13156:6;13150:13;13172:66;13231:6;13226:3;13219:4;13211:6;13207:17;13172:66;:::i;:::-;13301:13;;13260:16;;;;13323:70;13301:13;13260:16;13370:4;13358:17;;13323:70;:::i;:::-;13409:20;;12941:494;-1:-1:-1;;;;12941:494:7:o;13440:289::-;13571:3;13609:6;13603:13;13625:66;13684:6;13679:3;13672:4;13664:6;13660:17;13625:66;:::i;:::-;13707:16;;;;;13440:289;-1:-1:-1;;13440:289:7:o;13734:128::-;13801:9;;;13822:11;;;13819:37;;;13836:18;;:::i;13867:127::-;13928:10;13923:3;13919:20;13916:1;13909:31;13959:4;13956:1;13949:15;13983:4;13980:1;13973:15;13999:112;14031:1;14057;14047:35;;14062:18;;:::i;:::-;-1:-1:-1;14096:9:7;;13999:112::o;14116:380::-;14195:1;14191:12;;;;14238;;;14259:61;;14313:4;14305:6;14301:17;14291:27;;14259:61;14366:2;14358:6;14355:14;14335:18;14332:38;14329:161;;14412:10;14407:3;14403:20;14400:1;14393:31;14447:4;14444:1;14437:15;14475:4;14472:1;14465:15;14329:161;;14116:380;;;:::o;14709:245::-;14776:6;14829:2;14817:9;14808:7;14804:23;14800:32;14797:52;;;14845:1;14842;14835:12;14797:52;14877:9;14871:16;14896:28;14918:5;14896:28;:::i;14959:168::-;15032:9;;;15063;;15080:15;;;15074:22;;15060:37;15050:71;;15101:18;;:::i;15132:120::-;15172:1;15198;15188:35;;15203:18;;:::i;:::-;-1:-1:-1;15237:9:7;;15132:120::o;15662:545::-;15764:2;15759:3;15756:11;15753:448;;;15800:1;15825:5;15821:2;15814:17;15870:4;15866:2;15856:19;15940:2;15928:10;15924:19;15921:1;15917:27;15911:4;15907:38;15976:4;15964:10;15961:20;15958:47;;;-1:-1:-1;15999:4:7;15958:47;16054:2;16049:3;16045:12;16042:1;16038:20;16032:4;16028:31;16018:41;;16109:82;16127:2;16120:5;16117:13;16109:82;;;16172:17;;;16153:1;16142:13;16109:82;;;16113:3;;;15662:545;;;:::o;16383:1352::-;16509:3;16503:10;16536:18;16528:6;16525:30;16522:56;;;16558:18;;:::i;:::-;16587:97;16677:6;16637:38;16669:4;16663:11;16637:38;:::i;:::-;16631:4;16587:97;:::i;:::-;16739:4;;16803:2;16792:14;;16820:1;16815:663;;;;17522:1;17539:6;17536:89;;;-1:-1:-1;17591:19:7;;;17585:26;17536:89;-1:-1:-1;;16340:1:7;16336:11;;;16332:24;16328:29;16318:40;16364:1;16360:11;;;16315:57;17638:81;;16785:944;;16815:663;15609:1;15602:14;;;15646:4;15633:18;;-1:-1:-1;;16851:20:7;;;16969:236;16983:7;16980:1;16977:14;16969:236;;;17072:19;;;17066:26;17051:42;;17164:27;;;;17132:1;17120:14;;;;16999:19;;16969:236;;;16973:3;17233:6;17224:7;17221:19;17218:201;;;17294:19;;;17288:26;-1:-1:-1;;17377:1:7;17373:14;;;17389:3;17369:24;17365:37;17361:42;17346:58;17331:74;;17218:201;-1:-1:-1;;;;;17465:1:7;17449:14;;;17445:22;17432:36;;-1:-1:-1;16383:1352:7:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    577,
    9929
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D463520 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE15336EF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE15336EF EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xF59CC978 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xF785EB2A EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xFACD743B EQ PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D463520 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xB8F41A3C EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xD0B6B6DB EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E9AD446 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x3592696D EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x5C9C3ED2 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x64C8C5A7 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x6F1AAB4A EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x84E7E3D3 EQ PUSH2 0x182 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x1164 JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0x1213 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x3 DUP3 MSTORE SWAP3 DUP3 ADD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 KECCAK256 SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0xED JUMP JUMPDEST PUSH2 0x178 PUSH2 0x2AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH1 0x40 DUP2 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH2 0xE3 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x127E JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1BA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x258 DUP2 JUMP JUMPDEST PUSH2 0x1FF PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x13CE JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x85D8F13D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85D8F13D SWAP2 PUSH2 0x263 SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2A8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x14BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3DC0FF7D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x302 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x32A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1556 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x34C JUMPI PUSH2 0x34C PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x361 DUP3 PUSH2 0x783 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x372 JUMPI PUSH2 0x372 DUP2 PUSH2 0xA3E JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x37F SWAP1 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x32F JUMP JUMPDEST POP PUSH2 0x1E0 PUSH2 0xC23 JUMP JUMPDEST PUSH2 0x399 DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74206120726567697374657265642076616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x416 JUMPI PUSH2 0x416 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD MLOAD SWAP1 POP PUSH1 0x40 DUP2 DUP5 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x1688 JUMP JUMPDEST GT ISZERO PUSH2 0x43F JUMPI POP PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x449 DUP2 DUP5 PUSH2 0x1688 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 PUSH1 0x0 JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x462 JUMPI PUSH2 0x462 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x4E3 JUMPI DUP2 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x489 JUMPI PUSH2 0x489 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A6 JUMPI PUSH2 0x4A6 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BF SWAP3 SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP DUP1 DUP1 PUSH2 0x4DB SWAP1 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x450 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 DUP8 MLOAD DUP9 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x4FF JUMPI PUSH2 0x4FF PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x531 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST POP PUSH2 0x559 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x547 JUMPI PUSH2 0x547 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP9 PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP8 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x3 DUP10 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x584 JUMPI PUSH2 0x584 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP DUP3 SWAP2 POP PUSH2 0x5EB SWAP1 POP DUP2 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3F9 JUMP JUMPDEST POP PUSH1 0x5 SLOAD TIMESTAMP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x606 SWAP1 DUP4 PUSH2 0x16E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x616 PUSH2 0x12C DUP5 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x622 SWAP1 PUSH2 0x12C PUSH2 0x16E6 JUMP JUMPDEST SWAP1 POP PUSH2 0x12C DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x637 JUMPI POP PUSH2 0x12C DUP2 LT JUMPDEST ISZERO PUSH2 0x652 JUMPI PUSH2 0x644 PUSH2 0x2AE JUMP JUMPDEST PUSH2 0x64E DUP2 DUP5 PUSH2 0x16E6 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0x693 SWAP1 PUSH2 0x1723 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BF SWAP1 PUSH2 0x1723 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xFACD743B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xFACD743B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x175D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP4 MUL DUP6 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 DUP5 MSTORE SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D4 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 MLOAD PUSH1 0x3C PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x839 JUMPI PUSH2 0x839 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x87E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x857 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xA1E JUMPI PUSH1 0x0 PUSH1 0x3 DUP10 PUSH1 0x40 MLOAD PUSH2 0x89F SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8C1 JUMPI PUSH2 0x8C1 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP3 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x90F JUMPI PUSH2 0x90F PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SUB PUSH2 0x957 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x932 JUMPI PUSH2 0x932 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH2 0x94B SWAP1 PUSH2 0x166F JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x1 SWAP2 POP PUSH2 0x969 JUMP JUMPDEST DUP1 PUSH2 0x961 DUP2 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8F3 JUMP JUMPDEST POP DUP1 PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x997 JUMPI PUSH2 0x997 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP5 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9B6 JUMPI PUSH2 0x9B6 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0xA09 JUMPI DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9DA JUMPI PUSH2 0x9DA PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP5 POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9FA JUMPI PUSH2 0x9FA PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP6 POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xA16 SWAP1 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x884 JUMP JUMPDEST POP DUP4 DUP3 LT PUSH2 0xA31 JUMPI POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB16 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xA89 SWAP1 PUSH2 0x1723 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAB5 SWAP1 PUSH2 0x1723 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB02 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB02 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAE5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA6A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xB27 DUP3 PUSH2 0x22F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB33 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xC1C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB5E JUMPI PUSH2 0xB5E PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC0A JUMPI PUSH1 0x1 SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF0DDA65C SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xB9D JUMPI PUSH2 0xB9D PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD7 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 PUSH2 0xC14 DUP2 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB38 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3DC0FF7D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC9F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1556 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xDDD JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCC1 JUMPI PUSH2 0xCC1 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP4 MUL DUP6 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 DUP5 MSTORE SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD39 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x0 PUSH1 0x3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD5E SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD80 JUMPI PUSH2 0xD80 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xDBF DUP2 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD43 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xDD5 SWAP1 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCA4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDF5 SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xE7A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE26 SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE45 JUMPI PUSH2 0xE45 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE68 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0xE7A JUMP JUMPDEST DUP1 PUSH2 0xE72 DUP2 PUSH2 0x166F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDE5 JUMP JUMPDEST POP DUP1 PUSH2 0xECB JUMPI PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST SWAP1 POP PUSH2 0x258 DUP2 GT ISZERO PUSH2 0xEF2 JUMPI POP PUSH2 0x258 JUMPDEST PUSH2 0xF04 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xF50 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF50 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0xF40 SWAP1 DUP3 PUSH2 0x17F3 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF2A JUMP JUMPDEST POP PUSH2 0xF5C SWAP3 SWAP2 POP PUSH2 0xF60 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xF5C JUMPI PUSH1 0x0 PUSH2 0xF74 DUP3 DUP3 PUSH2 0xF7D JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xF60 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0xF89 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xF99 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xF5C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFB3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1000 JUMPI PUSH2 0x1000 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x102F JUMPI PUSH2 0x102F PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1051 PUSH2 0xFC7 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1075 JUMPI PUSH2 0x1075 PUSH2 0xFC7 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1094 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10A7 PUSH2 0x10A2 DUP3 PUSH2 0x105B JUMP JUMPDEST PUSH2 0x1006 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x10BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x10FA PUSH2 0x10A2 DUP4 PUSH2 0x1037 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1159 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x113D JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x114B DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x1083 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x111D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x118D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1199 DUP5 DUP3 DUP6 ADD PUSH2 0x10D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11E2 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x11BD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x120E DUP2 PUSH2 0x11EE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x123D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1249 DUP6 DUP3 DUP7 ADD PUSH2 0x1083 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x125A DUP2 PUSH2 0x11EE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x120E DUP2 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x12CF PUSH2 0x10A2 DUP4 PUSH2 0x1037 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x12EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x137F JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x1309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x40 DUP2 DUP15 SUB PUSH1 0x1F NOT ADD SLT ISZERO PUSH2 0x1320 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1328 PUSH2 0xFDD JUMP JUMPDEST DUP6 DUP3 ADD CALLDATALOAD DUP9 DUP2 GT ISZERO PUSH2 0x133A JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1348 DUP16 DUP9 DUP4 DUP7 ADD ADD PUSH2 0x1083 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP9 DUP2 GT ISZERO PUSH2 0x135E JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x136C DUP16 DUP9 DUP4 DUP7 ADD ADD PUSH2 0x10D9 JUMP JUMPDEST DUP3 DUP9 ADD MSTORE POP DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x12F2 JUMP JUMPDEST POP SWAP8 POP PUSH2 0x138F SWAP1 POP DUP9 DUP3 ADD PUSH2 0x1203 JUMP JUMPDEST SWAP6 POP POP POP POP POP PUSH2 0x13A1 PUSH1 0x40 DUP6 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13C7 DUP2 PUSH2 0x11EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x140B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13F3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x142C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13C7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP1 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14AA JUMPI PUSH1 0x5F NOT DUP9 DUP8 SUB ADD DUP6 MSTORE PUSH2 0x1498 DUP7 DUP4 MLOAD PUSH2 0x1414 JUMP JUMPDEST SWAP6 POP SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x147C JUMP JUMPDEST POP POP SWAP5 SWAP1 SWAP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x14F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1505 PUSH2 0x10A2 DUP3 PUSH2 0x1037 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x154B JUMPI DUP4 MLOAD PUSH2 0x153C DUP2 PUSH2 0x11EE JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1529 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15A3 PUSH2 0x10A2 DUP3 PUSH2 0x1037 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x15C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1636 JUMPI DUP1 MLOAD DUP6 DUP2 GT ISZERO PUSH2 0x15DE JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP7 ADD PUSH1 0x3F DUP2 ADD DUP12 SGT PUSH2 0x15F0 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 DUP2 ADD MLOAD PUSH1 0x40 PUSH2 0x1602 PUSH2 0x10A2 DUP4 PUSH2 0x105B JUMP JUMPDEST DUP3 DUP2 MSTORE DUP14 DUP3 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0x1617 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1626 DUP4 DUP13 DUP4 ADD DUP5 DUP8 ADD PUSH2 0x13F0 JUMP JUMPDEST DUP7 MSTORE POP POP POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x15C6 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1681 JUMPI PUSH2 0x1681 PUSH2 0x1659 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x2A8 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x16AD DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x13F0 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x16C1 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x13F0 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x16DC DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x13F0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x2A8 PUSH2 0x1659 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x171E JUMPI PUSH2 0x171E PUSH2 0x16F9 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1737 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1757 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x176F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x13C7 DUP2 PUSH2 0x1265 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2A8 JUMPI PUSH2 0x2A8 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x17A0 JUMPI PUSH2 0x17A0 PUSH2 0x16F9 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xECB JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x17CC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17EB JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17D8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x180D JUMPI PUSH2 0x180D PUSH2 0xFC7 JUMP JUMPDEST PUSH2 0x1821 DUP2 PUSH2 0x181B DUP5 SLOAD PUSH2 0x1723 JUMP JUMPDEST DUP5 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1856 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x183E JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1885 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1866 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x18A3 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP14 0xE1 MSTORE GASLIMIT 0xD0 0xEC 0xAA SWAP8 CALLCODE SWAP1 0xAE CALLDATASIZE STATICCALL 0xFC 0xD6 0xCE 0xAF 0xC6 0xCC 0xB1 SWAP2 0x1E EQ SWAP1 STATICCALL DUP2 0xBD 0xEC 0xC2 SWAP1 0x4F PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        577,
        9929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x9D463520"
    },
    "38": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE15336EF"
    },
    "49": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE15336EF"
    },
    "60": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2"
    },
    "64": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF59CC978"
    },
    "71": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E3"
    },
    "75": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF785EB2A"
    },
    "82": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EC"
    },
    "86": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFACD743B"
    },
    "93": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20C"
    },
    "97": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "101": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "REVERT",
      "path": "4"
    },
    "102": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "103": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "104": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x9D463520"
    },
    "109": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18B"
    },
    "113": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB8F41A3C"
    },
    "120": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x194"
    },
    "124": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xD0B6B6DB"
    },
    "131": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A7"
    },
    "135": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "139": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "REVERT",
      "path": "4"
    },
    "140": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "141": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "142": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1E9AD446"
    },
    "147": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "152": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "153": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3592696D"
    },
    "158": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF6"
    },
    "162": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "163": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "164": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5C9C3ED2"
    },
    "169": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116"
    },
    "173": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x64C8C5A7"
    },
    "180": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x170"
    },
    "184": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6F1AAB4A"
    },
    "191": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17A"
    },
    "195": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x84E7E3D3"
    },
    "202": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x182"
    },
    "206": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        577,
        9929
      ],
      "op": "REVERT",
      "path": "4"
    },
    "212": {
      "offset": [
        1144,
        1204
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "213": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE3"
    },
    "216": {
      "offset": [
        1188,
        1204
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0xDE0B6B3A7640000"
    },
    "225": {
      "offset": [
        1144,
        1204
      ],
      "op": "DUP2",
      "path": "4"
    },
    "226": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "JUMP",
      "path": "4"
    },
    "227": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "228": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "230": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "231": {
      "op": "SWAP1"
    },
    "232": {
      "op": "DUP2"
    },
    "233": {
      "op": "MSTORE"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "236": {
      "op": "ADD"
    },
    "237": {
      "offset": [
        1144,
        1204
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "238": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "240": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "241": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "DUP1",
      "path": "4"
    },
    "242": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "243": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "SUB",
      "path": "4"
    },
    "244": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "245": {
      "fn": null,
      "offset": [
        1144,
        1204
      ],
      "op": "RETURN",
      "path": "4"
    },
    "246": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "247": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x109"
    },
    "250": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x104"
    },
    "253": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "254": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "256": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1164"
    },
    "259": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        9689,
        9893
      ],
      "op": "JUMP",
      "path": "4"
    },
    "260": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "261": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22F"
    },
    "264": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        9689,
        9893
      ],
      "op": "JUMP",
      "path": "4"
    },
    "265": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "266": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "268": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "269": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED"
    },
    "272": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "273": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "274": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11A1"
    },
    "277": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        9689,
        9893
      ],
      "op": "JUMP",
      "path": "4"
    },
    "278": {
      "offset": [
        742,
        822
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "279": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15B"
    },
    "282": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x124"
    },
    "285": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "286": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "288": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1213"
    },
    "291": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        742,
        822
      ],
      "op": "JUMP",
      "path": "4"
    },
    "292": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "293": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP2",
      "path": "4"
    },
    "294": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "295": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "297": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP2",
      "path": "4"
    },
    "298": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP5",
      "path": "4"
    },
    "299": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "ADD",
      "path": "4"
    },
    "300": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP2",
      "path": "4"
    },
    "301": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "ADD",
      "path": "4"
    },
    "302": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP1",
      "path": "4"
    },
    "303": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "304": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "306": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP3",
      "path": "4"
    },
    "307": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "308": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "309": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP3",
      "path": "4"
    },
    "310": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "ADD",
      "path": "4"
    },
    "311": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "312": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP3",
      "path": "4"
    },
    "313": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "ADD",
      "path": "4"
    },
    "314": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "315": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "316": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "317": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "318": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "319": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "320": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "321": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "322": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "323": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "324": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "327": {
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "328": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP2",
      "path": "4"
    },
    "329": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "330": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "332": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "333": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "334": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP1",
      "path": "4"
    },
    "335": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "336": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "338": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "339": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "340": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "ADD",
      "path": "4"
    },
    "341": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "342": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "344": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "AND",
      "path": "4"
    },
    "345": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP3",
      "path": "4"
    },
    "346": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "JUMP",
      "path": "4"
    },
    "347": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "348": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "350": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "DUP1",
      "path": "4"
    },
    "351": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        742,
        822
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "352": {
      "op": "SWAP3"
    },
    "353": {
      "op": "DUP4"
    },
    "354": {
      "op": "MSTORE"
    },
    "355": {
      "op": "SWAP1"
    },
    "356": {
      "op": "ISZERO"
    },
    "357": {
      "op": "ISZERO"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "360": {
      "op": "DUP4"
    },
    "361": {
      "op": "ADD"
    },
    "362": {
      "op": "MSTORE"
    },
    "363": {
      "op": "ADD"
    },
    "364": {
      "offset": [
        742,
        822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED"
    },
    "367": {
      "op": "JUMP"
    },
    "368": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        6937,
        7358
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "369": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        6937,
        7358
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x178"
    },
    "372": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        6937,
        7358
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AE"
    },
    "375": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        6937,
        7358
      ],
      "op": "JUMP",
      "path": "4"
    },
    "376": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        6937,
        7358
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "377": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        6937,
        7358
      ],
      "op": "STOP",
      "path": "4"
    },
    "378": {
      "offset": [
        1009,
        1064
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "379": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        1009,
        1064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE3"
    },
    "382": {
      "offset": [
        1062,
        1064
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "384": {
      "offset": [
        1009,
        1064
      ],
      "op": "DUP2",
      "path": "4"
    },
    "385": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        1009,
        1064
      ],
      "op": "JUMP",
      "path": "4"
    },
    "386": {
      "offset": [
        954,
        1003
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "387": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        954,
        1003
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE3"
    },
    "390": {
      "offset": [
        994,
        1003
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12C"
    },
    "393": {
      "offset": [
        954,
        1003
      ],
      "op": "DUP2",
      "path": "4"
    },
    "394": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        954,
        1003
      ],
      "op": "JUMP",
      "path": "4"
    },
    "395": {
      "offset": [
        921,
        948
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "396": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        921,
        948
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE3"
    },
    "399": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        921,
        948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "401": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        921,
        948
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "402": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        921,
        948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "403": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        921,
        948
      ],
      "op": "JUMP",
      "path": "4"
    },
    "404": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "405": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x178"
    },
    "408": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A2"
    },
    "411": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "412": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "414": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x127E"
    },
    "417": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        2949,
        5023
      ],
      "op": "JUMP",
      "path": "4"
    },
    "418": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "419": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x390"
    },
    "422": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        2949,
        5023
      ],
      "op": "JUMP",
      "path": "4"
    },
    "423": {
      "offset": [
        643,
        671
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "424": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "426": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "427": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BA"
    },
    "430": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "437": {
      "op": "SHL"
    },
    "438": {
      "op": "SUB"
    },
    "439": {
      "offset": [
        643,
        671
      ],
      "op": "AND",
      "path": "4"
    },
    "440": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "DUP2",
      "path": "4"
    },
    "441": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "JUMP",
      "path": "4"
    },
    "442": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "443": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "445": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        643,
        671
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "452": {
      "op": "SHL"
    },
    "453": {
      "op": "SUB"
    },
    "454": {
      "op": "SWAP1"
    },
    "455": {
      "op": "SWAP2"
    },
    "456": {
      "op": "AND"
    },
    "457": {
      "op": "DUP2"
    },
    "458": {
      "op": "MSTORE"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "461": {
      "op": "ADD"
    },
    "462": {
      "offset": [
        643,
        671
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED"
    },
    "465": {
      "op": "JUMP"
    },
    "466": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        1954,
        2094
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "467": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        1954,
        2094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x178"
    },
    "470": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        1954,
        2094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E0"
    },
    "473": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        1954,
        2094
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "474": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        1954,
        2094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "476": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        1954,
        2094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13AA"
    },
    "479": {
      "fn": "GameValidator.setMintContractAddress",
      "jump": "i",
      "offset": [
        1954,
        2094
      ],
      "op": "JUMP",
      "path": "4"
    },
    "480": {
      "fn": "GameValidator.setMintContractAddress",
      "offset": [
        1954,
        2094
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "481": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        6974,
        7358
      ],
      "op": "POP",
      "path": "4"
    },
    "482": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        6937,
        7358
      ],
      "op": "JUMP",
      "path": "4"
    },
    "483": {
      "offset": [
        1070,
        1120
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "484": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        1070,
        1120
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE3"
    },
    "487": {
      "offset": [
        1110,
        1120
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x258"
    },
    "490": {
      "offset": [
        1070,
        1120
      ],
      "op": "DUP2",
      "path": "4"
    },
    "491": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        1070,
        1120
      ],
      "op": "JUMP",
      "path": "4"
    },
    "492": {
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "493": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FF"
    },
    "496": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA"
    },
    "499": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "500": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "502": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13CE"
    },
    "505": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "4"
    },
    "506": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "507": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x65B"
    },
    "510": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "4"
    },
    "511": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "512": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "514": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "515": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED"
    },
    "518": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "519": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "520": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1440"
    },
    "523": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "4"
    },
    "524": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "525": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "528": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21A"
    },
    "531": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "532": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "534": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13AA"
    },
    "537": {
      "fn": "GameValidator.isValidator",
      "jump": "i",
      "offset": [
        6226,
        6433
      ],
      "op": "JUMP",
      "path": "4"
    },
    "538": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "539": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x714"
    },
    "542": {
      "fn": "GameValidator.isValidator",
      "jump": "i",
      "offset": [
        6226,
        6433
      ],
      "op": "JUMP",
      "path": "4"
    },
    "543": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "544": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "546": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "547": {
      "op": "SWAP1"
    },
    "548": {
      "op": "ISZERO"
    },
    "549": {
      "op": "ISZERO"
    },
    "550": {
      "op": "DUP2"
    },
    "551": {
      "op": "MSTORE"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "554": {
      "op": "ADD"
    },
    "555": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED"
    },
    "558": {
      "op": "JUMP"
    },
    "559": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "560": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9828
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x0"
    },
    "562": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9828
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "563": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9873,
        9885
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "565": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9873,
        9885
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "566": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "568": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "569": {
      "op": "PUSH4",
      "value": "0x85D8F13D"
    },
    "574": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "576": {
      "op": "SHL"
    },
    "577": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "DUP2",
      "path": "4"
    },
    "578": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "579": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9779,
        9795
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "581": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9779,
        9795
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "588": {
      "op": "SHL"
    },
    "589": {
      "op": "SUB"
    },
    "590": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9828
      ],
      "op": "AND",
      "path": "4"
    },
    "591": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9828
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "592": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9859
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x85D8F13D"
    },
    "597": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9859
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "598": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x263"
    },
    "601": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "602": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9860,
        9871
      ],
      "op": "DUP7",
      "path": "4"
    },
    "603": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9860,
        9871
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "604": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "606": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "ADD",
      "path": "4"
    },
    "607": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1453"
    },
    "610": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        9814,
        9886
      ],
      "op": "JUMP",
      "path": "4"
    },
    "611": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "612": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "614": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "616": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "617": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "DUP1",
      "path": "4"
    },
    "618": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "DUP4",
      "path": "4"
    },
    "619": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "SUB",
      "path": "4"
    },
    "620": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "DUP2",
      "path": "4"
    },
    "621": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "DUP7",
      "path": "4"
    },
    "622": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "GAS",
      "path": "4"
    },
    "623": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "624": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "625": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "DUP1",
      "path": "4"
    },
    "626": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "627": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x280"
    },
    "630": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "631": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "632": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "634": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "DUP1",
      "path": "4"
    },
    "635": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "636": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "637": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "639": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "REVERT",
      "path": "4"
    },
    "640": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "641": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "POP",
      "path": "4"
    },
    "642": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "POP",
      "path": "4"
    },
    "643": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "POP",
      "path": "4"
    },
    "644": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "POP",
      "path": "4"
    },
    "645": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "647": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "648": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "649": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "651": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "DUP3",
      "path": "4"
    },
    "652": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "653": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "655": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "656": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "657": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "DUP2",
      "path": "4"
    },
    "658": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "ADD",
      "path": "4"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "661": {
      "op": "NOT"
    },
    "662": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "AND",
      "path": "4"
    },
    "663": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "DUP3",
      "path": "4"
    },
    "664": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "ADD",
      "path": "4"
    },
    "665": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "667": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "668": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A8"
    },
    "671": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "672": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "673": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "DUP2",
      "path": "4"
    },
    "674": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "ADD",
      "path": "4"
    },
    "675": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "676": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14BC"
    },
    "679": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "i",
      "offset": [
        9814,
        9886
      ],
      "op": "JUMP",
      "path": "4"
    },
    "680": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9814,
        9886
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "681": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9807,
        9886
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "682": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "offset": [
        9689,
        9893
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "683": {
      "op": "POP"
    },
    "684": {
      "op": "POP"
    },
    "685": {
      "fn": "GameValidator.getValidRewardAddressesByNames",
      "jump": "o",
      "offset": [
        9689,
        9893
      ],
      "op": "JUMP",
      "path": "4"
    },
    "686": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        6937,
        7358
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "687": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "689": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7026
      ],
      "op": "DUP1",
      "path": "4"
    },
    "690": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7026
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "692": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7026
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "693": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7026
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "694": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7026
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "695": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7026
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "698": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7026
      ],
      "op": "EXP",
      "path": "4"
    },
    "699": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7026
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "700": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7026
      ],
      "op": "DIV",
      "path": "4"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "707": {
      "op": "SHL"
    },
    "708": {
      "op": "SUB"
    },
    "709": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7026
      ],
      "op": "AND",
      "path": "4"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "716": {
      "op": "SHL"
    },
    "717": {
      "op": "SUB"
    },
    "718": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7042
      ],
      "op": "AND",
      "path": "4"
    },
    "719": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7042
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3DC0FF7D"
    },
    "724": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "726": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "727": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP2",
      "path": "4"
    },
    "728": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "733": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "AND",
      "path": "4"
    },
    "734": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "736": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "SHL",
      "path": "4"
    },
    "737": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP2",
      "path": "4"
    },
    "738": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "739": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "741": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "ADD",
      "path": "4"
    },
    "742": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "744": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "746": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "747": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP1",
      "path": "4"
    },
    "748": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP4",
      "path": "4"
    },
    "749": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "SUB",
      "path": "4"
    },
    "750": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP2",
      "path": "4"
    },
    "751": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP7",
      "path": "4"
    },
    "752": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "GAS",
      "path": "4"
    },
    "753": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "754": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "755": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP1",
      "path": "4"
    },
    "756": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "757": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x302"
    },
    "760": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "761": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "762": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "764": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP1",
      "path": "4"
    },
    "765": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "766": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "767": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "769": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "REVERT",
      "path": "4"
    },
    "770": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "771": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "POP",
      "path": "4"
    },
    "772": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "POP",
      "path": "4"
    },
    "773": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "POP",
      "path": "4"
    },
    "774": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "POP",
      "path": "4"
    },
    "775": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "777": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "778": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "779": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "781": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP3",
      "path": "4"
    },
    "782": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "783": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "785": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "786": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "787": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP2",
      "path": "4"
    },
    "788": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "ADD",
      "path": "4"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "791": {
      "op": "NOT"
    },
    "792": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "AND",
      "path": "4"
    },
    "793": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP3",
      "path": "4"
    },
    "794": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "ADD",
      "path": "4"
    },
    "795": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "797": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "798": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32A"
    },
    "801": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "802": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "803": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "DUP2",
      "path": "4"
    },
    "804": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "ADD",
      "path": "4"
    },
    "805": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "806": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1556"
    },
    "809": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7012,
        7044
      ],
      "op": "JUMP",
      "path": "4"
    },
    "810": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7012,
        7044
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "811": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        6984,
        7044
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "812": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        6984,
        7044
      ],
      "op": "POP",
      "path": "4"
    },
    "813": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7059,
        7065
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "815": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7054,
        7324
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "816": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7075,
        7084
      ],
      "op": "DUP2",
      "path": "4"
    },
    "817": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7075,
        7091
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "818": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7071,
        7072
      ],
      "op": "DUP2",
      "path": "4"
    },
    "819": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7071,
        7091
      ],
      "op": "LT",
      "path": "4"
    },
    "820": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7054,
        7324
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "821": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7054,
        7324
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x387"
    },
    "824": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7054,
        7324
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "825": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7112,
        7134
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "827": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7146
      ],
      "op": "DUP3",
      "path": "4"
    },
    "828": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7147,
        7148
      ],
      "op": "DUP3",
      "path": "4"
    },
    "829": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "DUP2",
      "path": "4"
    },
    "830": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "831": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "DUP2",
      "path": "4"
    },
    "832": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "LT",
      "path": "4"
    },
    "833": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x34C"
    },
    "836": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "837": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x34C"
    },
    "840": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "843": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7137,
        7149
      ],
      "op": "JUMP",
      "path": "4"
    },
    "844": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "845": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "847": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "MUL",
      "path": "4"
    },
    "848": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "850": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "ADD",
      "path": "4"
    },
    "851": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "ADD",
      "path": "4"
    },
    "852": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7137,
        7149
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "853": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7112,
        7149
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "854": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7112,
        7149
      ],
      "op": "POP",
      "path": "4"
    },
    "855": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7163,
        7181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "857": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7184,
        7212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x361"
    },
    "860": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7203,
        7211
      ],
      "op": "DUP3",
      "path": "4"
    },
    "861": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7184,
        7202
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x783"
    },
    "864": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7184,
        7212
      ],
      "op": "JUMP",
      "path": "4"
    },
    "865": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7184,
        7212
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "866": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7163,
        7212
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "867": {
      "op": "POP"
    },
    "868": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7230,
        7254
      ],
      "op": "DUP1",
      "path": "4"
    },
    "869": {
      "branch": 36,
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7230,
        7254
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "870": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7226,
        7314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x372"
    },
    "873": {
      "branch": 36,
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7226,
        7314
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "874": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7274,
        7299
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 1,
      "value": "0x372"
    },
    "877": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7288,
        7298
      ],
      "op": "DUP2",
      "path": "4"
    },
    "878": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7274,
        7287
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA3E"
    },
    "881": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7274,
        7299
      ],
      "op": "JUMP",
      "path": "4"
    },
    "882": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7274,
        7299
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "883": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7098,
        7324
      ],
      "op": "POP",
      "path": "4"
    },
    "884": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7098,
        7324
      ],
      "op": "POP",
      "path": "4"
    },
    "885": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7093,
        7096
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 2
    },
    "886": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7093,
        7096
      ],
      "op": "DUP1",
      "path": "4"
    },
    "887": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7093,
        7096
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x37F"
    },
    "890": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7093,
        7096
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "891": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7093,
        7096
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166F"
    },
    "894": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7093,
        7096
      ],
      "op": "JUMP",
      "path": "4"
    },
    "895": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7093,
        7096
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "896": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7093,
        7096
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "897": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7093,
        7096
      ],
      "op": "POP",
      "path": "4"
    },
    "898": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7093,
        7096
      ],
      "op": "POP",
      "path": "4"
    },
    "899": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7054,
        7324
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32F"
    },
    "902": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7054,
        7324
      ],
      "op": "JUMP",
      "path": "4"
    },
    "903": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7054,
        7324
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "904": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7054,
        7324
      ],
      "op": "POP",
      "path": "4"
    },
    "905": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7333,
        7351
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 3,
      "value": "0x1E0"
    },
    "908": {
      "fn": "GameValidator.performMassMinting",
      "offset": [
        7333,
        7349
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC23"
    },
    "911": {
      "fn": "GameValidator.performMassMinting",
      "jump": "i",
      "offset": [
        7333,
        7351
      ],
      "op": "JUMP",
      "path": "4"
    },
    "912": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "913": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3081,
        3105
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x399"
    },
    "916": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3093,
        3104
      ],
      "op": "DUP3",
      "path": "4"
    },
    "917": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3081,
        3092
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x714"
    },
    "920": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3081,
        3105
      ],
      "op": "JUMP",
      "path": "4"
    },
    "921": {
      "branch": 37,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3081,
        3105
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "922": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F5"
    },
    "925": {
      "branch": 37,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "926": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "928": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "DUP2",
      "path": "4"
    },
    "937": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "940": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "942": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "DUP3",
      "path": "4"
    },
    "943": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "ADD",
      "path": "4"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "947": {
      "op": "DUP1"
    },
    "948": {
      "op": "DUP3"
    },
    "949": {
      "op": "ADD"
    },
    "950": {
      "op": "MSTORE"
    },
    "951": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206973206E6F74206120726567697374657265642076616C6964"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "986": {
      "op": "DUP3"
    },
    "987": {
      "op": "ADD"
    },
    "988": {
      "op": "MSTORE"
    },
    "989": {
      "op": "PUSH4",
      "value": "0x30BA37B9"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "999": {
      "op": "DUP3"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "op": "MSTORE"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1007": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1008": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1009": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1010": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "SUB",
      "path": "4"
    },
    "1011": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1012": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "1013": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3073,
        3146
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1014": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3157,
        3181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1016": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3202,
        3208
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1017": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3197,
        4538
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1018": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3218,
        3235
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1019": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3218,
        3242
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1020": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3214,
        3215
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1021": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3214,
        3242
      ],
      "op": "LT",
      "path": "4"
    },
    "1022": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3197,
        4538
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1023": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3197,
        4538
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5F3"
    },
    "1026": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3197,
        4538
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1027": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3263,
        3288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1029": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3308
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1030": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3309,
        3310
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1031": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1032": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1033": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1034": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "LT",
      "path": "4"
    },
    "1035": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x416"
    },
    "1038": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1039": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x416"
    },
    "1042": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "1045": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3291,
        3311
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1046": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1047": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1049": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "MUL",
      "path": "4"
    },
    "1050": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1052": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "ADD",
      "path": "4"
    },
    "1053": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "ADD",
      "path": "4"
    },
    "1054": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3311
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1055": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3323
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1057": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3323
      ],
      "op": "ADD",
      "path": "4"
    },
    "1058": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3323
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1059": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3291,
        3330
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1060": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3263,
        3330
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1061": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3263,
        3330
      ],
      "op": "POP",
      "path": "4"
    },
    "1062": {
      "offset": [
        1062,
        1064
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1064": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3367,
        3384
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1065": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3348,
        3364
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1066": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3348,
        3384
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x433"
    },
    "1069": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3348,
        3384
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1070": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3348,
        3384
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1071": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3348,
        3384
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1688"
    },
    "1074": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3348,
        3384
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1075": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3348,
        3384
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1076": {
      "branch": 38,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3348,
        3413
      ],
      "op": "GT",
      "path": "4"
    },
    "1077": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3344,
        3507
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1078": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3344,
        3507
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x43F"
    },
    "1081": {
      "branch": 38,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3344,
        3507
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1082": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3433,
        3438
      ],
      "op": "POP",
      "path": "4",
      "statement": 5
    },
    "1083": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3433,
        3438
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5F3"
    },
    "1086": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3433,
        3438
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1087": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3344,
        3507
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1088": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3520,
        3557
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 6,
      "value": "0x449"
    },
    "1091": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3540,
        3557
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1092": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3520,
        3557
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1093": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3520,
        3557
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1688"
    },
    "1096": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3520,
        3557
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1097": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3520,
        3557
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1098": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3520,
        3557
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1099": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3520,
        3557
      ],
      "op": "POP",
      "path": "4"
    },
    "1100": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3644,
        3675
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1102": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3694,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1104": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3689,
        3883
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1105": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3727
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1106": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3728,
        3729
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1107": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1108": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1109": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1110": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "LT",
      "path": "4"
    },
    "1111": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x462"
    },
    "1114": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1115": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x462"
    },
    "1118": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "1121": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3710,
        3730
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1122": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1123": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1125": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "MUL",
      "path": "4"
    },
    "1126": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1128": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "ADD",
      "path": "4"
    },
    "1129": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "ADD",
      "path": "4"
    },
    "1130": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3730
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1131": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1133": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3742
      ],
      "op": "ADD",
      "path": "4"
    },
    "1134": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3742
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1135": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3710,
        3749
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1136": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3707
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1137": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3706,
        3749
      ],
      "op": "LT",
      "path": "4"
    },
    "1138": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3689,
        3883
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1139": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3689,
        3883
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4E3"
    },
    "1142": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3689,
        3883
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1143": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3812,
        3830
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 7
    },
    "1144": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3849
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1145": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3850,
        3851
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1146": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1147": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1148": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1149": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "LT",
      "path": "4"
    },
    "1150": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x489"
    },
    "1153": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1154": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x489"
    },
    "1157": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "1160": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3832,
        3852
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1161": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1162": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1164": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "MUL",
      "path": "4"
    },
    "1165": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1167": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "ADD",
      "path": "4"
    },
    "1168": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "ADD",
      "path": "4"
    },
    "1169": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3852
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1170": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3864
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1172": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3864
      ],
      "op": "ADD",
      "path": "4"
    },
    "1173": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3864
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1174": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3865,
        3866
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1175": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1176": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1177": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1178": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "LT",
      "path": "4"
    },
    "1179": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4A6"
    },
    "1182": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1183": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4A6"
    },
    "1186": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "1189": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3832,
        3867
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1190": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1191": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1193": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "MUL",
      "path": "4"
    },
    "1194": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1196": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "ADD",
      "path": "4"
    },
    "1197": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "ADD",
      "path": "4"
    },
    "1198": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3832,
        3867
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1199": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1201": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1202": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1204": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "ADD",
      "path": "4"
    },
    "1205": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BF"
    },
    "1208": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1209": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1210": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1211": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x169B"
    },
    "1214": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3795,
        3868
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1215": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1216": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1218": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1219": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1221": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1222": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1223": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "SUB",
      "path": "4"
    },
    "1224": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "SUB",
      "path": "4"
    },
    "1225": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1226": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1227": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1228": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1230": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3795,
        3868
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1231": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3774,
        3868
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1232": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3774,
        3868
      ],
      "op": "POP",
      "path": "4"
    },
    "1233": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3751,
        3754
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 8
    },
    "1234": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3751,
        3754
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1235": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3751,
        3754
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4DB"
    },
    "1238": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3751,
        3754
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1239": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3751,
        3754
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166F"
    },
    "1242": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3751,
        3754
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1243": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3751,
        3754
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1244": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3751,
        3754
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1245": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3751,
        3754
      ],
      "op": "POP",
      "path": "4"
    },
    "1246": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3751,
        3754
      ],
      "op": "POP",
      "path": "4"
    },
    "1247": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3689,
        3883
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x450"
    },
    "1250": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3689,
        3883
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1251": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3689,
        3883
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1252": {
      "op": "POP"
    },
    "1253": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3985,
        4014
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1254": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3985,
        4014
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1255": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3985,
        4014
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1257": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3985,
        4014
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1258": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3985,
        4014
      ],
      "op": "ADD",
      "path": "4"
    },
    "1259": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3985,
        4014
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1260": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "DUP8",
      "path": "4",
      "statement": 9
    },
    "1261": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1262": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4080
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1263": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1264": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4081,
        4082
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1265": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4081,
        4082
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1266": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1267": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "LT",
      "path": "4"
    },
    "1268": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4FF"
    },
    "1271": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1272": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4FF"
    },
    "1275": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "1278": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4063,
        4083
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1279": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1280": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1282": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "MUL",
      "path": "4"
    },
    "1283": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1285": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "ADD",
      "path": "4"
    },
    "1286": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "ADD",
      "path": "4"
    },
    "1287": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4083
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1288": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4095
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1290": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4095
      ],
      "op": "ADD",
      "path": "4"
    },
    "1291": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4063,
        4095
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1292": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1294": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1296": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4045,
        4059
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1297": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1298": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1299": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1301": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "ADD",
      "path": "4"
    },
    "1302": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1303": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1304": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1305": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1307": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "ADD",
      "path": "4"
    },
    "1308": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1310": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4060
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1311": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1312": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1313": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1314": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1315": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1317": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "ADD",
      "path": "4"
    },
    "1318": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1319": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x531"
    },
    "1322": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1323": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1324": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1325": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF0A"
    },
    "1328": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4028,
        4095
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1329": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1330": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4028,
        4095
      ],
      "op": "POP",
      "path": "4"
    },
    "1331": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4184,
        4248
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0x559"
    },
    "1334": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4222
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1335": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4223,
        4224
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1336": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1337": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1338": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1339": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "LT",
      "path": "4"
    },
    "1340": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x547"
    },
    "1343": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1344": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x547"
    },
    "1347": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "1350": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4205,
        4225
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1351": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1352": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1354": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "MUL",
      "path": "4"
    },
    "1355": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1357": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "ADD",
      "path": "4"
    },
    "1358": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "ADD",
      "path": "4"
    },
    "1359": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4225
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1360": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4234
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1362": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4234
      ],
      "op": "ADD",
      "path": "4"
    },
    "1363": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4205,
        4234
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1364": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4236,
        4247
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1365": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4184,
        4204
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDE1"
    },
    "1368": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4184,
        4248
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1369": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4184,
        4248
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1370": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x40"
    },
    "1372": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1373": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1374": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1376": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "ADD",
      "path": "4"
    },
    "1377": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1379": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1380": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1381": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4460,
        4474
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1382": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1383": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1384": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1386": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "ADD",
      "path": "4"
    },
    "1387": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4501,
        4512
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1388": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1389": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1390": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1391": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1392": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4409,
        4527
      ],
      "op": "POP",
      "path": "4"
    },
    "1393": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4362
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1395": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4380
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1396": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4381,
        4382
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1397": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1398": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1399": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1400": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "LT",
      "path": "4"
    },
    "1401": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x584"
    },
    "1404": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1405": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x584"
    },
    "1408": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "1411": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4363,
        4383
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1412": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1413": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1415": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "MUL",
      "path": "4"
    },
    "1416": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1418": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "ADD",
      "path": "4"
    },
    "1419": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "ADD",
      "path": "4"
    },
    "1420": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4383
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1421": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4392
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1423": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4392
      ],
      "op": "ADD",
      "path": "4"
    },
    "1424": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4363,
        4392
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1425": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1427": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1428": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59D"
    },
    "1431": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1432": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1433": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16CA"
    },
    "1436": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4345,
        4393
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1437": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1438": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1439": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1440": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1441": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1443": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1444": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1445": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1447": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1448": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1449": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1450": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "SUB",
      "path": "4"
    },
    "1451": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1452": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "ADD",
      "path": "4"
    },
    "1453": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1454": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4393
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "op": "SUB"
    },
    "1463": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4406
      ],
      "op": "DUP12",
      "path": "4"
    },
    "1464": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4406
      ],
      "op": "AND",
      "path": "4"
    },
    "1465": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4406
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1467": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4406
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1468": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4406
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1469": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4406
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1470": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4406
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1471": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4406
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1472": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4406
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1473": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4406
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1474": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1475": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1476": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1477": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1478": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1479": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "ADD",
      "path": "4"
    },
    "1480": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1481": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1483": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1484": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1485": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "ADD",
      "path": "4"
    },
    "1486": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1487": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1490": {
      "op": "NOT"
    },
    "1491": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "AND",
      "path": "4"
    },
    "1492": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1493": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1494": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1495": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1496": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1497": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1498": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "OR",
      "path": "4"
    },
    "1499": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1500": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4345,
        4527
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1501": {
      "op": "POP"
    },
    "1502": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3244,
        3247
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 12
    },
    "1503": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3244,
        3247
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1504": {
      "op": "POP"
    },
    "1505": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3244,
        3247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5EB"
    },
    "1508": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3244,
        3247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3244,
        3247
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1511": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3244,
        3247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166F"
    },
    "1514": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        3244,
        3247
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1515": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3244,
        3247
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1516": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3244,
        3247
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1517": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3244,
        3247
      ],
      "op": "POP",
      "path": "4"
    },
    "1518": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3244,
        3247
      ],
      "op": "POP",
      "path": "4"
    },
    "1519": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3197,
        4538
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F9"
    },
    "1522": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3197,
        4538
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1523": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3197,
        4538
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1524": {
      "op": "POP"
    },
    "1525": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4690,
        4702
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1527": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4690,
        4702
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1528": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4623,
        4638
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "1529": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4623,
        4638
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1530": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4601,
        4620
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1532": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4601,
        4620
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1533": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4676,
        4702
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x606"
    },
    "1536": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4676,
        4702
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1537": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4623,
        4638
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1538": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4676,
        4702
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16E6"
    },
    "1541": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4676,
        4702
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1542": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4676,
        4702
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1543": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4648,
        4702
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4712,
        4738
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1547": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4758,
        4785
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x616"
    },
    "1550": {
      "offset": [
        994,
        1003
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12C"
    },
    "1553": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4758,
        4769
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1554": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4758,
        4785
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x170F"
    },
    "1557": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4758,
        4785
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1558": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4758,
        4785
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1559": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4741,
        4786
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x622"
    },
    "1562": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4741,
        4786
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1563": {
      "offset": [
        994,
        1003
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12C"
    },
    "1566": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4741,
        4786
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16E6"
    },
    "1569": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4741,
        4786
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1570": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4741,
        4786
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1571": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4712,
        4786
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1572": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4712,
        4786
      ],
      "op": "POP",
      "path": "4"
    },
    "1573": {
      "offset": [
        994,
        1003
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12C"
    },
    "1576": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4801,
        4818
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1577": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4801,
        4835
      ],
      "op": "LT",
      "path": "4"
    },
    "1578": {
      "branch": 39,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4801,
        4835
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1579": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4801,
        4873
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1580": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4801,
        4873
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1581": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4801,
        4873
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x637"
    },
    "1584": {
      "branch": 39,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4801,
        4873
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1585": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4801,
        4873
      ],
      "op": "POP",
      "path": "4"
    },
    "1586": {
      "offset": [
        994,
        1003
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12C"
    },
    "1589": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4839,
        4857
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1590": {
      "branch": 40,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4839,
        4873
      ],
      "op": "LT",
      "path": "4"
    },
    "1591": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4801,
        4873
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1592": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4797,
        5017
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1593": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4797,
        5017
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x652"
    },
    "1596": {
      "branch": 40,
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4797,
        5017
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1597": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4889,
        4909
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 13,
      "value": "0x644"
    },
    "1600": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4889,
        4907
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AE"
    },
    "1603": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4889,
        4909
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1604": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4889,
        4909
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1605": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4938,
        4970
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 14,
      "value": "0x64E"
    },
    "1608": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4952,
        4970
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1609": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4938,
        4949
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1610": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4938,
        4970
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16E6"
    },
    "1613": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        4938,
        4970
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1614": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4938,
        4970
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1615": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4923,
        4935
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1617": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4923,
        4970
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1618": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        4797,
        5017
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1619": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3063,
        5023
      ],
      "op": "POP",
      "path": "4"
    },
    "1620": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3063,
        5023
      ],
      "op": "POP",
      "path": "4"
    },
    "1621": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3063,
        5023
      ],
      "op": "POP",
      "path": "4"
    },
    "1622": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        3063,
        5023
      ],
      "op": "POP",
      "path": "4"
    },
    "1623": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "POP",
      "path": "4"
    },
    "1624": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "POP",
      "path": "4"
    },
    "1625": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        2949,
        5023
      ],
      "op": "POP",
      "path": "4"
    },
    "1626": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "o",
      "offset": [
        2949,
        5023
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1627": {
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1628": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1630": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1632": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1633": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1634": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1636": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1637": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1639": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1641": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1642": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1643": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1644": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1645": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1646": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "LT",
      "path": "4"
    },
    "1647": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x677"
    },
    "1650": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1651": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1653": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1654": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1655": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1656": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1657": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1659": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1660": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1662": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1664": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1665": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "4"
    },
    "1666": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1668": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1669": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "4"
    },
    "1670": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1671": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "4"
    },
    "1672": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "4"
    },
    "1673": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1674": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1675": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x693"
    },
    "1678": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1679": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1723"
    },
    "1682": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1683": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1684": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1685": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1687": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "4"
    },
    "1688": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1690": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1691": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1692": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DIV",
      "path": "4"
    },
    "1693": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MUL",
      "path": "4"
    },
    "1694": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1696": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "4"
    },
    "1697": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1699": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1700": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1701": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1702": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "4"
    },
    "1703": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1705": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1706": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1707": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1708": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1709": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1710": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1711": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1712": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1713": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1715": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "4"
    },
    "1716": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1717": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1718": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1719": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6BF"
    },
    "1722": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1723": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1723"
    },
    "1726": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "i",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1727": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1728": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1729": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1730": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x70C"
    },
    "1733": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1734": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1735": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1737": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "LT",
      "path": "4"
    },
    "1738": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E1"
    },
    "1741": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1742": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1745": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1746": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1747": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1748": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DIV",
      "path": "4"
    },
    "1749": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MUL",
      "path": "4"
    },
    "1750": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1751": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1752": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1753": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1755": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "4"
    },
    "1756": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1757": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x70C"
    },
    "1760": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1761": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1762": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1763": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "4"
    },
    "1764": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1765": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1766": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1768": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1769": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1771": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1773": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1774": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1775": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1776": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1777": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1778": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1779": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1780": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1781": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1783": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "4"
    },
    "1784": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1785": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1787": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "4"
    },
    "1788": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1789": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1790": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "GT",
      "path": "4"
    },
    "1791": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6EF"
    },
    "1794": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1795": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1796": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1797": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SUB",
      "path": "4"
    },
    "1798": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1800": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "AND",
      "path": "4"
    },
    "1801": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1802": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "ADD",
      "path": "4"
    },
    "1803": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1804": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1805": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "4"
    },
    "1806": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "4"
    },
    "1807": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "4"
    },
    "1808": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "4"
    },
    "1809": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "POP",
      "path": "4"
    },
    "1810": {
      "fn": "GameValidator.submitPlayerList",
      "offset": [
        829,
        881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1811": {
      "fn": "GameValidator.submitPlayerList",
      "jump": "o",
      "offset": [
        829,
        881
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1812": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6226,
        6433
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1813": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6286,
        6290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1815": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6404
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 15
    },
    "1816": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6404
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1817": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1819": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1820": {
      "op": "PUSH4",
      "value": "0xFACD743B"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1827": {
      "op": "SHL"
    },
    "1828": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1829": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1836": {
      "op": "SHL"
    },
    "1837": {
      "op": "SUB"
    },
    "1838": {
      "op": "DUP5"
    },
    "1839": {
      "op": "DUP2"
    },
    "1840": {
      "op": "AND"
    },
    "1841": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1843": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1844": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "ADD",
      "path": "4"
    },
    "1845": {
      "op": "MSTORE"
    },
    "1846": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6404
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1847": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6404
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1848": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6404
      ],
      "op": "AND",
      "path": "4"
    },
    "1849": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6404
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1850": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6416
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFACD743B"
    },
    "1855": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6416
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1858": {
      "op": "ADD"
    },
    "1859": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1861": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1863": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1864": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1865": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1866": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "SUB",
      "path": "4"
    },
    "1867": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1868": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1869": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "GAS",
      "path": "4"
    },
    "1870": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "1871": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1872": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1873": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1874": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x75F"
    },
    "1877": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1878": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1879": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1881": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1882": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1883": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1884": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1886": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1887": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1888": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "POP",
      "path": "4"
    },
    "1889": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "POP",
      "path": "4"
    },
    "1890": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "POP",
      "path": "4"
    },
    "1891": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "POP",
      "path": "4"
    },
    "1892": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1894": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1895": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1896": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1898": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "NOT",
      "path": "4"
    },
    "1899": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1901": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1902": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "ADD",
      "path": "4"
    },
    "1903": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "AND",
      "path": "4"
    },
    "1904": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1905": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "ADD",
      "path": "4"
    },
    "1906": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1907": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1909": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1910": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "POP",
      "path": "4"
    },
    "1911": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1912": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "ADD",
      "path": "4"
    },
    "1913": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1914": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A8"
    },
    "1917": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1918": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1919": {
      "fn": "GameValidator.isValidator",
      "offset": [
        6390,
        6426
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x175D"
    },
    "1922": {
      "fn": "GameValidator.isValidator",
      "jump": "i",
      "offset": [
        6390,
        6426
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1923": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8004,
        9598
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1924": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8078,
        8085
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1926": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8214
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1927": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8238
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1929": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8239,
        8247
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1930": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1932": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1933": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x796"
    },
    "1936": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1937": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1938": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16CA"
    },
    "1941": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8217,
        8248
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1942": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1943": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1944": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1945": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1946": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1948": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1949": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1950": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1951": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1952": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1953": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "SUB",
      "path": "4"
    },
    "1954": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1956": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1957": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1958": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "ADD",
      "path": "4"
    },
    "1959": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1960": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1961": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1962": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1963": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1964": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1965": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "MUL",
      "path": "4"
    },
    "1966": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1967": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "ADD",
      "path": "4"
    },
    "1968": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1969": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "ADD",
      "path": "4"
    },
    "1970": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1971": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1972": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1973": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1974": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1975": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1976": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1977": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1978": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1979": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "ADD",
      "path": "4"
    },
    "1980": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8217,
        8248
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1981": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1982": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1983": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1984": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7F2"
    },
    "1987": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1988": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1990": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "MUL",
      "path": "4"
    },
    "1991": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1992": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "ADD",
      "path": "4"
    },
    "1993": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1994": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1995": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1997": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1998": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2000": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2002": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2003": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2004": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2005": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2006": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2013": {
      "op": "SHL"
    },
    "2014": {
      "op": "SUB"
    },
    "2015": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "AND",
      "path": "4"
    },
    "2016": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2017": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2018": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2020": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2021": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2022": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "ADD",
      "path": "4"
    },
    "2023": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2024": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2026": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "ADD",
      "path": "4"
    },
    "2027": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2028": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2029": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "GT",
      "path": "4"
    },
    "2030": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D4"
    },
    "2033": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2034": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2035": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "POP",
      "path": "4"
    },
    "2036": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "POP",
      "path": "4"
    },
    "2037": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "POP",
      "path": "4"
    },
    "2038": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "POP",
      "path": "4"
    },
    "2039": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "POP",
      "path": "4"
    },
    "2040": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2041": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8187,
        8248
      ],
      "op": "POP",
      "path": "4"
    },
    "2042": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8258,
        8283
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2044": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8313,
        8316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "2046": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8287,
        8297
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2047": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8287,
        8304
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2048": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8307,
        8309
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3C"
    },
    "2050": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8287,
        8309
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x80B"
    },
    "2053": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8287,
        8309
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2054": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8287,
        8309
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2055": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8287,
        8309
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x177A"
    },
    "2058": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8287,
        8309
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2059": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8287,
        8309
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2060": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8286,
        8316
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x815"
    },
    "2063": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8286,
        8316
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2064": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8286,
        8316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2065": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8286,
        8316
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1791"
    },
    "2068": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8286,
        8316
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2069": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8286,
        8316
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2070": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8542,
        8559
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2071": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8542,
        8559
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2072": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8258,
        8316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2073": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8258,
        8316
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2074": {
      "op": "POP"
    },
    "2075": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8354,
        8374
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2077": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8354,
        8374
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2078": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8354,
        8374
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2079": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8354,
        8374
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2080": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8354,
        8374
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2081": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8354,
        8374
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2082": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2091": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2092": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "GT",
      "path": "4"
    },
    "2093": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2094": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x839"
    },
    "2097": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2098": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x839"
    },
    "2101": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFC7"
    },
    "2104": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8526,
        8560
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2105": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2106": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2108": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2109": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2110": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2111": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2112": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2113": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2114": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2116": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "MUL",
      "path": "4"
    },
    "2117": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2119": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "ADD",
      "path": "4"
    },
    "2120": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2121": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "ADD",
      "path": "4"
    },
    "2122": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2124": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2125": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2126": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2127": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x87E"
    },
    "2130": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2131": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2132": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2134": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "ADD",
      "path": "4"
    },
    "2135": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2138": {
      "op": "DUP1"
    },
    "2139": {
      "op": "MLOAD"
    },
    "2140": {
      "op": "DUP1"
    },
    "2141": {
      "op": "DUP3"
    },
    "2142": {
      "op": "ADD"
    },
    "2143": {
      "op": "SWAP1"
    },
    "2144": {
      "op": "SWAP2"
    },
    "2145": {
      "op": "MSTORE"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2148": {
      "op": "DUP1"
    },
    "2149": {
      "op": "DUP3"
    },
    "2150": {
      "op": "MSTORE"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2153": {
      "op": "DUP3"
    },
    "2154": {
      "op": "ADD"
    },
    "2155": {
      "op": "MSTORE"
    },
    "2156": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2157": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2158": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2160": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "ADD",
      "path": "4"
    },
    "2161": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2162": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2164": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2165": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "SUB",
      "path": "4"
    },
    "2166": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2167": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2168": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x857"
    },
    "2171": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2172": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2173": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "POP",
      "path": "4"
    },
    "2174": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2175": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8526,
        8560
      ],
      "op": "POP",
      "path": "4"
    },
    "2176": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8494,
        8560
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2177": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8494,
        8560
      ],
      "op": "POP",
      "path": "4"
    },
    "2178": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8618,
        8624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2180": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8613,
        9383
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2181": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8634,
        8644
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2182": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8634,
        8651
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2183": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8630,
        8631
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2184": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8630,
        8651
      ],
      "op": "LT",
      "path": "4"
    },
    "2185": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8613,
        9383
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2186": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8613,
        9383
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA1E"
    },
    "2189": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8613,
        9383
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2190": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8672,
        8691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2192": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8711
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2194": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8712,
        8720
      ],
      "op": "DUP10",
      "path": "4"
    },
    "2195": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2197": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2198": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x89F"
    },
    "2201": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2202": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2203": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16CA"
    },
    "2206": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8694,
        8721
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2207": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2208": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2209": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2210": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2211": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2213": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "ADD",
      "path": "4"
    },
    "2214": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2216": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2217": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2218": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2219": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "SUB",
      "path": "4"
    },
    "2220": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2221": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8721
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2222": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2224": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8732
      ],
      "op": "DUP9",
      "path": "4"
    },
    "2225": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8733,
        8734
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2226": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2227": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2228": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2229": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "LT",
      "path": "4"
    },
    "2230": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8C1"
    },
    "2233": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2234": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8C1"
    },
    "2237": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "2240": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8722,
        8735
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2241": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2242": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2244": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "MUL",
      "path": "4"
    },
    "2245": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2247": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "ADD",
      "path": "4"
    },
    "2248": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "ADD",
      "path": "4"
    },
    "2249": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8722,
        8735
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2256": {
      "op": "SHL"
    },
    "2257": {
      "op": "SUB"
    },
    "2258": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "AND",
      "path": "4"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2265": {
      "op": "SHL"
    },
    "2266": {
      "op": "SUB"
    },
    "2267": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "AND",
      "path": "4"
    },
    "2268": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2269": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2270": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2272": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "ADD",
      "path": "4"
    },
    "2273": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2274": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2275": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2276": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2278": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "ADD",
      "path": "4"
    },
    "2279": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2281": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8736
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2282": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8751
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2284": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8751
      ],
      "op": "ADD",
      "path": "4"
    },
    "2285": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8694,
        8751
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2286": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8672,
        8751
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2287": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8672,
        8751
      ],
      "op": "POP",
      "path": "4"
    },
    "2288": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8765,
        8775
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2290": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8803,
        8809
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2291": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8798,
        9037
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2292": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8819,
        8829
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2293": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8819,
        8836
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2294": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8815,
        8816
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2295": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8815,
        8836
      ],
      "op": "LT",
      "path": "4"
    },
    "2296": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8798,
        9037
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2297": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8798,
        9037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x969"
    },
    "2300": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8798,
        9037
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2301": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8887,
        8898
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2302": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8875
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2303": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8876,
        8877
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2304": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2305": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2306": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2307": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "LT",
      "path": "4"
    },
    "2308": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x90F"
    },
    "2311": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2312": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x90F"
    },
    "2315": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "2318": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8865,
        8878
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2319": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2320": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2322": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "MUL",
      "path": "4"
    },
    "2323": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2325": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "ADD",
      "path": "4"
    },
    "2326": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "ADD",
      "path": "4"
    },
    "2327": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8878
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2328": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8883
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2330": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8883
      ],
      "op": "ADD",
      "path": "4"
    },
    "2331": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8883
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2332": {
      "branch": 41,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8865,
        8898
      ],
      "op": "SUB",
      "path": "4"
    },
    "2333": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8861,
        9023
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x957"
    },
    "2336": {
      "branch": 41,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8861,
        9023
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2337": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8932
      ],
      "op": "DUP5",
      "path": "4",
      "statement": 16
    },
    "2338": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8933,
        8934
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2339": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2340": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2341": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2342": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "LT",
      "path": "4"
    },
    "2343": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x932"
    },
    "2346": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2347": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x932"
    },
    "2350": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "2353": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8922,
        8935
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2354": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2355": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2357": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "MUL",
      "path": "4"
    },
    "2358": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2360": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "ADD",
      "path": "4"
    },
    "2361": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "ADD",
      "path": "4"
    },
    "2362": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8935
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2363": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8941
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2365": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8941
      ],
      "op": "ADD",
      "path": "4"
    },
    "2366": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8943
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2367": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8943
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2368": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8943
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2369": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8943
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2370": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8943
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2371": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x94B"
    },
    "2374": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8943
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2375": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166F"
    },
    "2378": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8922,
        8943
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2379": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8943
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2380": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8943
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2381": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8922,
        8943
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2382": {
      "op": "POP"
    },
    "2383": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8973,
        8977
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 17,
      "value": "0x1"
    },
    "2385": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8973,
        8977
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2386": {
      "op": "POP"
    },
    "2387": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8999,
        9004
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 18,
      "value": "0x969"
    },
    "2390": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8999,
        9004
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2391": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8861,
        9023
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2392": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8838,
        8841
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 19
    },
    "2393": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8838,
        8841
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x961"
    },
    "2396": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8838,
        8841
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2397": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8838,
        8841
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166F"
    },
    "2400": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8838,
        8841
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2401": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8838,
        8841
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2402": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8838,
        8841
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2403": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8838,
        8841
      ],
      "op": "POP",
      "path": "4"
    },
    "2404": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8838,
        8841
      ],
      "op": "POP",
      "path": "4"
    },
    "2405": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8798,
        9037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8F3"
    },
    "2408": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8798,
        9037
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2409": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8798,
        9037
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2410": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8798,
        9037
      ],
      "op": "POP",
      "path": "4"
    },
    "2411": {
      "branch": 42,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9056,
        9061
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2412": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9051,
        9152
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A3"
    },
    "2415": {
      "branch": 42,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9051,
        9152
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2416": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 20,
      "value": "0x40"
    },
    "2418": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2419": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2420": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2422": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "ADD",
      "path": "4"
    },
    "2423": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2425": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2426": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2427": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9114,
        9125
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2428": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2429": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2430": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2432": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "ADD",
      "path": "4"
    },
    "2433": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9134,
        9135
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2435": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2436": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2437": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9097,
        9137
      ],
      "op": "POP",
      "path": "4"
    },
    "2438": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9091
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2439": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9092,
        9093
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2440": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2441": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2442": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2443": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "LT",
      "path": "4"
    },
    "2444": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x997"
    },
    "2447": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2448": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x997"
    },
    "2451": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "2454": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9081,
        9094
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2455": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2456": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2458": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "MUL",
      "path": "4"
    },
    "2459": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2461": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "ADD",
      "path": "4"
    },
    "2462": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9094
      ],
      "op": "ADD",
      "path": "4"
    },
    "2463": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9137
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2464": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9137
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2465": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9137
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2466": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9081,
        9137
      ],
      "op": "POP",
      "path": "4"
    },
    "2467": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9051,
        9152
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2468": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9241,
        9253
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2469": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9229
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2470": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9230,
        9231
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2471": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2472": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2473": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2474": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "LT",
      "path": "4"
    },
    "2475": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9B6"
    },
    "2478": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2479": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9B6"
    },
    "2482": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "2485": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9219,
        9232
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2486": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2487": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2489": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "MUL",
      "path": "4"
    },
    "2490": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2492": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "ADD",
      "path": "4"
    },
    "2493": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "ADD",
      "path": "4"
    },
    "2494": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9232
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2495": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9238
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2497": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9238
      ],
      "op": "ADD",
      "path": "4"
    },
    "2498": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9238
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2499": {
      "branch": 43,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9219,
        9253
      ],
      "op": "GT",
      "path": "4"
    },
    "2500": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9215,
        9373
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2501": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9215,
        9373
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA09"
    },
    "2504": {
      "branch": 43,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9215,
        9373
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2505": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9298
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 21
    },
    "2506": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9299,
        9300
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2507": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2508": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2509": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2510": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "LT",
      "path": "4"
    },
    "2511": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9DA"
    },
    "2514": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2515": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9DA"
    },
    "2518": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "2521": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9288,
        9301
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2522": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2523": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2525": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "MUL",
      "path": "4"
    },
    "2526": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2528": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "ADD",
      "path": "4"
    },
    "2529": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "ADD",
      "path": "4"
    },
    "2530": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9301
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2531": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9307
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2533": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9307
      ],
      "op": "ADD",
      "path": "4"
    },
    "2534": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9288,
        9307
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2535": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9273,
        9307
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2536": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9273,
        9307
      ],
      "op": "POP",
      "path": "4"
    },
    "2537": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9350
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 22
    },
    "2538": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9351,
        9352
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2539": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2540": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2541": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2542": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "LT",
      "path": "4"
    },
    "2543": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9FA"
    },
    "2546": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2547": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9FA"
    },
    "2550": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "2553": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        9340,
        9353
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2554": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2555": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2557": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "MUL",
      "path": "4"
    },
    "2558": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2560": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "ADD",
      "path": "4"
    },
    "2561": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "ADD",
      "path": "4"
    },
    "2562": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9353
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2563": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2565": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9358
      ],
      "op": "ADD",
      "path": "4"
    },
    "2566": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9340,
        9358
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2567": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9325,
        9358
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2568": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9325,
        9358
      ],
      "op": "POP",
      "path": "4"
    },
    "2569": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9215,
        9373
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2570": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8658,
        9383
      ],
      "op": "POP",
      "path": "4"
    },
    "2571": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8658,
        9383
      ],
      "op": "POP",
      "path": "4"
    },
    "2572": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8653,
        8656
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 23
    },
    "2573": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8653,
        8656
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2574": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8653,
        8656
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA16"
    },
    "2577": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8653,
        8656
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2578": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8653,
        8656
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166F"
    },
    "2581": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "i",
      "offset": [
        8653,
        8656
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2582": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8653,
        8656
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2583": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8653,
        8656
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2584": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8653,
        8656
      ],
      "op": "POP",
      "path": "4"
    },
    "2585": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8653,
        8656
      ],
      "op": "POP",
      "path": "4"
    },
    "2586": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8613,
        9383
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x884"
    },
    "2589": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8613,
        9383
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2590": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8613,
        9383
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2591": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8613,
        9383
      ],
      "op": "POP",
      "path": "4"
    },
    "2592": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9480,
        9497
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2593": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9464,
        9476
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2594": {
      "branch": 44,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9464,
        9497
      ],
      "op": "LT",
      "path": "4"
    },
    "2595": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9460,
        9543
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA31"
    },
    "2598": {
      "branch": 44,
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9460,
        9543
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2599": {
      "op": "POP"
    },
    "2600": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9520,
        9532
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 24
    },
    "2601": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9520,
        9532
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2602": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8004,
        9598
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2603": {
      "op": "POP"
    },
    "2604": {
      "op": "POP"
    },
    "2605": {
      "op": "POP"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "o",
      "offset": [
        8004,
        9598
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2609": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9460,
        9543
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2610": {
      "op": "POP"
    },
    "2611": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9568,
        9569
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 25,
      "value": "0x0"
    },
    "2613": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        9568,
        9569
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "2614": {
      "fn": "GameValidator.findMostCommonHash",
      "offset": [
        8004,
        9598
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2615": {
      "op": "POP"
    },
    "2616": {
      "op": "POP"
    },
    "2617": {
      "op": "POP"
    },
    "2618": {
      "op": "POP"
    },
    "2619": {
      "op": "POP"
    },
    "2620": {
      "op": "POP"
    },
    "2621": {
      "fn": "GameValidator.findMostCommonHash",
      "jump": "o",
      "offset": [
        8004,
        9598
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2622": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7363,
        7999
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2623": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7509
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2625": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2626": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2627": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2628": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7528
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2630": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2632": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2633": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2634": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2635": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2637": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2638": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2639": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2640": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2641": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2642": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2643": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2644": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2645": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2646": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MUL",
      "path": "4"
    },
    "2647": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2648": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2649": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2650": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2651": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2652": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2653": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2654": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2655": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2656": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2657": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2658": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2659": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2660": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7512,
        7544
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2661": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2662": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7509
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2663": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7509
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2664": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2665": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2666": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2667": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2668": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2669": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "LT",
      "path": "4"
    },
    "2670": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2671": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB16"
    },
    "2674": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2675": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2676": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2677": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2678": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2680": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2681": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2683": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2685": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2686": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2687": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2688": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2689": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA89"
    },
    "2692": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2693": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1723"
    },
    "2696": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2697": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2698": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2699": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2701": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2702": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2704": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2705": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2706": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DIV",
      "path": "4"
    },
    "2707": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MUL",
      "path": "4"
    },
    "2708": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2710": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2711": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2713": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2714": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2715": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2716": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2717": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2719": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2720": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2721": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2722": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2723": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2724": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2725": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2726": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2727": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2729": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2730": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2731": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2732": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2733": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAB5"
    },
    "2736": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2737": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1723"
    },
    "2740": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2741": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2742": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2743": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2744": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB02"
    },
    "2747": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2748": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2749": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2751": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "LT",
      "path": "4"
    },
    "2752": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD7"
    },
    "2755": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2756": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "2759": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2760": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2761": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2762": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DIV",
      "path": "4"
    },
    "2763": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MUL",
      "path": "4"
    },
    "2764": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2765": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2766": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2767": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2769": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2770": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2771": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB02"
    },
    "2774": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2775": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2776": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2777": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2778": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2779": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2780": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2782": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2783": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2785": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2787": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2788": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2789": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2790": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2791": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2792": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2793": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2794": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2795": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2797": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2798": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2799": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2801": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2802": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2803": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2804": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "GT",
      "path": "4"
    },
    "2805": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAE5"
    },
    "2808": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2809": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2810": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2811": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SUB",
      "path": "4"
    },
    "2812": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2814": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "AND",
      "path": "4"
    },
    "2815": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2816": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2817": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2818": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2819": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "POP",
      "path": "4"
    },
    "2820": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "POP",
      "path": "4"
    },
    "2821": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "POP",
      "path": "4"
    },
    "2822": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "POP",
      "path": "4"
    },
    "2823": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "POP",
      "path": "4"
    },
    "2824": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2825": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2826": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2828": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2829": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2830": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2832": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "ADD",
      "path": "4"
    },
    "2833": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2834": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA6A"
    },
    "2837": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2838": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2839": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "POP",
      "path": "4"
    },
    "2840": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "POP",
      "path": "4"
    },
    "2841": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "POP",
      "path": "4"
    },
    "2842": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "POP",
      "path": "4"
    },
    "2843": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2844": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7483,
        7544
      ],
      "op": "POP",
      "path": "4"
    },
    "2845": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7554,
        7586
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2847": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7589,
        7631
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB27"
    },
    "2850": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7620,
        7630
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2851": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7589,
        7619
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22F"
    },
    "2854": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        7589,
        7631
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2855": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7589,
        7631
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2856": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7554,
        7631
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2857": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7554,
        7631
      ],
      "op": "POP",
      "path": "4"
    },
    "2858": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7642,
        7660
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2860": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7663,
        7684
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB33"
    },
    "2863": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7663,
        7682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED0"
    },
    "2866": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        7663,
        7684
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2867": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7663,
        7684
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2868": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7642,
        7684
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2869": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7642,
        7684
      ],
      "op": "POP",
      "path": "4"
    },
    "2870": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7771,
        7777
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2872": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7766,
        7993
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2873": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7787,
        7802
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2874": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7787,
        7809
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2875": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7783,
        7784
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2876": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7783,
        7809
      ],
      "op": "LT",
      "path": "4"
    },
    "2877": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7766,
        7993
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2878": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7766,
        7993
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1C"
    },
    "2881": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7766,
        7993
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2882": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7864,
        7865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2890": {
      "op": "SHL"
    },
    "2891": {
      "op": "SUB"
    },
    "2892": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7866
      ],
      "op": "AND",
      "path": "4"
    },
    "2893": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7849
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2894": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7850,
        7851
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2895": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2896": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2897": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2898": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "LT",
      "path": "4"
    },
    "2899": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB5E"
    },
    "2902": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2903": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB5E"
    },
    "2906": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "2909": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        7834,
        7852
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2910": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2911": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2913": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "MUL",
      "path": "4"
    },
    "2914": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2916": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "ADD",
      "path": "4"
    },
    "2917": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "ADD",
      "path": "4"
    },
    "2918": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7852
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2925": {
      "op": "SHL"
    },
    "2926": {
      "op": "SUB"
    },
    "2927": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7866
      ],
      "op": "AND",
      "path": "4"
    },
    "2928": {
      "branch": 45,
      "fn": "GameValidator.mintForServer",
      "offset": [
        7834,
        7866
      ],
      "op": "EQ",
      "path": "4"
    },
    "2929": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7830,
        7983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC0A"
    },
    "2932": {
      "branch": 45,
      "fn": "GameValidator.mintForServer",
      "offset": [
        7830,
        7983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2933": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7925
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 26,
      "value": "0x1"
    },
    "2935": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7925
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2936": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2937": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2944": {
      "op": "SHL"
    },
    "2945": {
      "op": "SUB"
    },
    "2946": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7925
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2947": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7925
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2948": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7925
      ],
      "op": "AND",
      "path": "4"
    },
    "2949": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7925
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2950": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7936
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF0DDA65C"
    },
    "2955": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7936
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2956": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7952
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2957": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7952
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2958": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7953,
        7954
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2959": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7953,
        7954
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2960": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2961": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "LT",
      "path": "4"
    },
    "2962": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB9D"
    },
    "2965": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2966": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB9D"
    },
    "2969": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "2972": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        7937,
        7955
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2973": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2974": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2976": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "MUL",
      "path": "4"
    },
    "2977": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2979": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "ADD",
      "path": "4"
    },
    "2980": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "ADD",
      "path": "4"
    },
    "2981": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7937,
        7955
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2982": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7957,
        7967
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2983": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2985": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2986": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2987": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2992": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "AND",
      "path": "4"
    },
    "2993": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "2995": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "SHL",
      "path": "4"
    },
    "2996": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2997": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2998": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3000": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "ADD",
      "path": "4"
    },
    "3001": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBD7"
    },
    "3004": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3005": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3006": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3013": {
      "op": "SHL"
    },
    "3014": {
      "op": "SUB"
    },
    "3015": {
      "op": "SWAP3"
    },
    "3016": {
      "op": "SWAP1"
    },
    "3017": {
      "op": "SWAP3"
    },
    "3018": {
      "op": "AND"
    },
    "3019": {
      "op": "DUP3"
    },
    "3020": {
      "op": "MSTORE"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3023": {
      "op": "DUP3"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "MSTORE"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3028": {
      "op": "ADD"
    },
    "3029": {
      "op": "SWAP1"
    },
    "3030": {
      "op": "JUMP"
    },
    "3031": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3032": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3034": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3036": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3037": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3038": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3039": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "SUB",
      "path": "4"
    },
    "3040": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3041": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3043": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "DUP8",
      "path": "4"
    },
    "3044": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3045": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "3046": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3047": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3048": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3049": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBF1"
    },
    "3052": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3053": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3055": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3056": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3057": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3058": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "POP",
      "path": "4"
    },
    "3059": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "GAS",
      "path": "4"
    },
    "3060": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "CALL",
      "path": "4"
    },
    "3061": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3062": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3063": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3064": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC05"
    },
    "3067": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3068": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3069": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3071": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3072": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3073": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3074": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3076": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3077": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3078": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "POP",
      "path": "4"
    },
    "3079": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "POP",
      "path": "4"
    },
    "3080": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "POP",
      "path": "4"
    },
    "3081": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7913,
        7968
      ],
      "op": "POP",
      "path": "4"
    },
    "3082": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7830,
        7983
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3083": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7811,
        7814
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 27
    },
    "3084": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7811,
        7814
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC14"
    },
    "3087": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7811,
        7814
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3088": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7811,
        7814
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166F"
    },
    "3091": {
      "fn": "GameValidator.mintForServer",
      "jump": "i",
      "offset": [
        7811,
        7814
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3092": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7811,
        7814
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3093": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7811,
        7814
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3094": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7811,
        7814
      ],
      "op": "POP",
      "path": "4"
    },
    "3095": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7811,
        7814
      ],
      "op": "POP",
      "path": "4"
    },
    "3096": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7766,
        7993
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB38"
    },
    "3099": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7766,
        7993
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3100": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7766,
        7993
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3101": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7766,
        7993
      ],
      "op": "POP",
      "path": "4"
    },
    "3102": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7418,
        7999
      ],
      "op": "POP",
      "path": "4"
    },
    "3103": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7418,
        7999
      ],
      "op": "POP",
      "path": "4"
    },
    "3104": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7418,
        7999
      ],
      "op": "POP",
      "path": "4"
    },
    "3105": {
      "fn": "GameValidator.mintForServer",
      "offset": [
        7363,
        7999
      ],
      "op": "POP",
      "path": "4"
    },
    "3106": {
      "fn": "GameValidator.mintForServer",
      "jump": "o",
      "offset": [
        7363,
        7999
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3107": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6439,
        6891
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3108": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6485,
        6510
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3110": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6527
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3111": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6527
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3113": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6527
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3114": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6527
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3115": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6527
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3116": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6527
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "3119": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6527
      ],
      "op": "EXP",
      "path": "4"
    },
    "3120": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6527
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3121": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6527
      ],
      "op": "DIV",
      "path": "4"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3128": {
      "op": "SHL"
    },
    "3129": {
      "op": "SUB"
    },
    "3130": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6527
      ],
      "op": "AND",
      "path": "4"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3137": {
      "op": "SHL"
    },
    "3138": {
      "op": "SUB"
    },
    "3139": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6543
      ],
      "op": "AND",
      "path": "4"
    },
    "3140": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6543
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3DC0FF7D"
    },
    "3145": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3147": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3148": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3149": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "3154": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "AND",
      "path": "4"
    },
    "3155": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "3157": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "SHL",
      "path": "4"
    },
    "3158": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3159": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3160": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3162": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "ADD",
      "path": "4"
    },
    "3163": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3165": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3167": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3168": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3169": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3170": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "SUB",
      "path": "4"
    },
    "3171": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3172": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3173": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "GAS",
      "path": "4"
    },
    "3174": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "3175": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3176": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3177": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3178": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC77"
    },
    "3181": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3182": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3183": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3185": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3186": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3187": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3188": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3190": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3191": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3192": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "POP",
      "path": "4"
    },
    "3193": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "POP",
      "path": "4"
    },
    "3194": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "POP",
      "path": "4"
    },
    "3195": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "POP",
      "path": "4"
    },
    "3196": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3198": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3199": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3200": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3202": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3203": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3204": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3206": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3207": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3208": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3209": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "ADD",
      "path": "4"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3212": {
      "op": "NOT"
    },
    "3213": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "AND",
      "path": "4"
    },
    "3214": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3215": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "ADD",
      "path": "4"
    },
    "3216": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3218": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3219": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC9F"
    },
    "3222": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3223": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3224": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3225": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "ADD",
      "path": "4"
    },
    "3226": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3227": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1556"
    },
    "3230": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        6513,
        6545
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3231": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6513,
        6545
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3232": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6485,
        6545
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3233": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6485,
        6545
      ],
      "op": "POP",
      "path": "4"
    },
    "3234": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6560,
        6566
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3236": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6555,
        6885
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3237": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6576,
        6585
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3238": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6576,
        6592
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3239": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6572,
        6573
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3240": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6572,
        6592
      ],
      "op": "LT",
      "path": "4"
    },
    "3241": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6555,
        6885
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3242": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6555,
        6885
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDDD"
    },
    "3245": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6555,
        6885
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3246": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6613,
        6635
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3248": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6647
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3249": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6648,
        6649
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3250": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3251": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3252": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3253": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "LT",
      "path": "4"
    },
    "3254": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCC1"
    },
    "3257": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3258": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCC1"
    },
    "3261": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "3264": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        6638,
        6650
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3265": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3266": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3268": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "MUL",
      "path": "4"
    },
    "3269": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3271": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "ADD",
      "path": "4"
    },
    "3272": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "ADD",
      "path": "4"
    },
    "3273": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6638,
        6650
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3274": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6613,
        6650
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3275": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6613,
        6650
      ],
      "op": "POP",
      "path": "4"
    },
    "3276": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3278": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6715
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3280": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6716,
        6724
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3281": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3283": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3284": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCDD"
    },
    "3287": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3288": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3289": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16CA"
    },
    "3292": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        6694,
        6725
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3293": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3294": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3295": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3296": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3297": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3299": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3300": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3301": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3302": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3303": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3304": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "SUB",
      "path": "4"
    },
    "3305": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3307": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3308": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3309": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "ADD",
      "path": "4"
    },
    "3310": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3311": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3312": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3313": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3314": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3315": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3316": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "MUL",
      "path": "4"
    },
    "3317": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3318": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "ADD",
      "path": "4"
    },
    "3319": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3320": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "ADD",
      "path": "4"
    },
    "3321": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3322": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3323": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3324": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3325": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3326": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3327": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3328": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3329": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3330": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "ADD",
      "path": "4"
    },
    "3331": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6694,
        6725
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3332": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3333": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3334": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3335": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD39"
    },
    "3338": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3339": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3341": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "MUL",
      "path": "4"
    },
    "3342": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3343": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "ADD",
      "path": "4"
    },
    "3344": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3345": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3346": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3348": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3349": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3351": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3353": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3354": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3355": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3356": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3357": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3364": {
      "op": "SHL"
    },
    "3365": {
      "op": "SUB"
    },
    "3366": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "AND",
      "path": "4"
    },
    "3367": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3368": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3369": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3371": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3372": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3373": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "ADD",
      "path": "4"
    },
    "3374": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3375": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3377": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "ADD",
      "path": "4"
    },
    "3378": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3379": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3380": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "GT",
      "path": "4"
    },
    "3381": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD1B"
    },
    "3384": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3385": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3386": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "POP",
      "path": "4"
    },
    "3387": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "POP",
      "path": "4"
    },
    "3388": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "POP",
      "path": "4"
    },
    "3389": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "POP",
      "path": "4"
    },
    "3390": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "POP",
      "path": "4"
    },
    "3391": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3392": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6664,
        6725
      ],
      "op": "POP",
      "path": "4"
    },
    "3393": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6744,
        6750
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3395": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6739,
        6875
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3396": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6760,
        6770
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3397": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6760,
        6777
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3398": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6756,
        6757
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3399": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6756,
        6777
      ],
      "op": "LT",
      "path": "4"
    },
    "3400": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6739,
        6875
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3401": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6739,
        6875
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDC7"
    },
    "3404": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6739,
        6875
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3405": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6855,
        6860
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 28,
      "value": "0x0"
    },
    "3407": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6819
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "3409": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6820,
        6828
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3410": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3412": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3413": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD5E"
    },
    "3416": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3417": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3418": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16CA"
    },
    "3421": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        6802,
        6829
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3422": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3423": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3424": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3425": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3426": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3428": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "ADD",
      "path": "4"
    },
    "3429": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3431": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3432": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3433": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3434": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "SUB",
      "path": "4"
    },
    "3435": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3436": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6829
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3437": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3439": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6840
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3440": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6841,
        6842
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3441": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3442": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3443": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3444": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "LT",
      "path": "4"
    },
    "3445": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD80"
    },
    "3448": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3449": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD80"
    },
    "3452": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "3455": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        6830,
        6843
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3456": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3457": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3459": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3460": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3461": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "MUL",
      "path": "4"
    },
    "3462": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3463": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3464": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3465": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "ADD",
      "path": "4"
    },
    "3466": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3467": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "ADD",
      "path": "4"
    },
    "3468": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6830,
        6843
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3475": {
      "op": "SHL"
    },
    "3476": {
      "op": "SUB"
    },
    "3477": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "AND",
      "path": "4"
    },
    "3478": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3479": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3480": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3481": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "ADD",
      "path": "4"
    },
    "3482": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3483": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3484": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3485": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3486": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3488": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "ADD",
      "path": "4"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3491": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6844
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3492": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6852
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3494": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6852
      ],
      "op": "ADD",
      "path": "4"
    },
    "3495": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3496": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3499": {
      "op": "NOT"
    },
    "3500": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "AND",
      "path": "4"
    },
    "3501": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3502": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3503": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3504": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3505": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3506": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3507": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "OR",
      "path": "4"
    },
    "3508": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3509": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6802,
        6860
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3510": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6779,
        6782
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 29
    },
    "3511": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6779,
        6782
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDBF"
    },
    "3514": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6779,
        6782
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3515": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6779,
        6782
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166F"
    },
    "3518": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        6779,
        6782
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3519": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6779,
        6782
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3520": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6779,
        6782
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3521": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6779,
        6782
      ],
      "op": "POP",
      "path": "4"
    },
    "3522": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6779,
        6782
      ],
      "op": "POP",
      "path": "4"
    },
    "3523": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6739,
        6875
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD43"
    },
    "3526": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6739,
        6875
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3527": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6739,
        6875
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3528": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6739,
        6875
      ],
      "op": "POP",
      "path": "4"
    },
    "3529": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6599,
        6885
      ],
      "op": "POP",
      "path": "4"
    },
    "3530": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6599,
        6885
      ],
      "op": "POP",
      "path": "4"
    },
    "3531": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6594,
        6597
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 30
    },
    "3532": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6594,
        6597
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3533": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6594,
        6597
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDD5"
    },
    "3536": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6594,
        6597
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3537": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6594,
        6597
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166F"
    },
    "3540": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "i",
      "offset": [
        6594,
        6597
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3541": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6594,
        6597
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3542": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6594,
        6597
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3543": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6594,
        6597
      ],
      "op": "POP",
      "path": "4"
    },
    "3544": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6594,
        6597
      ],
      "op": "POP",
      "path": "4"
    },
    "3545": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6555,
        6885
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCA4"
    },
    "3548": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6555,
        6885
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3549": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6555,
        6885
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3550": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6555,
        6885
      ],
      "op": "POP",
      "path": "4"
    },
    "3551": {
      "fn": "GameValidator.resetSubmissions",
      "offset": [
        6475,
        6891
      ],
      "op": "POP",
      "path": "4"
    },
    "3552": {
      "fn": "GameValidator.resetSubmissions",
      "jump": "o",
      "offset": [
        6439,
        6891
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3553": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2484,
        2943
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3554": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2575,
        2595
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3556": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2618,
        2624
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3557": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2613,
        2834
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3558": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3560": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2656,
        2664
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3561": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3563": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3564": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF5"
    },
    "3567": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3568": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3569": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16CA"
    },
    "3572": {
      "fn": "GameValidator.updateValidatorsList",
      "jump": "i",
      "offset": [
        2634,
        2665
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3573": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3574": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3575": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3576": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3577": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3579": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3580": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3581": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3582": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3583": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "SUB",
      "path": "4"
    },
    "3584": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3586": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "ADD",
      "path": "4"
    },
    "3587": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3588": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2665
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3589": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2634,
        2672
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3590": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2630,
        2672
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3591": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2630,
        2672
      ],
      "op": "LT",
      "path": "4"
    },
    "3592": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2613,
        2834
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3593": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2613,
        2834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE7A"
    },
    "3596": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2613,
        2834
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3597": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2735,
        2744
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3604": {
      "op": "SHL"
    },
    "3605": {
      "op": "SUB"
    },
    "3606": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2744
      ],
      "op": "AND",
      "path": "4"
    },
    "3607": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3609": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2719,
        2727
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3610": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3612": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3613": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE26"
    },
    "3616": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3617": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3618": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16CA"
    },
    "3621": {
      "fn": "GameValidator.updateValidatorsList",
      "jump": "i",
      "offset": [
        2697,
        2728
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3622": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3623": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3624": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3625": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3626": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3628": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "ADD",
      "path": "4"
    },
    "3629": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3631": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3632": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3633": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3634": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "SUB",
      "path": "4"
    },
    "3635": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3636": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2728
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3637": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2729,
        2730
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3638": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3639": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3640": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3641": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "LT",
      "path": "4"
    },
    "3642": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE45"
    },
    "3645": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3646": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE45"
    },
    "3649": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1643"
    },
    "3652": {
      "fn": "GameValidator.updateValidatorsList",
      "jump": "i",
      "offset": [
        2697,
        2731
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3653": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3654": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3656": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3657": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3658": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3659": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3661": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3662": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3663": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3664": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "ADD",
      "path": "4"
    },
    "3665": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3672": {
      "op": "SHL"
    },
    "3673": {
      "op": "SUB"
    },
    "3674": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2731
      ],
      "op": "AND",
      "path": "4"
    },
    "3675": {
      "branch": 46,
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2697,
        2744
      ],
      "op": "SUB",
      "path": "4"
    },
    "3676": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2693,
        2824
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE68"
    },
    "3679": {
      "branch": 46,
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2693,
        2824
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3680": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2782,
        2786
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 31,
      "value": "0x1"
    },
    "3682": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2764,
        2786
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3683": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2764,
        2786
      ],
      "op": "POP",
      "path": "4"
    },
    "3684": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2804,
        2809
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 32,
      "value": "0xE7A"
    },
    "3687": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2804,
        2809
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3688": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2693,
        2824
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3689": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2674,
        2677
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 33
    },
    "3690": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2674,
        2677
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE72"
    },
    "3693": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2674,
        2677
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3694": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2674,
        2677
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166F"
    },
    "3697": {
      "fn": "GameValidator.updateValidatorsList",
      "jump": "i",
      "offset": [
        2674,
        2677
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3698": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2674,
        2677
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3699": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2674,
        2677
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3700": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2674,
        2677
      ],
      "op": "POP",
      "path": "4"
    },
    "3701": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2674,
        2677
      ],
      "op": "POP",
      "path": "4"
    },
    "3702": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2613,
        2834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDE5"
    },
    "3705": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2613,
        2834
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3706": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2613,
        2834
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3707": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2613,
        2834
      ],
      "op": "POP",
      "path": "4"
    },
    "3708": {
      "branch": 47,
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2848,
        2863
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3709": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2843,
        2937
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xECB"
    },
    "3712": {
      "branch": 47,
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2843,
        2937
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3713": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2900
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 34,
      "value": "0x2"
    },
    "3715": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2901,
        2909
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3716": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3718": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3719": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE90"
    },
    "3722": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3723": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3724": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16CA"
    },
    "3727": {
      "fn": "GameValidator.updateValidatorsList",
      "jump": "i",
      "offset": [
        2879,
        2910
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3728": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3729": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3730": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3731": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3732": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3734": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3735": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3737": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3738": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3739": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3740": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "SUB",
      "path": "4"
    },
    "3741": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3742": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "ADD",
      "path": "4"
    },
    "3743": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3744": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2910
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3745": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3746": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3747": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3749": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3750": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "ADD",
      "path": "4"
    },
    "3751": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3752": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3755": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3756": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3757": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3758": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3759": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3760": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3761": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "ADD",
      "path": "4"
    },
    "3762": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3763": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3770": {
      "op": "SHL"
    },
    "3771": {
      "op": "SUB"
    },
    "3772": {
      "op": "NOT"
    },
    "3773": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "AND",
      "path": "4"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3780": {
      "op": "SHL"
    },
    "3781": {
      "op": "SUB"
    },
    "3782": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3783": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "AND",
      "path": "4"
    },
    "3784": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "OR",
      "path": "4"
    },
    "3785": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3786": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2879,
        2926
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3787": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2843,
        2937
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3788": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2565,
        2943
      ],
      "op": "POP",
      "path": "4"
    },
    "3789": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2484,
        2943
      ],
      "op": "POP",
      "path": "4"
    },
    "3790": {
      "fn": "GameValidator.updateValidatorsList",
      "offset": [
        2484,
        2943
      ],
      "op": "POP",
      "path": "4"
    },
    "3791": {
      "fn": "GameValidator.updateValidatorsList",
      "jump": "o",
      "offset": [
        2484,
        2943
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3792": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2099,
        2478
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3793": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2152,
        2159
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3795": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2171,
        2193
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3796": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2214,
        2226
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "3798": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2214,
        2226
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3799": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2196,
        2211
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "3800": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2196,
        2226
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEE1"
    },
    "3803": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2196,
        2226
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3804": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2196,
        2226
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3805": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2196,
        2226
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16E6"
    },
    "3808": {
      "fn": "GameValidator.calculateMintAmount",
      "jump": "i",
      "offset": [
        2196,
        2226
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3809": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2196,
        2226
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3810": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2171,
        2226
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3811": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2171,
        2226
      ],
      "op": "POP",
      "path": "4"
    },
    "3812": {
      "offset": [
        1110,
        1120
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x258"
    },
    "3815": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2241,
        2255
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3816": {
      "branch": 48,
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2241,
        2271
      ],
      "op": "GT",
      "path": "4"
    },
    "3817": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2237,
        2369
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3818": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2237,
        2369
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEF2"
    },
    "3821": {
      "branch": 48,
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2237,
        2369
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3822": {
      "op": "POP"
    },
    "3823": {
      "offset": [
        1110,
        1120
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x258"
    },
    "3826": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2237,
        2369
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3827": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2386,
        2420
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 35,
      "value": "0xF04"
    },
    "3830": {
      "offset": [
        1188,
        1204
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0xDE0B6B3A7640000"
    },
    "3839": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2386,
        2400
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3840": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2386,
        2420
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x177A"
    },
    "3843": {
      "fn": "GameValidator.calculateMintAmount",
      "jump": "i",
      "offset": [
        2386,
        2420
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3844": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2386,
        2420
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3845": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2379,
        2420
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3846": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2379,
        2420
      ],
      "op": "POP",
      "path": "4"
    },
    "3847": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2379,
        2420
      ],
      "op": "POP",
      "path": "4"
    },
    "3848": {
      "fn": "GameValidator.calculateMintAmount",
      "offset": [
        2099,
        2478
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3849": {
      "fn": "GameValidator.calculateMintAmount",
      "jump": "o",
      "offset": [
        2099,
        2478
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3850": {
      "op": "JUMPDEST"
    },
    "3851": {
      "op": "DUP3"
    },
    "3852": {
      "op": "DUP1"
    },
    "3853": {
      "op": "SLOAD"
    },
    "3854": {
      "op": "DUP3"
    },
    "3855": {
      "op": "DUP3"
    },
    "3856": {
      "op": "SSTORE"
    },
    "3857": {
      "op": "SWAP1"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3860": {
      "op": "MSTORE"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3865": {
      "op": "KECCAK256"
    },
    "3866": {
      "op": "SWAP1"
    },
    "3867": {
      "op": "DUP2"
    },
    "3868": {
      "op": "ADD"
    },
    "3869": {
      "op": "SWAP3"
    },
    "3870": {
      "op": "DUP3"
    },
    "3871": {
      "op": "ISZERO"
    },
    "3872": {
      "op": "PUSH2",
      "value": "0xF50"
    },
    "3875": {
      "op": "JUMPI"
    },
    "3876": {
      "op": "SWAP2"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3879": {
      "op": "MUL"
    },
    "3880": {
      "op": "DUP3"
    },
    "3881": {
      "op": "ADD"
    },
    "3882": {
      "op": "JUMPDEST"
    },
    "3883": {
      "op": "DUP3"
    },
    "3884": {
      "op": "DUP2"
    },
    "3885": {
      "op": "GT"
    },
    "3886": {
      "op": "ISZERO"
    },
    "3887": {
      "op": "PUSH2",
      "value": "0xF50"
    },
    "3890": {
      "op": "JUMPI"
    },
    "3891": {
      "op": "DUP3"
    },
    "3892": {
      "op": "MLOAD"
    },
    "3893": {
      "op": "DUP3"
    },
    "3894": {
      "op": "SWAP1"
    },
    "3895": {
      "op": "PUSH2",
      "value": "0xF40"
    },
    "3898": {
      "op": "SWAP1"
    },
    "3899": {
      "op": "DUP3"
    },
    "3900": {
      "op": "PUSH2",
      "value": "0x17F3"
    },
    "3903": {
      "jump": "i",
      "op": "JUMP"
    },
    "3904": {
      "op": "JUMPDEST"
    },
    "3905": {
      "op": "POP"
    },
    "3906": {
      "op": "SWAP2"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3909": {
      "op": "ADD"
    },
    "3910": {
      "op": "SWAP2"
    },
    "3911": {
      "op": "SWAP1"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3914": {
      "op": "ADD"
    },
    "3915": {
      "op": "SWAP1"
    },
    "3916": {
      "op": "PUSH2",
      "value": "0xF2A"
    },
    "3919": {
      "op": "JUMP"
    },
    "3920": {
      "op": "JUMPDEST"
    },
    "3921": {
      "op": "POP"
    },
    "3922": {
      "op": "PUSH2",
      "value": "0xF5C"
    },
    "3925": {
      "op": "SWAP3"
    },
    "3926": {
      "op": "SWAP2"
    },
    "3927": {
      "op": "POP"
    },
    "3928": {
      "op": "PUSH2",
      "value": "0xF60"
    },
    "3931": {
      "jump": "i",
      "op": "JUMP"
    },
    "3932": {
      "op": "JUMPDEST"
    },
    "3933": {
      "op": "POP"
    },
    "3934": {
      "op": "SWAP1"
    },
    "3935": {
      "jump": "o",
      "op": "JUMP"
    },
    "3936": {
      "op": "JUMPDEST"
    },
    "3937": {
      "op": "DUP1"
    },
    "3938": {
      "op": "DUP3"
    },
    "3939": {
      "op": "GT"
    },
    "3940": {
      "op": "ISZERO"
    },
    "3941": {
      "op": "PUSH2",
      "value": "0xF5C"
    },
    "3944": {
      "op": "JUMPI"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3947": {
      "op": "PUSH2",
      "value": "0xF74"
    },
    "3950": {
      "op": "DUP3"
    },
    "3951": {
      "op": "DUP3"
    },
    "3952": {
      "op": "PUSH2",
      "value": "0xF7D"
    },
    "3955": {
      "jump": "i",
      "op": "JUMP"
    },
    "3956": {
      "op": "JUMPDEST"
    },
    "3957": {
      "op": "POP"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3960": {
      "op": "ADD"
    },
    "3961": {
      "op": "PUSH2",
      "value": "0xF60"
    },
    "3964": {
      "op": "JUMP"
    },
    "3965": {
      "op": "JUMPDEST"
    },
    "3966": {
      "op": "POP"
    },
    "3967": {
      "op": "DUP1"
    },
    "3968": {
      "op": "SLOAD"
    },
    "3969": {
      "op": "PUSH2",
      "value": "0xF89"
    },
    "3972": {
      "op": "SWAP1"
    },
    "3973": {
      "op": "PUSH2",
      "value": "0x1723"
    },
    "3976": {
      "jump": "i",
      "op": "JUMP"
    },
    "3977": {
      "op": "JUMPDEST"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3980": {
      "op": "DUP3"
    },
    "3981": {
      "op": "SSTORE"
    },
    "3982": {
      "op": "DUP1"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3985": {
      "op": "LT"
    },
    "3986": {
      "op": "PUSH2",
      "value": "0xF99"
    },
    "3989": {
      "op": "JUMPI"
    },
    "3990": {
      "op": "POP"
    },
    "3991": {
      "op": "POP"
    },
    "3992": {
      "jump": "o",
      "op": "JUMP"
    },
    "3993": {
      "op": "JUMPDEST"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3996": {
      "op": "ADD"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3999": {
      "op": "SWAP1"
    },
    "4000": {
      "op": "DIV"
    },
    "4001": {
      "op": "SWAP1"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4004": {
      "op": "MSTORE"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4009": {
      "op": "KECCAK256"
    },
    "4010": {
      "op": "SWAP1"
    },
    "4011": {
      "op": "DUP2"
    },
    "4012": {
      "op": "ADD"
    },
    "4013": {
      "op": "SWAP1"
    },
    "4014": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "4017": {
      "op": "SWAP2"
    },
    "4018": {
      "op": "SWAP1"
    },
    "4019": {
      "op": "JUMPDEST"
    },
    "4020": {
      "op": "DUP1"
    },
    "4021": {
      "op": "DUP3"
    },
    "4022": {
      "op": "GT"
    },
    "4023": {
      "op": "ISZERO"
    },
    "4024": {
      "op": "PUSH2",
      "value": "0xF5C"
    },
    "4027": {
      "op": "JUMPI"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4030": {
      "op": "DUP2"
    },
    "4031": {
      "op": "SSTORE"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4034": {
      "op": "ADD"
    },
    "4035": {
      "op": "PUSH2",
      "value": "0xFB3"
    },
    "4038": {
      "op": "JUMP"
    },
    "4039": {
      "op": "JUMPDEST"
    },
    "4040": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4047": {
      "op": "SHL"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4050": {
      "op": "MSTORE"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4055": {
      "op": "MSTORE"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4060": {
      "op": "REVERT"
    },
    "4061": {
      "op": "JUMPDEST"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4064": {
      "op": "DUP1"
    },
    "4065": {
      "op": "MLOAD"
    },
    "4066": {
      "op": "SWAP1"
    },
    "4067": {
      "op": "DUP2"
    },
    "4068": {
      "op": "ADD"
    },
    "4069": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4078": {
      "op": "DUP2"
    },
    "4079": {
      "op": "GT"
    },
    "4080": {
      "op": "DUP3"
    },
    "4081": {
      "op": "DUP3"
    },
    "4082": {
      "op": "LT"
    },
    "4083": {
      "op": "OR"
    },
    "4084": {
      "op": "ISZERO"
    },
    "4085": {
      "op": "PUSH2",
      "value": "0x1000"
    },
    "4088": {
      "op": "JUMPI"
    },
    "4089": {
      "op": "PUSH2",
      "value": "0x1000"
    },
    "4092": {
      "op": "PUSH2",
      "value": "0xFC7"
    },
    "4095": {
      "jump": "i",
      "op": "JUMP"
    },
    "4096": {
      "op": "JUMPDEST"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4099": {
      "op": "MSTORE"
    },
    "4100": {
      "op": "SWAP1"
    },
    "4101": {
      "jump": "o",
      "op": "JUMP"
    },
    "4102": {
      "op": "JUMPDEST"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4105": {
      "op": "MLOAD"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4108": {
      "op": "DUP3"
    },
    "4109": {
      "op": "ADD"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4112": {
      "op": "NOT"
    },
    "4113": {
      "op": "AND"
    },
    "4114": {
      "op": "DUP2"
    },
    "4115": {
      "op": "ADD"
    },
    "4116": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4125": {
      "op": "DUP2"
    },
    "4126": {
      "op": "GT"
    },
    "4127": {
      "op": "DUP3"
    },
    "4128": {
      "op": "DUP3"
    },
    "4129": {
      "op": "LT"
    },
    "4130": {
      "op": "OR"
    },
    "4131": {
      "op": "ISZERO"
    },
    "4132": {
      "op": "PUSH2",
      "value": "0x102F"
    },
    "4135": {
      "op": "JUMPI"
    },
    "4136": {
      "op": "PUSH2",
      "value": "0x102F"
    },
    "4139": {
      "op": "PUSH2",
      "value": "0xFC7"
    },
    "4142": {
      "jump": "i",
      "op": "JUMP"
    },
    "4143": {
      "op": "JUMPDEST"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4146": {
      "op": "MSTORE"
    },
    "4147": {
      "op": "SWAP2"
    },
    "4148": {
      "op": "SWAP1"
    },
    "4149": {
      "op": "POP"
    },
    "4150": {
      "jump": "o",
      "op": "JUMP"
    },
    "4151": {
      "op": "JUMPDEST"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4154": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4163": {
      "op": "DUP3"
    },
    "4164": {
      "op": "GT"
    },
    "4165": {
      "op": "ISZERO"
    },
    "4166": {
      "op": "PUSH2",
      "value": "0x1051"
    },
    "4169": {
      "op": "JUMPI"
    },
    "4170": {
      "op": "PUSH2",
      "value": "0x1051"
    },
    "4173": {
      "op": "PUSH2",
      "value": "0xFC7"
    },
    "4176": {
      "jump": "i",
      "op": "JUMP"
    },
    "4177": {
      "op": "JUMPDEST"
    },
    "4178": {
      "op": "POP"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4181": {
      "op": "SHL"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4184": {
      "op": "ADD"
    },
    "4185": {
      "op": "SWAP1"
    },
    "4186": {
      "jump": "o",
      "op": "JUMP"
    },
    "4187": {
      "op": "JUMPDEST"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4190": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4199": {
      "op": "DUP3"
    },
    "4200": {
      "op": "GT"
    },
    "4201": {
      "op": "ISZERO"
    },
    "4202": {
      "op": "PUSH2",
      "value": "0x1075"
    },
    "4205": {
      "op": "JUMPI"
    },
    "4206": {
      "op": "PUSH2",
      "value": "0x1075"
    },
    "4209": {
      "op": "PUSH2",
      "value": "0xFC7"
    },
    "4212": {
      "jump": "i",
      "op": "JUMP"
    },
    "4213": {
      "op": "JUMPDEST"
    },
    "4214": {
      "op": "POP"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4217": {
      "op": "ADD"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4220": {
      "op": "NOT"
    },
    "4221": {
      "op": "AND"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4224": {
      "op": "ADD"
    },
    "4225": {
      "op": "SWAP1"
    },
    "4226": {
      "jump": "o",
      "op": "JUMP"
    },
    "4227": {
      "op": "JUMPDEST"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4233": {
      "op": "DUP4"
    },
    "4234": {
      "op": "ADD"
    },
    "4235": {
      "op": "SLT"
    },
    "4236": {
      "op": "PUSH2",
      "value": "0x1094"
    },
    "4239": {
      "op": "JUMPI"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4242": {
      "op": "DUP1"
    },
    "4243": {
      "op": "REVERT"
    },
    "4244": {
      "op": "JUMPDEST"
    },
    "4245": {
      "op": "DUP2"
    },
    "4246": {
      "op": "CALLDATALOAD"
    },
    "4247": {
      "op": "PUSH2",
      "value": "0x10A7"
    },
    "4250": {
      "op": "PUSH2",
      "value": "0x10A2"
    },
    "4253": {
      "op": "DUP3"
    },
    "4254": {
      "op": "PUSH2",
      "value": "0x105B"
    },
    "4257": {
      "jump": "i",
      "op": "JUMP"
    },
    "4258": {
      "op": "JUMPDEST"
    },
    "4259": {
      "op": "PUSH2",
      "value": "0x1006"
    },
    "4262": {
      "jump": "i",
      "op": "JUMP"
    },
    "4263": {
      "op": "JUMPDEST"
    },
    "4264": {
      "op": "DUP2"
    },
    "4265": {
      "op": "DUP2"
    },
    "4266": {
      "op": "MSTORE"
    },
    "4267": {
      "op": "DUP5"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4270": {
      "op": "DUP4"
    },
    "4271": {
      "op": "DUP7"
    },
    "4272": {
      "op": "ADD"
    },
    "4273": {
      "op": "ADD"
    },
    "4274": {
      "op": "GT"
    },
    "4275": {
      "op": "ISZERO"
    },
    "4276": {
      "op": "PUSH2",
      "value": "0x10BC"
    },
    "4279": {
      "op": "JUMPI"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4282": {
      "op": "DUP1"
    },
    "4283": {
      "op": "REVERT"
    },
    "4284": {
      "op": "JUMPDEST"
    },
    "4285": {
      "op": "DUP2"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4288": {
      "op": "DUP6"
    },
    "4289": {
      "op": "ADD"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4292": {
      "op": "DUP4"
    },
    "4293": {
      "op": "ADD"
    },
    "4294": {
      "op": "CALLDATACOPY"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4297": {
      "op": "SWAP2"
    },
    "4298": {
      "op": "DUP2"
    },
    "4299": {
      "op": "ADD"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4302": {
      "op": "ADD"
    },
    "4303": {
      "op": "SWAP2"
    },
    "4304": {
      "op": "SWAP1"
    },
    "4305": {
      "op": "SWAP2"
    },
    "4306": {
      "op": "MSTORE"
    },
    "4307": {
      "op": "SWAP4"
    },
    "4308": {
      "op": "SWAP3"
    },
    "4309": {
      "op": "POP"
    },
    "4310": {
      "op": "POP"
    },
    "4311": {
      "op": "POP"
    },
    "4312": {
      "jump": "o",
      "op": "JUMP"
    },
    "4313": {
      "op": "JUMPDEST"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4316": {
      "op": "DUP3"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4319": {
      "op": "DUP4"
    },
    "4320": {
      "op": "ADD"
    },
    "4321": {
      "op": "SLT"
    },
    "4322": {
      "op": "PUSH2",
      "value": "0x10EA"
    },
    "4325": {
      "op": "JUMPI"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4328": {
      "op": "DUP1"
    },
    "4329": {
      "op": "REVERT"
    },
    "4330": {
      "op": "JUMPDEST"
    },
    "4331": {
      "op": "DUP2"
    },
    "4332": {
      "op": "CALLDATALOAD"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4335": {
      "op": "PUSH2",
      "value": "0x10FA"
    },
    "4338": {
      "op": "PUSH2",
      "value": "0x10A2"
    },
    "4341": {
      "op": "DUP4"
    },
    "4342": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "4345": {
      "jump": "i",
      "op": "JUMP"
    },
    "4346": {
      "op": "JUMPDEST"
    },
    "4347": {
      "op": "DUP3"
    },
    "4348": {
      "op": "DUP2"
    },
    "4349": {
      "op": "MSTORE"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4352": {
      "op": "SWAP3"
    },
    "4353": {
      "op": "SWAP1"
    },
    "4354": {
      "op": "SWAP3"
    },
    "4355": {
      "op": "SHL"
    },
    "4356": {
      "op": "DUP5"
    },
    "4357": {
      "op": "ADD"
    },
    "4358": {
      "op": "DUP2"
    },
    "4359": {
      "op": "ADD"
    },
    "4360": {
      "op": "SWAP2"
    },
    "4361": {
      "op": "DUP2"
    },
    "4362": {
      "op": "DUP2"
    },
    "4363": {
      "op": "ADD"
    },
    "4364": {
      "op": "SWAP1"
    },
    "4365": {
      "op": "DUP7"
    },
    "4366": {
      "op": "DUP5"
    },
    "4367": {
      "op": "GT"
    },
    "4368": {
      "op": "ISZERO"
    },
    "4369": {
      "op": "PUSH2",
      "value": "0x1119"
    },
    "4372": {
      "op": "JUMPI"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4375": {
      "op": "DUP1"
    },
    "4376": {
      "op": "REVERT"
    },
    "4377": {
      "op": "JUMPDEST"
    },
    "4378": {
      "op": "DUP3"
    },
    "4379": {
      "op": "DUP7"
    },
    "4380": {
      "op": "ADD"
    },
    "4381": {
      "op": "JUMPDEST"
    },
    "4382": {
      "op": "DUP5"
    },
    "4383": {
      "op": "DUP2"
    },
    "4384": {
      "op": "LT"
    },
    "4385": {
      "op": "ISZERO"
    },
    "4386": {
      "op": "PUSH2",
      "value": "0x1159"
    },
    "4389": {
      "op": "JUMPI"
    },
    "4390": {
      "op": "DUP1"
    },
    "4391": {
      "op": "CALLDATALOAD"
    },
    "4392": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4401": {
      "op": "DUP2"
    },
    "4402": {
      "op": "GT"
    },
    "4403": {
      "op": "ISZERO"
    },
    "4404": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4407": {
      "op": "JUMPI"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4410": {
      "op": "DUP1"
    },
    "4411": {
      "op": "DUP2"
    },
    "4412": {
      "op": "REVERT"
    },
    "4413": {
      "op": "JUMPDEST"
    },
    "4414": {
      "op": "PUSH2",
      "value": "0x114B"
    },
    "4417": {
      "op": "DUP10"
    },
    "4418": {
      "op": "DUP7"
    },
    "4419": {
      "op": "DUP4"
    },
    "4420": {
      "op": "DUP12"
    },
    "4421": {
      "op": "ADD"
    },
    "4422": {
      "op": "ADD"
    },
    "4423": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4426": {
      "jump": "i",
      "op": "JUMP"
    },
    "4427": {
      "op": "JUMPDEST"
    },
    "4428": {
      "op": "DUP5"
    },
    "4429": {
      "op": "MSTORE"
    },
    "4430": {
      "op": "POP"
    },
    "4431": {
      "op": "SWAP2"
    },
    "4432": {
      "op": "DUP4"
    },
    "4433": {
      "op": "ADD"
    },
    "4434": {
      "op": "SWAP2"
    },
    "4435": {
      "op": "DUP4"
    },
    "4436": {
      "op": "ADD"
    },
    "4437": {
      "op": "PUSH2",
      "value": "0x111D"
    },
    "4440": {
      "op": "JUMP"
    },
    "4441": {
      "op": "JUMPDEST"
    },
    "4442": {
      "op": "POP"
    },
    "4443": {
      "op": "SWAP7"
    },
    "4444": {
      "op": "SWAP6"
    },
    "4445": {
      "op": "POP"
    },
    "4446": {
      "op": "POP"
    },
    "4447": {
      "op": "POP"
    },
    "4448": {
      "op": "POP"
    },
    "4449": {
      "op": "POP"
    },
    "4450": {
      "op": "POP"
    },
    "4451": {
      "jump": "o",
      "op": "JUMP"
    },
    "4452": {
      "op": "JUMPDEST"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4457": {
      "op": "DUP3"
    },
    "4458": {
      "op": "DUP5"
    },
    "4459": {
      "op": "SUB"
    },
    "4460": {
      "op": "SLT"
    },
    "4461": {
      "op": "ISZERO"
    },
    "4462": {
      "op": "PUSH2",
      "value": "0x1176"
    },
    "4465": {
      "op": "JUMPI"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4468": {
      "op": "DUP1"
    },
    "4469": {
      "op": "REVERT"
    },
    "4470": {
      "op": "JUMPDEST"
    },
    "4471": {
      "op": "DUP2"
    },
    "4472": {
      "op": "CALLDATALOAD"
    },
    "4473": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4482": {
      "op": "DUP2"
    },
    "4483": {
      "op": "GT"
    },
    "4484": {
      "op": "ISZERO"
    },
    "4485": {
      "op": "PUSH2",
      "value": "0x118D"
    },
    "4488": {
      "op": "JUMPI"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4491": {
      "op": "DUP1"
    },
    "4492": {
      "op": "REVERT"
    },
    "4493": {
      "op": "JUMPDEST"
    },
    "4494": {
      "op": "PUSH2",
      "value": "0x1199"
    },
    "4497": {
      "op": "DUP5"
    },
    "4498": {
      "op": "DUP3"
    },
    "4499": {
      "op": "DUP6"
    },
    "4500": {
      "op": "ADD"
    },
    "4501": {
      "op": "PUSH2",
      "value": "0x10D9"
    },
    "4504": {
      "jump": "i",
      "op": "JUMP"
    },
    "4505": {
      "op": "JUMPDEST"
    },
    "4506": {
      "op": "SWAP5"
    },
    "4507": {
      "op": "SWAP4"
    },
    "4508": {
      "op": "POP"
    },
    "4509": {
      "op": "POP"
    },
    "4510": {
      "op": "POP"
    },
    "4511": {
      "op": "POP"
    },
    "4512": {
      "jump": "o",
      "op": "JUMP"
    },
    "4513": {
      "op": "JUMPDEST"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4516": {
      "op": "DUP1"
    },
    "4517": {
      "op": "DUP3"
    },
    "4518": {
      "op": "MSTORE"
    },
    "4519": {
      "op": "DUP3"
    },
    "4520": {
      "op": "MLOAD"
    },
    "4521": {
      "op": "DUP3"
    },
    "4522": {
      "op": "DUP3"
    },
    "4523": {
      "op": "ADD"
    },
    "4524": {
      "op": "DUP2"
    },
    "4525": {
      "op": "SWAP1"
    },
    "4526": {
      "op": "MSTORE"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4529": {
      "op": "SWAP2"
    },
    "4530": {
      "op": "SWAP1"
    },
    "4531": {
      "op": "DUP5"
    },
    "4532": {
      "op": "DUP3"
    },
    "4533": {
      "op": "ADD"
    },
    "4534": {
      "op": "SWAP1"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4537": {
      "op": "DUP6"
    },
    "4538": {
      "op": "ADD"
    },
    "4539": {
      "op": "SWAP1"
    },
    "4540": {
      "op": "DUP5"
    },
    "4541": {
      "op": "JUMPDEST"
    },
    "4542": {
      "op": "DUP2"
    },
    "4543": {
      "op": "DUP2"
    },
    "4544": {
      "op": "LT"
    },
    "4545": {
      "op": "ISZERO"
    },
    "4546": {
      "op": "PUSH2",
      "value": "0x11E2"
    },
    "4549": {
      "op": "JUMPI"
    },
    "4550": {
      "op": "DUP4"
    },
    "4551": {
      "op": "MLOAD"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4558": {
      "op": "SHL"
    },
    "4559": {
      "op": "SUB"
    },
    "4560": {
      "op": "AND"
    },
    "4561": {
      "op": "DUP4"
    },
    "4562": {
      "op": "MSTORE"
    },
    "4563": {
      "op": "SWAP3"
    },
    "4564": {
      "op": "DUP5"
    },
    "4565": {
      "op": "ADD"
    },
    "4566": {
      "op": "SWAP3"
    },
    "4567": {
      "op": "SWAP2"
    },
    "4568": {
      "op": "DUP5"
    },
    "4569": {
      "op": "ADD"
    },
    "4570": {
      "op": "SWAP2"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4573": {
      "op": "ADD"
    },
    "4574": {
      "op": "PUSH2",
      "value": "0x11BD"
    },
    "4577": {
      "op": "JUMP"
    },
    "4578": {
      "op": "JUMPDEST"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "op": "SWAP1"
    },
    "4581": {
      "op": "SWAP7"
    },
    "4582": {
      "op": "SWAP6"
    },
    "4583": {
      "op": "POP"
    },
    "4584": {
      "op": "POP"
    },
    "4585": {
      "op": "POP"
    },
    "4586": {
      "op": "POP"
    },
    "4587": {
      "op": "POP"
    },
    "4588": {
      "op": "POP"
    },
    "4589": {
      "jump": "o",
      "op": "JUMP"
    },
    "4590": {
      "op": "JUMPDEST"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4597": {
      "op": "SHL"
    },
    "4598": {
      "op": "SUB"
    },
    "4599": {
      "op": "DUP2"
    },
    "4600": {
      "op": "AND"
    },
    "4601": {
      "op": "DUP2"
    },
    "4602": {
      "op": "EQ"
    },
    "4603": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "4606": {
      "op": "JUMPI"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4609": {
      "op": "DUP1"
    },
    "4610": {
      "op": "REVERT"
    },
    "4611": {
      "op": "JUMPDEST"
    },
    "4612": {
      "op": "DUP1"
    },
    "4613": {
      "op": "CALLDATALOAD"
    },
    "4614": {
      "op": "PUSH2",
      "value": "0x120E"
    },
    "4617": {
      "op": "DUP2"
    },
    "4618": {
      "op": "PUSH2",
      "value": "0x11EE"
    },
    "4621": {
      "jump": "i",
      "op": "JUMP"
    },
    "4622": {
      "op": "JUMPDEST"
    },
    "4623": {
      "op": "SWAP2"
    },
    "4624": {
      "op": "SWAP1"
    },
    "4625": {
      "op": "POP"
    },
    "4626": {
      "jump": "o",
      "op": "JUMP"
    },
    "4627": {
      "op": "JUMPDEST"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4630": {
      "op": "DUP1"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4633": {
      "op": "DUP4"
    },
    "4634": {
      "op": "DUP6"
    },
    "4635": {
      "op": "SUB"
    },
    "4636": {
      "op": "SLT"
    },
    "4637": {
      "op": "ISZERO"
    },
    "4638": {
      "op": "PUSH2",
      "value": "0x1226"
    },
    "4641": {
      "op": "JUMPI"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4644": {
      "op": "DUP1"
    },
    "4645": {
      "op": "REVERT"
    },
    "4646": {
      "op": "JUMPDEST"
    },
    "4647": {
      "op": "DUP3"
    },
    "4648": {
      "op": "CALLDATALOAD"
    },
    "4649": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4658": {
      "op": "DUP2"
    },
    "4659": {
      "op": "GT"
    },
    "4660": {
      "op": "ISZERO"
    },
    "4661": {
      "op": "PUSH2",
      "value": "0x123D"
    },
    "4664": {
      "op": "JUMPI"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4667": {
      "op": "DUP1"
    },
    "4668": {
      "op": "REVERT"
    },
    "4669": {
      "op": "JUMPDEST"
    },
    "4670": {
      "op": "PUSH2",
      "value": "0x1249"
    },
    "4673": {
      "op": "DUP6"
    },
    "4674": {
      "op": "DUP3"
    },
    "4675": {
      "op": "DUP7"
    },
    "4676": {
      "op": "ADD"
    },
    "4677": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4680": {
      "jump": "i",
      "op": "JUMP"
    },
    "4681": {
      "op": "JUMPDEST"
    },
    "4682": {
      "op": "SWAP3"
    },
    "4683": {
      "op": "POP"
    },
    "4684": {
      "op": "POP"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4687": {
      "op": "DUP4"
    },
    "4688": {
      "op": "ADD"
    },
    "4689": {
      "op": "CALLDATALOAD"
    },
    "4690": {
      "op": "PUSH2",
      "value": "0x125A"
    },
    "4693": {
      "op": "DUP2"
    },
    "4694": {
      "op": "PUSH2",
      "value": "0x11EE"
    },
    "4697": {
      "jump": "i",
      "op": "JUMP"
    },
    "4698": {
      "op": "JUMPDEST"
    },
    "4699": {
      "op": "DUP1"
    },
    "4700": {
      "op": "SWAP2"
    },
    "4701": {
      "op": "POP"
    },
    "4702": {
      "op": "POP"
    },
    "4703": {
      "op": "SWAP3"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "op": "SWAP3"
    },
    "4706": {
      "op": "SWAP1"
    },
    "4707": {
      "op": "POP"
    },
    "4708": {
      "jump": "o",
      "op": "JUMP"
    },
    "4709": {
      "op": "JUMPDEST"
    },
    "4710": {
      "op": "DUP1"
    },
    "4711": {
      "op": "ISZERO"
    },
    "4712": {
      "op": "ISZERO"
    },
    "4713": {
      "op": "DUP2"
    },
    "4714": {
      "op": "EQ"
    },
    "4715": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "4718": {
      "op": "JUMPI"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4721": {
      "op": "DUP1"
    },
    "4722": {
      "op": "REVERT"
    },
    "4723": {
      "op": "JUMPDEST"
    },
    "4724": {
      "op": "DUP1"
    },
    "4725": {
      "op": "CALLDATALOAD"
    },
    "4726": {
      "op": "PUSH2",
      "value": "0x120E"
    },
    "4729": {
      "op": "DUP2"
    },
    "4730": {
      "op": "PUSH2",
      "value": "0x1265"
    },
    "4733": {
      "jump": "i",
      "op": "JUMP"
    },
    "4734": {
      "op": "JUMPDEST"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4737": {
      "op": "DUP1"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4742": {
      "op": "DUP5"
    },
    "4743": {
      "op": "DUP7"
    },
    "4744": {
      "op": "SUB"
    },
    "4745": {
      "op": "SLT"
    },
    "4746": {
      "op": "ISZERO"
    },
    "4747": {
      "op": "PUSH2",
      "value": "0x1293"
    },
    "4750": {
      "op": "JUMPI"
    },
    "4751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4753": {
      "op": "DUP1"
    },
    "4754": {
      "op": "REVERT"
    },
    "4755": {
      "op": "JUMPDEST"
    },
    "4756": {
      "op": "DUP4"
    },
    "4757": {
      "op": "CALLDATALOAD"
    },
    "4758": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4767": {
      "op": "DUP1"
    },
    "4768": {
      "op": "DUP3"
    },
    "4769": {
      "op": "GT"
    },
    "4770": {
      "op": "ISZERO"
    },
    "4771": {
      "op": "PUSH2",
      "value": "0x12AB"
    },
    "4774": {
      "op": "JUMPI"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4777": {
      "op": "DUP1"
    },
    "4778": {
      "op": "REVERT"
    },
    "4779": {
      "op": "JUMPDEST"
    },
    "4780": {
      "op": "DUP2"
    },
    "4781": {
      "op": "DUP7"
    },
    "4782": {
      "op": "ADD"
    },
    "4783": {
      "op": "SWAP2"
    },
    "4784": {
      "op": "POP"
    },
    "4785": {
      "op": "DUP7"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4788": {
      "op": "DUP4"
    },
    "4789": {
      "op": "ADD"
    },
    "4790": {
      "op": "SLT"
    },
    "4791": {
      "op": "PUSH2",
      "value": "0x12BF"
    },
    "4794": {
      "op": "JUMPI"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4797": {
      "op": "DUP1"
    },
    "4798": {
      "op": "REVERT"
    },
    "4799": {
      "op": "JUMPDEST"
    },
    "4800": {
      "op": "DUP2"
    },
    "4801": {
      "op": "CALLDATALOAD"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4804": {
      "op": "PUSH2",
      "value": "0x12CF"
    },
    "4807": {
      "op": "PUSH2",
      "value": "0x10A2"
    },
    "4810": {
      "op": "DUP4"
    },
    "4811": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "4814": {
      "jump": "i",
      "op": "JUMP"
    },
    "4815": {
      "op": "JUMPDEST"
    },
    "4816": {
      "op": "DUP3"
    },
    "4817": {
      "op": "DUP2"
    },
    "4818": {
      "op": "MSTORE"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4821": {
      "op": "SWAP3"
    },
    "4822": {
      "op": "SWAP1"
    },
    "4823": {
      "op": "SWAP3"
    },
    "4824": {
      "op": "SHL"
    },
    "4825": {
      "op": "DUP5"
    },
    "4826": {
      "op": "ADD"
    },
    "4827": {
      "op": "DUP2"
    },
    "4828": {
      "op": "ADD"
    },
    "4829": {
      "op": "SWAP2"
    },
    "4830": {
      "op": "DUP2"
    },
    "4831": {
      "op": "DUP2"
    },
    "4832": {
      "op": "ADD"
    },
    "4833": {
      "op": "SWAP1"
    },
    "4834": {
      "op": "DUP11"
    },
    "4835": {
      "op": "DUP5"
    },
    "4836": {
      "op": "GT"
    },
    "4837": {
      "op": "ISZERO"
    },
    "4838": {
      "op": "PUSH2",
      "value": "0x12EE"
    },
    "4841": {
      "op": "JUMPI"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4844": {
      "op": "DUP1"
    },
    "4845": {
      "op": "REVERT"
    },
    "4846": {
      "op": "JUMPDEST"
    },
    "4847": {
      "op": "DUP3"
    },
    "4848": {
      "op": "DUP7"
    },
    "4849": {
      "op": "ADD"
    },
    "4850": {
      "op": "JUMPDEST"
    },
    "4851": {
      "op": "DUP5"
    },
    "4852": {
      "op": "DUP2"
    },
    "4853": {
      "op": "LT"
    },
    "4854": {
      "op": "ISZERO"
    },
    "4855": {
      "op": "PUSH2",
      "value": "0x137F"
    },
    "4858": {
      "op": "JUMPI"
    },
    "4859": {
      "op": "DUP1"
    },
    "4860": {
      "op": "CALLDATALOAD"
    },
    "4861": {
      "op": "DUP7"
    },
    "4862": {
      "op": "DUP2"
    },
    "4863": {
      "op": "GT"
    },
    "4864": {
      "op": "ISZERO"
    },
    "4865": {
      "op": "PUSH2",
      "value": "0x1309"
    },
    "4868": {
      "op": "JUMPI"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4871": {
      "op": "DUP1"
    },
    "4872": {
      "op": "REVERT"
    },
    "4873": {
      "op": "JUMPDEST"
    },
    "4874": {
      "op": "DUP8"
    },
    "4875": {
      "op": "ADD"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4878": {
      "op": "DUP2"
    },
    "4879": {
      "op": "DUP15"
    },
    "4880": {
      "op": "SUB"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4883": {
      "op": "NOT"
    },
    "4884": {
      "op": "ADD"
    },
    "4885": {
      "op": "SLT"
    },
    "4886": {
      "op": "ISZERO"
    },
    "4887": {
      "op": "PUSH2",
      "value": "0x1320"
    },
    "4890": {
      "op": "JUMPI"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4893": {
      "op": "DUP1"
    },
    "4894": {
      "op": "DUP2"
    },
    "4895": {
      "op": "REVERT"
    },
    "4896": {
      "op": "JUMPDEST"
    },
    "4897": {
      "op": "PUSH2",
      "value": "0x1328"
    },
    "4900": {
      "op": "PUSH2",
      "value": "0xFDD"
    },
    "4903": {
      "jump": "i",
      "op": "JUMP"
    },
    "4904": {
      "op": "JUMPDEST"
    },
    "4905": {
      "op": "DUP6"
    },
    "4906": {
      "op": "DUP3"
    },
    "4907": {
      "op": "ADD"
    },
    "4908": {
      "op": "CALLDATALOAD"
    },
    "4909": {
      "op": "DUP9"
    },
    "4910": {
      "op": "DUP2"
    },
    "4911": {
      "op": "GT"
    },
    "4912": {
      "op": "ISZERO"
    },
    "4913": {
      "op": "PUSH2",
      "value": "0x133A"
    },
    "4916": {
      "op": "JUMPI"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4919": {
      "op": "DUP1"
    },
    "4920": {
      "op": "DUP2"
    },
    "4921": {
      "op": "REVERT"
    },
    "4922": {
      "op": "JUMPDEST"
    },
    "4923": {
      "op": "PUSH2",
      "value": "0x1348"
    },
    "4926": {
      "op": "DUP16"
    },
    "4927": {
      "op": "DUP9"
    },
    "4928": {
      "op": "DUP4"
    },
    "4929": {
      "op": "DUP7"
    },
    "4930": {
      "op": "ADD"
    },
    "4931": {
      "op": "ADD"
    },
    "4932": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4935": {
      "jump": "i",
      "op": "JUMP"
    },
    "4936": {
      "op": "JUMPDEST"
    },
    "4937": {
      "op": "DUP3"
    },
    "4938": {
      "op": "MSTORE"
    },
    "4939": {
      "op": "POP"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4942": {
      "op": "DUP3"
    },
    "4943": {
      "op": "ADD"
    },
    "4944": {
      "op": "CALLDATALOAD"
    },
    "4945": {
      "op": "DUP9"
    },
    "4946": {
      "op": "DUP2"
    },
    "4947": {
      "op": "GT"
    },
    "4948": {
      "op": "ISZERO"
    },
    "4949": {
      "op": "PUSH2",
      "value": "0x135E"
    },
    "4952": {
      "op": "JUMPI"
    },
    "4953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4955": {
      "op": "DUP1"
    },
    "4956": {
      "op": "DUP2"
    },
    "4957": {
      "op": "REVERT"
    },
    "4958": {
      "op": "JUMPDEST"
    },
    "4959": {
      "op": "PUSH2",
      "value": "0x136C"
    },
    "4962": {
      "op": "DUP16"
    },
    "4963": {
      "op": "DUP9"
    },
    "4964": {
      "op": "DUP4"
    },
    "4965": {
      "op": "DUP7"
    },
    "4966": {
      "op": "ADD"
    },
    "4967": {
      "op": "ADD"
    },
    "4968": {
      "op": "PUSH2",
      "value": "0x10D9"
    },
    "4971": {
      "jump": "i",
      "op": "JUMP"
    },
    "4972": {
      "op": "JUMPDEST"
    },
    "4973": {
      "op": "DUP3"
    },
    "4974": {
      "op": "DUP9"
    },
    "4975": {
      "op": "ADD"
    },
    "4976": {
      "op": "MSTORE"
    },
    "4977": {
      "op": "POP"
    },
    "4978": {
      "op": "DUP5"
    },
    "4979": {
      "op": "MSTORE"
    },
    "4980": {
      "op": "POP"
    },
    "4981": {
      "op": "SWAP2"
    },
    "4982": {
      "op": "DUP4"
    },
    "4983": {
      "op": "ADD"
    },
    "4984": {
      "op": "SWAP2"
    },
    "4985": {
      "op": "DUP4"
    },
    "4986": {
      "op": "ADD"
    },
    "4987": {
      "op": "PUSH2",
      "value": "0x12F2"
    },
    "4990": {
      "op": "JUMP"
    },
    "4991": {
      "op": "JUMPDEST"
    },
    "4992": {
      "op": "POP"
    },
    "4993": {
      "op": "SWAP8"
    },
    "4994": {
      "op": "POP"
    },
    "4995": {
      "op": "PUSH2",
      "value": "0x138F"
    },
    "4998": {
      "op": "SWAP1"
    },
    "4999": {
      "op": "POP"
    },
    "5000": {
      "op": "DUP9"
    },
    "5001": {
      "op": "DUP3"
    },
    "5002": {
      "op": "ADD"
    },
    "5003": {
      "op": "PUSH2",
      "value": "0x1203"
    },
    "5006": {
      "jump": "i",
      "op": "JUMP"
    },
    "5007": {
      "op": "JUMPDEST"
    },
    "5008": {
      "op": "SWAP6"
    },
    "5009": {
      "op": "POP"
    },
    "5010": {
      "op": "POP"
    },
    "5011": {
      "op": "POP"
    },
    "5012": {
      "op": "POP"
    },
    "5013": {
      "op": "POP"
    },
    "5014": {
      "op": "PUSH2",
      "value": "0x13A1"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5019": {
      "op": "DUP6"
    },
    "5020": {
      "op": "ADD"
    },
    "5021": {
      "op": "PUSH2",
      "value": "0x1273"
    },
    "5024": {
      "jump": "i",
      "op": "JUMP"
    },
    "5025": {
      "op": "JUMPDEST"
    },
    "5026": {
      "op": "SWAP1"
    },
    "5027": {
      "op": "POP"
    },
    "5028": {
      "op": "SWAP3"
    },
    "5029": {
      "op": "POP"
    },
    "5030": {
      "op": "SWAP3"
    },
    "5031": {
      "op": "POP"
    },
    "5032": {
      "op": "SWAP3"
    },
    "5033": {
      "jump": "o",
      "op": "JUMP"
    },
    "5034": {
      "op": "JUMPDEST"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5039": {
      "op": "DUP3"
    },
    "5040": {
      "op": "DUP5"
    },
    "5041": {
      "op": "SUB"
    },
    "5042": {
      "op": "SLT"
    },
    "5043": {
      "op": "ISZERO"
    },
    "5044": {
      "op": "PUSH2",
      "value": "0x13BC"
    },
    "5047": {
      "op": "JUMPI"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5050": {
      "op": "DUP1"
    },
    "5051": {
      "op": "REVERT"
    },
    "5052": {
      "op": "JUMPDEST"
    },
    "5053": {
      "op": "DUP2"
    },
    "5054": {
      "op": "CALLDATALOAD"
    },
    "5055": {
      "op": "PUSH2",
      "value": "0x13C7"
    },
    "5058": {
      "op": "DUP2"
    },
    "5059": {
      "op": "PUSH2",
      "value": "0x11EE"
    },
    "5062": {
      "jump": "i",
      "op": "JUMP"
    },
    "5063": {
      "op": "JUMPDEST"
    },
    "5064": {
      "op": "SWAP4"
    },
    "5065": {
      "op": "SWAP3"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "op": "POP"
    },
    "5068": {
      "op": "POP"
    },
    "5069": {
      "jump": "o",
      "op": "JUMP"
    },
    "5070": {
      "op": "JUMPDEST"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5073": {
      "op": "DUP1"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5076": {
      "op": "DUP4"
    },
    "5077": {
      "op": "DUP6"
    },
    "5078": {
      "op": "SUB"
    },
    "5079": {
      "op": "SLT"
    },
    "5080": {
      "op": "ISZERO"
    },
    "5081": {
      "op": "PUSH2",
      "value": "0x13E1"
    },
    "5084": {
      "op": "JUMPI"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5087": {
      "op": "DUP1"
    },
    "5088": {
      "op": "REVERT"
    },
    "5089": {
      "op": "JUMPDEST"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "op": "POP"
    },
    "5092": {
      "op": "DUP1"
    },
    "5093": {
      "op": "CALLDATALOAD"
    },
    "5094": {
      "op": "SWAP3"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5097": {
      "op": "SWAP1"
    },
    "5098": {
      "op": "SWAP2"
    },
    "5099": {
      "op": "ADD"
    },
    "5100": {
      "op": "CALLDATALOAD"
    },
    "5101": {
      "op": "SWAP2"
    },
    "5102": {
      "op": "POP"
    },
    "5103": {
      "jump": "o",
      "op": "JUMP"
    },
    "5104": {
      "op": "JUMPDEST"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5107": {
      "op": "JUMPDEST"
    },
    "5108": {
      "op": "DUP4"
    },
    "5109": {
      "op": "DUP2"
    },
    "5110": {
      "op": "LT"
    },
    "5111": {
      "op": "ISZERO"
    },
    "5112": {
      "op": "PUSH2",
      "value": "0x140B"
    },
    "5115": {
      "op": "JUMPI"
    },
    "5116": {
      "op": "DUP2"
    },
    "5117": {
      "op": "DUP2"
    },
    "5118": {
      "op": "ADD"
    },
    "5119": {
      "op": "MLOAD"
    },
    "5120": {
      "op": "DUP4"
    },
    "5121": {
      "op": "DUP3"
    },
    "5122": {
      "op": "ADD"
    },
    "5123": {
      "op": "MSTORE"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5126": {
      "op": "ADD"
    },
    "5127": {
      "op": "PUSH2",
      "value": "0x13F3"
    },
    "5130": {
      "op": "JUMP"
    },
    "5131": {
      "op": "JUMPDEST"
    },
    "5132": {
      "op": "POP"
    },
    "5133": {
      "op": "POP"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5136": {
      "op": "SWAP2"
    },
    "5137": {
      "op": "ADD"
    },
    "5138": {
      "op": "MSTORE"
    },
    "5139": {
      "jump": "o",
      "op": "JUMP"
    },
    "5140": {
      "op": "JUMPDEST"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5143": {
      "op": "DUP2"
    },
    "5144": {
      "op": "MLOAD"
    },
    "5145": {
      "op": "DUP1"
    },
    "5146": {
      "op": "DUP5"
    },
    "5147": {
      "op": "MSTORE"
    },
    "5148": {
      "op": "PUSH2",
      "value": "0x142C"
    },
    "5151": {
      "op": "DUP2"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5154": {
      "op": "DUP7"
    },
    "5155": {
      "op": "ADD"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5158": {
      "op": "DUP7"
    },
    "5159": {
      "op": "ADD"
    },
    "5160": {
      "op": "PUSH2",
      "value": "0x13F0"
    },
    "5163": {
      "jump": "i",
      "op": "JUMP"
    },
    "5164": {
      "op": "JUMPDEST"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5167": {
      "op": "ADD"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5170": {
      "op": "NOT"
    },
    "5171": {
      "op": "AND"
    },
    "5172": {
      "op": "SWAP3"
    },
    "5173": {
      "op": "SWAP1"
    },
    "5174": {
      "op": "SWAP3"
    },
    "5175": {
      "op": "ADD"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5178": {
      "op": "ADD"
    },
    "5179": {
      "op": "SWAP3"
    },
    "5180": {
      "op": "SWAP2"
    },
    "5181": {
      "op": "POP"
    },
    "5182": {
      "op": "POP"
    },
    "5183": {
      "jump": "o",
      "op": "JUMP"
    },
    "5184": {
      "op": "JUMPDEST"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5187": {
      "op": "DUP2"
    },
    "5188": {
      "op": "MSTORE"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5191": {
      "op": "PUSH2",
      "value": "0x13C7"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5196": {
      "op": "DUP4"
    },
    "5197": {
      "op": "ADD"
    },
    "5198": {
      "op": "DUP5"
    },
    "5199": {
      "op": "PUSH2",
      "value": "0x1414"
    },
    "5202": {
      "jump": "i",
      "op": "JUMP"
    },
    "5203": {
      "op": "JUMPDEST"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5208": {
      "op": "DUP3"
    },
    "5209": {
      "op": "ADD"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5212": {
      "op": "DUP4"
    },
    "5213": {
      "op": "MSTORE"
    },
    "5214": {
      "op": "DUP1"
    },
    "5215": {
      "op": "DUP6"
    },
    "5216": {
      "op": "MLOAD"
    },
    "5217": {
      "op": "DUP1"
    },
    "5218": {
      "op": "DUP4"
    },
    "5219": {
      "op": "MSTORE"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5222": {
      "op": "DUP6"
    },
    "5223": {
      "op": "ADD"
    },
    "5224": {
      "op": "SWAP2"
    },
    "5225": {
      "op": "POP"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5228": {
      "op": "DUP2"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5231": {
      "op": "SHL"
    },
    "5232": {
      "op": "DUP7"
    },
    "5233": {
      "op": "ADD"
    },
    "5234": {
      "op": "ADD"
    },
    "5235": {
      "op": "SWAP3"
    },
    "5236": {
      "op": "POP"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5239": {
      "op": "DUP1"
    },
    "5240": {
      "op": "DUP9"
    },
    "5241": {
      "op": "ADD"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5244": {
      "op": "JUMPDEST"
    },
    "5245": {
      "op": "DUP4"
    },
    "5246": {
      "op": "DUP2"
    },
    "5247": {
      "op": "LT"
    },
    "5248": {
      "op": "ISZERO"
    },
    "5249": {
      "op": "PUSH2",
      "value": "0x14AA"
    },
    "5252": {
      "op": "JUMPI"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "5255": {
      "op": "NOT"
    },
    "5256": {
      "op": "DUP9"
    },
    "5257": {
      "op": "DUP8"
    },
    "5258": {
      "op": "SUB"
    },
    "5259": {
      "op": "ADD"
    },
    "5260": {
      "op": "DUP6"
    },
    "5261": {
      "op": "MSTORE"
    },
    "5262": {
      "op": "PUSH2",
      "value": "0x1498"
    },
    "5265": {
      "op": "DUP7"
    },
    "5266": {
      "op": "DUP4"
    },
    "5267": {
      "op": "MLOAD"
    },
    "5268": {
      "op": "PUSH2",
      "value": "0x1414"
    },
    "5271": {
      "jump": "i",
      "op": "JUMP"
    },
    "5272": {
      "op": "JUMPDEST"
    },
    "5273": {
      "op": "SWAP6"
    },
    "5274": {
      "op": "POP"
    },
    "5275": {
      "op": "SWAP4"
    },
    "5276": {
      "op": "DUP3"
    },
    "5277": {
      "op": "ADD"
    },
    "5278": {
      "op": "SWAP4"
    },
    "5279": {
      "op": "SWAP1"
    },
    "5280": {
      "op": "DUP3"
    },
    "5281": {
      "op": "ADD"
    },
    "5282": {
      "op": "SWAP1"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5285": {
      "op": "ADD"
    },
    "5286": {
      "op": "PUSH2",
      "value": "0x147C"
    },
    "5289": {
      "op": "JUMP"
    },
    "5290": {
      "op": "JUMPDEST"
    },
    "5291": {
      "op": "POP"
    },
    "5292": {
      "op": "POP"
    },
    "5293": {
      "op": "SWAP5"
    },
    "5294": {
      "op": "SWAP1"
    },
    "5295": {
      "op": "SWAP5"
    },
    "5296": {
      "op": "ADD"
    },
    "5297": {
      "op": "SWAP5"
    },
    "5298": {
      "op": "SWAP1"
    },
    "5299": {
      "op": "SWAP5"
    },
    "5300": {
      "op": "MSTORE"
    },
    "5301": {
      "op": "SWAP5"
    },
    "5302": {
      "op": "SWAP4"
    },
    "5303": {
      "op": "POP"
    },
    "5304": {
      "op": "POP"
    },
    "5305": {
      "op": "POP"
    },
    "5306": {
      "op": "POP"
    },
    "5307": {
      "jump": "o",
      "op": "JUMP"
    },
    "5308": {
      "op": "JUMPDEST"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5313": {
      "op": "DUP1"
    },
    "5314": {
      "op": "DUP4"
    },
    "5315": {
      "op": "DUP6"
    },
    "5316": {
      "op": "SUB"
    },
    "5317": {
      "op": "SLT"
    },
    "5318": {
      "op": "ISZERO"
    },
    "5319": {
      "op": "PUSH2",
      "value": "0x14CF"
    },
    "5322": {
      "op": "JUMPI"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5325": {
      "op": "DUP1"
    },
    "5326": {
      "op": "REVERT"
    },
    "5327": {
      "op": "JUMPDEST"
    },
    "5328": {
      "op": "DUP3"
    },
    "5329": {
      "op": "MLOAD"
    },
    "5330": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5339": {
      "op": "DUP2"
    },
    "5340": {
      "op": "GT"
    },
    "5341": {
      "op": "ISZERO"
    },
    "5342": {
      "op": "PUSH2",
      "value": "0x14E6"
    },
    "5345": {
      "op": "JUMPI"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5348": {
      "op": "DUP1"
    },
    "5349": {
      "op": "REVERT"
    },
    "5350": {
      "op": "JUMPDEST"
    },
    "5351": {
      "op": "DUP4"
    },
    "5352": {
      "op": "ADD"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5355": {
      "op": "DUP2"
    },
    "5356": {
      "op": "ADD"
    },
    "5357": {
      "op": "DUP6"
    },
    "5358": {
      "op": "SGT"
    },
    "5359": {
      "op": "PUSH2",
      "value": "0x14F7"
    },
    "5362": {
      "op": "JUMPI"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5365": {
      "op": "DUP1"
    },
    "5366": {
      "op": "REVERT"
    },
    "5367": {
      "op": "JUMPDEST"
    },
    "5368": {
      "op": "DUP1"
    },
    "5369": {
      "op": "MLOAD"
    },
    "5370": {
      "op": "PUSH2",
      "value": "0x1505"
    },
    "5373": {
      "op": "PUSH2",
      "value": "0x10A2"
    },
    "5376": {
      "op": "DUP3"
    },
    "5377": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "5380": {
      "jump": "i",
      "op": "JUMP"
    },
    "5381": {
      "op": "JUMPDEST"
    },
    "5382": {
      "op": "DUP2"
    },
    "5383": {
      "op": "DUP2"
    },
    "5384": {
      "op": "MSTORE"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5387": {
      "op": "SWAP2"
    },
    "5388": {
      "op": "SWAP1"
    },
    "5389": {
      "op": "SWAP2"
    },
    "5390": {
      "op": "SHL"
    },
    "5391": {
      "op": "DUP3"
    },
    "5392": {
      "op": "ADD"
    },
    "5393": {
      "op": "DUP4"
    },
    "5394": {
      "op": "ADD"
    },
    "5395": {
      "op": "SWAP1"
    },
    "5396": {
      "op": "DUP4"
    },
    "5397": {
      "op": "DUP2"
    },
    "5398": {
      "op": "ADD"
    },
    "5399": {
      "op": "SWAP1"
    },
    "5400": {
      "op": "DUP8"
    },
    "5401": {
      "op": "DUP4"
    },
    "5402": {
      "op": "GT"
    },
    "5403": {
      "op": "ISZERO"
    },
    "5404": {
      "op": "PUSH2",
      "value": "0x1524"
    },
    "5407": {
      "op": "JUMPI"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5410": {
      "op": "DUP1"
    },
    "5411": {
      "op": "REVERT"
    },
    "5412": {
      "op": "JUMPDEST"
    },
    "5413": {
      "op": "SWAP3"
    },
    "5414": {
      "op": "DUP5"
    },
    "5415": {
      "op": "ADD"
    },
    "5416": {
      "op": "SWAP3"
    },
    "5417": {
      "op": "JUMPDEST"
    },
    "5418": {
      "op": "DUP3"
    },
    "5419": {
      "op": "DUP5"
    },
    "5420": {
      "op": "LT"
    },
    "5421": {
      "op": "ISZERO"
    },
    "5422": {
      "op": "PUSH2",
      "value": "0x154B"
    },
    "5425": {
      "op": "JUMPI"
    },
    "5426": {
      "op": "DUP4"
    },
    "5427": {
      "op": "MLOAD"
    },
    "5428": {
      "op": "PUSH2",
      "value": "0x153C"
    },
    "5431": {
      "op": "DUP2"
    },
    "5432": {
      "op": "PUSH2",
      "value": "0x11EE"
    },
    "5435": {
      "jump": "i",
      "op": "JUMP"
    },
    "5436": {
      "op": "JUMPDEST"
    },
    "5437": {
      "op": "DUP3"
    },
    "5438": {
      "op": "MSTORE"
    },
    "5439": {
      "op": "SWAP3"
    },
    "5440": {
      "op": "DUP5"
    },
    "5441": {
      "op": "ADD"
    },
    "5442": {
      "op": "SWAP3"
    },
    "5443": {
      "op": "SWAP1"
    },
    "5444": {
      "op": "DUP5"
    },
    "5445": {
      "op": "ADD"
    },
    "5446": {
      "op": "SWAP1"
    },
    "5447": {
      "op": "PUSH2",
      "value": "0x1529"
    },
    "5450": {
      "op": "JUMP"
    },
    "5451": {
      "op": "JUMPDEST"
    },
    "5452": {
      "op": "SWAP8"
    },
    "5453": {
      "op": "SWAP7"
    },
    "5454": {
      "op": "POP"
    },
    "5455": {
      "op": "POP"
    },
    "5456": {
      "op": "POP"
    },
    "5457": {
      "op": "POP"
    },
    "5458": {
      "op": "POP"
    },
    "5459": {
      "op": "POP"
    },
    "5460": {
      "op": "POP"
    },
    "5461": {
      "jump": "o",
      "op": "JUMP"
    },
    "5462": {
      "op": "JUMPDEST"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5467": {
      "op": "DUP1"
    },
    "5468": {
      "op": "DUP4"
    },
    "5469": {
      "op": "DUP6"
    },
    "5470": {
      "op": "SUB"
    },
    "5471": {
      "op": "SLT"
    },
    "5472": {
      "op": "ISZERO"
    },
    "5473": {
      "op": "PUSH2",
      "value": "0x1569"
    },
    "5476": {
      "op": "JUMPI"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5479": {
      "op": "DUP1"
    },
    "5480": {
      "op": "REVERT"
    },
    "5481": {
      "op": "JUMPDEST"
    },
    "5482": {
      "op": "DUP3"
    },
    "5483": {
      "op": "MLOAD"
    },
    "5484": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5493": {
      "op": "DUP1"
    },
    "5494": {
      "op": "DUP3"
    },
    "5495": {
      "op": "GT"
    },
    "5496": {
      "op": "ISZERO"
    },
    "5497": {
      "op": "PUSH2",
      "value": "0x1581"
    },
    "5500": {
      "op": "JUMPI"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5503": {
      "op": "DUP1"
    },
    "5504": {
      "op": "REVERT"
    },
    "5505": {
      "op": "JUMPDEST"
    },
    "5506": {
      "op": "DUP2"
    },
    "5507": {
      "op": "DUP6"
    },
    "5508": {
      "op": "ADD"
    },
    "5509": {
      "op": "SWAP2"
    },
    "5510": {
      "op": "POP"
    },
    "5511": {
      "op": "DUP6"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5514": {
      "op": "DUP4"
    },
    "5515": {
      "op": "ADD"
    },
    "5516": {
      "op": "SLT"
    },
    "5517": {
      "op": "PUSH2",
      "value": "0x1595"
    },
    "5520": {
      "op": "JUMPI"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5523": {
      "op": "DUP1"
    },
    "5524": {
      "op": "REVERT"
    },
    "5525": {
      "op": "JUMPDEST"
    },
    "5526": {
      "op": "DUP2"
    },
    "5527": {
      "op": "MLOAD"
    },
    "5528": {
      "op": "PUSH2",
      "value": "0x15A3"
    },
    "5531": {
      "op": "PUSH2",
      "value": "0x10A2"
    },
    "5534": {
      "op": "DUP3"
    },
    "5535": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "5538": {
      "jump": "i",
      "op": "JUMP"
    },
    "5539": {
      "op": "JUMPDEST"
    },
    "5540": {
      "op": "DUP2"
    },
    "5541": {
      "op": "DUP2"
    },
    "5542": {
      "op": "MSTORE"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5545": {
      "op": "SWAP2"
    },
    "5546": {
      "op": "SWAP1"
    },
    "5547": {
      "op": "SWAP2"
    },
    "5548": {
      "op": "SHL"
    },
    "5549": {
      "op": "DUP4"
    },
    "5550": {
      "op": "ADD"
    },
    "5551": {
      "op": "DUP5"
    },
    "5552": {
      "op": "ADD"
    },
    "5553": {
      "op": "SWAP1"
    },
    "5554": {
      "op": "DUP5"
    },
    "5555": {
      "op": "DUP2"
    },
    "5556": {
      "op": "ADD"
    },
    "5557": {
      "op": "SWAP1"
    },
    "5558": {
      "op": "DUP9"
    },
    "5559": {
      "op": "DUP4"
    },
    "5560": {
      "op": "GT"
    },
    "5561": {
      "op": "ISZERO"
    },
    "5562": {
      "op": "PUSH2",
      "value": "0x15C2"
    },
    "5565": {
      "op": "JUMPI"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5568": {
      "op": "DUP1"
    },
    "5569": {
      "op": "REVERT"
    },
    "5570": {
      "op": "JUMPDEST"
    },
    "5571": {
      "op": "DUP6"
    },
    "5572": {
      "op": "DUP6"
    },
    "5573": {
      "op": "ADD"
    },
    "5574": {
      "op": "JUMPDEST"
    },
    "5575": {
      "op": "DUP4"
    },
    "5576": {
      "op": "DUP2"
    },
    "5577": {
      "op": "LT"
    },
    "5578": {
      "op": "ISZERO"
    },
    "5579": {
      "op": "PUSH2",
      "value": "0x1636"
    },
    "5582": {
      "op": "JUMPI"
    },
    "5583": {
      "op": "DUP1"
    },
    "5584": {
      "op": "MLOAD"
    },
    "5585": {
      "op": "DUP6"
    },
    "5586": {
      "op": "DUP2"
    },
    "5587": {
      "op": "GT"
    },
    "5588": {
      "op": "ISZERO"
    },
    "5589": {
      "op": "PUSH2",
      "value": "0x15DE"
    },
    "5592": {
      "op": "JUMPI"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5595": {
      "op": "DUP1"
    },
    "5596": {
      "op": "DUP2"
    },
    "5597": {
      "op": "REVERT"
    },
    "5598": {
      "op": "JUMPDEST"
    },
    "5599": {
      "op": "DUP7"
    },
    "5600": {
      "op": "ADD"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5603": {
      "op": "DUP2"
    },
    "5604": {
      "op": "ADD"
    },
    "5605": {
      "op": "DUP12"
    },
    "5606": {
      "op": "SGT"
    },
    "5607": {
      "op": "PUSH2",
      "value": "0x15F0"
    },
    "5610": {
      "op": "JUMPI"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5613": {
      "op": "DUP1"
    },
    "5614": {
      "op": "DUP2"
    },
    "5615": {
      "op": "REVERT"
    },
    "5616": {
      "op": "JUMPDEST"
    },
    "5617": {
      "op": "DUP8"
    },
    "5618": {
      "op": "DUP2"
    },
    "5619": {
      "op": "ADD"
    },
    "5620": {
      "op": "MLOAD"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5623": {
      "op": "PUSH2",
      "value": "0x1602"
    },
    "5626": {
      "op": "PUSH2",
      "value": "0x10A2"
    },
    "5629": {
      "op": "DUP4"
    },
    "5630": {
      "op": "PUSH2",
      "value": "0x105B"
    },
    "5633": {
      "jump": "i",
      "op": "JUMP"
    },
    "5634": {
      "op": "JUMPDEST"
    },
    "5635": {
      "op": "DUP3"
    },
    "5636": {
      "op": "DUP2"
    },
    "5637": {
      "op": "MSTORE"
    },
    "5638": {
      "op": "DUP14"
    },
    "5639": {
      "op": "DUP3"
    },
    "5640": {
      "op": "DUP5"
    },
    "5641": {
      "op": "DUP7"
    },
    "5642": {
      "op": "ADD"
    },
    "5643": {
      "op": "ADD"
    },
    "5644": {
      "op": "GT"
    },
    "5645": {
      "op": "ISZERO"
    },
    "5646": {
      "op": "PUSH2",
      "value": "0x1617"
    },
    "5649": {
      "op": "JUMPI"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5652": {
      "op": "DUP1"
    },
    "5653": {
      "op": "DUP2"
    },
    "5654": {
      "op": "REVERT"
    },
    "5655": {
      "op": "JUMPDEST"
    },
    "5656": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "5659": {
      "op": "DUP4"
    },
    "5660": {
      "op": "DUP13"
    },
    "5661": {
      "op": "DUP4"
    },
    "5662": {
      "op": "ADD"
    },
    "5663": {
      "op": "DUP5"
    },
    "5664": {
      "op": "DUP8"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "PUSH2",
      "value": "0x13F0"
    },
    "5669": {
      "jump": "i",
      "op": "JUMP"
    },
    "5670": {
      "op": "JUMPDEST"
    },
    "5671": {
      "op": "DUP7"
    },
    "5672": {
      "op": "MSTORE"
    },
    "5673": {
      "op": "POP"
    },
    "5674": {
      "op": "POP"
    },
    "5675": {
      "op": "POP"
    },
    "5676": {
      "op": "SWAP2"
    },
    "5677": {
      "op": "DUP7"
    },
    "5678": {
      "op": "ADD"
    },
    "5679": {
      "op": "SWAP2"
    },
    "5680": {
      "op": "DUP7"
    },
    "5681": {
      "op": "ADD"
    },
    "5682": {
      "op": "PUSH2",
      "value": "0x15C6"
    },
    "5685": {
      "op": "JUMP"
    },
    "5686": {
      "op": "JUMPDEST"
    },
    "5687": {
      "op": "POP"
    },
    "5688": {
      "op": "SWAP9"
    },
    "5689": {
      "op": "SWAP8"
    },
    "5690": {
      "op": "POP"
    },
    "5691": {
      "op": "POP"
    },
    "5692": {
      "op": "POP"
    },
    "5693": {
      "op": "POP"
    },
    "5694": {
      "op": "POP"
    },
    "5695": {
      "op": "POP"
    },
    "5696": {
      "op": "POP"
    },
    "5697": {
      "op": "POP"
    },
    "5698": {
      "jump": "o",
      "op": "JUMP"
    },
    "5699": {
      "op": "JUMPDEST"
    },
    "5700": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5707": {
      "op": "SHL"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5710": {
      "op": "MSTORE"
    },
    "5711": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5715": {
      "op": "MSTORE"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5720": {
      "op": "REVERT"
    },
    "5721": {
      "op": "JUMPDEST"
    },
    "5722": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5729": {
      "op": "SHL"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5732": {
      "op": "MSTORE"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5737": {
      "op": "MSTORE"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5742": {
      "op": "REVERT"
    },
    "5743": {
      "op": "JUMPDEST"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5748": {
      "op": "DUP3"
    },
    "5749": {
      "op": "ADD"
    },
    "5750": {
      "op": "PUSH2",
      "value": "0x1681"
    },
    "5753": {
      "op": "JUMPI"
    },
    "5754": {
      "op": "PUSH2",
      "value": "0x1681"
    },
    "5757": {
      "op": "PUSH2",
      "value": "0x1659"
    },
    "5760": {
      "jump": "i",
      "op": "JUMP"
    },
    "5761": {
      "op": "JUMPDEST"
    },
    "5762": {
      "op": "POP"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5765": {
      "op": "ADD"
    },
    "5766": {
      "op": "SWAP1"
    },
    "5767": {
      "jump": "o",
      "op": "JUMP"
    },
    "5768": {
      "op": "JUMPDEST"
    },
    "5769": {
      "op": "DUP1"
    },
    "5770": {
      "op": "DUP3"
    },
    "5771": {
      "op": "ADD"
    },
    "5772": {
      "op": "DUP1"
    },
    "5773": {
      "op": "DUP3"
    },
    "5774": {
      "op": "GT"
    },
    "5775": {
      "op": "ISZERO"
    },
    "5776": {
      "op": "PUSH2",
      "value": "0x2A8"
    },
    "5779": {
      "op": "JUMPI"
    },
    "5780": {
      "op": "PUSH2",
      "value": "0x2A8"
    },
    "5783": {
      "op": "PUSH2",
      "value": "0x1659"
    },
    "5786": {
      "jump": "i",
      "op": "JUMP"
    },
    "5787": {
      "op": "JUMPDEST"
    },
    "5788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5790": {
      "op": "DUP4"
    },
    "5791": {
      "op": "MLOAD"
    },
    "5792": {
      "op": "PUSH2",
      "value": "0x16AD"
    },
    "5795": {
      "op": "DUP2"
    },
    "5796": {
      "op": "DUP5"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5799": {
      "op": "DUP9"
    },
    "5800": {
      "op": "ADD"
    },
    "5801": {
      "op": "PUSH2",
      "value": "0x13F0"
    },
    "5804": {
      "jump": "i",
      "op": "JUMP"
    },
    "5805": {
      "op": "JUMPDEST"
    },
    "5806": {
      "op": "DUP4"
    },
    "5807": {
      "op": "MLOAD"
    },
    "5808": {
      "op": "SWAP1"
    },
    "5809": {
      "op": "DUP4"
    },
    "5810": {
      "op": "ADD"
    },
    "5811": {
      "op": "SWAP1"
    },
    "5812": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "5815": {
      "op": "DUP2"
    },
    "5816": {
      "op": "DUP4"
    },
    "5817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5819": {
      "op": "DUP9"
    },
    "5820": {
      "op": "ADD"
    },
    "5821": {
      "op": "PUSH2",
      "value": "0x13F0"
    },
    "5824": {
      "jump": "i",
      "op": "JUMP"
    },
    "5825": {
      "op": "JUMPDEST"
    },
    "5826": {
      "op": "ADD"
    },
    "5827": {
      "op": "SWAP5"
    },
    "5828": {
      "op": "SWAP4"
    },
    "5829": {
      "op": "POP"
    },
    "5830": {
      "op": "POP"
    },
    "5831": {
      "op": "POP"
    },
    "5832": {
      "op": "POP"
    },
    "5833": {
      "jump": "o",
      "op": "JUMP"
    },
    "5834": {
      "op": "JUMPDEST"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5837": {
      "op": "DUP3"
    },
    "5838": {
      "op": "MLOAD"
    },
    "5839": {
      "op": "PUSH2",
      "value": "0x16DC"
    },
    "5842": {
      "op": "DUP2"
    },
    "5843": {
      "op": "DUP5"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5846": {
      "op": "DUP8"
    },
    "5847": {
      "op": "ADD"
    },
    "5848": {
      "op": "PUSH2",
      "value": "0x13F0"
    },
    "5851": {
      "jump": "i",
      "op": "JUMP"
    },
    "5852": {
      "op": "JUMPDEST"
    },
    "5853": {
      "op": "SWAP2"
    },
    "5854": {
      "op": "SWAP1"
    },
    "5855": {
      "op": "SWAP2"
    },
    "5856": {
      "op": "ADD"
    },
    "5857": {
      "op": "SWAP3"
    },
    "5858": {
      "op": "SWAP2"
    },
    "5859": {
      "op": "POP"
    },
    "5860": {
      "op": "POP"
    },
    "5861": {
      "jump": "o",
      "op": "JUMP"
    },
    "5862": {
      "op": "JUMPDEST"
    },
    "5863": {
      "op": "DUP2"
    },
    "5864": {
      "op": "DUP2"
    },
    "5865": {
      "op": "SUB"
    },
    "5866": {
      "op": "DUP2"
    },
    "5867": {
      "op": "DUP2"
    },
    "5868": {
      "op": "GT"
    },
    "5869": {
      "op": "ISZERO"
    },
    "5870": {
      "op": "PUSH2",
      "value": "0x2A8"
    },
    "5873": {
      "op": "JUMPI"
    },
    "5874": {
      "op": "PUSH2",
      "value": "0x2A8"
    },
    "5877": {
      "op": "PUSH2",
      "value": "0x1659"
    },
    "5880": {
      "jump": "i",
      "op": "JUMP"
    },
    "5881": {
      "op": "JUMPDEST"
    },
    "5882": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5889": {
      "op": "SHL"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5892": {
      "op": "MSTORE"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5897": {
      "op": "MSTORE"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5902": {
      "op": "REVERT"
    },
    "5903": {
      "op": "JUMPDEST"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5906": {
      "op": "DUP3"
    },
    "5907": {
      "op": "PUSH2",
      "value": "0x171E"
    },
    "5910": {
      "op": "JUMPI"
    },
    "5911": {
      "op": "PUSH2",
      "value": "0x171E"
    },
    "5914": {
      "op": "PUSH2",
      "value": "0x16F9"
    },
    "5917": {
      "jump": "i",
      "op": "JUMP"
    },
    "5918": {
      "op": "JUMPDEST"
    },
    "5919": {
      "op": "POP"
    },
    "5920": {
      "op": "MOD"
    },
    "5921": {
      "op": "SWAP1"
    },
    "5922": {
      "jump": "o",
      "op": "JUMP"
    },
    "5923": {
      "op": "JUMPDEST"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5926": {
      "op": "DUP2"
    },
    "5927": {
      "op": "DUP2"
    },
    "5928": {
      "op": "SHR"
    },
    "5929": {
      "op": "SWAP1"
    },
    "5930": {
      "op": "DUP3"
    },
    "5931": {
      "op": "AND"
    },
    "5932": {
      "op": "DUP1"
    },
    "5933": {
      "op": "PUSH2",
      "value": "0x1737"
    },
    "5936": {
      "op": "JUMPI"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5939": {
      "op": "DUP3"
    },
    "5940": {
      "op": "AND"
    },
    "5941": {
      "op": "SWAP2"
    },
    "5942": {
      "op": "POP"
    },
    "5943": {
      "op": "JUMPDEST"
    },
    "5944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5946": {
      "op": "DUP3"
    },
    "5947": {
      "op": "LT"
    },
    "5948": {
      "op": "DUP2"
    },
    "5949": {
      "op": "SUB"
    },
    "5950": {
      "op": "PUSH2",
      "value": "0x1757"
    },
    "5953": {
      "op": "JUMPI"
    },
    "5954": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5961": {
      "op": "SHL"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5964": {
      "op": "MSTORE"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5969": {
      "op": "MSTORE"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5974": {
      "op": "REVERT"
    },
    "5975": {
      "op": "JUMPDEST"
    },
    "5976": {
      "op": "POP"
    },
    "5977": {
      "op": "SWAP2"
    },
    "5978": {
      "op": "SWAP1"
    },
    "5979": {
      "op": "POP"
    },
    "5980": {
      "jump": "o",
      "op": "JUMP"
    },
    "5981": {
      "op": "JUMPDEST"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5986": {
      "op": "DUP3"
    },
    "5987": {
      "op": "DUP5"
    },
    "5988": {
      "op": "SUB"
    },
    "5989": {
      "op": "SLT"
    },
    "5990": {
      "op": "ISZERO"
    },
    "5991": {
      "op": "PUSH2",
      "value": "0x176F"
    },
    "5994": {
      "op": "JUMPI"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5997": {
      "op": "DUP1"
    },
    "5998": {
      "op": "REVERT"
    },
    "5999": {
      "op": "JUMPDEST"
    },
    "6000": {
      "op": "DUP2"
    },
    "6001": {
      "op": "MLOAD"
    },
    "6002": {
      "op": "PUSH2",
      "value": "0x13C7"
    },
    "6005": {
      "op": "DUP2"
    },
    "6006": {
      "op": "PUSH2",
      "value": "0x1265"
    },
    "6009": {
      "jump": "i",
      "op": "JUMP"
    },
    "6010": {
      "op": "JUMPDEST"
    },
    "6011": {
      "op": "DUP1"
    },
    "6012": {
      "op": "DUP3"
    },
    "6013": {
      "op": "MUL"
    },
    "6014": {
      "op": "DUP2"
    },
    "6015": {
      "op": "ISZERO"
    },
    "6016": {
      "op": "DUP3"
    },
    "6017": {
      "op": "DUP3"
    },
    "6018": {
      "op": "DIV"
    },
    "6019": {
      "op": "DUP5"
    },
    "6020": {
      "op": "EQ"
    },
    "6021": {
      "op": "OR"
    },
    "6022": {
      "op": "PUSH2",
      "value": "0x2A8"
    },
    "6025": {
      "op": "JUMPI"
    },
    "6026": {
      "op": "PUSH2",
      "value": "0x2A8"
    },
    "6029": {
      "op": "PUSH2",
      "value": "0x1659"
    },
    "6032": {
      "jump": "i",
      "op": "JUMP"
    },
    "6033": {
      "op": "JUMPDEST"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6036": {
      "op": "DUP3"
    },
    "6037": {
      "op": "PUSH2",
      "value": "0x17A0"
    },
    "6040": {
      "op": "JUMPI"
    },
    "6041": {
      "op": "PUSH2",
      "value": "0x17A0"
    },
    "6044": {
      "op": "PUSH2",
      "value": "0x16F9"
    },
    "6047": {
      "jump": "i",
      "op": "JUMP"
    },
    "6048": {
      "op": "JUMPDEST"
    },
    "6049": {
      "op": "POP"
    },
    "6050": {
      "op": "DIV"
    },
    "6051": {
      "op": "SWAP1"
    },
    "6052": {
      "jump": "o",
      "op": "JUMP"
    },
    "6053": {
      "op": "JUMPDEST"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6056": {
      "op": "DUP3"
    },
    "6057": {
      "op": "GT"
    },
    "6058": {
      "op": "ISZERO"
    },
    "6059": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "6062": {
      "op": "JUMPI"
    },
    "6063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6065": {
      "op": "DUP2"
    },
    "6066": {
      "op": "DUP2"
    },
    "6067": {
      "op": "MSTORE"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6070": {
      "op": "DUP2"
    },
    "6071": {
      "op": "KECCAK256"
    },
    "6072": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6074": {
      "op": "DUP6"
    },
    "6075": {
      "op": "ADD"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6078": {
      "op": "SHR"
    },
    "6079": {
      "op": "DUP2"
    },
    "6080": {
      "op": "ADD"
    },
    "6081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6083": {
      "op": "DUP7"
    },
    "6084": {
      "op": "LT"
    },
    "6085": {
      "op": "ISZERO"
    },
    "6086": {
      "op": "PUSH2",
      "value": "0x17CC"
    },
    "6089": {
      "op": "JUMPI"
    },
    "6090": {
      "op": "POP"
    },
    "6091": {
      "op": "DUP1"
    },
    "6092": {
      "op": "JUMPDEST"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6095": {
      "op": "DUP6"
    },
    "6096": {
      "op": "ADD"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6099": {
      "op": "SHR"
    },
    "6100": {
      "op": "DUP3"
    },
    "6101": {
      "op": "ADD"
    },
    "6102": {
      "op": "SWAP2"
    },
    "6103": {
      "op": "POP"
    },
    "6104": {
      "op": "JUMPDEST"
    },
    "6105": {
      "op": "DUP2"
    },
    "6106": {
      "op": "DUP2"
    },
    "6107": {
      "op": "LT"
    },
    "6108": {
      "op": "ISZERO"
    },
    "6109": {
      "op": "PUSH2",
      "value": "0x17EB"
    },
    "6112": {
      "op": "JUMPI"
    },
    "6113": {
      "op": "DUP3"
    },
    "6114": {
      "op": "DUP2"
    },
    "6115": {
      "op": "SSTORE"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6118": {
      "op": "ADD"
    },
    "6119": {
      "op": "PUSH2",
      "value": "0x17D8"
    },
    "6122": {
      "op": "JUMP"
    },
    "6123": {
      "op": "JUMPDEST"
    },
    "6124": {
      "op": "POP"
    },
    "6125": {
      "op": "POP"
    },
    "6126": {
      "op": "POP"
    },
    "6127": {
      "op": "POP"
    },
    "6128": {
      "op": "POP"
    },
    "6129": {
      "op": "POP"
    },
    "6130": {
      "jump": "o",
      "op": "JUMP"
    },
    "6131": {
      "op": "JUMPDEST"
    },
    "6132": {
      "op": "DUP2"
    },
    "6133": {
      "op": "MLOAD"
    },
    "6134": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6143": {
      "op": "DUP2"
    },
    "6144": {
      "op": "GT"
    },
    "6145": {
      "op": "ISZERO"
    },
    "6146": {
      "op": "PUSH2",
      "value": "0x180D"
    },
    "6149": {
      "op": "JUMPI"
    },
    "6150": {
      "op": "PUSH2",
      "value": "0x180D"
    },
    "6153": {
      "op": "PUSH2",
      "value": "0xFC7"
    },
    "6156": {
      "jump": "i",
      "op": "JUMP"
    },
    "6157": {
      "op": "JUMPDEST"
    },
    "6158": {
      "op": "PUSH2",
      "value": "0x1821"
    },
    "6161": {
      "op": "DUP2"
    },
    "6162": {
      "op": "PUSH2",
      "value": "0x181B"
    },
    "6165": {
      "op": "DUP5"
    },
    "6166": {
      "op": "SLOAD"
    },
    "6167": {
      "op": "PUSH2",
      "value": "0x1723"
    },
    "6170": {
      "jump": "i",
      "op": "JUMP"
    },
    "6171": {
      "op": "JUMPDEST"
    },
    "6172": {
      "op": "DUP5"
    },
    "6173": {
      "op": "PUSH2",
      "value": "0x17A5"
    },
    "6176": {
      "jump": "i",
      "op": "JUMP"
    },
    "6177": {
      "op": "JUMPDEST"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6180": {
      "op": "DUP1"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6183": {
      "op": "DUP4"
    },
    "6184": {
      "op": "GT"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6187": {
      "op": "DUP2"
    },
    "6188": {
      "op": "EQ"
    },
    "6189": {
      "op": "PUSH2",
      "value": "0x1856"
    },
    "6192": {
      "op": "JUMPI"
    },
    "6193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6195": {
      "op": "DUP5"
    },
    "6196": {
      "op": "ISZERO"
    },
    "6197": {
      "op": "PUSH2",
      "value": "0x183E"
    },
    "6200": {
      "op": "JUMPI"
    },
    "6201": {
      "op": "POP"
    },
    "6202": {
      "op": "DUP6"
    },
    "6203": {
      "op": "DUP4"
    },
    "6204": {
      "op": "ADD"
    },
    "6205": {
      "op": "MLOAD"
    },
    "6206": {
      "op": "JUMPDEST"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6209": {
      "op": "NOT"
    },
    "6210": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6212": {
      "op": "DUP7"
    },
    "6213": {
      "op": "SWAP1"
    },
    "6214": {
      "op": "SHL"
    },
    "6215": {
      "op": "SHR"
    },
    "6216": {
      "op": "NOT"
    },
    "6217": {
      "op": "AND"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6220": {
      "op": "DUP6"
    },
    "6221": {
      "op": "SWAP1"
    },
    "6222": {
      "op": "SHL"
    },
    "6223": {
      "op": "OR"
    },
    "6224": {
      "op": "DUP6"
    },
    "6225": {
      "op": "SSTORE"
    },
    "6226": {
      "op": "PUSH2",
      "value": "0x17EB"
    },
    "6229": {
      "op": "JUMP"
    },
    "6230": {
      "op": "JUMPDEST"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6233": {
      "op": "DUP6"
    },
    "6234": {
      "op": "DUP2"
    },
    "6235": {
      "op": "MSTORE"
    },
    "6236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6238": {
      "op": "DUP2"
    },
    "6239": {
      "op": "KECCAK256"
    },
    "6240": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6242": {
      "op": "NOT"
    },
    "6243": {
      "op": "DUP7"
    },
    "6244": {
      "op": "AND"
    },
    "6245": {
      "op": "SWAP2"
    },
    "6246": {
      "op": "JUMPDEST"
    },
    "6247": {
      "op": "DUP3"
    },
    "6248": {
      "op": "DUP2"
    },
    "6249": {
      "op": "LT"
    },
    "6250": {
      "op": "ISZERO"
    },
    "6251": {
      "op": "PUSH2",
      "value": "0x1885"
    },
    "6254": {
      "op": "JUMPI"
    },
    "6255": {
      "op": "DUP9"
    },
    "6256": {
      "op": "DUP7"
    },
    "6257": {
      "op": "ADD"
    },
    "6258": {
      "op": "MLOAD"
    },
    "6259": {
      "op": "DUP3"
    },
    "6260": {
      "op": "SSTORE"
    },
    "6261": {
      "op": "SWAP5"
    },
    "6262": {
      "op": "DUP5"
    },
    "6263": {
      "op": "ADD"
    },
    "6264": {
      "op": "SWAP5"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6267": {
      "op": "SWAP1"
    },
    "6268": {
      "op": "SWAP2"
    },
    "6269": {
      "op": "ADD"
    },
    "6270": {
      "op": "SWAP1"
    },
    "6271": {
      "op": "DUP5"
    },
    "6272": {
      "op": "ADD"
    },
    "6273": {
      "op": "PUSH2",
      "value": "0x1866"
    },
    "6276": {
      "op": "JUMP"
    },
    "6277": {
      "op": "JUMPDEST"
    },
    "6278": {
      "op": "POP"
    },
    "6279": {
      "op": "DUP6"
    },
    "6280": {
      "op": "DUP3"
    },
    "6281": {
      "op": "LT"
    },
    "6282": {
      "op": "ISZERO"
    },
    "6283": {
      "op": "PUSH2",
      "value": "0x18A3"
    },
    "6286": {
      "op": "JUMPI"
    },
    "6287": {
      "op": "DUP8"
    },
    "6288": {
      "op": "DUP6"
    },
    "6289": {
      "op": "ADD"
    },
    "6290": {
      "op": "MLOAD"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6293": {
      "op": "NOT"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6296": {
      "op": "DUP9"
    },
    "6297": {
      "op": "SWAP1"
    },
    "6298": {
      "op": "SHL"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6301": {
      "op": "AND"
    },
    "6302": {
      "op": "SHR"
    },
    "6303": {
      "op": "NOT"
    },
    "6304": {
      "op": "AND"
    },
    "6305": {
      "op": "DUP2"
    },
    "6306": {
      "op": "SSTORE"
    },
    "6307": {
      "op": "JUMPDEST"
    },
    "6308": {
      "op": "POP"
    },
    "6309": {
      "op": "POP"
    },
    "6310": {
      "op": "POP"
    },
    "6311": {
      "op": "POP"
    },
    "6312": {
      "op": "POP"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6315": {
      "op": "SWAP1"
    },
    "6316": {
      "op": "DUP2"
    },
    "6317": {
      "op": "SHL"
    },
    "6318": {
      "op": "ADD"
    },
    "6319": {
      "op": "SWAP1"
    },
    "6320": {
      "op": "SSTORE"
    },
    "6321": {
      "op": "POP"
    },
    "6322": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "86d480d451fead41dff73e2adeb910e82af78e87",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IPlayerDatabase {\n    function getAllPlayerNames() external view returns (string[] memory);\n    function getServerIPList() external view returns (string[] memory);\n    function getValidRewardAddressesByNames(string[] memory playerNames, uint256 lastMintTime) external view returns (address[] memory);\n    function isValidator(address _address) external view returns (bool);\n\n}\ninterface IGP_Mint {\n    function mintTokens(address to, uint256 amount) external;\n    // Add other function signatures as needed\n}\ncontract GameValidator {\n\n    IPlayerDatabase playerDatabase;\n    IGP_Mint public mintContract;\n\n    mapping(string => address[]) private validatorsPerServerIP;\n    mapping(string => mapping(address => ServerSubmission)) public serverSubmissions; \n    mapping(bytes32 => string[]) public hashToPlayerList; // playerListHash -> playerNames\n\n    uint256 public lastMintTime;\n    uint256 public constant MINT_INTERVAL = 5 minutes;\n    uint256 public constant MAX_PLAYERS_PER_SUBMISSION = 64;\n    uint256 public constant MAX_MINT_TIME = 10 minutes; // 10 minutes cap\n    uint256 public constant TOKENS_PER_SECOND = (1e18 * 60) / 60; // 1e18 represents 1 token, and we divide by 60 seconds\n\n    constructor(address _playerDatabaseAddress, address _mintContractAddress) {\n        playerDatabase = IPlayerDatabase(_playerDatabaseAddress);\n        mintContract = IGP_Mint(_mintContractAddress);\n    }\n\n    struct ServerSubmission {\n        //address validator;\n        bytes32 playerListHash; // Hash of the player list for gas efficiency\n        bool canMint;\n    }\n\n    struct ServerPlayers {\n        string serverIP;\n        string[] playerNames;\n    }\n    //mapping(string => ServerSubmission[]) public serverSubmissions; // serverIP -> submissions\n    struct HashCount {\n        bytes32 hash;\n        uint256 count;\n    }\n\n\n    // Function to set the GP_Mint contract address\n    function setMintContractAddress(address _mintContractAddress) public {\n        // Additional checks for access control, like onlyOwner\n    }\n    function calculateMintAmount() private view returns (uint256) {\n        uint256 elapsedSeconds = block.timestamp - lastMintTime;\n\n        if (elapsedSeconds > MAX_MINT_TIME) {\n            elapsedSeconds = MAX_MINT_TIME; // Cap the elapsed time to MAX_MINT_TIME\n        }\n\n        return elapsedSeconds * TOKENS_PER_SECOND; // Calculate the mint amount based on elapsed time\n    }\n\n    function updateValidatorsList(string memory serverIP, address validator) private {\n        bool validatorExists = false;\n        for (uint i = 0; i < validatorsPerServerIP[serverIP].length; i++) {\n            if (validatorsPerServerIP[serverIP][i] == validator) {\n                validatorExists = true;\n                break;\n            }\n        }\n        if (!validatorExists) {\n            validatorsPerServerIP[serverIP].push(validator);\n        }\n    }\n\n    function submitPlayerList(ServerPlayers[] memory serverPlayerLists, address validatorID, bool canMintFlag) public {\n        require(isValidator(validatorID), \"Caller is not a registered validator\");\n\n        uint256 totalPlayerCount = 0;\n\n\n        for (uint i = 0; i < serverPlayerLists.length; i++) {\n            uint256 serverPlayerCount = serverPlayerLists[i].playerNames.length;\n            if (totalPlayerCount + serverPlayerCount > MAX_PLAYERS_PER_SUBMISSION) {\n                break; // Stop if the max players per submission is exceeded\n            }\n            totalPlayerCount += serverPlayerCount;\n\n            // Encode each string in the playerNames array individually\n            bytes memory encodedPlayerNames;\n            for (uint j = 0; j < serverPlayerLists[i].playerNames.length; j++) {\n                encodedPlayerNames = abi.encodePacked(encodedPlayerNames, serverPlayerLists[i].playerNames[j]);\n            }\n\n            // Compute the hash of the concatenated byte array\n            bytes32 playerListHash = keccak256(encodedPlayerNames);\n            hashToPlayerList[playerListHash] = serverPlayerLists[i].playerNames;\n\n            // Update or add the validator to the list for this server IP\n            updateValidatorsList(serverPlayerLists[i].serverIP, validatorID);\n\n            // Overwrite the existing submission for this server IP and validator\n            serverSubmissions[serverPlayerLists[i].serverIP][validatorID] = ServerSubmission({\n                playerListHash: playerListHash,\n                canMint: canMintFlag\n            });\n        }\n        // Check if it's time to perform mass minting\n        uint256 currentTime = block.timestamp;\n        uint256 timeSinceLastMint = currentTime - lastMintTime;\n        uint256 timeToNextInterval = MINT_INTERVAL - (currentTime % MINT_INTERVAL);\n\n        if (timeSinceLastMint >= MINT_INTERVAL && timeToNextInterval < MINT_INTERVAL) {\n            performMassMinting();\n            lastMintTime = currentTime - timeToNextInterval; // Align with the 5-minute interval\n        }\n    }\n    // function submitPlayerList(ServerPlayers[] memory serverPlayerLists, address validatorID, bool canMintFlag) public {\n    //     require(isValidator(validatorID), \"Caller is not a registered validator\");\n\n    //     uint256 totalPlayerCount = 0;\n\n    //     for (uint i = 0; i < serverPlayerLists.length; i++) {\n    //         uint256 serverPlayerCount = serverPlayerLists[i].playerNames.length;\n    //         if (totalPlayerCount + serverPlayerCount > MAX_PLAYERS_PER_SUBMISSION) {\n    //             break; // Stop if the max players per submission is exceeded\n    //         }\n\n    //         totalPlayerCount += serverPlayerCount;\n\n    //         // Create a hash for the player list\n    //         bytes32 playerListHash = keccak256(abi.encodePacked(serverPlayerLists[i].playerNames));\n    //         hashToPlayerList[playerListHash] = serverPlayerLists[i].playerNames;\n\n    //         // Overwrite the existing submission for this server IP and validator\n    //         serverSubmissions[serverPlayerLists[i].serverIP][validatorID] = ServerSubmission({\n    //             playerListHash: playerListHash,\n    //             canMint: canMintFlag\n    //         });\n    //     }\n    // }\n\n    function isValidator(address _address) public view returns (bool) {\n        //PlayerDatabase playerDatabase = PlayerDatabase(playerDatabaseAddress);\n        return playerDatabase.isValidator(_address);\n    }\n\n    function resetSubmissions() private {\n        string[] memory serverIPs = playerDatabase.getServerIPList();\n        for (uint i = 0; i < serverIPs.length; i++) {\n            string memory serverIP = serverIPs[i];\n            address[] memory validators = validatorsPerServerIP[serverIP];\n            for (uint j = 0; j < validators.length; j++) {\n                serverSubmissions[serverIP][validators[j]].canMint = false;\n            }\n        }\n    }\n\n    // Function to perform mass minting\n    function performMassMinting() public {\n        string[] memory serverIPs = playerDatabase.getServerIPList();\n        for (uint i = 0; i < serverIPs.length; i++) {\n            string memory serverIP = serverIPs[i];\n            bytes32 commonHash = findMostCommonHash(serverIP);\n            if (commonHash != bytes32(0)) {\n                mintForServer(commonHash);\n            }\n        }\n        resetSubmissions();\n    }\n    function mintForServer(bytes32 playerListHash) private {\n        // Retrieve the player list for the given hash\n        string[] memory playerList = hashToPlayerList[playerListHash];\n        address[] memory rewardAddresses = getValidRewardAddressesByNames(playerList);\n\n        uint256 mintAmount = calculateMintAmount(); // Define logic for mint amount\n\n        // Mint tokens for each player\n        for (uint i = 0; i < rewardAddresses.length; i++) {\n            if (rewardAddresses[i] != address(0)) { // Check for valid address\n                mintContract.mintTokens(rewardAddresses[i], mintAmount);\n            }\n        }\n    }\n    function findMostCommonHash(string memory serverIP) private view returns (bytes32) {\n        // Assume validatorsPerServerIP is a mapping that tracks validators per server IP\n        address[] memory validators = validatorsPerServerIP[serverIP];\n        uint256 majorityThreshold = (validators.length * 60) / 100; // 60% of total validators\n\n        bytes32 majorityHash = bytes32(0);\n        uint256 highestCount = 0;\n\n        // Use a structure to keep track of each hash count\n\n\n        HashCount[] memory hashCounts = new HashCount[](validators.length);\n\n        // Count occurrences of each hash\n        for (uint i = 0; i < validators.length; i++) {\n            bytes32 currentHash = serverSubmissions[serverIP][validators[i]].playerListHash;\n            bool found = false;\n\n            for (uint j = 0; j < hashCounts.length; j++) {\n                if (hashCounts[j].hash == currentHash) {\n                    hashCounts[j].count++;\n                    found = true;\n                    break;\n                }\n            }\n\n            if (!found) {\n                hashCounts[i] = HashCount({hash: currentHash, count: 1});\n            }\n\n            // Update majority hash if necessary\n            if (hashCounts[i].count > highestCount) {\n                highestCount = hashCounts[i].count;\n                majorityHash = hashCounts[i].hash;\n            }\n        }\n\n        // Check if the highest count meets the majority threshold\n        if (highestCount >= majorityThreshold) {\n            return majorityHash;\n        }\n\n        return bytes32(0); // No majority found\n    }\n\n    // Helper function to check if a hash is present in the tempUniqueHashes array\n\n\n    function getValidRewardAddressesByNames(string[] memory playerNames) public view returns (address[] memory) {\n        return playerDatabase.getValidRewardAddressesByNames(playerNames, lastMintTime);\n    }\n\n\n\n    // Additional functions...\n}\n",
  "sourceMap": "577:9352:4:-:0;;;1267:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1351:14;:56;;-1:-1:-1;;;;;1351:56:4;;;-1:-1:-1;;;;;;1351:56:4;;;;;;;;1417:45;;;;;;;;;;;577:9352;;14:177:7;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;577:9352:4;;;;;;",
  "sourcePath": "contracts/4_GP_Validator_0-10.sol",
  "type": "contract"
}