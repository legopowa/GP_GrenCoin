{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "minSelfStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "v",
          "type": "uint256"
        }
      ],
      "name": "updateMinSelfStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/DummyContract.sol"
  },
  "ast": {
    "absolutePath": "contracts/DummyContract.sol",
    "exportedSymbols": {
      "DummyContract": [
        2022
      ]
    },
    "id": 2023,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1966,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DummyContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2022,
        "linearizedBaseContracts": [
          2022
        ],
        "name": "DummyContract",
        "nameLocation": "66:13:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1968,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "102:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 2022,
            "src": "86:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1967,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "86:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c5f530af",
            "id": 1970,
            "mutability": "mutable",
            "name": "minSelfStake",
            "nameLocation": "129:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 2022,
            "src": "114:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1969,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "114:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1978,
              "nodeType": "Block",
              "src": "162:36:1",
              "statements": [
                {
                  "expression": {
                    "id": 1976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1973,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1968,
                      "src": "172:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1974,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "181:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "185:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "181:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "172:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1977,
                  "nodeType": "ExpressionStatement",
                  "src": "172:19:1"
                }
              ]
            },
            "id": 1979,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "159:2:1"
            },
            "returnParameters": {
              "id": 1972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "162:0:1"
            },
            "scope": 2022,
            "src": "148:50:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1990,
              "nodeType": "Block",
              "src": "225:98:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1982,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "243:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "247:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "243:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1984,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1968,
                          "src": "257:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "243:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "265:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
                          "typeString": "literal_string \"Only the owner can call this function\""
                        },
                        "value": "Only the owner can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
                          "typeString": "literal_string \"Only the owner can call this function\""
                        }
                      ],
                      "id": 1981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "235:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "235:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1988,
                  "nodeType": "ExpressionStatement",
                  "src": "235:70:1"
                },
                {
                  "id": 1989,
                  "nodeType": "PlaceholderStatement",
                  "src": "315:1:1"
                }
              ]
            },
            "id": 1991,
            "name": "onlyOwner",
            "nameLocation": "213:9:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "222:2:1"
            },
            "src": "204:119:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2020,
              "nodeType": "Block",
              "src": "387:147:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1999,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1993,
                          "src": "405:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000"
                          },
                          "id": 2002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "313030303030",
                            "id": 2000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "410:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 2001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "419:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "410:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000"
                          }
                        },
                        "src": "405:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6f20736d616c6c2076616c7565",
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "425:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c11e8e9ae39325532a1d35a071462db0b9aad5dc4cb50a59899b4a56e7233b20",
                          "typeString": "literal_string \"too small value\""
                        },
                        "value": "too small value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c11e8e9ae39325532a1d35a071462db0b9aad5dc4cb50a59899b4a56e7233b20",
                          "typeString": "literal_string \"too small value\""
                        }
                      ],
                      "id": 1998,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "397:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "397:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2006,
                  "nodeType": "ExpressionStatement",
                  "src": "397:46:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2008,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1993,
                          "src": "461:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000000000"
                          },
                          "id": 2011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130303030303030",
                            "id": 2009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "466:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000_by_1",
                              "typeString": "int_const 10000000"
                            },
                            "value": "10000000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 2010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "477:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "466:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000000000"
                          }
                        },
                        "src": "461:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6f206c617267652076616c7565",
                        "id": 2013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "483:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e24d63e808529866f7473b71534953e1347f2838ef66b16e390642222af2dec7",
                          "typeString": "literal_string \"too large value\""
                        },
                        "value": "too large value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e24d63e808529866f7473b71534953e1347f2838ef66b16e390642222af2dec7",
                          "typeString": "literal_string \"too large value\""
                        }
                      ],
                      "id": 2007,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "453:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "453:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2015,
                  "nodeType": "ExpressionStatement",
                  "src": "453:48:1"
                },
                {
                  "expression": {
                    "id": 2018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2016,
                      "name": "minSelfStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1970,
                      "src": "511:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2017,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "526:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "511:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2019,
                  "nodeType": "ExpressionStatement",
                  "src": "511:16:1"
                }
              ]
            },
            "functionSelector": "866c4b17",
            "id": 2021,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1996,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1995,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "377:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1991,
                  "src": "377:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "377:9:1"
              }
            ],
            "name": "updateMinSelfStake",
            "nameLocation": "338:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1993,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "365:1:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2021,
                  "src": "357:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:11:1"
            },
            "returnParameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:0:1"
            },
            "scope": 2022,
            "src": "329:205:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2023,
        "src": "57:479:1",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "32:504:1"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031916331790556101c5806100326000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063866c4b171461003b578063c5f530af14610050575b600080fd5b61004e610049366004610176565b61006b565b005b61005960015481565b60405190815260200160405180910390f35b6000546001600160a01b031633146100d85760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201526431ba34b7b760d91b60648201526084015b60405180910390fd5b69152d02c7e14af68000008110156101245760405162461bcd60e51b815260206004820152600f60248201526e746f6f20736d616c6c2076616c756560881b60448201526064016100cf565b6a084595161401484a0000008111156101715760405162461bcd60e51b815260206004820152600f60248201526e746f6f206c617267652076616c756560881b60448201526064016100cf565b600155565b60006020828403121561018857600080fd5b503591905056fea26469706673582212204de5fe26e1cca711037d300d5582744fd6daf24c487fdde4a3fc4591de39c6c864736f6c63430008150033",
  "bytecodeSha1": "343f5fecbb6d951eba6a7d1cc6d6f31e28e9b57b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "DummyContract",
  "coverageMap": {
    "branches": {
      "1": {
        "DummyContract.updateMinSelfStake": {
          "3": [
            405,
            423,
            true
          ],
          "4": [
            461,
            481,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "DummyContract.updateMinSelfStake": {
          "0": [
            397,
            443
          ],
          "1": [
            453,
            501
          ],
          "2": [
            511,
            527
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063866c4b171461003b578063c5f530af14610050575b600080fd5b61004e610049366004610176565b61006b565b005b61005960015481565b60405190815260200160405180910390f35b6000546001600160a01b031633146100d85760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201526431ba34b7b760d91b60648201526084015b60405180910390fd5b69152d02c7e14af68000008110156101245760405162461bcd60e51b815260206004820152600f60248201526e746f6f20736d616c6c2076616c756560881b60448201526064016100cf565b6a084595161401484a0000008111156101715760405162461bcd60e51b815260206004820152600f60248201526e746f6f206c617267652076616c756560881b60448201526064016100cf565b600155565b60006020828403121561018857600080fd5b503591905056fea26469706673582212204de5fe26e1cca711037d300d5582744fd6daf24c487fdde4a3fc4591de39c6c864736f6c63430008150033",
  "deployedSourceMap": "57:479:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:205;;;;;;:::i;:::-;;:::i;:::-;;114:27;;;;;;;;;345:25:11;;;333:2;318:18;114:27:1;;;;;;;329:205;257:6;;-1:-1:-1;;;;;257:6:1;243:10;:20;235:70;;;;-1:-1:-1;;;235:70:1;;583:2:11;235:70:1;;;565:21:11;622:2;602:18;;;595:30;661:34;641:18;;;634:62;-1:-1:-1;;;712:18:11;;;705:35;757:19;;235:70:1;;;;;;;;;410:13:::1;405:1;:18;;397:46;;;::::0;-1:-1:-1;;;397:46:1;;989:2:11;397:46:1::1;::::0;::::1;971:21:11::0;1028:2;1008:18;;;1001:30;-1:-1:-1;;;1047:18:11;;;1040:45;1102:18;;397:46:1::1;787:339:11::0;397:46:1::1;466:15;461:1;:20;;453:48;;;::::0;-1:-1:-1;;;453:48:1;;1333:2:11;453:48:1::1;::::0;::::1;1315:21:11::0;1372:2;1352:18;;;1345:30;-1:-1:-1;;;1391:18:11;;;1384:45;1446:18;;453:48:1::1;1131:339:11::0;453:48:1::1;511:12;:16:::0;329:205::o;14:180:11:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:11;;14:180;-1:-1:-1;14:180:11:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    57,
    536
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x866C4B17 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC5F530AF EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x6B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x31BA34B7B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x152D02C7E14AF6800000 DUP2 LT ISZERO PUSH2 0x124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x746F6F20736D616C6C2076616C7565 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCF JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 GT ISZERO PUSH2 0x171 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x746F6F206C617267652076616C7565 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCF JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xE5 INVALID 0x26 0xE1 0xCC 0xA7 GT SUB PUSH30 0x300D5582744FD6DAF24C487FDDE4A3FC4591DE39C6C864736F6C63430008 ISZERO STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        57,
        536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x866C4B17"
    },
    "38": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "EQ",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC5F530AF"
    },
    "49": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x50"
    },
    "53": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        57,
        536
      ],
      "op": "REVERT",
      "path": "1"
    },
    "59": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        329,
        534
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "60": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        329,
        534
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E"
    },
    "63": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        329,
        534
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x49"
    },
    "66": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        329,
        534
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "67": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        329,
        534
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "69": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        329,
        534
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x176"
    },
    "72": {
      "fn": "DummyContract.updateMinSelfStake",
      "jump": "i",
      "offset": [
        329,
        534
      ],
      "op": "JUMP",
      "path": "1"
    },
    "73": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        329,
        534
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "74": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        329,
        534
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B"
    },
    "77": {
      "fn": "DummyContract.updateMinSelfStake",
      "jump": "i",
      "offset": [
        329,
        534
      ],
      "op": "JUMP",
      "path": "1"
    },
    "78": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        329,
        534
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "79": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        329,
        534
      ],
      "op": "STOP",
      "path": "1"
    },
    "80": {
      "offset": [
        114,
        141
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "81": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59"
    },
    "84": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "86": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "87": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "DUP2",
      "path": "1"
    },
    "88": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "JUMP",
      "path": "1"
    },
    "89": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "90": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "92": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "93": {
      "op": "SWAP1"
    },
    "94": {
      "op": "DUP2"
    },
    "95": {
      "op": "MSTORE"
    },
    "96": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "98": {
      "op": "ADD"
    },
    "99": {
      "offset": [
        114,
        141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "101": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "102": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "DUP1",
      "path": "1"
    },
    "103": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "104": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "SUB",
      "path": "1"
    },
    "105": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "106": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        114,
        141
      ],
      "op": "RETURN",
      "path": "1"
    },
    "107": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        329,
        534
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "108": {
      "offset": [
        257,
        263
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "110": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        257,
        263
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "117": {
      "op": "SHL"
    },
    "118": {
      "op": "SUB"
    },
    "119": {
      "offset": [
        257,
        263
      ],
      "op": "AND",
      "path": "1"
    },
    "120": {
      "offset": [
        243,
        253
      ],
      "op": "CALLER",
      "path": "1"
    },
    "121": {
      "offset": [
        243,
        263
      ],
      "op": "EQ",
      "path": "1"
    },
    "122": {
      "offset": [
        235,
        305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD8"
    },
    "125": {
      "offset": [
        235,
        305
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "126": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "128": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "129": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "133": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "135": {
      "op": "SHL"
    },
    "136": {
      "offset": [
        235,
        305
      ],
      "op": "DUP2",
      "path": "1"
    },
    "137": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "140": {
      "offset": [
        235,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "142": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "DUP3",
      "path": "1"
    },
    "143": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "ADD",
      "path": "1"
    },
    "144": {
      "op": "MSTORE"
    },
    "145": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "149": {
      "op": "DUP3"
    },
    "150": {
      "op": "ADD"
    },
    "151": {
      "op": "MSTORE"
    },
    "152": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E"
    },
    "185": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "187": {
      "op": "DUP3"
    },
    "188": {
      "op": "ADD"
    },
    "189": {
      "op": "MSTORE"
    },
    "190": {
      "op": "PUSH5",
      "value": "0x31BA34B7B7"
    },
    "196": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "198": {
      "op": "SHL"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "201": {
      "op": "DUP3"
    },
    "202": {
      "op": "ADD"
    },
    "203": {
      "op": "MSTORE"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "206": {
      "op": "ADD"
    },
    "207": {
      "offset": [
        235,
        305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "208": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "210": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "211": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "DUP1",
      "path": "1"
    },
    "212": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "213": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "SUB",
      "path": "1"
    },
    "214": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "215": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "216": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        235,
        305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "217": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        410,
        423
      ],
      "op": "PUSH10",
      "path": "1",
      "statement": 0,
      "value": "0x152D02C7E14AF6800000"
    },
    "228": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        405,
        406
      ],
      "op": "DUP2",
      "path": "1"
    },
    "229": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        405,
        423
      ],
      "op": "LT",
      "path": "1"
    },
    "230": {
      "branch": 3,
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        405,
        423
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "231": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        397,
        443
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "234": {
      "branch": 3,
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        397,
        443
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "235": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        397,
        443
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "237": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        397,
        443
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "244": {
      "op": "SHL"
    },
    "245": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        397,
        443
      ],
      "op": "DUP2",
      "path": "1"
    },
    "246": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        397,
        443
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "249": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        397,
        443
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "251": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        397,
        443
      ],
      "op": "DUP3",
      "path": "1"
    },
    "252": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        397,
        443
      ],
      "op": "ADD",
      "path": "1"
    },
    "253": {
      "op": "MSTORE"
    },
    "254": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "258": {
      "op": "DUP3"
    },
    "259": {
      "op": "ADD"
    },
    "260": {
      "op": "MSTORE"
    },
    "261": {
      "op": "PUSH15",
      "value": "0x746F6F20736D616C6C2076616C7565"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "279": {
      "op": "SHL"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "282": {
      "op": "DUP3"
    },
    "283": {
      "op": "ADD"
    },
    "284": {
      "op": "MSTORE"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "287": {
      "op": "ADD"
    },
    "288": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        397,
        443
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF"
    },
    "291": {
      "op": "JUMP"
    },
    "292": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        397,
        443
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "293": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        466,
        481
      ],
      "op": "PUSH11",
      "path": "1",
      "statement": 1,
      "value": "0x84595161401484A000000"
    },
    "305": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        461,
        462
      ],
      "op": "DUP2",
      "path": "1"
    },
    "306": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        461,
        481
      ],
      "op": "GT",
      "path": "1"
    },
    "307": {
      "branch": 4,
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        461,
        481
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "308": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        453,
        501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x171"
    },
    "311": {
      "branch": 4,
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        453,
        501
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "312": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        453,
        501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "314": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        453,
        501
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "315": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "319": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "321": {
      "op": "SHL"
    },
    "322": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        453,
        501
      ],
      "op": "DUP2",
      "path": "1"
    },
    "323": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        453,
        501
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "326": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        453,
        501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "328": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        453,
        501
      ],
      "op": "DUP3",
      "path": "1"
    },
    "329": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        453,
        501
      ],
      "op": "ADD",
      "path": "1"
    },
    "330": {
      "op": "MSTORE"
    },
    "331": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "335": {
      "op": "DUP3"
    },
    "336": {
      "op": "ADD"
    },
    "337": {
      "op": "MSTORE"
    },
    "338": {
      "op": "PUSH15",
      "value": "0x746F6F206C617267652076616C7565"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "356": {
      "op": "SHL"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "359": {
      "op": "DUP3"
    },
    "360": {
      "op": "ADD"
    },
    "361": {
      "op": "MSTORE"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "364": {
      "op": "ADD"
    },
    "365": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        453,
        501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF"
    },
    "368": {
      "op": "JUMP"
    },
    "369": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        453,
        501
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "370": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        511,
        523
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x1"
    },
    "372": {
      "fn": "DummyContract.updateMinSelfStake",
      "offset": [
        511,
        527
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "373": {
      "fn": "DummyContract.updateMinSelfStake",
      "jump": "o",
      "offset": [
        329,
        534
      ],
      "op": "JUMP",
      "path": "1"
    },
    "374": {
      "op": "JUMPDEST"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "379": {
      "op": "DUP3"
    },
    "380": {
      "op": "DUP5"
    },
    "381": {
      "op": "SUB"
    },
    "382": {
      "op": "SLT"
    },
    "383": {
      "op": "ISZERO"
    },
    "384": {
      "op": "PUSH2",
      "value": "0x188"
    },
    "387": {
      "op": "JUMPI"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "390": {
      "op": "DUP1"
    },
    "391": {
      "op": "REVERT"
    },
    "392": {
      "op": "JUMPDEST"
    },
    "393": {
      "op": "POP"
    },
    "394": {
      "op": "CALLDATALOAD"
    },
    "395": {
      "op": "SWAP2"
    },
    "396": {
      "op": "SWAP1"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "40fe32a800d1f7392036dabc440505c28abc2906",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract DummyContract {\n    address private _owner;\n    uint256 public minSelfStake;\n\n    constructor() {\n        _owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == _owner, \"Only the owner can call this function\");\n        _;\n    }\n\n    function updateMinSelfStake(uint256 v) external onlyOwner {\n        require(v >= 100000 * 1e18, \"too small value\");\n        require(v <= 10000000 * 1e18, \"too large value\");\n        minSelfStake = v;\n    }\n}",
  "sourceMap": "57:479:1:-:0;;;148:50;;;;;;;;;-1:-1:-1;172:6:1;:19;;-1:-1:-1;;;;;;172:19:1;181:10;172:19;;;57:479;;;;;;",
  "sourcePath": "contracts/DummyContract.sol",
  "type": "contract"
}