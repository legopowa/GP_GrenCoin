{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "AuthorizedMinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "AuthorizedMinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lamportBase",
      "outputs": [
        {
          "internalType": "contract ILamportBase",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        }
      ],
      "name": "removeAuthorizedMinterStepOne",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        }
      ],
      "name": "removeAuthorizedMinterStepTwo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "setAuthorizedMinterStepOne",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "setAuthorizedMinterStepTwo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/2_GP_Mint.sol"
  },
  "ast": {
    "absolutePath": "contracts/2_GP_Mint.sol",
    "exportedSymbols": {
      "GP_Mint": [
        705
      ],
      "ILamportBase": [
        21
      ]
    },
    "id": 706,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ILamportBase",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 21,
        "linearizedBaseContracts": [
          21
        ],
        "name": "ILamportBase",
        "nameLocation": "245:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "333f6111",
            "id": 20,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "performLamportMasterCheck",
            "nameLocation": "273:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "333:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "308:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 2,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "308:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 4,
                      "length": {
                        "hexValue": "32",
                        "id": 3,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "316:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "308:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 6,
                    "length": {
                      "hexValue": "323536",
                      "id": 5,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "319:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "308:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "373:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "353:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "353:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 10,
                    "length": {
                      "hexValue": "323536",
                      "id": 9,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "359:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "353:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "394:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "386:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "prepacked",
                  "nameLocation": "424:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "411:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:141:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "458:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "457:6:0"
            },
            "scope": 21,
            "src": "264:200:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 706,
        "src": "235:231:0",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GP_Mint",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 705,
        "linearizedBaseContracts": [
          705
        ],
        "name": "GP_Mint",
        "nameLocation": "477:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "56bf7b57",
            "id": 24,
            "mutability": "mutable",
            "name": "lamportBase",
            "nameLocation": "512:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "492:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILamportBase_$21",
              "typeString": "contract ILamportBase"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "ILamportBase",
                "nameLocations": [
                  "492:12:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21,
                "src": "492:12:0"
              },
              "referencedDeclaration": 21,
              "src": "492:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILamportBase_$21",
                "typeString": "contract ILamportBase"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "565:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "529:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 27,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "537:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "529:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "548:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 34,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "636:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "580:67:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 33,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "588:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "580:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 30,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "607:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "599:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "618:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "670:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "654:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "654:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "704:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "689:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 37,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "689:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "730:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "715:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 39,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "715:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "authorizedMinter",
            "nameLocation": "816:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "800:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "800:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 46,
            "mutability": "mutable",
            "name": "proposedMinters",
            "nameLocation": "874:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 705,
            "src": "838:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 45,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 43,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "846:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "838:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "857:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "fe7c7fcb0ae0ce6bfd0a653fa3ab6c97a51a0819e6c27cdab8a08d456338c5fa",
            "id": 50,
            "name": "AuthorizedMinterSet",
            "nameLocation": "944:19:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "980:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "964:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "963:24:0"
            },
            "src": "938:50:0"
          },
          {
            "anonymous": false,
            "eventSelector": "c6711413797b8a562634e98c95d50e7619d39702ed5b82ce335dc93546c3a88c",
            "id": 54,
            "name": "AuthorizedMinterRemoved",
            "nameLocation": "999:23:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1039:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "1023:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:24:0"
            },
            "src": "993:54:0"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "1066:173:0",
              "statements": [
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "lamportBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1076:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILamportBase_$21",
                        "typeString": "contract ILamportBase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307838314338433735386333393837443964636138643064413330453530303038323861313639626645",
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1103:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x81C8C758c3987D9dca8d0dA30E5000828a169bfE"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 58,
                        "name": "ILamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1090:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILamportBase_$21_$",
                          "typeString": "type(contract ILamportBase)"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1090:56:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILamportBase_$21",
                        "typeString": "contract ILamportBase"
                      }
                    },
                    "src": "1076:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILamportBase_$21",
                      "typeString": "contract ILamportBase"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:70:0"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1156:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "47504772656e73",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1164:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_85d23d8815db0386ffcab147251f14b940cc30f01028c74f890ccc54e82161f8",
                        "typeString": "literal_string \"GPGrens\""
                      },
                      "value": "GPGrens"
                    },
                    "src": "1156:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:17:0"
                },
                {
                  "expression": {
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1183:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "475047",
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1193:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e8ce4bb4b5e5e059c89aa7348567c209fb8542ebce9f149be0a20dbaecaf6000",
                        "typeString": "literal_string \"GPG\""
                      },
                      "value": "GPG"
                    },
                    "src": "1183:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:15:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 71,
                      "name": "_initializeMintProcess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "1208:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1208:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:24:0"
                }
              ]
            },
            "id": 75,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:2:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1066:0:0"
            },
            "scope": 705,
            "src": "1052:187:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "1286:348:0",
              "statements": [
                {
                  "expression": {
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1367:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307839383832386232373834654345303534614136393939303931373561356134303832363831436335",
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1386:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x98828b2784eCE054aA699909175a5a4082681Cc5"
                    },
                    "src": "1367:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307832333966413736323333353465433236353230644538373842353266313346653834623036393731",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1468:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x239fA7623354eC26520dE878B52f13Fe84b06971"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3830303030",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1512:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_80000_by_1",
                            "typeString": "int_const 80000"
                          },
                          "value": "80000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 85,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1521:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 88,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 403,
                                      "src": "1535:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
                                        "typeString": "function () pure returns (uint8)"
                                      }
                                    },
                                    "id": 89,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1535:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 87,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1527:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 86,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1527:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 90,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1527:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1521:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 92,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1520:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1512:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 82,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 634,
                      "src": "1462:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1462:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1462:86:0"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1598:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1625:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1617:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1617:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1617:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1598:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:29:0"
                }
              ]
            },
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializeMintProcess",
            "nameLocation": "1253:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1275:2:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1286:0:0"
            },
            "scope": 705,
            "src": "1244:390:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1816:432:0",
              "statements": [
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "1885:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 150,
                      "src": "1872:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1872:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 127,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1914:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 123,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1897:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1901:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "1897:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1872:49:0"
                },
                {
                  "assignments": [
                    129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 129,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "1981:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 150,
                      "src": "1976:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 128,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1976:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 137,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 132,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "2034:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 133,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "2046:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 134,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2051:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 135,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "2060:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 130,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1996:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2008:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "1996:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1976:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 139,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2144:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2158:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2136:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2136:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:58:0"
                },
                {
                  "expression": {
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 143,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "2205:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 146,
                      "indexExpression": {
                        "expression": {
                          "id": 144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2221:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2225:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2221:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2205:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 147,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "2235:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2205:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:36:0"
                }
              ]
            },
            "functionSelector": "2a663120",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAuthorizedMinterStepOne",
            "nameLocation": "1649:26:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "1710:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1685:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 105,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1685:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 107,
                      "length": {
                        "hexValue": "32",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1693:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1685:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 109,
                    "length": {
                      "hexValue": "323536",
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1696:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1685:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1750:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1730:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 111,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1730:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 113,
                    "length": {
                      "hexValue": "323536",
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1736:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1730:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "1771:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1763:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1796:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1788:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1675:133:0"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1816:0:0"
            },
            "scope": 705,
            "src": "1640:608:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "2430:1054:0",
              "statements": [
                {
                  "assignments": [
                    169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 169,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "2499:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "2486:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 168,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2486:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 172,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "2528:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 170,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2511:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2515:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2511:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2511:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2486:49:0"
                },
                {
                  "assignments": [
                    176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 176,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "2595:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "2590:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 175,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2590:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 184,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 179,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2648:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 180,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "2660:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 181,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2665:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 182,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2674:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 177,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "2610:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2622:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "2610:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2610:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2590:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 186,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "2758:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2772:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2750:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 191,
                            "name": "proposedMinters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "2908:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 194,
                          "indexExpression": {
                            "expression": {
                              "id": 192,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2924:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2928:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2924:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2908:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 195,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "2939:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2908:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7945524332303a204d696e7465722061646472657373206d69736d61746368",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2947:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33a164b915b06bfe8d682ce5eb3166400dd659d2d7b8fc839105034ce2391ccd",
                          "typeString": "literal_string \"MyERC20: Minter address mismatch\""
                        },
                        "value": "MyERC20: Minter address mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33a164b915b06bfe8d682ce5eb3166400dd659d2d7b8fc839105034ce2391ccd",
                          "typeString": "literal_string \"MyERC20: Minter address mismatch\""
                        }
                      ],
                      "id": 190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2900:82:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2900:82:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 201,
                            "name": "authorizedMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "3093:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3121:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3113:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 202,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3113:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3113:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3093:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 207,
                            "name": "authorizedMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "3127:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 208,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "3147:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3127:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3093:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7945524332303a20416e6f74686572206d696e74657220616c726561647920736574",
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3155:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad111b00b3849438767c7f5800f52786c55cc1bc1e6bddddc503e87c1eff38db",
                          "typeString": "literal_string \"MyERC20: Another minter already set\""
                        },
                        "value": "MyERC20: Another minter already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad111b00b3849438767c7f5800f52786c55cc1bc1e6bddddc503e87c1eff38db",
                          "typeString": "literal_string \"MyERC20: Another minter already set\""
                        }
                      ],
                      "id": 200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3085:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3085:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "3085:108:0"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 214,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3241:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 215,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "3260:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3241:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3241:25:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 219,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "3362:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 218,
                      "name": "AuthorizedMinterSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "3342:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3342:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "EmitStatement",
                  "src": "3337:32:0"
                },
                {
                  "expression": {
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3443:34:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 222,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "3450:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 225,
                      "indexExpression": {
                        "expression": {
                          "id": 223,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3466:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3470:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3466:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3450:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "3443:34:0"
                }
              ]
            },
            "functionSelector": "e951ae23",
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAuthorizedMinterStepTwo",
            "nameLocation": "2263:26:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "2324:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "2299:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 152,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2299:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 154,
                      "length": {
                        "hexValue": "32",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2307:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2299:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 156,
                    "length": {
                      "hexValue": "323536",
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2310:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2299:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "2364:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "2344:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 158,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2344:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 160,
                    "length": {
                      "hexValue": "323536",
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2350:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2344:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "2385:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "2377:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2377:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "2410:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "2402:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2402:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2289:133:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2430:0:0"
            },
            "scope": 705,
            "src": "2254:1230:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "3645:511:0",
              "statements": [
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "3724:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 276,
                      "src": "3711:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3711:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 248,
                        "name": "authorizedMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "3753:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 246,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3736:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3740:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "3736:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3736:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3711:59:0"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "3830:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 276,
                      "src": "3825:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3825:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 260,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 255,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "3883:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 256,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "3895:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 257,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "3900:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 258,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "3909:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 253,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "3845:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3857:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "3845:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3845:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3825:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 262,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3993:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4007:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3985:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3985:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "3985:58:0"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 266,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "4109:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 269,
                      "indexExpression": {
                        "expression": {
                          "id": 267,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4125:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4129:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4125:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4109:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4147:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4139:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4139:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4139:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4109:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "4109:40:0"
                }
              ]
            },
            "functionSelector": "e5f855b7",
            "id": 277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAuthorizedMinterStepOne",
            "nameLocation": "3499:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "3563:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "3538:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 230,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3538:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 232,
                      "length": {
                        "hexValue": "32",
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3546:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "3538:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 234,
                    "length": {
                      "hexValue": "323536",
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3549:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3538:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "3603:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "3583:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 236,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "3583:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 238,
                    "length": {
                      "hexValue": "323536",
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3589:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3583:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "3624:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "3616:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3616:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3528:109:0"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3645:0:0"
            },
            "scope": 705,
            "src": "3490:666:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 357,
              "nodeType": "Block",
              "src": "4317:905:0",
              "statements": [
                {
                  "assignments": [
                    293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 293,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "4384:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "4371:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 292,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4371:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 301,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4421:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4413:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 296,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4413:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4413:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 294,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4396:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4400:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "4396:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4396:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4371:53:0"
                },
                {
                  "assignments": [
                    303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 303,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "4484:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "4479:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 302,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4479:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 311,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 306,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "4537:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 307,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "4549:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 308,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "4554:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 309,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "4563:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 304,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "4499:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4511:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "4499:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4499:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4479:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 313,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "4647:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4661:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4639:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4639:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "4639:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 318,
                            "name": "proposedMinters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "4772:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 321,
                          "indexExpression": {
                            "expression": {
                              "id": 319,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4788:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4792:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4788:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4772:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4811:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4803:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 322,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4803:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4803:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4772:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a204e6f206d696e7465722072656d6f76616c2070726f706f736564",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4815:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f83813399d7cc357b21a11c0dbe37a521ad3709a05e3244fb040e79bc0bd5d6",
                          "typeString": "literal_string \"GP_Mint: No minter removal proposed\""
                        },
                        "value": "GP_Mint: No minter removal proposed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f83813399d7cc357b21a11c0dbe37a521ad3709a05e3244fb040e79bc0bd5d6",
                          "typeString": "literal_string \"GP_Mint: No minter removal proposed\""
                        }
                      ],
                      "id": 317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4764:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4764:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "4764:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 331,
                          "name": "authorizedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "4871:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4899:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4891:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 332,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4891:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4891:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4871:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a204e6f206d696e74657220736574",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4903:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76b64a47d62a8fc72866498900144b3b8491da9a7f93d1c8acb7d9ac5f6deaec",
                          "typeString": "literal_string \"GP_Mint: No minter set\""
                        },
                        "value": "GP_Mint: No minter set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76b64a47d62a8fc72866498900144b3b8491da9a7f93d1c8acb7d9ac5f6deaec",
                          "typeString": "literal_string \"GP_Mint: No minter set\""
                        }
                      ],
                      "id": 330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4863:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4863:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "4863:65:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 341,
                        "name": "authorizedMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "5018:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 340,
                      "name": "AuthorizedMinterRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "4994:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4994:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "EmitStatement",
                  "src": "4989:46:0"
                },
                {
                  "expression": {
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 344,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "5102:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5129:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5121:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5121:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5121:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5102:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "5102:29:0"
                },
                {
                  "expression": {
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5181:34:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 351,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "5188:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 354,
                      "indexExpression": {
                        "expression": {
                          "id": 352,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5204:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5208:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5204:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5188:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "5181:34:0"
                }
              ]
            },
            "functionSelector": "8486e2ff",
            "id": 358,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAuthorizedMinterStepTwo",
            "nameLocation": "4171:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "4235:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "4210:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 278,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4210:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 280,
                      "length": {
                        "hexValue": "32",
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4218:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "4210:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 282,
                    "length": {
                      "hexValue": "323536",
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4221:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4210:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "4275:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "4255:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 284,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4255:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 286,
                    "length": {
                      "hexValue": "323536",
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4261:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4255:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 289,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "4296:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "4288:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4288:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4200:109:0"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4317:0:0"
            },
            "scope": 705,
            "src": "4162:1060:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "5365:120:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 366,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5383:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5387:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5383:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 368,
                          "name": "authorizedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "5397:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5383:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a20556e617574686f72697a6564206d696e746572",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5415:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        },
                        "value": "GP_Mint: Unauthorized minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        }
                      ],
                      "id": 365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5375:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 374,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "5462:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 375,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "5471:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 373,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 634,
                      "src": "5456:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5456:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "5456:22:0"
                }
              ]
            },
            "functionSelector": "f0dda65c",
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokens",
            "nameLocation": "5312:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5331:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "5323:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5323:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5348:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "5340:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5340:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5322:33:0"
            },
            "returnParameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5365:0:0"
            },
            "scope": 705,
            "src": "5303:182:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "5544:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 384,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "5561:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 383,
                  "id": 385,
                  "nodeType": "Return",
                  "src": "5554:12:0"
                }
              ]
            },
            "functionSelector": "06fdde03",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "5501:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5505:2:0"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5529:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5529:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5528:15:0"
            },
            "scope": 705,
            "src": "5492:81:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "5633:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 392,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "5650:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 391,
                  "id": 393,
                  "nodeType": "Return",
                  "src": "5643:14:0"
                }
              ]
            },
            "functionSelector": "95d89b41",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "5588:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5594:2:0"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "5618:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5618:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5617:15:0"
            },
            "scope": 705,
            "src": "5579:85:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "5718:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5735:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 399,
                  "id": 401,
                  "nodeType": "Return",
                  "src": "5728:9:0"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "5679:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5687:2:0"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "5711:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5711:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5710:7:0"
            },
            "scope": 705,
            "src": "5670:74:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 410,
              "nodeType": "Block",
              "src": "5803:36:0",
              "statements": [
                {
                  "expression": {
                    "id": 408,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "5820:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 407,
                  "id": 409,
                  "nodeType": "Return",
                  "src": "5813:19:0"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "5759:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5770:2:0"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 411,
                  "src": "5794:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5794:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5793:9:0"
            },
            "scope": 705,
            "src": "5750:89:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 422,
              "nodeType": "Block",
              "src": "5911:42:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 418,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "5928:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 420,
                    "indexExpression": {
                      "id": 419,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "5938:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5928:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 417,
                  "id": 421,
                  "nodeType": "Return",
                  "src": "5921:25:0"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5854:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5872:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "5864:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5864:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5863:17:0"
            },
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "5902:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5902:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5901:9:0"
            },
            "scope": 705,
            "src": "5845:108:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "6026:312:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 433,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 425,
                          "src": "6044:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6058:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6050:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 434,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6050:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6050:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6044:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6062:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6036:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6036:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "6036:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 443,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "6118:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 446,
                          "indexExpression": {
                            "expression": {
                              "id": 444,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6128:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6132:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6128:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6118:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 447,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 427,
                          "src": "6143:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6118:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6150:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6110:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6110:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "6110:81:0"
                },
                {
                  "expression": {
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 452,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "6202:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 455,
                      "indexExpression": {
                        "expression": {
                          "id": 453,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6212:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6216:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6212:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6202:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 456,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "6227:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6202:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "6202:30:0"
                },
                {
                  "expression": {
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 459,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "6242:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 461,
                      "indexExpression": {
                        "id": 460,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "6252:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6242:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 462,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "6259:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6242:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "6242:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 466,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6288:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6292:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6288:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 468,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "6300:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 469,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "6304:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 465,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "6279:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6279:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "EmitStatement",
                  "src": "6274:36:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6327:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 431,
                  "id": 473,
                  "nodeType": "Return",
                  "src": "6320:11:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "5968:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5985:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "5977:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5977:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5997:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "5989:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5989:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5976:27:0"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "6020:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6020:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6019:6:0"
            },
            "scope": 705,
            "src": "5959:379:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 490,
              "nodeType": "Block",
              "src": "6425:51:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 484,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "6442:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 486,
                      "indexExpression": {
                        "id": 485,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "6454:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6442:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 488,
                    "indexExpression": {
                      "id": 487,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "6461:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6442:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 483,
                  "id": 489,
                  "nodeType": "Return",
                  "src": "6435:34:0"
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "6353:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6371:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "6363:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6363:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6386:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "6378:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6378:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6362:32:0"
            },
            "returnParameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "6416:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6416:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6415:9:0"
            },
            "scope": 705,
            "src": "6344:132:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 528,
              "nodeType": "Block",
              "src": "6553:208:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 501,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "6571:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6590:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6582:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 502,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6582:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6582:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6571:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6594:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6563:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6563:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "6563:68:0"
                },
                {
                  "expression": {
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 510,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "6642:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 514,
                        "indexExpression": {
                          "expression": {
                            "id": 511,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6654:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6658:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6654:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6642:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 515,
                      "indexExpression": {
                        "id": 513,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "6666:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6642:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 516,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "6677:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6642:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "6642:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 520,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6706:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6710:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6706:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 522,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "6718:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 523,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "6727:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 519,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 704,
                      "src": "6697:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6697:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "EmitStatement",
                  "src": "6692:41:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6750:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 499,
                  "id": 527,
                  "nodeType": "Return",
                  "src": "6743:11:0"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "6491:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6507:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "6499:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6499:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6524:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "6516:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6516:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6498:32:0"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "6547:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6547:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6546:6:0"
            },
            "scope": 705,
            "src": "6482:279:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "6852:443:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 541,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 533,
                          "src": "6870:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6884:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6876:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 542,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6876:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6876:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6870:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6888:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6862:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6862:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "6862:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 551,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "6944:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 552,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "6953:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 554,
                          "indexExpression": {
                            "id": 553,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "6963:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6953:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6944:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6970:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6936:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6936:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "6936:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 560,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "7029:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 561,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "7038:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 563,
                            "indexExpression": {
                              "id": 562,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "7050:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7038:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 566,
                          "indexExpression": {
                            "expression": {
                              "id": 564,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7056:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7060:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7056:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7038:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7029:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7069:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7021:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7021:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "7021:91:0"
                },
                {
                  "expression": {
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 571,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7123:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 573,
                      "indexExpression": {
                        "id": 572,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "7133:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7123:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 574,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "7142:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7123:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "7123:24:0"
                },
                {
                  "expression": {
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 577,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7157:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 579,
                      "indexExpression": {
                        "id": 578,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "7167:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7157:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 580,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "7174:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7157:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "7157:22:0"
                },
                {
                  "expression": {
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 583,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "7189:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 587,
                        "indexExpression": {
                          "id": 584,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 531,
                          "src": "7201:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7189:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 588,
                      "indexExpression": {
                        "expression": {
                          "id": 585,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7207:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7211:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7207:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7189:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 589,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "7222:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7189:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "7189:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 593,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "7251:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 594,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "7257:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 595,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 535,
                        "src": "7261:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 592,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "7242:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7242:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "EmitStatement",
                  "src": "7237:30:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7284:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 539,
                  "id": 599,
                  "nodeType": "Return",
                  "src": "7277:11:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "6776:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6797:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "6789:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6789:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6811:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "6803:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6803:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 535,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6823:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "6815:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6815:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6788:41:0"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "6846:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6846:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6845:6:0"
            },
            "scope": 705,
            "src": "6767:528:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "7358:261:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 609,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7376:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7380:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7376:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 611,
                          "name": "authorizedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "7390:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7376:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a20556e617574686f72697a6564206d696e746572",
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7408:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        },
                        "value": "GP_Mint: Unauthorized minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        }
                      ],
                      "id": 608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7368:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7368:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "7368:71:0"
                },
                {
                  "expression": {
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 616,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "7449:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 617,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "7465:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7449:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "7449:22:0"
                },
                {
                  "expression": {
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 620,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7481:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 622,
                      "indexExpression": {
                        "id": 621,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "7491:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7481:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 623,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "7503:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7481:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "7481:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 627,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7583:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7587:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7583:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 629,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "7595:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 630,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "7604:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 626,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 696,
                      "src": "7576:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7576:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "EmitStatement",
                  "src": "7571:40:0"
                }
              ]
            },
            "id": 634,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "7310:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7324:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "7316:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7316:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7341:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "7333:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7333:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7315:33:0"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7358:0:0"
            },
            "scope": 705,
            "src": "7301:318:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 679,
              "nodeType": "Block",
              "src": "7682:292:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 642,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 636,
                          "src": "7700:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7719:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7711:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 643,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7711:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7711:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7700:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7723:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7692:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7692:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 650,
                  "nodeType": "ExpressionStatement",
                  "src": "7692:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 652,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "7777:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 654,
                          "indexExpression": {
                            "id": 653,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "7787:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7777:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 655,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "7799:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7777:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7807:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 651,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7769:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7769:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "7769:75:0"
                },
                {
                  "expression": {
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 660,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7855:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 662,
                      "indexExpression": {
                        "id": 661,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "7865:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7855:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 663,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "7877:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7855:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "7855:28:0"
                },
                {
                  "expression": {
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 666,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "7893:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 667,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "7909:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7893:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "7893:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 671,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "7939:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7956:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7948:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 672,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7948:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7948:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 676,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "7960:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 670,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "7930:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7930:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "EmitStatement",
                  "src": "7925:42:0"
                }
              ]
            },
            "id": 680,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "7634:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7648:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "7640:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7640:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7665:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "7657:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7657:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7639:33:0"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7682:0:0"
            },
            "scope": 705,
            "src": "7625:349:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 688,
            "name": "Transfer",
            "nameLocation": "7986:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8011:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "7995:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7995:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 684,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8033:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "8017:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8017:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 686,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8045:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "8037:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8037:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7994:57:0"
            },
            "src": "7980:72:0"
          },
          {
            "anonymous": false,
            "eventSelector": "9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f0",
            "id": 696,
            "name": "Minted",
            "nameLocation": "8063:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 690,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "8086:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "8070:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8070:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 692,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8110:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "8094:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8094:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 694,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8127:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "8119:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8119:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8069:65:0"
            },
            "src": "8057:78:0"
          },
          {
            "anonymous": false,
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 704,
            "name": "Approval",
            "nameLocation": "8146:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 698,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "8171:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "8155:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8155:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8194:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "8178:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8178:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 702,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8211:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "8203:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8203:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8154:63:0"
            },
            "src": "8140:78:0"
          }
        ],
        "scope": 706,
        "src": "468:7752:0",
        "usedErrors": [],
        "usedEvents": [
          50,
          54,
          688,
          696,
          704
        ]
      }
    ],
    "src": "32:8189:0"
  },
  "bytecode": "60806040523480156200001157600080fd5b50600080546001600160a01b0319167381c8c758c3987d9dca8d0da30e5000828a169bfe17905560408051808201909152600781526647504772656e7360c81b6020820152600490620000659082620002af565b5060408051808201909152600381526247504760e81b60208201526005906200008f9082620002af565b506200009a620000a0565b620004d5565b600680546001600160a01b0319167398828b2784ece054aa699909175a5a4082681cc51790556200010d73239fa7623354ec26520de878b52f13fe84b06971620000e8601290565b620000f89060ff16600a62000490565b620001079062013880620004a5565b6200011f565b600680546001600160a01b0319169055565b6006546001600160a01b031633146200017e5760405162461bcd60e51b815260206004820152601c60248201527f47505f4d696e743a20556e617574686f72697a6564206d696e74657200000000604482015260640160405180910390fd5b8060036000828254620001929190620004bf565b90915550506001600160a01b03821660009081526001602052604081208054839290620001c1908490620004bf565b90915550506040518181526001600160a01b0383169033907f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023557607f821691505b6020821081036200025657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002aa57600081815260208120601f850160051c81016020861015620002855750805b601f850160051c820191505b81811015620002a65782815560010162000291565b5050505b505050565b81516001600160401b03811115620002cb57620002cb6200020a565b620002e381620002dc845462000220565b846200025c565b602080601f8311600181146200031b5760008415620003025750858301515b600019600386901b1c1916600185901b178555620002a6565b600085815260208120601f198616915b828110156200034c578886015182559484019460019091019084016200032b565b50858210156200036b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003d2578160001904821115620003b657620003b66200037b565b80851615620003c457918102915b93841c939080029062000396565b509250929050565b600082620003eb575060016200048a565b81620003fa575060006200048a565b81600181146200041357600281146200041e576200043e565b60019150506200048a565b60ff8411156200043257620004326200037b565b50506001821b6200048a565b5060208310610133831016604e8410600b841016171562000463575081810a6200048a565b6200046f838362000391565b80600019048211156200048657620004866200037b565b0290505b92915050565b60006200049e8383620003da565b9392505050565b80820281158282048414176200048a576200048a6200037b565b808201808211156200048a576200048a6200037b565b61129c80620004e56000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063dd62ed3e11610066578063dd62ed3e14610206578063e5f855b71461023f578063e951ae2314610252578063f0dda65c1461026557600080fd5b806370a08231146101af5780638486e2ff146101d857806395d89b41146101eb578063a9059cbb146101f357600080fd5b806323b872dd116100d357806323b872dd1461014d5780632a66312014610160578063313ce5671461017557806356bf7b571461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610278565b60405161010f9190610e07565b60405180910390f35b61012b610126366004610e3d565b61030a565b604051901515815260200161010f565b6003545b60405190815260200161010f565b61012b61015b366004610e67565b6103d8565b61017361016e366004610ec7565b6105a7565b005b6040516012815260200161010f565b600054610197906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b61013f6101bd366004610f34565b6001600160a01b031660009081526001602052604090205490565b6101736101e6366004610f4f565b610699565b610102610882565b61012b610201366004610e3d565b610891565b61013f610214366004610faa565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61017361024d366004610f4f565b610976565b610173610260366004610ec7565b610a66565b610173610273366004610e3d565b610c77565b60606004805461028790610fdd565b80601f01602080910402602001604051908101604052809291908181526020018280546102b390610fdd565b80156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b5050505050905090565b60006001600160a01b0383166103725760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084015b60405180910390fd5b3360008181526002602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b60006001600160a01b0383166104005760405162461bcd60e51b815260040161036990611017565b6001600160a01b0384166000908152600160205260409020548211156104385760405162461bcd60e51b81526004016103699061105a565b6001600160a01b03841660009081526002602090815260408083203384529091529020548211156104bc5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610369565b6001600160a01b038416600090815260016020526040812080548492906104e49084906110b6565b90915550506001600160a01b038316600090815260016020526040812080548492906105119084906110c9565b90915550506001600160a01b0384166000908152600260209081526040808320338452909152812080548492906105499084906110b6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161059591815260200190565b60405180910390a35060019392505050565b6000816040516020016105ba91906110dc565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f611190610603908990899089908890600401611122565b6020604051808303816000875af1158015610622573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106469190611203565b9050806106655760405162461bcd60e51b815260040161036990611225565b505033600090815260076020526040902080546001600160a01b0319166001600160a01b0392909216919091179055505050565b6000806040516020016106ac91906110dc565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f6111906106f5908890889088908890600401611122565b6020604051808303816000875af1158015610714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107389190611203565b9050806107575760405162461bcd60e51b815260040161036990611225565b336000908152600760205260409020546001600160a01b0316156107c95760405162461bcd60e51b815260206004820152602360248201527f47505f4d696e743a204e6f206d696e7465722072656d6f76616c2070726f706f6044820152621cd95960ea1b6064820152608401610369565b6006546001600160a01b031661081a5760405162461bcd60e51b815260206004820152601660248201527511d417d35a5b9d0e88139bc81b5a5b9d195c881cd95d60521b6044820152606401610369565b6006546040516001600160a01b03909116907fc6711413797b8a562634e98c95d50e7619d39702ed5b82ce335dc93546c3a88c90600090a25050600680546001600160a01b031990811690915533600090815260076020526040902080549091169055505050565b60606005805461028790610fdd565b60006001600160a01b0383166108b95760405162461bcd60e51b815260040161036990611017565b336000908152600160205260409020548211156108e85760405162461bcd60e51b81526004016103699061105a565b33600090815260016020526040812080548492906109079084906110b6565b90915550506001600160a01b038316600090815260016020526040812080548492906109349084906110c9565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016103c6565b600654604051600091610997916001600160a01b03909116906020016110dc565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f6111906109e0908890889088908890600401611122565b6020604051808303816000875af11580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a239190611203565b905080610a425760405162461bcd60e51b815260040161036990611225565b505033600090815260076020526040902080546001600160a01b0319169055505050565b600081604051602001610a7991906110dc565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f611190610ac2908990899089908890600401611122565b6020604051808303816000875af1158015610ae1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b059190611203565b905080610b245760405162461bcd60e51b815260040161036990611225565b336000908152600760205260409020546001600160a01b03848116911614610b8e5760405162461bcd60e51b815260206004820181905260248201527f4d7945524332303a204d696e7465722061646472657373206d69736d617463686044820152606401610369565b6006546001600160a01b03161580610bb357506006546001600160a01b038481169116145b610c0b5760405162461bcd60e51b815260206004820152602360248201527f4d7945524332303a20416e6f74686572206d696e74657220616c7265616479206044820152621cd95d60ea1b6064820152608401610369565b600680546001600160a01b0319166001600160a01b0385169081179091556040517ffe7c7fcb0ae0ce6bfd0a653fa3ab6c97a51a0819e6c27cdab8a08d456338c5fa90600090a2505033600090815260076020526040902080546001600160a01b031916905550505050565b6006546001600160a01b03163314610cd15760405162461bcd60e51b815260206004820152601c60248201527f47505f4d696e743a20556e617574686f72697a6564206d696e746572000000006044820152606401610369565b610cdb8282610cdf565b5050565b6006546001600160a01b03163314610d395760405162461bcd60e51b815260206004820152601c60248201527f47505f4d696e743a20556e617574686f72697a6564206d696e746572000000006044820152606401610369565b8060036000828254610d4b91906110c9565b90915550506001600160a01b03821660009081526001602052604081208054839290610d789084906110c9565b90915550506040518181526001600160a01b0383169033907f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050565b6000815180845260005b81811015610de757602081850181015186830182015201610dcb565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e1a6020830184610dc1565b9392505050565b80356001600160a01b0381168114610e3857600080fd5b919050565b60008060408385031215610e5057600080fd5b610e5983610e21565b946020939093013593505050565b600080600060608486031215610e7c57600080fd5b610e8584610e21565b9250610e9360208501610e21565b9150604084013590509250925092565b8061400081018310156103d257600080fd5b8061200081018310156103d257600080fd5b6000806000806140608587031215610ede57600080fd5b610ee88686610ea3565b935061400085013567ffffffffffffffff811115610f0557600080fd5b610f1187828801610eb5565b9350506140208501359150610f296140408601610e21565b905092959194509250565b600060208284031215610f4657600080fd5b610e1a82610e21565b60008060006140408486031215610f6557600080fd5b610f6f8585610ea3565b925061400084013567ffffffffffffffff811115610f8c57600080fd5b610f9886828701610eb5565b92505061402084013590509250925092565b60008060408385031215610fbd57600080fd5b610fc683610e21565b9150610fd460208401610e21565b90509250929050565b600181811c90821680610ff157607f821691505b60208210810361101157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156103d2576103d26110a0565b808201808211156103d2576103d26110a0565b60609190911b6bffffffffffffffffffffffff1916815260140190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006140608281018388845b61010081101561114f5760408083853792830192919091019060010161112e565b50505061400084019190915261606083018660005b6101008110156111db5785830361405f190184528135368a9003601e1901811261118d57600080fd5b8901602081810191359067ffffffffffffffff8211156111ac57600080fd5b8136038313156111bb57600080fd5b6111c68683856110f9565b96810196955093909301925050600101611164565b5050856140208501528381036140408501526111f78186610dc1565b98975050505050505050565b60006020828403121561121557600080fd5b81518015158114610e1a57600080fd5b60208082526021908201527f4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c656040820152601960fa1b60608201526080019056fea2646970667358221220707fd047849c2f38a57548827c81077472e77f813535bd62762c3e7e175e780b64736f6c63430008150033",
  "bytecodeSha1": "f978cfeb53825aed7ecc9664b817ea3f1c80d9a7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "GP_Mint",
  "coverageMap": {
    "branches": {
      "0": {
        "GP_Mint._mint": {
          "60": [
            7376,
            7406,
            true
          ]
        },
        "GP_Mint.approve": {
          "45": [
            6571,
            6592,
            true
          ]
        },
        "GP_Mint.mintTokens": {
          "59": [
            5383,
            5413,
            true
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepOne": {
          "54": [
            3993,
            4005,
            true
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepTwo": {
          "50": [
            4647,
            4659,
            true
          ],
          "51": [
            4772,
            4813,
            true
          ]
        },
        "GP_Mint.setAuthorizedMinterStepOne": {
          "49": [
            2144,
            2156,
            true
          ]
        },
        "GP_Mint.setAuthorizedMinterStepTwo": {
          "55": [
            2758,
            2770,
            true
          ],
          "56": [
            2908,
            2945,
            true
          ],
          "57": [
            3093,
            3123,
            true
          ],
          "58": [
            3127,
            3153,
            true
          ]
        },
        "GP_Mint.transfer": {
          "52": [
            6044,
            6060,
            true
          ],
          "53": [
            6118,
            6148,
            true
          ]
        },
        "GP_Mint.transferFrom": {
          "46": [
            6870,
            6886,
            true
          ],
          "47": [
            6944,
            6968,
            true
          ],
          "48": [
            7029,
            7067,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "GP_Mint._mint": {
          "41": [
            7368,
            7439
          ],
          "42": [
            7449,
            7471
          ],
          "43": [
            7481,
            7509
          ],
          "44": [
            7571,
            7611
          ]
        },
        "GP_Mint.allowance": {
          "3": [
            6435,
            6469
          ]
        },
        "GP_Mint.approve": {
          "5": [
            6563,
            6631
          ],
          "6": [
            6642,
            6682
          ],
          "7": [
            6692,
            6733
          ],
          "8": [
            6743,
            6754
          ]
        },
        "GP_Mint.balanceOf": {
          "2": [
            5921,
            5946
          ]
        },
        "GP_Mint.decimals": {
          "1": [
            5728,
            5737
          ]
        },
        "GP_Mint.mintTokens": {
          "39": [
            5375,
            5446
          ],
          "40": [
            5456,
            5478
          ]
        },
        "GP_Mint.name": {
          "4": [
            5554,
            5566
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepOne": {
          "31": [
            3985,
            4043
          ],
          "32": [
            4109,
            4149
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepTwo": {
          "19": [
            4639,
            4697
          ],
          "20": [
            4764,
            4853
          ],
          "21": [
            4863,
            4928
          ],
          "22": [
            4989,
            5035
          ],
          "23": [
            5102,
            5131
          ],
          "24": [
            5181,
            5215
          ]
        },
        "GP_Mint.setAuthorizedMinterStepOne": {
          "17": [
            2136,
            2194
          ],
          "18": [
            2205,
            2241
          ]
        },
        "GP_Mint.setAuthorizedMinterStepTwo": {
          "33": [
            2750,
            2808
          ],
          "34": [
            2900,
            2982
          ],
          "35": [
            3085,
            3193
          ],
          "36": [
            3241,
            3266
          ],
          "37": [
            3337,
            3369
          ],
          "38": [
            3443,
            3477
          ]
        },
        "GP_Mint.symbol": {
          "25": [
            5643,
            5657
          ]
        },
        "GP_Mint.totalSupply": {
          "0": [
            5813,
            5832
          ]
        },
        "GP_Mint.transfer": {
          "26": [
            6036,
            6100
          ],
          "27": [
            6110,
            6191
          ],
          "28": [
            6202,
            6232
          ],
          "29": [
            6242,
            6264
          ],
          "30": [
            6274,
            6310
          ]
        },
        "GP_Mint.transferFrom": {
          "9": [
            6862,
            6926
          ],
          "10": [
            6936,
            7011
          ],
          "11": [
            7021,
            7112
          ],
          "12": [
            7123,
            7147
          ],
          "13": [
            7157,
            7179
          ],
          "14": [
            7189,
            7227
          ],
          "15": [
            7237,
            7267
          ],
          "16": [
            7277,
            7288
          ]
        }
      }
    }
  },
  "dependencies": [
    "ILamportBase"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063dd62ed3e11610066578063dd62ed3e14610206578063e5f855b71461023f578063e951ae2314610252578063f0dda65c1461026557600080fd5b806370a08231146101af5780638486e2ff146101d857806395d89b41146101eb578063a9059cbb146101f357600080fd5b806323b872dd116100d357806323b872dd1461014d5780632a66312014610160578063313ce5671461017557806356bf7b571461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610278565b60405161010f9190610e07565b60405180910390f35b61012b610126366004610e3d565b61030a565b604051901515815260200161010f565b6003545b60405190815260200161010f565b61012b61015b366004610e67565b6103d8565b61017361016e366004610ec7565b6105a7565b005b6040516012815260200161010f565b600054610197906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b61013f6101bd366004610f34565b6001600160a01b031660009081526001602052604090205490565b6101736101e6366004610f4f565b610699565b610102610882565b61012b610201366004610e3d565b610891565b61013f610214366004610faa565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61017361024d366004610f4f565b610976565b610173610260366004610ec7565b610a66565b610173610273366004610e3d565b610c77565b60606004805461028790610fdd565b80601f01602080910402602001604051908101604052809291908181526020018280546102b390610fdd565b80156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b5050505050905090565b60006001600160a01b0383166103725760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084015b60405180910390fd5b3360008181526002602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b60006001600160a01b0383166104005760405162461bcd60e51b815260040161036990611017565b6001600160a01b0384166000908152600160205260409020548211156104385760405162461bcd60e51b81526004016103699061105a565b6001600160a01b03841660009081526002602090815260408083203384529091529020548211156104bc5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610369565b6001600160a01b038416600090815260016020526040812080548492906104e49084906110b6565b90915550506001600160a01b038316600090815260016020526040812080548492906105119084906110c9565b90915550506001600160a01b0384166000908152600260209081526040808320338452909152812080548492906105499084906110b6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161059591815260200190565b60405180910390a35060019392505050565b6000816040516020016105ba91906110dc565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f611190610603908990899089908890600401611122565b6020604051808303816000875af1158015610622573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106469190611203565b9050806106655760405162461bcd60e51b815260040161036990611225565b505033600090815260076020526040902080546001600160a01b0319166001600160a01b0392909216919091179055505050565b6000806040516020016106ac91906110dc565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f6111906106f5908890889088908890600401611122565b6020604051808303816000875af1158015610714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107389190611203565b9050806107575760405162461bcd60e51b815260040161036990611225565b336000908152600760205260409020546001600160a01b0316156107c95760405162461bcd60e51b815260206004820152602360248201527f47505f4d696e743a204e6f206d696e7465722072656d6f76616c2070726f706f6044820152621cd95960ea1b6064820152608401610369565b6006546001600160a01b031661081a5760405162461bcd60e51b815260206004820152601660248201527511d417d35a5b9d0e88139bc81b5a5b9d195c881cd95d60521b6044820152606401610369565b6006546040516001600160a01b03909116907fc6711413797b8a562634e98c95d50e7619d39702ed5b82ce335dc93546c3a88c90600090a25050600680546001600160a01b031990811690915533600090815260076020526040902080549091169055505050565b60606005805461028790610fdd565b60006001600160a01b0383166108b95760405162461bcd60e51b815260040161036990611017565b336000908152600160205260409020548211156108e85760405162461bcd60e51b81526004016103699061105a565b33600090815260016020526040812080548492906109079084906110b6565b90915550506001600160a01b038316600090815260016020526040812080548492906109349084906110c9565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016103c6565b600654604051600091610997916001600160a01b03909116906020016110dc565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f6111906109e0908890889088908890600401611122565b6020604051808303816000875af11580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a239190611203565b905080610a425760405162461bcd60e51b815260040161036990611225565b505033600090815260076020526040902080546001600160a01b0319169055505050565b600081604051602001610a7991906110dc565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f611190610ac2908990899089908890600401611122565b6020604051808303816000875af1158015610ae1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b059190611203565b905080610b245760405162461bcd60e51b815260040161036990611225565b336000908152600760205260409020546001600160a01b03848116911614610b8e5760405162461bcd60e51b815260206004820181905260248201527f4d7945524332303a204d696e7465722061646472657373206d69736d617463686044820152606401610369565b6006546001600160a01b03161580610bb357506006546001600160a01b038481169116145b610c0b5760405162461bcd60e51b815260206004820152602360248201527f4d7945524332303a20416e6f74686572206d696e74657220616c7265616479206044820152621cd95d60ea1b6064820152608401610369565b600680546001600160a01b0319166001600160a01b0385169081179091556040517ffe7c7fcb0ae0ce6bfd0a653fa3ab6c97a51a0819e6c27cdab8a08d456338c5fa90600090a2505033600090815260076020526040902080546001600160a01b031916905550505050565b6006546001600160a01b03163314610cd15760405162461bcd60e51b815260206004820152601c60248201527f47505f4d696e743a20556e617574686f72697a6564206d696e746572000000006044820152606401610369565b610cdb8282610cdf565b5050565b6006546001600160a01b03163314610d395760405162461bcd60e51b815260206004820152601c60248201527f47505f4d696e743a20556e617574686f72697a6564206d696e746572000000006044820152606401610369565b8060036000828254610d4b91906110c9565b90915550506001600160a01b03821660009081526001602052604081208054839290610d789084906110c9565b90915550506040518181526001600160a01b0383169033907f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050565b6000815180845260005b81811015610de757602081850181015186830182015201610dcb565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e1a6020830184610dc1565b9392505050565b80356001600160a01b0381168114610e3857600080fd5b919050565b60008060408385031215610e5057600080fd5b610e5983610e21565b946020939093013593505050565b600080600060608486031215610e7c57600080fd5b610e8584610e21565b9250610e9360208501610e21565b9150604084013590509250925092565b8061400081018310156103d257600080fd5b8061200081018310156103d257600080fd5b6000806000806140608587031215610ede57600080fd5b610ee88686610ea3565b935061400085013567ffffffffffffffff811115610f0557600080fd5b610f1187828801610eb5565b9350506140208501359150610f296140408601610e21565b905092959194509250565b600060208284031215610f4657600080fd5b610e1a82610e21565b60008060006140408486031215610f6557600080fd5b610f6f8585610ea3565b925061400084013567ffffffffffffffff811115610f8c57600080fd5b610f9886828701610eb5565b92505061402084013590509250925092565b60008060408385031215610fbd57600080fd5b610fc683610e21565b9150610fd460208401610e21565b90509250929050565b600181811c90821680610ff157607f821691505b60208210810361101157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156103d2576103d26110a0565b808201808211156103d2576103d26110a0565b60609190911b6bffffffffffffffffffffffff1916815260140190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006140608281018388845b61010081101561114f5760408083853792830192919091019060010161112e565b50505061400084019190915261606083018660005b6101008110156111db5785830361405f190184528135368a9003601e1901811261118d57600080fd5b8901602081810191359067ffffffffffffffff8211156111ac57600080fd5b8136038313156111bb57600080fd5b6111c68683856110f9565b96810196955093909301925050600101611164565b5050856140208501528381036140408501526111f78186610dc1565b98975050505050505050565b60006020828403121561121557600080fd5b81518015158114610e1a57600080fd5b60208082526021908201527f4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c656040820152601960fa1b60608201526080019056fea2646970667358221220707fd047849c2f38a57548827c81077472e77f813535bd62762c3e7e175e780b64736f6c63430008150033",
  "deployedSourceMap": "468:7752:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5492:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6482:279;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:4;;1262:22;1244:41;;1232:2;1217:18;6482:279:0;1104:187:4;5750:89:0;5820:12;;5750:89;;;1442:25:4;;;1430:2;1415:18;5750:89:0;1296:177:4;6767:528:0;;;;;;:::i;:::-;;:::i;1640:608::-;;;;;;:::i;:::-;;:::i;:::-;;5670:74;;;5735:2;3005:36:4;;2993:2;2978:18;5670:74:0;2863:184:4;492:31:0;;;;;-1:-1:-1;;;;;492:31:0;;;;;;-1:-1:-1;;;;;3235:32:4;;;3217:51;;3205:2;3190:18;492:31:0;3052:222:4;5845:108:0;;;;;;:::i;:::-;-1:-1:-1;;;;;5928:18:0;5902:7;5928:18;;;:9;:18;;;;;;;5845:108;4162:1060;;;;;;:::i;:::-;;:::i;5579:85::-;;;:::i;5959:379::-;;;;;;:::i;:::-;;:::i;6344:132::-;;;;;;:::i;:::-;-1:-1:-1;;;;;6442:18:0;;;6416:7;6442:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;6344:132;3490:666;;;;;;:::i;:::-;;:::i;2254:1230::-;;;;;;:::i;:::-;;:::i;5303:182::-;;;;;;:::i;:::-;;:::i;5492:81::-;5529:13;5561:5;5554:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5492:81;:::o;6482:279::-;6547:4;-1:-1:-1;;;;;6571:21:0;;6563:68;;;;-1:-1:-1;;;6563:68:0;;4942:2:4;6563:68:0;;;4924:21:4;4981:2;4961:18;;;4954:30;5020:34;5000:18;;;4993:62;-1:-1:-1;;;5071:18:4;;;5064:32;5113:19;;6563:68:0;;;;;;;;;6654:10;6642:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;6642:32:0;;;;;;;;;;;;:40;;;6697:36;1442:25:4;;;6642:32:0;;6654:10;6697:36;;1415:18:4;6697:36:0;;;;;;;;-1:-1:-1;6750:4:0;6482:279;;;;;:::o;6767:528::-;6846:4;-1:-1:-1;;;;;6870:16:0;;6862:64;;;;-1:-1:-1;;;6862:64:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;6953:15:0;;;;;;:9;:15;;;;;;6944:24;;;6936:75;;;;-1:-1:-1;;;6936:75:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7038:17:0;;;;;;:11;:17;;;;;;;;7056:10;7038:29;;;;;;;;7029:38;;;7021:91;;;;-1:-1:-1;;;7021:91:0;;6156:2:4;7021:91:0;;;6138:21:4;6195:2;6175:18;;;6168:30;6234:34;6214:18;;;6207:62;-1:-1:-1;;;6285:18:4;;;6278:38;6333:19;;7021:91:0;5954:404:4;7021:91:0;-1:-1:-1;;;;;7123:15:0;;;;;;:9;:15;;;;;:24;;7142:5;;7123:15;:24;;7142:5;;7123:24;:::i;:::-;;;;-1:-1:-1;;;;;;;7157:13:0;;;;;;:9;:13;;;;;:22;;7174:5;;7157:13;:22;;7174:5;;7157:22;:::i;:::-;;;;-1:-1:-1;;;;;;;7189:17:0;;;;;;:11;:17;;;;;;;;7207:10;7189:29;;;;;;;:38;;7222:5;;7189:17;:38;;7222:5;;7189:38;:::i;:::-;;;;;;;;7257:2;-1:-1:-1;;;;;7242:25:0;7251:4;-1:-1:-1;;;;;7242:25:0;;7261:5;7242:25;;;;1442::4;;1430:2;1415:18;;1296:177;7242:25:0;;;;;;;;-1:-1:-1;7284:4:0;6767:528;;;;;:::o;1640:608::-;1872:22;1914:6;1897:24;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1897:24:0;;;;;;;;;;1976:17;1996:11;;-1:-1:-1;;;1996:74:0;;1897:24;;-1:-1:-1;1976:17:0;-1:-1:-1;;;;;1996:11:0;;;;:37;;:74;;2034:10;;2046:3;;2051:7;;1897:24;;1996:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:94;;2144:12;2136:58;;;;-1:-1:-1;;;2136:58:0;;;;;;;:::i;:::-;-1:-1:-1;;2221:10:0;2205:27;;;;:15;:27;;;;;:36;;-1:-1:-1;;;;;;2205:36:0;-1:-1:-1;;;;;2205:36:0;;;;;;;;;;-1:-1:-1;;;1640:608:0:o;4162:1060::-;4371:22;4421:1;4396:28;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4396:28:0;;;;;;;;;;4479:17;4499:11;;-1:-1:-1;;;4499:74:0;;4396:28;;-1:-1:-1;4479:17:0;-1:-1:-1;;;;;4499:11:0;;;;:37;;:74;;4537:10;;4549:3;;4554:7;;4396:28;;4499:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4479:94;;4647:12;4639:58;;;;-1:-1:-1;;;4639:58:0;;;;;;;:::i;:::-;4788:10;4811:1;4772:27;;;:15;:27;;;;;;-1:-1:-1;;;;;4772:27:0;:41;4764:89;;;;-1:-1:-1;;;4764:89:0;;10029:2:4;4764:89:0;;;10011:21:4;10068:2;10048:18;;;10041:30;10107:34;10087:18;;;10080:62;-1:-1:-1;;;10158:18:4;;;10151:33;10201:19;;4764:89:0;9827:399:4;4764:89:0;4871:16;;-1:-1:-1;;;;;4871:16:0;4863:65;;;;-1:-1:-1;;;4863:65:0;;10433:2:4;4863:65:0;;;10415:21:4;10472:2;10452:18;;;10445:30;-1:-1:-1;;;10491:18:4;;;10484:52;10553:18;;4863:65:0;10231:346:4;4863:65:0;5018:16;;4994:41;;-1:-1:-1;;;;;5018:16:0;;;;4994:41;;5018:16;;4994:41;-1:-1:-1;;5102:16:0;:29;;-1:-1:-1;;;;;;5102:29:0;;;;;;5204:10;5129:1;5188:27;;;:15;:27;;;;;5181:34;;;;;;;-1:-1:-1;;;4162:1060:0:o;5579:85::-;5618:13;5650:7;5643:14;;;;;:::i;5959:379::-;6020:4;-1:-1:-1;;;;;6044:16:0;;6036:64;;;;-1:-1:-1;;;6036:64:0;;;;;;;:::i;:::-;6128:10;6118:21;;;;:9;:21;;;;;;:30;-1:-1:-1;6118:30:0;6110:81;;;;-1:-1:-1;;;6110:81:0;;;;;;;:::i;:::-;6212:10;6202:21;;;;:9;:21;;;;;:30;;6227:5;;6202:21;:30;;6227:5;;6202:30;:::i;:::-;;;;-1:-1:-1;;;;;;;6242:13:0;;;;;;:9;:13;;;;;:22;;6259:5;;6242:13;:22;;6259:5;;6242:22;:::i;:::-;;;;-1:-1:-1;;6279:31:0;;1442:25:4;;;-1:-1:-1;;;;;6279:31:0;;;6288:10;;6279:31;;1430:2:4;1415:18;6279:31:0;1296:177:4;3490:666:0;3753:16;;3736:34;;3711:22;;3736:34;;-1:-1:-1;;;;;3753:16:0;;;;3736:34;;;:::i;:::-;;;;-1:-1:-1;;3736:34:0;;;;;;;;;;3825:17;3845:11;;-1:-1:-1;;;3845:74:0;;3736:34;;-1:-1:-1;3825:17:0;-1:-1:-1;;;;;3845:11:0;;;;:37;;:74;;3883:10;;3895:3;;3900:7;;3736:34;;3845:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3825:94;;3993:12;3985:58;;;;-1:-1:-1;;;3985:58:0;;;;;;;:::i;:::-;-1:-1:-1;;4125:10:0;4147:1;4109:27;;;:15;:27;;;;;:40;;-1:-1:-1;;;;;;4109:40:0;;;-1:-1:-1;;;3490:666:0:o;2254:1230::-;2486:22;2528:6;2511:24;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2511:24:0;;;;;;;;;;2590:17;2610:11;;-1:-1:-1;;;2610:74:0;;2511:24;;-1:-1:-1;2590:17:0;-1:-1:-1;;;;;2610:11:0;;;;:37;;:74;;2648:10;;2660:3;;2665:7;;2511:24;;2610:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2590:94;;2758:12;2750:58;;;;-1:-1:-1;;;2750:58:0;;;;;;;:::i;:::-;2924:10;2908:27;;;;:15;:27;;;;;;-1:-1:-1;;;;;2908:37:0;;;:27;;:37;2900:82;;;;-1:-1:-1;;;2900:82:0;;10784:2:4;2900:82:0;;;10766:21:4;;;10803:18;;;10796:30;10862:34;10842:18;;;10835:62;10914:18;;2900:82:0;10582:356:4;2900:82:0;3093:16;;-1:-1:-1;;;;;3093:16:0;:30;;:60;;-1:-1:-1;3127:16:0;;-1:-1:-1;;;;;3127:26:0;;;:16;;:26;3093:60;3085:108;;;;-1:-1:-1;;;3085:108:0;;11145:2:4;3085:108:0;;;11127:21:4;11184:2;11164:18;;;11157:30;11223:34;11203:18;;;11196:62;-1:-1:-1;;;11274:18:4;;;11267:33;11317:19;;3085:108:0;10943:399:4;3085:108:0;3241:16;:25;;-1:-1:-1;;;;;;3241:25:0;-1:-1:-1;;;;;3241:25:0;;;;;;;;3342:27;;;;-1:-1:-1;;3342:27:0;-1:-1:-1;;3466:10:0;3450:27;;;;:15;:27;;;;;3443:34;;-1:-1:-1;;;;;;3443:34:0;;;-1:-1:-1;;;;2254:1230:0:o;5303:182::-;5397:16;;-1:-1:-1;;;;;5397:16:0;5383:10;:30;5375:71;;;;-1:-1:-1;;;5375:71:0;;11549:2:4;5375:71:0;;;11531:21:4;11588:2;11568:18;;;11561:30;11627;11607:18;;;11600:58;11675:18;;5375:71:0;11347:352:4;5375:71:0;5456:22;5462:7;5471:6;5456:5;:22::i;:::-;5303:182;;:::o;7301:318::-;7390:16;;-1:-1:-1;;;;;7390:16:0;7376:10;:30;7368:71;;;;-1:-1:-1;;;7368:71:0;;11549:2:4;7368:71:0;;;11531:21:4;11588:2;11568:18;;;11561:30;11627;11607:18;;;11600:58;11675:18;;7368:71:0;11347:352:4;7368:71:0;7465:6;7449:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7481:18:0;;;;;;:9;:18;;;;;:28;;7503:6;;7481:18;:28;;7503:6;;7481:28;:::i;:::-;;;;-1:-1:-1;;7576:35:0;;1442:25:4;;;-1:-1:-1;;;;;7576:35:0;;;7583:10;;7576:35;;1430:2:4;1415:18;7576:35:0;;;;;;;7301:318;;:::o;14:423:4:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:4:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:4;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:4:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;1811:177::-;1920:6;1953:5;1941:18;;1938:27;-1:-1:-1;1935:47:4;;;1978:1;1975;1968:12;1993:168;2094:6;2127:4;2115:17;;2112:26;-1:-1:-1;2109:46:4;;;2151:1;2148;2141:12;2166:692;2342:6;2350;2358;2366;2419:5;2407:9;2398:7;2394:23;2390:35;2387:55;;;2438:1;2435;2428:12;2387:55;2461:68;2521:7;2510:9;2461:68;:::i;:::-;2451:78;;2580:5;2569:9;2565:21;2552:35;2610:18;2602:6;2599:30;2596:50;;;2642:1;2639;2632:12;2596:50;2665:73;2730:7;2721:6;2710:9;2706:22;2665:73;:::i;:::-;2655:83;;;2785:5;2774:9;2770:21;2757:35;2747:45;;2811:41;2845:5;2834:9;2830:21;2811:41;:::i;:::-;2801:51;;2166:692;;;;;;;:::o;3279:186::-;3338:6;3391:2;3379:9;3370:7;3366:23;3362:32;3359:52;;;3407:1;3404;3397:12;3359:52;3430:29;3449:9;3430:29;:::i;3470:615::-;3637:6;3645;3653;3706:5;3694:9;3685:7;3681:23;3677:35;3674:55;;;3725:1;3722;3715:12;3674:55;3748:68;3808:7;3797:9;3748:68;:::i;:::-;3738:78;;3867:5;3856:9;3852:21;3839:35;3897:18;3889:6;3886:30;3883:50;;;3929:1;3926;3919:12;3883:50;3952:73;4017:7;4008:6;3997:9;3993:22;3952:73;:::i;:::-;3942:83;;;4072:5;4061:9;4057:21;4044:35;4034:45;;3470:615;;;;;:::o;4090:260::-;4158:6;4166;4219:2;4207:9;4198:7;4194:23;4190:32;4187:52;;;4235:1;4232;4225:12;4187:52;4258:29;4277:9;4258:29;:::i;:::-;4248:39;;4306:38;4340:2;4329:9;4325:18;4306:38;:::i;:::-;4296:48;;4090:260;;;;;:::o;4355:380::-;4434:1;4430:12;;;;4477;;;4498:61;;4552:4;4544:6;4540:17;4530:27;;4498:61;4605:2;4597:6;4594:14;4574:18;4571:38;4568:161;;4651:10;4646:3;4642:20;4639:1;4632:31;4686:4;4683:1;4676:15;4714:4;4711:1;4704:15;4568:161;;4355:380;;;:::o;5143:399::-;5345:2;5327:21;;;5384:2;5364:18;;;5357:30;5423:34;5418:2;5403:18;;5396:62;-1:-1:-1;;;5489:2:4;5474:18;;5467:33;5532:3;5517:19;;5143:399::o;5547:402::-;5749:2;5731:21;;;5788:2;5768:18;;;5761:30;5827:34;5822:2;5807:18;;5800:62;-1:-1:-1;;;5893:2:4;5878:18;;5871:36;5939:3;5924:19;;5547:402::o;6363:127::-;6424:10;6419:3;6415:20;6412:1;6405:31;6455:4;6452:1;6445:15;6479:4;6476:1;6469:15;6495:128;6562:9;;;6583:11;;;6580:37;;;6597:18;;:::i;6628:125::-;6693:9;;;6714:10;;;6711:36;;;6727:18;;:::i;6758:229::-;6907:2;6903:15;;;;-1:-1:-1;;6899:53:4;6887:66;;6978:2;6969:12;;6758:229::o;6992:266::-;7080:6;7075:3;7068:19;7132:6;7125:5;7118:4;7113:3;7109:14;7096:43;-1:-1:-1;7184:1:4;7159:16;;;7177:4;7155:27;;;7148:38;;;;7240:2;7219:15;;;-1:-1:-1;;7215:29:4;7206:39;;;7202:50;;6992:266::o;7263:1875::-;7629:4;7658:5;7686:18;;;7690:9;7781:6;7629:4;7815:199;7829:6;7826:1;7823:13;7815:199;;;7888:4;7931:2;7923:6;7918:3;7905:29;7954:12;;;;7989:15;;;;;7851:1;7844:9;7815:199;;;-1:-1:-1;;;8045:5:4;8030:21;;8023:33;;;;8146:5;8131:21;;8177:6;8203:1;8213:761;8229:6;8224:3;8221:15;8213:761;;;8300:22;;;-1:-1:-1;;8296:39:4;8282:54;;8375:22;;8452:14;8448:27;;;-1:-1:-1;;8444:41:4;8420:66;;8410:94;;8500:1;8497;8490:12;8410:94;8530:31;;8630:4;8662:14;;;;8588:19;;8703:18;8692:30;;8689:50;;;8735:1;8732;8725:12;8689:50;8788:6;8772:14;8768:27;8759:7;8755:41;8752:61;;;8809:1;8806;8799:12;8752:61;8836:50;8879:6;8871;8862:7;8836:50;:::i;:::-;8950:14;;;;8826:60;-1:-1:-1;8911:17:4;;;;;-1:-1:-1;;8255:1:4;8246:11;8213:761;;;8217:3;;9013:6;9005:5;8994:9;8990:21;8983:37;9071:9;9063:6;9059:22;9051:5;9040:9;9036:21;9029:53;9099:33;9125:6;9117;9099:33;:::i;:::-;9091:41;7263:1875;-1:-1:-1;;;;;;;;7263:1875:4:o;9143:277::-;9210:6;9263:2;9251:9;9242:7;9238:23;9234:32;9231:52;;;9279:1;9276;9269:12;9231:52;9311:9;9305:16;9364:5;9357:13;9350:21;9343:5;9340:32;9330:60;;9386:1;9383;9376:12;9425:397;9627:2;9609:21;;;9666:2;9646:18;;;9639:30;9705:34;9700:2;9685:18;;9678:62;-1:-1:-1;;;9771:2:4;9756:18;;9749:31;9812:3;9797:19;;9425:397::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    468,
    8220
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xE5F855B7 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xE951AE23 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8486E2FF EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x2A663120 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x56BF7B57 EQ PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3D JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x197 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3D JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3D JUMP JUMPDEST PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x287 SWAP1 PUSH2 0xFDD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B3 SWAP1 PUSH2 0xFDD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x300 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x300 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x369 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4E4 SWAP1 DUP5 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x511 SWAP1 DUP5 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x549 SWAP1 DUP5 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP5 MSTORE SWAP2 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0x603 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x1225 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP5 MSTORE SWAP2 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0x6F5 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x714 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x738 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x1225 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47505F4D696E743A204E6F206D696E7465722072656D6F76616C2070726F706F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x369 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11D417D35A5B9D0E88139BC81B5A5B9D195C881CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x369 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xC6711413797B8A562634E98C95D50E7619D39702ED5B82CE335DC93546C3A88C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x287 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x1017 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x105A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x907 SWAP1 DUP5 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x934 SWAP1 DUP5 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x997 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 ADD PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP5 MSTORE SWAP2 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0x9E0 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA23 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x1225 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP5 MSTORE SWAP2 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0xAC2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB05 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x1225 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7945524332303A204D696E7465722061646472657373206D69736D61746368 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x369 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0xBB3 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0xC0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7945524332303A20416E6F74686572206D696E74657220616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x369 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xFE7C7FCB0AE0CE6BFD0A653FA3AB6C97A51A0819E6C27CDAB8A08D456338C5FA SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x369 JUMP JUMPDEST PUSH2 0xCDB DUP3 DUP3 PUSH2 0xCDF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x369 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD4B SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD78 SWAP1 DUP5 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH32 0x9D228D69B5FDB8D273A2336F8FB8612D039631024EA9BF09C424A9503AA078F0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDE7 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xDCB JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE1A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE59 DUP4 PUSH2 0xE21 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE85 DUP5 PUSH2 0xE21 JUMP JUMPDEST SWAP3 POP PUSH2 0xE93 PUSH1 0x20 DUP6 ADD PUSH2 0xE21 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 PUSH2 0x4000 DUP2 ADD DUP4 LT ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x2000 DUP2 ADD DUP4 LT ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4060 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE8 DUP7 DUP7 PUSH2 0xEA3 JUMP JUMPDEST SWAP4 POP PUSH2 0x4000 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF11 DUP8 DUP3 DUP9 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x4020 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0xF29 PUSH2 0x4040 DUP7 ADD PUSH2 0xE21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1A DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4040 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF6F DUP6 DUP6 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 POP PUSH2 0x4000 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF98 DUP7 DUP3 DUP8 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x4020 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC6 DUP4 PUSH2 0xE21 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD4 PUSH1 0x20 DUP5 ADD PUSH2 0xE21 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFF1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1011 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3D2 JUMPI PUSH2 0x3D2 PUSH2 0x10A0 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3D2 JUMPI PUSH2 0x3D2 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4060 DUP3 DUP2 ADD DUP4 DUP9 DUP5 JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x114F JUMPI PUSH1 0x40 DUP1 DUP4 DUP6 CALLDATACOPY SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x112E JUMP JUMPDEST POP POP POP PUSH2 0x4000 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x6060 DUP4 ADD DUP7 PUSH1 0x0 JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x11DB JUMPI DUP6 DUP4 SUB PUSH2 0x405F NOT ADD DUP5 MSTORE DUP2 CALLDATALOAD CALLDATASIZE DUP11 SWAP1 SUB PUSH1 0x1E NOT ADD DUP2 SLT PUSH2 0x118D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 ADD PUSH1 0x20 DUP2 DUP2 ADD SWAP2 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x11BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11C6 DUP7 DUP4 DUP6 PUSH2 0x10F9 JUMP JUMPDEST SWAP7 DUP2 ADD SWAP7 SWAP6 POP SWAP4 SWAP1 SWAP4 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x1164 JUMP JUMPDEST POP POP DUP6 PUSH2 0x4020 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH2 0x4040 DUP6 ADD MSTORE PUSH2 0x11F7 DUP2 DUP7 PUSH2 0xDC1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A20417574686F72697A6174696F6E206661696C65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x7FD047849C2F38A57548827C81077472E7 PUSH32 0x813535BD62762C3E7E175E780B64736F6C634300081500330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        468,
        8220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "49": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "60": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x206"
    },
    "64": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE5F855B7"
    },
    "71": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23F"
    },
    "75": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE951AE23"
    },
    "82": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x252"
    },
    "86": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF0DDA65C"
    },
    "93": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265"
    },
    "97": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "109": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "113": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8486E2FF"
    },
    "120": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D8"
    },
    "124": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB"
    },
    "135": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "142": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "146": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "150": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "REVERT",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "158": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "GT",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "169": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "173": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2A663120"
    },
    "180": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "184": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x175"
    },
    "195": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x56BF7B57"
    },
    "202": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "206": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "REVERT",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "218": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "229": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118"
    },
    "233": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "240": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "EQ",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B"
    },
    "244": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        468,
        8220
      ],
      "op": "REVERT",
      "path": "0"
    },
    "250": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "251": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "254": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x278"
    },
    "257": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        5492,
        5573
      ],
      "op": "JUMP",
      "path": "0"
    },
    "258": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "259": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "261": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "262": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "265": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "266": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "267": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE07"
    },
    "270": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        5492,
        5573
      ],
      "op": "JUMP",
      "path": "0"
    },
    "271": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "272": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "274": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "275": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "276": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "277": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "SUB",
      "path": "0"
    },
    "278": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "279": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "RETURN",
      "path": "0"
    },
    "280": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "281": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B"
    },
    "284": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126"
    },
    "287": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "288": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "290": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3D"
    },
    "293": {
      "fn": "GP_Mint.approve",
      "jump": "i",
      "offset": [
        6482,
        6761
      ],
      "op": "JUMP",
      "path": "0"
    },
    "294": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "295": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30A"
    },
    "298": {
      "fn": "GP_Mint.approve",
      "jump": "i",
      "offset": [
        6482,
        6761
      ],
      "op": "JUMP",
      "path": "0"
    },
    "299": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "300": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "302": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "303": {
      "op": "SWAP1"
    },
    "304": {
      "op": "ISZERO"
    },
    "305": {
      "op": "ISZERO"
    },
    "306": {
      "op": "DUP2"
    },
    "307": {
      "op": "MSTORE"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "310": {
      "op": "ADD"
    },
    "311": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "314": {
      "op": "JUMP"
    },
    "315": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        5750,
        5839
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "316": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        5820,
        5832
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x3"
    },
    "318": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        5820,
        5832
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "319": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        5750,
        5839
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "320": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        5750,
        5839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "322": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        5750,
        5839
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "323": {
      "op": "SWAP1"
    },
    "324": {
      "op": "DUP2"
    },
    "325": {
      "op": "MSTORE"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "328": {
      "op": "ADD"
    },
    "329": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        5750,
        5839
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "332": {
      "op": "JUMP"
    },
    "333": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B"
    },
    "337": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B"
    },
    "340": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "341": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "343": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE67"
    },
    "346": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        6767,
        7295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "347": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "348": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D8"
    },
    "351": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        6767,
        7295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "352": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1640,
        2248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "353": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1640,
        2248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "356": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1640,
        2248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E"
    },
    "359": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1640,
        2248
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "360": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1640,
        2248
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "362": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1640,
        2248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC7"
    },
    "365": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        1640,
        2248
      ],
      "op": "JUMP",
      "path": "0"
    },
    "366": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1640,
        2248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "367": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1640,
        2248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A7"
    },
    "370": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        1640,
        2248
      ],
      "op": "JUMP",
      "path": "0"
    },
    "371": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1640,
        2248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "372": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1640,
        2248
      ],
      "op": "STOP",
      "path": "0"
    },
    "373": {
      "fn": "GP_Mint.decimals",
      "offset": [
        5670,
        5744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "374": {
      "fn": "GP_Mint.decimals",
      "offset": [
        5670,
        5744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "376": {
      "fn": "GP_Mint.decimals",
      "offset": [
        5670,
        5744
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "377": {
      "fn": "GP_Mint.decimals",
      "offset": [
        5735,
        5737
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x12"
    },
    "379": {
      "op": "DUP2"
    },
    "380": {
      "op": "MSTORE"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "383": {
      "op": "ADD"
    },
    "384": {
      "fn": "GP_Mint.decimals",
      "offset": [
        5670,
        5744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "387": {
      "op": "JUMP"
    },
    "388": {
      "offset": [
        492,
        523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "391": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "392": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x197"
    },
    "395": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "402": {
      "op": "SHL"
    },
    "403": {
      "op": "SUB"
    },
    "404": {
      "offset": [
        492,
        523
      ],
      "op": "AND",
      "path": "0"
    },
    "405": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "406": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "JUMP",
      "path": "0"
    },
    "407": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "408": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "410": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "417": {
      "op": "SHL"
    },
    "418": {
      "op": "SUB"
    },
    "419": {
      "op": "SWAP1"
    },
    "420": {
      "op": "SWAP2"
    },
    "421": {
      "op": "AND"
    },
    "422": {
      "op": "DUP2"
    },
    "423": {
      "op": "MSTORE"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "426": {
      "op": "ADD"
    },
    "427": {
      "offset": [
        492,
        523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "430": {
      "op": "JUMP"
    },
    "431": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5845,
        5953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5845,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F"
    },
    "435": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5845,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BD"
    },
    "438": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5845,
        5953
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "439": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5845,
        5953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "441": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5845,
        5953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF34"
    },
    "444": {
      "fn": "GP_Mint.balanceOf",
      "jump": "i",
      "offset": [
        5845,
        5953
      ],
      "op": "JUMP",
      "path": "0"
    },
    "445": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5845,
        5953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "452": {
      "op": "SHL"
    },
    "453": {
      "op": "SUB"
    },
    "454": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5946
      ],
      "op": "AND",
      "path": "0",
      "statement": 2
    },
    "455": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5902,
        5909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "457": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5946
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "458": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5946
      ],
      "op": "DUP2",
      "path": "0"
    },
    "459": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5946
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "460": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5937
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "462": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "464": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5946
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "465": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "467": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5946
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "468": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5946
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "469": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5946
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "470": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5928,
        5946
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "471": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        5845,
        5953
      ],
      "op": "JUMP",
      "path": "0"
    },
    "472": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4162,
        5222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "473": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4162,
        5222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "476": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4162,
        5222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6"
    },
    "479": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4162,
        5222
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "480": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4162,
        5222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "482": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4162,
        5222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4F"
    },
    "485": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4162,
        5222
      ],
      "op": "JUMP",
      "path": "0"
    },
    "486": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4162,
        5222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "487": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4162,
        5222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x699"
    },
    "490": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4162,
        5222
      ],
      "op": "JUMP",
      "path": "0"
    },
    "491": {
      "fn": "GP_Mint.symbol",
      "offset": [
        5579,
        5664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "492": {
      "fn": "GP_Mint.symbol",
      "offset": [
        5579,
        5664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "495": {
      "fn": "GP_Mint.symbol",
      "offset": [
        5579,
        5664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x882"
    },
    "498": {
      "fn": "GP_Mint.symbol",
      "jump": "i",
      "offset": [
        5579,
        5664
      ],
      "op": "JUMP",
      "path": "0"
    },
    "499": {
      "fn": "GP_Mint.transfer",
      "offset": [
        5959,
        6338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "500": {
      "fn": "GP_Mint.transfer",
      "offset": [
        5959,
        6338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B"
    },
    "503": {
      "fn": "GP_Mint.transfer",
      "offset": [
        5959,
        6338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201"
    },
    "506": {
      "fn": "GP_Mint.transfer",
      "offset": [
        5959,
        6338
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "507": {
      "fn": "GP_Mint.transfer",
      "offset": [
        5959,
        6338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "509": {
      "fn": "GP_Mint.transfer",
      "offset": [
        5959,
        6338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3D"
    },
    "512": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        5959,
        6338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "513": {
      "fn": "GP_Mint.transfer",
      "offset": [
        5959,
        6338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "514": {
      "fn": "GP_Mint.transfer",
      "offset": [
        5959,
        6338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x891"
    },
    "517": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        5959,
        6338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "518": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6344,
        6476
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "519": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6344,
        6476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F"
    },
    "522": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6344,
        6476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x214"
    },
    "525": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6344,
        6476
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "526": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6344,
        6476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "528": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6344,
        6476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAA"
    },
    "531": {
      "fn": "GP_Mint.allowance",
      "jump": "i",
      "offset": [
        6344,
        6476
      ],
      "op": "JUMP",
      "path": "0"
    },
    "532": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6344,
        6476
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "539": {
      "op": "SHL"
    },
    "540": {
      "op": "SUB"
    },
    "541": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 3
    },
    "542": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "DUP3",
      "path": "0"
    },
    "543": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "AND",
      "path": "0"
    },
    "544": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6416,
        6423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "546": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "547": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "DUP2",
      "path": "0"
    },
    "548": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "549": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "551": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "553": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "554": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "DUP2",
      "path": "0"
    },
    "555": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "556": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "558": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "DUP1",
      "path": "0"
    },
    "559": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "DUP4",
      "path": "0"
    },
    "560": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6460
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "561": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "562": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "563": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "564": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "AND",
      "path": "0"
    },
    "565": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "DUP3",
      "path": "0"
    },
    "566": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "567": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "568": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "569": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "570": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "571": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "572": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "573": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6442,
        6469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "574": {
      "fn": "GP_Mint.allowance",
      "offset": [
        6344,
        6476
      ],
      "op": "JUMP",
      "path": "0"
    },
    "575": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3490,
        4156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "576": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3490,
        4156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "579": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3490,
        4156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24D"
    },
    "582": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3490,
        4156
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "583": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3490,
        4156
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "585": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3490,
        4156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4F"
    },
    "588": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        3490,
        4156
      ],
      "op": "JUMP",
      "path": "0"
    },
    "589": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3490,
        4156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "590": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3490,
        4156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x976"
    },
    "593": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        3490,
        4156
      ],
      "op": "JUMP",
      "path": "0"
    },
    "594": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2254,
        3484
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "595": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2254,
        3484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "598": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2254,
        3484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "601": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2254,
        3484
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "602": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2254,
        3484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "604": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2254,
        3484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC7"
    },
    "607": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2254,
        3484
      ],
      "op": "JUMP",
      "path": "0"
    },
    "608": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2254,
        3484
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "609": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2254,
        3484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA66"
    },
    "612": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2254,
        3484
      ],
      "op": "JUMP",
      "path": "0"
    },
    "613": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5303,
        5485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "614": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5303,
        5485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "617": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5303,
        5485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x273"
    },
    "620": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5303,
        5485
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "621": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5303,
        5485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "623": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5303,
        5485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3D"
    },
    "626": {
      "fn": "GP_Mint.mintTokens",
      "jump": "i",
      "offset": [
        5303,
        5485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "627": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5303,
        5485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "628": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5303,
        5485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC77"
    },
    "631": {
      "fn": "GP_Mint.mintTokens",
      "jump": "i",
      "offset": [
        5303,
        5485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "632": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "633": {
      "fn": "GP_Mint.name",
      "offset": [
        5529,
        5542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "635": {
      "fn": "GP_Mint.name",
      "offset": [
        5561,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x4"
    },
    "637": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP1",
      "path": "0"
    },
    "638": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "639": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "642": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "643": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDD"
    },
    "646": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        5554,
        5566
      ],
      "op": "JUMP",
      "path": "0"
    },
    "647": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "648": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP1",
      "path": "0"
    },
    "649": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "651": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "ADD",
      "path": "0"
    },
    "652": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "654": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP1",
      "path": "0"
    },
    "655": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "656": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DIV",
      "path": "0"
    },
    "657": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "MUL",
      "path": "0"
    },
    "658": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "660": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "ADD",
      "path": "0"
    },
    "661": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "663": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "664": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "665": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP2",
      "path": "0"
    },
    "666": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "ADD",
      "path": "0"
    },
    "667": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "669": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "670": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP1",
      "path": "0"
    },
    "671": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "672": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "673": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "674": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP2",
      "path": "0"
    },
    "675": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP2",
      "path": "0"
    },
    "676": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "677": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "679": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "ADD",
      "path": "0"
    },
    "680": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP3",
      "path": "0"
    },
    "681": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP1",
      "path": "0"
    },
    "682": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "683": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3"
    },
    "686": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "687": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDD"
    },
    "690": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        5554,
        5566
      ],
      "op": "JUMP",
      "path": "0"
    },
    "691": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "692": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP1",
      "path": "0"
    },
    "693": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "694": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x300"
    },
    "697": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "698": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP1",
      "path": "0"
    },
    "699": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "701": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "LT",
      "path": "0"
    },
    "702": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "705": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "706": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "709": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP1",
      "path": "0"
    },
    "710": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP4",
      "path": "0"
    },
    "711": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "712": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DIV",
      "path": "0"
    },
    "713": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "MUL",
      "path": "0"
    },
    "714": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP4",
      "path": "0"
    },
    "715": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "716": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "717": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "719": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "ADD",
      "path": "0"
    },
    "720": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "721": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x300"
    },
    "724": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "JUMP",
      "path": "0"
    },
    "725": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP3",
      "path": "0"
    },
    "727": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "ADD",
      "path": "0"
    },
    "728": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "729": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "730": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "732": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "733": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "735": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "737": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "738": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "739": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP2",
      "path": "0"
    },
    "741": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "742": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP2",
      "path": "0"
    },
    "743": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "744": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "745": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "747": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "ADD",
      "path": "0"
    },
    "748": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "749": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "751": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "ADD",
      "path": "0"
    },
    "752": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP1",
      "path": "0"
    },
    "753": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP4",
      "path": "0"
    },
    "754": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "GT",
      "path": "0"
    },
    "755": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "758": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "759": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP3",
      "path": "0"
    },
    "760": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "761": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SUB",
      "path": "0"
    },
    "762": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "764": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "AND",
      "path": "0"
    },
    "765": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP3",
      "path": "0"
    },
    "766": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "ADD",
      "path": "0"
    },
    "767": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "768": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "769": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "POP",
      "path": "0"
    },
    "770": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "POP",
      "path": "0"
    },
    "771": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "POP",
      "path": "0"
    },
    "772": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "POP",
      "path": "0"
    },
    "773": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "POP",
      "path": "0"
    },
    "774": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "775": {
      "fn": "GP_Mint.name",
      "offset": [
        5554,
        5566
      ],
      "op": "POP",
      "path": "0"
    },
    "776": {
      "fn": "GP_Mint.name",
      "offset": [
        5492,
        5573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "777": {
      "fn": "GP_Mint.name",
      "jump": "o",
      "offset": [
        5492,
        5573
      ],
      "op": "JUMP",
      "path": "0"
    },
    "778": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "779": {
      "fn": "GP_Mint.approve",
      "offset": [
        6547,
        6551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "op": "SUB"
    },
    "789": {
      "fn": "GP_Mint.approve",
      "offset": [
        6571,
        6592
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 5
    },
    "790": {
      "branch": 45,
      "fn": "GP_Mint.approve",
      "offset": [
        6571,
        6592
      ],
      "op": "AND",
      "path": "0"
    },
    "791": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x372"
    },
    "794": {
      "branch": 45,
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "795": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "797": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "798": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "DUP2",
      "path": "0"
    },
    "806": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "809": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "811": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "DUP3",
      "path": "0"
    },
    "812": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "ADD",
      "path": "0"
    },
    "813": {
      "op": "MSTORE"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "856": {
      "op": "DUP3"
    },
    "857": {
      "op": "ADD"
    },
    "858": {
      "op": "MSTORE"
    },
    "859": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "867": {
      "op": "DUP3"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "op": "MSTORE"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "872": {
      "op": "ADD"
    },
    "873": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "874": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "876": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "877": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "878": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "879": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "SUB",
      "path": "0"
    },
    "880": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "881": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "882": {
      "fn": "GP_Mint.approve",
      "offset": [
        6563,
        6631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "883": {
      "fn": "GP_Mint.approve",
      "offset": [
        6654,
        6664
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 6
    },
    "884": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "886": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "887": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "888": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "889": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "891": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "893": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "894": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "895": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "896": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "898": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "899": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "900": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6665
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "907": {
      "op": "SHL"
    },
    "908": {
      "op": "SUB"
    },
    "909": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "DUP9",
      "path": "0"
    },
    "910": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "AND",
      "path": "0"
    },
    "911": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "912": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "DUP6",
      "path": "0"
    },
    "913": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "914": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "915": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "DUP4",
      "path": "0"
    },
    "916": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "917": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "918": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "DUP2",
      "path": "0"
    },
    "919": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "920": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "921": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6682
      ],
      "op": "DUP7",
      "path": "0"
    },
    "922": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6682
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "923": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6682
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "924": {
      "fn": "GP_Mint.approve",
      "offset": [
        6697,
        6733
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 7
    },
    "925": {
      "op": "DUP6"
    },
    "926": {
      "op": "DUP2"
    },
    "927": {
      "op": "MSTORE"
    },
    "928": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "929": {
      "fn": "GP_Mint.approve",
      "offset": [
        6642,
        6674
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "930": {
      "fn": "GP_Mint.approve",
      "offset": [
        6654,
        6664
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "931": {
      "fn": "GP_Mint.approve",
      "offset": [
        6697,
        6733
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "964": {
      "fn": "GP_Mint.approve",
      "offset": [
        6697,
        6733
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "fn": "GP_Mint.approve",
      "offset": [
        6697,
        6733
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "967": {
      "fn": "GP_Mint.approve",
      "offset": [
        6697,
        6733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "969": {
      "fn": "GP_Mint.approve",
      "offset": [
        6697,
        6733
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "970": {
      "fn": "GP_Mint.approve",
      "offset": [
        6697,
        6733
      ],
      "op": "DUP1",
      "path": "0"
    },
    "971": {
      "fn": "GP_Mint.approve",
      "offset": [
        6697,
        6733
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "972": {
      "fn": "GP_Mint.approve",
      "offset": [
        6697,
        6733
      ],
      "op": "SUB",
      "path": "0"
    },
    "973": {
      "fn": "GP_Mint.approve",
      "offset": [
        6697,
        6733
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "974": {
      "fn": "GP_Mint.approve",
      "offset": [
        6697,
        6733
      ],
      "op": "LOG3",
      "path": "0"
    },
    "975": {
      "op": "POP"
    },
    "976": {
      "fn": "GP_Mint.approve",
      "offset": [
        6750,
        6754
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "978": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "979": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "980": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "981": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "POP",
      "path": "0"
    },
    "982": {
      "fn": "GP_Mint.approve",
      "offset": [
        6482,
        6761
      ],
      "op": "POP",
      "path": "0"
    },
    "983": {
      "fn": "GP_Mint.approve",
      "jump": "o",
      "offset": [
        6482,
        6761
      ],
      "op": "JUMP",
      "path": "0"
    },
    "984": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "985": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6846,
        6850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "993": {
      "op": "SHL"
    },
    "994": {
      "op": "SUB"
    },
    "995": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6870,
        6886
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 9
    },
    "996": {
      "branch": 46,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6870,
        6886
      ],
      "op": "AND",
      "path": "0"
    },
    "997": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x400"
    },
    "1000": {
      "branch": 46,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1001": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1003": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1004": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1010": {
      "op": "SHL"
    },
    "1011": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1012": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1013": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1015": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "ADD",
      "path": "0"
    },
    "1016": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1019": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1020": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1017"
    },
    "1023": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        6862,
        6926
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1024": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6862,
        6926
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 10
    },
    "1034": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "AND",
      "path": "0"
    },
    "1035": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1037": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1038": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1039": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1040": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1042": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1044": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1045": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1047": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1048": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1049": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6953,
        6968
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1050": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6944,
        6968
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1051": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6944,
        6968
      ],
      "op": "GT",
      "path": "0"
    },
    "1052": {
      "branch": 47,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6944,
        6968
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1053": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "1056": {
      "branch": 47,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1057": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1059": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1066": {
      "op": "SHL"
    },
    "1067": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1068": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1069": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1071": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "ADD",
      "path": "0"
    },
    "1072": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1075": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1076": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105A"
    },
    "1079": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        6936,
        7011
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1080": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6936,
        7011
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1087": {
      "op": "SHL"
    },
    "1088": {
      "op": "SUB"
    },
    "1089": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 11
    },
    "1090": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "AND",
      "path": "0"
    },
    "1091": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1093": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1094": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1095": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1096": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1098": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1100": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1101": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1102": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1103": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1105": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1106": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1107": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7055
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1108": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7056,
        7066
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1109": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7067
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1110": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1111": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1112": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7067
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1113": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1114": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1115": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7067
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1116": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7038,
        7067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1117": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7029,
        7067
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1118": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7029,
        7067
      ],
      "op": "GT",
      "path": "0"
    },
    "1119": {
      "branch": 48,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7029,
        7067
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1120": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7021,
        7112
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BC"
    },
    "1123": {
      "branch": 48,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7021,
        7112
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1124": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7021,
        7112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1126": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7021,
        7112
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7021,
        7112
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1135": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7021,
        7112
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1138": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7021,
        7112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1140": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7021,
        7112
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1141": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7021,
        7112
      ],
      "op": "ADD",
      "path": "0"
    },
    "1142": {
      "op": "MSTORE"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1147": {
      "op": "DUP3"
    },
    "1148": {
      "op": "ADD"
    },
    "1149": {
      "op": "MSTORE"
    },
    "1150": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1185": {
      "op": "DUP3"
    },
    "1186": {
      "op": "ADD"
    },
    "1187": {
      "op": "MSTORE"
    },
    "1188": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1202": {
      "op": "DUP3"
    },
    "1203": {
      "op": "ADD"
    },
    "1204": {
      "op": "MSTORE"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1207": {
      "op": "ADD"
    },
    "1208": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7021,
        7112
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1211": {
      "op": "JUMP"
    },
    "1212": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7021,
        7112
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 12
    },
    "1222": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "AND",
      "path": "0"
    },
    "1223": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1225": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1226": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1227": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1228": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1230": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1232": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1233": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1235": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1236": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1237": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7147
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1238": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7147
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1239": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7142,
        7147
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1240": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7142,
        7147
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1241": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1242": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E4"
    },
    "1245": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7147
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1246": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7142,
        7147
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1247": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7142,
        7147
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1248": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B6"
    },
    "1251": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7123,
        7147
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1252": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1253": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7147
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1254": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7147
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1255": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7123,
        7147
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "op": "POP"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "SUB"
    },
    "1266": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 13
    },
    "1267": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "AND",
      "path": "0"
    },
    "1268": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1270": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1271": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1272": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1273": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1275": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1277": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1278": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1280": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1281": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1282": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7179
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1283": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1284": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7174,
        7179
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1285": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7174,
        7179
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1286": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1287": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x511"
    },
    "1290": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1291": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7174,
        7179
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1292": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7174,
        7179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1293": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C9"
    },
    "1296": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7157,
        7179
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1297": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1298": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1299": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7179
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1300": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7157,
        7179
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1301": {
      "op": "POP"
    },
    "1302": {
      "op": "POP"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "op": "SUB"
    },
    "1311": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 14
    },
    "1312": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "AND",
      "path": "0"
    },
    "1313": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1315": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1316": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1317": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1318": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1320": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1322": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1323": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1324": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1325": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1327": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1328": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1329": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1330": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7207,
        7217
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1331": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7218
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1332": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1333": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1334": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1335": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1336": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1337": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7218
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1338": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1339": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1340": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7222,
        7227
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1341": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7222,
        7227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1342": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1343": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x549"
    },
    "1346": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1347": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7222,
        7227
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1348": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7222,
        7227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1349": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B6"
    },
    "1352": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7189,
        7227
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1353": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1354": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1355": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "POP",
      "path": "0"
    },
    "1356": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "POP",
      "path": "0"
    },
    "1357": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1358": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1359": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1360": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7189,
        7227
      ],
      "op": "POP",
      "path": "0"
    },
    "1361": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7257,
        7259
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 15
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1368": {
      "op": "SHL"
    },
    "1369": {
      "op": "SUB"
    },
    "1370": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "AND",
      "path": "0"
    },
    "1371": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7251,
        7255
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "op": "SUB"
    },
    "1380": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "AND",
      "path": "0"
    },
    "1381": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1414": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7261,
        7266
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1415": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1417": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1418": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x595"
    },
    "1421": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1422": {
      "op": "DUP2"
    },
    "1423": {
      "op": "MSTORE"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1426": {
      "op": "ADD"
    },
    "1427": {
      "op": "SWAP1"
    },
    "1428": {
      "op": "JUMP"
    },
    "1429": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1430": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1432": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1433": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1434": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1435": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "SUB",
      "path": "0"
    },
    "1436": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1437": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7242,
        7267
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1438": {
      "op": "POP"
    },
    "1439": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7284,
        7288
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x1"
    },
    "1441": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1442": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1443": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "POP",
      "path": "0"
    },
    "1444": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "POP",
      "path": "0"
    },
    "1445": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        6767,
        7295
      ],
      "op": "POP",
      "path": "0"
    },
    "1446": {
      "fn": "GP_Mint.transferFrom",
      "jump": "o",
      "offset": [
        6767,
        7295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1447": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1640,
        2248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1448": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1872,
        1894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1450": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1914,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1451": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1453": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1454": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1456": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "ADD",
      "path": "0"
    },
    "1457": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BA"
    },
    "1460": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1461": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1462": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DC"
    },
    "1465": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        1897,
        1921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1466": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1467": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1469": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1470": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1473": {
      "op": "NOT"
    },
    "1474": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1475": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1476": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "SUB",
      "path": "0"
    },
    "1477": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "ADD",
      "path": "0"
    },
    "1478": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1479": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1480": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1481": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1482": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1483": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1484": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1976,
        1993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1486": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1487": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2007
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1488": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1495": {
      "op": "SHL"
    },
    "1496": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1497": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1498": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1499": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1500": {
      "op": "POP"
    },
    "1501": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1976,
        1993
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1511": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2007
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1512": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2007
      ],
      "op": "AND",
      "path": "0"
    },
    "1513": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1514": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2033
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "1519": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2033
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1520": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x603"
    },
    "1523": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1524": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2034,
        2044
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1525": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2034,
        2044
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1526": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2046,
        2049
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1527": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2046,
        2049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1528": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2051,
        2058
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1529": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2051,
        2058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1530": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1531": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1897,
        1921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1532": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1534": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "ADD",
      "path": "0"
    },
    "1535": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1122"
    },
    "1538": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        1996,
        2070
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1539": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1540": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1542": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1544": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1545": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1546": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1547": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "SUB",
      "path": "0"
    },
    "1548": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1549": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1551": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1552": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "GAS",
      "path": "0"
    },
    "1553": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "CALL",
      "path": "0"
    },
    "1554": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1555": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1556": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1557": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x622"
    },
    "1560": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1561": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1562": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1564": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1565": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1566": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1567": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1569": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1570": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1571": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "POP",
      "path": "0"
    },
    "1572": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "POP",
      "path": "0"
    },
    "1573": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "POP",
      "path": "0"
    },
    "1574": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "POP",
      "path": "0"
    },
    "1575": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1577": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1578": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1579": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1581": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "NOT",
      "path": "0"
    },
    "1582": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1584": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1585": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "ADD",
      "path": "0"
    },
    "1586": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "AND",
      "path": "0"
    },
    "1587": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1588": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "ADD",
      "path": "0"
    },
    "1589": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1590": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1592": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1593": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "POP",
      "path": "0"
    },
    "1594": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1595": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "ADD",
      "path": "0"
    },
    "1596": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1597": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x646"
    },
    "1600": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1601": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1602": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1203"
    },
    "1605": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        1996,
        2070
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1606": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1996,
        2070
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1607": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1976,
        2070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1608": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1976,
        2070
      ],
      "op": "POP",
      "path": "0"
    },
    "1609": {
      "branch": 49,
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 17
    },
    "1610": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x665"
    },
    "1613": {
      "branch": 49,
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1614": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1616": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1617": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1623": {
      "op": "SHL"
    },
    "1624": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1625": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1626": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1628": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "ADD",
      "path": "0"
    },
    "1629": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1632": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1633": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1225"
    },
    "1636": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        2136,
        2194
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1637": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2136,
        2194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1638": {
      "op": "POP"
    },
    "1639": {
      "op": "POP"
    },
    "1640": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2221,
        2231
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 18
    },
    "1641": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1643": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2232
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1644": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2232
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1645": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2232
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1646": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1648": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1650": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2232
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1651": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1653": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2232
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1654": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2232
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1655": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1656": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1663": {
      "op": "SHL"
    },
    "1664": {
      "op": "SUB"
    },
    "1665": {
      "op": "NOT"
    },
    "1666": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "AND",
      "path": "0"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "op": "SUB"
    },
    "1675": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1676": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1677": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1678": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "AND",
      "path": "0"
    },
    "1679": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1680": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1681": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1682": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "OR",
      "path": "0"
    },
    "1683": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1684": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2241
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1685": {
      "op": "POP"
    },
    "1686": {
      "op": "POP"
    },
    "1687": {
      "op": "POP"
    },
    "1688": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "o",
      "offset": [
        1640,
        2248
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1689": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4162,
        5222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1690": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4371,
        4393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1692": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4421,
        4422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1693": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1695": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1696": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1698": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "ADD",
      "path": "0"
    },
    "1699": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AC"
    },
    "1702": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1703": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1704": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DC"
    },
    "1707": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4396,
        4424
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1708": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1709": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1711": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1712": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1715": {
      "op": "NOT"
    },
    "1716": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1717": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1718": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "SUB",
      "path": "0"
    },
    "1719": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "ADD",
      "path": "0"
    },
    "1720": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1721": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1722": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1723": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1724": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1725": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1726": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4479,
        4496
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1728": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4510
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1729": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4510
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1730": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1737": {
      "op": "SHL"
    },
    "1738": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1739": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1740": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1741": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1742": {
      "op": "POP"
    },
    "1743": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4479,
        4496
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1750": {
      "op": "SHL"
    },
    "1751": {
      "op": "SUB"
    },
    "1752": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1753": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4510
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1754": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4510
      ],
      "op": "AND",
      "path": "0"
    },
    "1755": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1756": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4536
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "1761": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4536
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1762": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F5"
    },
    "1765": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1766": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4537,
        4547
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1767": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4537,
        4547
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1768": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4549,
        4552
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1769": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4549,
        4552
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1770": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4554,
        4561
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1771": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4554,
        4561
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1772": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1773": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4396,
        4424
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1774": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1776": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "ADD",
      "path": "0"
    },
    "1777": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1122"
    },
    "1780": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4499,
        4573
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1781": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1782": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1784": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1786": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1787": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1788": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1789": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "SUB",
      "path": "0"
    },
    "1790": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1791": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1793": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1794": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "GAS",
      "path": "0"
    },
    "1795": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "CALL",
      "path": "0"
    },
    "1796": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1797": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1798": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1799": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x714"
    },
    "1802": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1803": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1804": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1806": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1807": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1808": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1809": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1811": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1812": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1813": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "POP",
      "path": "0"
    },
    "1814": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "POP",
      "path": "0"
    },
    "1815": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "POP",
      "path": "0"
    },
    "1816": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "POP",
      "path": "0"
    },
    "1817": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1819": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1820": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1821": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1823": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "NOT",
      "path": "0"
    },
    "1824": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1826": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1827": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "ADD",
      "path": "0"
    },
    "1828": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "AND",
      "path": "0"
    },
    "1829": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1830": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "ADD",
      "path": "0"
    },
    "1831": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1832": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1834": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1835": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "POP",
      "path": "0"
    },
    "1836": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1837": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "ADD",
      "path": "0"
    },
    "1838": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1839": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x738"
    },
    "1842": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1843": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1844": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1203"
    },
    "1847": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4499,
        4573
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1848": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4499,
        4573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1849": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4479,
        4573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1850": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4479,
        4573
      ],
      "op": "POP",
      "path": "0"
    },
    "1851": {
      "branch": 50,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4647,
        4659
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 19
    },
    "1852": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x757"
    },
    "1855": {
      "branch": 50,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1856": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1858": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1859": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1867": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1868": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1870": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "ADD",
      "path": "0"
    },
    "1871": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1874": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1875": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1225"
    },
    "1878": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4639,
        4697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1879": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4639,
        4697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1880": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4788,
        4798
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 20
    },
    "1881": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4811,
        4812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1883": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1884": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4799
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1885": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4799
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1886": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1888": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1890": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4799
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1891": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1893": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1894": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4799
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1895": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4799
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1902": {
      "op": "SHL"
    },
    "1903": {
      "op": "SUB"
    },
    "1904": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4799
      ],
      "op": "AND",
      "path": "0"
    },
    "1905": {
      "branch": 51,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4772,
        4813
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1906": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4764,
        4853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C9"
    },
    "1909": {
      "branch": 51,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4764,
        4853
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1910": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4764,
        4853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1912": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4764,
        4853
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1913": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4764,
        4853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1921": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4764,
        4853
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1924": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4764,
        4853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1926": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4764,
        4853
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1927": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4764,
        4853
      ],
      "op": "ADD",
      "path": "0"
    },
    "1928": {
      "op": "MSTORE"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1933": {
      "op": "DUP3"
    },
    "1934": {
      "op": "ADD"
    },
    "1935": {
      "op": "MSTORE"
    },
    "1936": {
      "op": "PUSH32",
      "value": "0x47505F4D696E743A204E6F206D696E7465722072656D6F76616C2070726F706F"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1971": {
      "op": "DUP3"
    },
    "1972": {
      "op": "ADD"
    },
    "1973": {
      "op": "MSTORE"
    },
    "1974": {
      "op": "PUSH3",
      "value": "0x1CD959"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "1980": {
      "op": "SHL"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1983": {
      "op": "DUP3"
    },
    "1984": {
      "op": "ADD"
    },
    "1985": {
      "op": "MSTORE"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1988": {
      "op": "ADD"
    },
    "1989": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4764,
        4853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1992": {
      "op": "JUMP"
    },
    "1993": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4764,
        4853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1994": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4871,
        4887
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x6"
    },
    "1996": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4871,
        4887
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2003": {
      "op": "SHL"
    },
    "2004": {
      "op": "SUB"
    },
    "2005": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4871,
        4887
      ],
      "op": "AND",
      "path": "0"
    },
    "2006": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4863,
        4928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81A"
    },
    "2009": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4863,
        4928
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2010": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4863,
        4928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2012": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4863,
        4928
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2019": {
      "op": "SHL"
    },
    "2020": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4863,
        4928
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2021": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4863,
        4928
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2024": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4863,
        4928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2026": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4863,
        4928
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2027": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4863,
        4928
      ],
      "op": "ADD",
      "path": "0"
    },
    "2028": {
      "op": "MSTORE"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2033": {
      "op": "DUP3"
    },
    "2034": {
      "op": "ADD"
    },
    "2035": {
      "op": "MSTORE"
    },
    "2036": {
      "op": "PUSH22",
      "value": "0x11D417D35A5B9D0E88139BC81B5A5B9D195C881CD95D"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "2061": {
      "op": "SHL"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2064": {
      "op": "DUP3"
    },
    "2065": {
      "op": "ADD"
    },
    "2066": {
      "op": "MSTORE"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2069": {
      "op": "ADD"
    },
    "2070": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4863,
        4928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2073": {
      "op": "JUMP"
    },
    "2074": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4863,
        4928
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2075": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5018,
        5034
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x6"
    },
    "2077": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5018,
        5034
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2078": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4994,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2080": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4994,
        5035
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "op": "SUB"
    },
    "2089": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5018,
        5034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2090": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5018,
        5034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2091": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5018,
        5034
      ],
      "op": "AND",
      "path": "0"
    },
    "2092": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5018,
        5034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2093": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4994,
        5035
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC6711413797B8A562634E98C95D50E7619D39702ED5B82CE335DC93546C3A88C"
    },
    "2126": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4994,
        5035
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2127": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5018,
        5034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2129": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5018,
        5034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2130": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4994,
        5035
      ],
      "op": "LOG2",
      "path": "0"
    },
    "2131": {
      "op": "POP"
    },
    "2132": {
      "op": "POP"
    },
    "2133": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5102,
        5118
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x6"
    },
    "2135": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5102,
        5131
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2136": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5102,
        5131
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2143": {
      "op": "SHL"
    },
    "2144": {
      "op": "SUB"
    },
    "2145": {
      "op": "NOT"
    },
    "2146": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5102,
        5131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2147": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5102,
        5131
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2148": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5102,
        5131
      ],
      "op": "AND",
      "path": "0"
    },
    "2149": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5102,
        5131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2150": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5102,
        5131
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2151": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5102,
        5131
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2152": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5204,
        5214
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 24
    },
    "2153": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5129,
        5130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2155": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5188,
        5215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2156": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5188,
        5215
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2157": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5188,
        5215
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2158": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5188,
        5203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2160": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5188,
        5215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2162": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5188,
        5215
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2163": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5188,
        5215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2165": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5188,
        5215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2166": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5188,
        5215
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2167": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5181,
        5215
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2168": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5181,
        5215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2169": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5181,
        5215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2170": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5181,
        5215
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2171": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5181,
        5215
      ],
      "op": "AND",
      "path": "0"
    },
    "2172": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5181,
        5215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2173": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5181,
        5215
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2174": {
      "op": "POP"
    },
    "2175": {
      "op": "POP"
    },
    "2176": {
      "op": "POP"
    },
    "2177": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "o",
      "offset": [
        4162,
        5222
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2178": {
      "fn": "GP_Mint.symbol",
      "offset": [
        5579,
        5664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2179": {
      "fn": "GP_Mint.symbol",
      "offset": [
        5618,
        5631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2181": {
      "fn": "GP_Mint.symbol",
      "offset": [
        5650,
        5657
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x5"
    },
    "2183": {
      "fn": "GP_Mint.symbol",
      "offset": [
        5643,
        5657
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2184": {
      "fn": "GP_Mint.symbol",
      "offset": [
        5643,
        5657
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2185": {
      "fn": "GP_Mint.symbol",
      "offset": [
        5643,
        5657
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "2188": {
      "fn": "GP_Mint.symbol",
      "offset": [
        5643,
        5657
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2189": {
      "fn": "GP_Mint.symbol",
      "offset": [
        5643,
        5657
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDD"
    },
    "2192": {
      "fn": "GP_Mint.symbol",
      "jump": "i",
      "offset": [
        5643,
        5657
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2193": {
      "fn": "GP_Mint.transfer",
      "offset": [
        5959,
        6338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2194": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6020,
        6024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2202": {
      "op": "SHL"
    },
    "2203": {
      "op": "SUB"
    },
    "2204": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6044,
        6060
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 26
    },
    "2205": {
      "branch": 52,
      "fn": "GP_Mint.transfer",
      "offset": [
        6044,
        6060
      ],
      "op": "AND",
      "path": "0"
    },
    "2206": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B9"
    },
    "2209": {
      "branch": 52,
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2210": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2212": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2219": {
      "op": "SHL"
    },
    "2220": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2221": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2222": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2224": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "ADD",
      "path": "0"
    },
    "2225": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2228": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2229": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1017"
    },
    "2232": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6036,
        6100
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2233": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6036,
        6100
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2234": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6128,
        6138
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 27
    },
    "2235": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2237": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2238": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6139
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2239": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6139
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2240": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2242": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2244": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6139
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2245": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2247": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2248": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6139
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2249": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6139
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2250": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6148
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2251": {
      "op": "GT"
    },
    "2252": {
      "branch": 53,
      "fn": "GP_Mint.transfer",
      "offset": [
        6118,
        6148
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2253": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E8"
    },
    "2256": {
      "branch": 53,
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2257": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2259": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2266": {
      "op": "SHL"
    },
    "2267": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2268": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2269": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2271": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "ADD",
      "path": "0"
    },
    "2272": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2275": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2276": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105A"
    },
    "2279": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6110,
        6191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2280": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6110,
        6191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2281": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6212,
        6222
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 28
    },
    "2282": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2284": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2285": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2286": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6223
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2287": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2289": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2291": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6223
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2292": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2294": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2295": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6223
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2296": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6232
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2297": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6232
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2298": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6227,
        6232
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2299": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6227,
        6232
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2300": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2301": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6232
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x907"
    },
    "2304": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6232
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2305": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6227,
        6232
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2306": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6227,
        6232
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2307": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6232
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B6"
    },
    "2310": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6202,
        6232
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2311": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6232
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2312": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6232
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2313": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6232
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2314": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6202,
        6232
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2315": {
      "op": "POP"
    },
    "2316": {
      "op": "POP"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "op": "SUB"
    },
    "2325": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 29
    },
    "2326": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "AND",
      "path": "0"
    },
    "2327": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2329": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2330": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2331": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2332": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2334": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2336": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2337": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2339": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2340": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2341": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6264
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2342": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6264
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2343": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6259,
        6264
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2344": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6259,
        6264
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2345": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2346": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6264
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x934"
    },
    "2349": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6264
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2350": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6259,
        6264
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2351": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6259,
        6264
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2352": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6264
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C9"
    },
    "2355": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6242,
        6264
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2356": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6264
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2357": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6264
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2358": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6264
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2359": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6242,
        6264
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2360": {
      "op": "POP"
    },
    "2361": {
      "op": "POP"
    },
    "2362": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6279,
        6310
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x40"
    },
    "2364": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6279,
        6310
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2365": {
      "op": "DUP3"
    },
    "2366": {
      "op": "DUP2"
    },
    "2367": {
      "op": "MSTORE"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "op": "SUB"
    },
    "2376": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6279,
        6310
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2377": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6279,
        6310
      ],
      "op": "AND",
      "path": "0"
    },
    "2378": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6279,
        6310
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2379": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6288,
        6298
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2380": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6288,
        6298
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2381": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6279,
        6310
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2414": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6279,
        6310
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2417": {
      "op": "ADD"
    },
    "2418": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6279,
        6310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C6"
    },
    "2421": {
      "op": "JUMP"
    },
    "2422": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3490,
        4156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2423": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3753,
        3769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2425": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3753,
        3769
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2426": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2428": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2429": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3711,
        3733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2431": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3711,
        3733
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2432": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x997"
    },
    "2435": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "op": "SUB"
    },
    "2444": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3753,
        3769
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2445": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3753,
        3769
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2446": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3753,
        3769
      ],
      "op": "AND",
      "path": "0"
    },
    "2447": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3753,
        3769
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2448": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2450": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "ADD",
      "path": "0"
    },
    "2451": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DC"
    },
    "2454": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        3736,
        3770
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2455": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2456": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2458": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2459": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2462": {
      "op": "NOT"
    },
    "2463": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2464": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2465": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "SUB",
      "path": "0"
    },
    "2466": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "ADD",
      "path": "0"
    },
    "2467": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2468": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2469": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2470": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2471": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2472": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2473": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3825,
        3842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2475": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3856
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2476": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3856
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2477": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2486": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2487": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2488": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2489": {
      "op": "POP"
    },
    "2490": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3825,
        3842
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2497": {
      "op": "SHL"
    },
    "2498": {
      "op": "SUB"
    },
    "2499": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2500": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3856
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2501": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3856
      ],
      "op": "AND",
      "path": "0"
    },
    "2502": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2503": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3882
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "2508": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3882
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2509": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E0"
    },
    "2512": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2513": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3883,
        3893
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2514": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3883,
        3893
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2515": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3895,
        3898
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2516": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3895,
        3898
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2517": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3900,
        3907
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2518": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3900,
        3907
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2519": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2520": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3736,
        3770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2521": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2523": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "ADD",
      "path": "0"
    },
    "2524": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1122"
    },
    "2527": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        3845,
        3919
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2528": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2529": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2531": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2533": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2534": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2535": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2536": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "SUB",
      "path": "0"
    },
    "2537": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2538": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2540": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2541": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "GAS",
      "path": "0"
    },
    "2542": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "CALL",
      "path": "0"
    },
    "2543": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2544": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2545": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2546": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9FF"
    },
    "2549": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2550": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2551": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2553": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2554": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2555": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2556": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2558": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2559": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2560": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "POP",
      "path": "0"
    },
    "2561": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "POP",
      "path": "0"
    },
    "2562": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "POP",
      "path": "0"
    },
    "2563": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "POP",
      "path": "0"
    },
    "2564": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2566": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2567": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2568": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2570": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "NOT",
      "path": "0"
    },
    "2571": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2573": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2574": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "ADD",
      "path": "0"
    },
    "2575": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "AND",
      "path": "0"
    },
    "2576": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2577": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "ADD",
      "path": "0"
    },
    "2578": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2579": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2581": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2582": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "POP",
      "path": "0"
    },
    "2583": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2584": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "ADD",
      "path": "0"
    },
    "2585": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2586": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA23"
    },
    "2589": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2590": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2591": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1203"
    },
    "2594": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        3845,
        3919
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2595": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3845,
        3919
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2596": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3825,
        3919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2597": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3825,
        3919
      ],
      "op": "POP",
      "path": "0"
    },
    "2598": {
      "branch": 54,
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3993,
        4005
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 31
    },
    "2599": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA42"
    },
    "2602": {
      "branch": 54,
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2603": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2605": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2606": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2612": {
      "op": "SHL"
    },
    "2613": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2614": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2615": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2617": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "ADD",
      "path": "0"
    },
    "2618": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2621": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2622": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1225"
    },
    "2625": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        3985,
        4043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2626": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3985,
        4043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2627": {
      "op": "POP"
    },
    "2628": {
      "op": "POP"
    },
    "2629": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4125,
        4135
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 32
    },
    "2630": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4147,
        4148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2632": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4136
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2633": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4136
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2634": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4136
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2635": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2637": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2639": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4136
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2640": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2642": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4136
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2643": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4136
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2644": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4149
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2645": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4149
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2652": {
      "op": "SHL"
    },
    "2653": {
      "op": "SUB"
    },
    "2654": {
      "op": "NOT"
    },
    "2655": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4149
      ],
      "op": "AND",
      "path": "0"
    },
    "2656": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4149
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2657": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4109,
        4149
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2658": {
      "op": "POP"
    },
    "2659": {
      "op": "POP"
    },
    "2660": {
      "op": "POP"
    },
    "2661": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "o",
      "offset": [
        3490,
        4156
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2662": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2254,
        3484
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2663": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2486,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2665": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2528,
        2534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2666": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2668": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2669": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2671": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "ADD",
      "path": "0"
    },
    "2672": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA79"
    },
    "2675": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2676": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2677": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DC"
    },
    "2680": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2511,
        2535
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2681": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2682": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2684": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2685": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2688": {
      "op": "NOT"
    },
    "2689": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2690": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2691": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "SUB",
      "path": "0"
    },
    "2692": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "ADD",
      "path": "0"
    },
    "2693": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2694": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2695": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2696": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2697": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2698": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2699": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2590,
        2607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2701": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2621
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2702": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2621
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2703": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2710": {
      "op": "SHL"
    },
    "2711": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2712": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2713": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2714": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2715": {
      "op": "POP"
    },
    "2716": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2590,
        2607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2723": {
      "op": "SHL"
    },
    "2724": {
      "op": "SUB"
    },
    "2725": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2726": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2621
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2727": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2621
      ],
      "op": "AND",
      "path": "0"
    },
    "2728": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2729": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2647
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "2734": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2647
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2735": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC2"
    },
    "2738": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2739": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2648,
        2658
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2740": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2648,
        2658
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2741": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2660,
        2663
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2742": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2660,
        2663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2743": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2665,
        2672
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2744": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2665,
        2672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2745": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2746": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2511,
        2535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2747": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2749": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "ADD",
      "path": "0"
    },
    "2750": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1122"
    },
    "2753": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2610,
        2684
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2754": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2755": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2757": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2759": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2760": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2761": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2762": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "SUB",
      "path": "0"
    },
    "2763": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2764": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2766": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2767": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "GAS",
      "path": "0"
    },
    "2768": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "CALL",
      "path": "0"
    },
    "2769": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2770": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2771": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2772": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE1"
    },
    "2775": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2776": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2777": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2779": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2780": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2781": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2782": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2784": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2785": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2786": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "POP",
      "path": "0"
    },
    "2787": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "POP",
      "path": "0"
    },
    "2788": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "POP",
      "path": "0"
    },
    "2789": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "POP",
      "path": "0"
    },
    "2790": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2792": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2793": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2794": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2796": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "NOT",
      "path": "0"
    },
    "2797": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2799": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2800": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "ADD",
      "path": "0"
    },
    "2801": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "AND",
      "path": "0"
    },
    "2802": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2803": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "ADD",
      "path": "0"
    },
    "2804": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2805": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2807": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2808": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "POP",
      "path": "0"
    },
    "2809": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2810": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "ADD",
      "path": "0"
    },
    "2811": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2812": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB05"
    },
    "2815": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2816": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2817": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1203"
    },
    "2820": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2610,
        2684
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2821": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2610,
        2684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2822": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2590,
        2684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2823": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2590,
        2684
      ],
      "op": "POP",
      "path": "0"
    },
    "2824": {
      "branch": 55,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2758,
        2770
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 33
    },
    "2825": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "2828": {
      "branch": 55,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2829": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2831": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2832": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2838": {
      "op": "SHL"
    },
    "2839": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2840": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2841": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2843": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "ADD",
      "path": "0"
    },
    "2844": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2847": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2848": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1225"
    },
    "2851": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2750,
        2808
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2852": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2750,
        2808
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2853": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2924,
        2934
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 34
    },
    "2854": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2856": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2857": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2858": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2859": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2861": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2863": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2864": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2866": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2867": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2868": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2875": {
      "op": "SHL"
    },
    "2876": {
      "op": "SUB"
    },
    "2877": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2945
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2878": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2879": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2945
      ],
      "op": "AND",
      "path": "0"
    },
    "2880": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2881": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2935
      ],
      "op": "AND",
      "path": "0"
    },
    "2882": {
      "branch": 56,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2908,
        2945
      ],
      "op": "EQ",
      "path": "0"
    },
    "2883": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2900,
        2982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8E"
    },
    "2886": {
      "branch": 56,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2900,
        2982
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2887": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2900,
        2982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2889": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2900,
        2982
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2896": {
      "op": "SHL"
    },
    "2897": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2900,
        2982
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2898": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2900,
        2982
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2901": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2900,
        2982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2903": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2900,
        2982
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2904": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2900,
        2982
      ],
      "op": "ADD",
      "path": "0"
    },
    "2905": {
      "op": "DUP2"
    },
    "2906": {
      "op": "SWAP1"
    },
    "2907": {
      "op": "MSTORE"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2910": {
      "op": "DUP3"
    },
    "2911": {
      "op": "ADD"
    },
    "2912": {
      "op": "MSTORE"
    },
    "2913": {
      "op": "PUSH32",
      "value": "0x4D7945524332303A204D696E7465722061646472657373206D69736D61746368"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2948": {
      "op": "DUP3"
    },
    "2949": {
      "op": "ADD"
    },
    "2950": {
      "op": "MSTORE"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2953": {
      "op": "ADD"
    },
    "2954": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2900,
        2982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2957": {
      "op": "JUMP"
    },
    "2958": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2900,
        2982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2959": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3093,
        3109
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x6"
    },
    "2961": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3093,
        3109
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2968": {
      "op": "SHL"
    },
    "2969": {
      "op": "SUB"
    },
    "2970": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3093,
        3109
      ],
      "op": "AND",
      "path": "0"
    },
    "2971": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3093,
        3123
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2972": {
      "branch": 57,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3093,
        3123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2973": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3093,
        3153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB3"
    },
    "2976": {
      "branch": 57,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3093,
        3153
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2977": {
      "op": "POP"
    },
    "2978": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3127,
        3143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2980": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3127,
        3143
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2987": {
      "op": "SHL"
    },
    "2988": {
      "op": "SUB"
    },
    "2989": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3127,
        3153
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2990": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3127,
        3153
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2991": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3127,
        3153
      ],
      "op": "AND",
      "path": "0"
    },
    "2992": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3127,
        3143
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2993": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3127,
        3143
      ],
      "op": "AND",
      "path": "0"
    },
    "2994": {
      "branch": 58,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3127,
        3153
      ],
      "op": "EQ",
      "path": "0"
    },
    "2995": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3093,
        3153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2996": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3085,
        3193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0B"
    },
    "2999": {
      "branch": 58,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3085,
        3193
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3000": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3085,
        3193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3002": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3085,
        3193
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3009": {
      "op": "SHL"
    },
    "3010": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3085,
        3193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3011": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3085,
        3193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3014": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3085,
        3193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3016": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3085,
        3193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3017": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3085,
        3193
      ],
      "op": "ADD",
      "path": "0"
    },
    "3018": {
      "op": "MSTORE"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3023": {
      "op": "DUP3"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "MSTORE"
    },
    "3026": {
      "op": "PUSH32",
      "value": "0x4D7945524332303A20416E6F74686572206D696E74657220616C726561647920"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3061": {
      "op": "DUP3"
    },
    "3062": {
      "op": "ADD"
    },
    "3063": {
      "op": "MSTORE"
    },
    "3064": {
      "op": "PUSH3",
      "value": "0x1CD95D"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "3070": {
      "op": "SHL"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3073": {
      "op": "DUP3"
    },
    "3074": {
      "op": "ADD"
    },
    "3075": {
      "op": "MSTORE"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3078": {
      "op": "ADD"
    },
    "3079": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3085,
        3193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "3082": {
      "op": "JUMP"
    },
    "3083": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3085,
        3193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3084": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3257
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x6"
    },
    "3086": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3266
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3087": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3266
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3094": {
      "op": "SHL"
    },
    "3095": {
      "op": "SUB"
    },
    "3096": {
      "op": "NOT"
    },
    "3097": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3266
      ],
      "op": "AND",
      "path": "0"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3104": {
      "op": "SHL"
    },
    "3105": {
      "op": "SUB"
    },
    "3106": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3266
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3107": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3266
      ],
      "op": "AND",
      "path": "0"
    },
    "3108": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3109": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3266
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3110": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3266
      ],
      "op": "OR",
      "path": "0"
    },
    "3111": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3112": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3266
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3113": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3241,
        3266
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3114": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3342,
        3369
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x40"
    },
    "3116": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3342,
        3369
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3117": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3342,
        3369
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xFE7C7FCB0AE0CE6BFD0A653FA3AB6C97A51A0819E6C27CDAB8A08D456338C5FA"
    },
    "3150": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3342,
        3369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3153": {
      "op": "SWAP1"
    },
    "3154": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3342,
        3369
      ],
      "op": "LOG2",
      "path": "0"
    },
    "3155": {
      "op": "POP"
    },
    "3156": {
      "op": "POP"
    },
    "3157": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3466,
        3476
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 38
    },
    "3158": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3450,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3160": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3450,
        3477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3161": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3450,
        3477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3162": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3450,
        3477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3163": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3450,
        3465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3165": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3450,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3167": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3450,
        3477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3168": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3450,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3170": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3450,
        3477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3171": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3450,
        3477
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3172": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3443,
        3477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3173": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3443,
        3477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "op": "SUB"
    },
    "3182": {
      "op": "NOT"
    },
    "3183": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3443,
        3477
      ],
      "op": "AND",
      "path": "0"
    },
    "3184": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3443,
        3477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3185": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3443,
        3477
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3186": {
      "op": "POP"
    },
    "3187": {
      "op": "POP"
    },
    "3188": {
      "op": "POP"
    },
    "3189": {
      "op": "POP"
    },
    "3190": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "o",
      "offset": [
        2254,
        3484
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3191": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5303,
        5485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3192": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5397,
        5413
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x6"
    },
    "3194": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5397,
        5413
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3201": {
      "op": "SHL"
    },
    "3202": {
      "op": "SUB"
    },
    "3203": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5397,
        5413
      ],
      "op": "AND",
      "path": "0"
    },
    "3204": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5383,
        5393
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3205": {
      "branch": 59,
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5383,
        5413
      ],
      "op": "EQ",
      "path": "0"
    },
    "3206": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5375,
        5446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD1"
    },
    "3209": {
      "branch": 59,
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5375,
        5446
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3210": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5375,
        5446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3212": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5375,
        5446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3219": {
      "op": "SHL"
    },
    "3220": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5375,
        5446
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3221": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5375,
        5446
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3224": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5375,
        5446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3226": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5375,
        5446
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3227": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5375,
        5446
      ],
      "op": "ADD",
      "path": "0"
    },
    "3228": {
      "op": "MSTORE"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3233": {
      "op": "DUP3"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "op": "MSTORE"
    },
    "3236": {
      "op": "PUSH32",
      "value": "0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3271": {
      "op": "DUP3"
    },
    "3272": {
      "op": "ADD"
    },
    "3273": {
      "op": "MSTORE"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3276": {
      "op": "ADD"
    },
    "3277": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5375,
        5446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "3280": {
      "op": "JUMP"
    },
    "3281": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5375,
        5446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3282": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5456,
        5478
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 40,
      "value": "0xCDB"
    },
    "3285": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5462,
        5469
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3286": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5471,
        5477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3287": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5456,
        5461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCDF"
    },
    "3290": {
      "fn": "GP_Mint.mintTokens",
      "jump": "i",
      "offset": [
        5456,
        5478
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3291": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5456,
        5478
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3292": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5303,
        5485
      ],
      "op": "POP",
      "path": "0"
    },
    "3293": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5303,
        5485
      ],
      "op": "POP",
      "path": "0"
    },
    "3294": {
      "fn": "GP_Mint.mintTokens",
      "jump": "o",
      "offset": [
        5303,
        5485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3295": {
      "fn": "GP_Mint._mint",
      "offset": [
        7301,
        7619
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3296": {
      "fn": "GP_Mint._mint",
      "offset": [
        7390,
        7406
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x6"
    },
    "3298": {
      "fn": "GP_Mint._mint",
      "offset": [
        7390,
        7406
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3305": {
      "op": "SHL"
    },
    "3306": {
      "op": "SUB"
    },
    "3307": {
      "fn": "GP_Mint._mint",
      "offset": [
        7390,
        7406
      ],
      "op": "AND",
      "path": "0"
    },
    "3308": {
      "fn": "GP_Mint._mint",
      "offset": [
        7376,
        7386
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3309": {
      "branch": 60,
      "fn": "GP_Mint._mint",
      "offset": [
        7376,
        7406
      ],
      "op": "EQ",
      "path": "0"
    },
    "3310": {
      "fn": "GP_Mint._mint",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD39"
    },
    "3313": {
      "branch": 60,
      "fn": "GP_Mint._mint",
      "offset": [
        7368,
        7439
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3314": {
      "fn": "GP_Mint._mint",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3316": {
      "fn": "GP_Mint._mint",
      "offset": [
        7368,
        7439
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3323": {
      "op": "SHL"
    },
    "3324": {
      "fn": "GP_Mint._mint",
      "offset": [
        7368,
        7439
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3325": {
      "fn": "GP_Mint._mint",
      "offset": [
        7368,
        7439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3328": {
      "fn": "GP_Mint._mint",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3330": {
      "fn": "GP_Mint._mint",
      "offset": [
        7368,
        7439
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3331": {
      "fn": "GP_Mint._mint",
      "offset": [
        7368,
        7439
      ],
      "op": "ADD",
      "path": "0"
    },
    "3332": {
      "op": "MSTORE"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3337": {
      "op": "DUP3"
    },
    "3338": {
      "op": "ADD"
    },
    "3339": {
      "op": "MSTORE"
    },
    "3340": {
      "op": "PUSH32",
      "value": "0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3375": {
      "op": "DUP3"
    },
    "3376": {
      "op": "ADD"
    },
    "3377": {
      "op": "MSTORE"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3380": {
      "op": "ADD"
    },
    "3381": {
      "fn": "GP_Mint._mint",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "3384": {
      "op": "JUMP"
    },
    "3385": {
      "fn": "GP_Mint._mint",
      "offset": [
        7368,
        7439
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3386": {
      "fn": "GP_Mint._mint",
      "offset": [
        7465,
        7471
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 42
    },
    "3387": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3389": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3391": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7471
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3392": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7471
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3393": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7471
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3394": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4B"
    },
    "3397": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7471
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3398": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7471
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3399": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C9"
    },
    "3402": {
      "fn": "GP_Mint._mint",
      "jump": "i",
      "offset": [
        7449,
        7471
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3403": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7471
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3404": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7471
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3405": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7471
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3406": {
      "fn": "GP_Mint._mint",
      "offset": [
        7449,
        7471
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3407": {
      "op": "POP"
    },
    "3408": {
      "op": "POP"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "op": "SUB"
    },
    "3417": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 43
    },
    "3418": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "AND",
      "path": "0"
    },
    "3419": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3421": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3422": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3423": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3424": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3426": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3428": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3429": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3431": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3432": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3433": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7509
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3434": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7509
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3435": {
      "fn": "GP_Mint._mint",
      "offset": [
        7503,
        7509
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3436": {
      "fn": "GP_Mint._mint",
      "offset": [
        7503,
        7509
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3437": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3438": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD78"
    },
    "3441": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7509
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3442": {
      "fn": "GP_Mint._mint",
      "offset": [
        7503,
        7509
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3443": {
      "fn": "GP_Mint._mint",
      "offset": [
        7503,
        7509
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3444": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C9"
    },
    "3447": {
      "fn": "GP_Mint._mint",
      "jump": "i",
      "offset": [
        7481,
        7509
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3448": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7509
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3449": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7509
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3450": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7509
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3451": {
      "fn": "GP_Mint._mint",
      "offset": [
        7481,
        7509
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3452": {
      "op": "POP"
    },
    "3453": {
      "op": "POP"
    },
    "3454": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x40"
    },
    "3456": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3457": {
      "op": "DUP2"
    },
    "3458": {
      "op": "DUP2"
    },
    "3459": {
      "op": "MSTORE"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3466": {
      "op": "SHL"
    },
    "3467": {
      "op": "SUB"
    },
    "3468": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3469": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "AND",
      "path": "0"
    },
    "3470": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3471": {
      "fn": "GP_Mint._mint",
      "offset": [
        7583,
        7593
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3472": {
      "fn": "GP_Mint._mint",
      "offset": [
        7583,
        7593
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3473": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x9D228D69B5FDB8D273A2336F8FB8612D039631024EA9BF09C424A9503AA078F0"
    },
    "3506": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3509": {
      "op": "ADD"
    },
    "3510": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3512": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3513": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3514": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3515": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "SUB",
      "path": "0"
    },
    "3516": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3517": {
      "fn": "GP_Mint._mint",
      "offset": [
        7576,
        7611
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3518": {
      "fn": "GP_Mint._mint",
      "offset": [
        7301,
        7619
      ],
      "op": "POP",
      "path": "0"
    },
    "3519": {
      "fn": "GP_Mint._mint",
      "offset": [
        7301,
        7619
      ],
      "op": "POP",
      "path": "0"
    },
    "3520": {
      "fn": "GP_Mint._mint",
      "jump": "o",
      "offset": [
        7301,
        7619
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3521": {
      "op": "JUMPDEST"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3524": {
      "op": "DUP2"
    },
    "3525": {
      "op": "MLOAD"
    },
    "3526": {
      "op": "DUP1"
    },
    "3527": {
      "op": "DUP5"
    },
    "3528": {
      "op": "MSTORE"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3531": {
      "op": "JUMPDEST"
    },
    "3532": {
      "op": "DUP2"
    },
    "3533": {
      "op": "DUP2"
    },
    "3534": {
      "op": "LT"
    },
    "3535": {
      "op": "ISZERO"
    },
    "3536": {
      "op": "PUSH2",
      "value": "0xDE7"
    },
    "3539": {
      "op": "JUMPI"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3542": {
      "op": "DUP2"
    },
    "3543": {
      "op": "DUP6"
    },
    "3544": {
      "op": "ADD"
    },
    "3545": {
      "op": "DUP2"
    },
    "3546": {
      "op": "ADD"
    },
    "3547": {
      "op": "MLOAD"
    },
    "3548": {
      "op": "DUP7"
    },
    "3549": {
      "op": "DUP4"
    },
    "3550": {
      "op": "ADD"
    },
    "3551": {
      "op": "DUP3"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "MSTORE"
    },
    "3554": {
      "op": "ADD"
    },
    "3555": {
      "op": "PUSH2",
      "value": "0xDCB"
    },
    "3558": {
      "op": "JUMP"
    },
    "3559": {
      "op": "JUMPDEST"
    },
    "3560": {
      "op": "POP"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3565": {
      "op": "DUP3"
    },
    "3566": {
      "op": "DUP7"
    },
    "3567": {
      "op": "ADD"
    },
    "3568": {
      "op": "ADD"
    },
    "3569": {
      "op": "MSTORE"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3574": {
      "op": "NOT"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3577": {
      "op": "DUP4"
    },
    "3578": {
      "op": "ADD"
    },
    "3579": {
      "op": "AND"
    },
    "3580": {
      "op": "DUP6"
    },
    "3581": {
      "op": "ADD"
    },
    "3582": {
      "op": "ADD"
    },
    "3583": {
      "op": "SWAP2"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "op": "POP"
    },
    "3586": {
      "op": "SWAP3"
    },
    "3587": {
      "op": "SWAP2"
    },
    "3588": {
      "op": "POP"
    },
    "3589": {
      "op": "POP"
    },
    "3590": {
      "jump": "o",
      "op": "JUMP"
    },
    "3591": {
      "op": "JUMPDEST"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3594": {
      "op": "DUP2"
    },
    "3595": {
      "op": "MSTORE"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3598": {
      "op": "PUSH2",
      "value": "0xE1A"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3603": {
      "op": "DUP4"
    },
    "3604": {
      "op": "ADD"
    },
    "3605": {
      "op": "DUP5"
    },
    "3606": {
      "op": "PUSH2",
      "value": "0xDC1"
    },
    "3609": {
      "jump": "i",
      "op": "JUMP"
    },
    "3610": {
      "op": "JUMPDEST"
    },
    "3611": {
      "op": "SWAP4"
    },
    "3612": {
      "op": "SWAP3"
    },
    "3613": {
      "op": "POP"
    },
    "3614": {
      "op": "POP"
    },
    "3615": {
      "op": "POP"
    },
    "3616": {
      "jump": "o",
      "op": "JUMP"
    },
    "3617": {
      "op": "JUMPDEST"
    },
    "3618": {
      "op": "DUP1"
    },
    "3619": {
      "op": "CALLDATALOAD"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3626": {
      "op": "SHL"
    },
    "3627": {
      "op": "SUB"
    },
    "3628": {
      "op": "DUP2"
    },
    "3629": {
      "op": "AND"
    },
    "3630": {
      "op": "DUP2"
    },
    "3631": {
      "op": "EQ"
    },
    "3632": {
      "op": "PUSH2",
      "value": "0xE38"
    },
    "3635": {
      "op": "JUMPI"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3638": {
      "op": "DUP1"
    },
    "3639": {
      "op": "REVERT"
    },
    "3640": {
      "op": "JUMPDEST"
    },
    "3641": {
      "op": "SWAP2"
    },
    "3642": {
      "op": "SWAP1"
    },
    "3643": {
      "op": "POP"
    },
    "3644": {
      "jump": "o",
      "op": "JUMP"
    },
    "3645": {
      "op": "JUMPDEST"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3648": {
      "op": "DUP1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3651": {
      "op": "DUP4"
    },
    "3652": {
      "op": "DUP6"
    },
    "3653": {
      "op": "SUB"
    },
    "3654": {
      "op": "SLT"
    },
    "3655": {
      "op": "ISZERO"
    },
    "3656": {
      "op": "PUSH2",
      "value": "0xE50"
    },
    "3659": {
      "op": "JUMPI"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3662": {
      "op": "DUP1"
    },
    "3663": {
      "op": "REVERT"
    },
    "3664": {
      "op": "JUMPDEST"
    },
    "3665": {
      "op": "PUSH2",
      "value": "0xE59"
    },
    "3668": {
      "op": "DUP4"
    },
    "3669": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3672": {
      "jump": "i",
      "op": "JUMP"
    },
    "3673": {
      "op": "JUMPDEST"
    },
    "3674": {
      "op": "SWAP5"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3677": {
      "op": "SWAP4"
    },
    "3678": {
      "op": "SWAP1"
    },
    "3679": {
      "op": "SWAP4"
    },
    "3680": {
      "op": "ADD"
    },
    "3681": {
      "op": "CALLDATALOAD"
    },
    "3682": {
      "op": "SWAP4"
    },
    "3683": {
      "op": "POP"
    },
    "3684": {
      "op": "POP"
    },
    "3685": {
      "op": "POP"
    },
    "3686": {
      "jump": "o",
      "op": "JUMP"
    },
    "3687": {
      "op": "JUMPDEST"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3690": {
      "op": "DUP1"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3695": {
      "op": "DUP5"
    },
    "3696": {
      "op": "DUP7"
    },
    "3697": {
      "op": "SUB"
    },
    "3698": {
      "op": "SLT"
    },
    "3699": {
      "op": "ISZERO"
    },
    "3700": {
      "op": "PUSH2",
      "value": "0xE7C"
    },
    "3703": {
      "op": "JUMPI"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3706": {
      "op": "DUP1"
    },
    "3707": {
      "op": "REVERT"
    },
    "3708": {
      "op": "JUMPDEST"
    },
    "3709": {
      "op": "PUSH2",
      "value": "0xE85"
    },
    "3712": {
      "op": "DUP5"
    },
    "3713": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3716": {
      "jump": "i",
      "op": "JUMP"
    },
    "3717": {
      "op": "JUMPDEST"
    },
    "3718": {
      "op": "SWAP3"
    },
    "3719": {
      "op": "POP"
    },
    "3720": {
      "op": "PUSH2",
      "value": "0xE93"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3725": {
      "op": "DUP6"
    },
    "3726": {
      "op": "ADD"
    },
    "3727": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3730": {
      "jump": "i",
      "op": "JUMP"
    },
    "3731": {
      "op": "JUMPDEST"
    },
    "3732": {
      "op": "SWAP2"
    },
    "3733": {
      "op": "POP"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3736": {
      "op": "DUP5"
    },
    "3737": {
      "op": "ADD"
    },
    "3738": {
      "op": "CALLDATALOAD"
    },
    "3739": {
      "op": "SWAP1"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "op": "SWAP3"
    },
    "3742": {
      "op": "POP"
    },
    "3743": {
      "op": "SWAP3"
    },
    "3744": {
      "op": "POP"
    },
    "3745": {
      "op": "SWAP3"
    },
    "3746": {
      "jump": "o",
      "op": "JUMP"
    },
    "3747": {
      "op": "JUMPDEST"
    },
    "3748": {
      "op": "DUP1"
    },
    "3749": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "3752": {
      "op": "DUP2"
    },
    "3753": {
      "op": "ADD"
    },
    "3754": {
      "op": "DUP4"
    },
    "3755": {
      "op": "LT"
    },
    "3756": {
      "op": "ISZERO"
    },
    "3757": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "3760": {
      "op": "JUMPI"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3763": {
      "op": "DUP1"
    },
    "3764": {
      "op": "REVERT"
    },
    "3765": {
      "op": "JUMPDEST"
    },
    "3766": {
      "op": "DUP1"
    },
    "3767": {
      "op": "PUSH2",
      "value": "0x2000"
    },
    "3770": {
      "op": "DUP2"
    },
    "3771": {
      "op": "ADD"
    },
    "3772": {
      "op": "DUP4"
    },
    "3773": {
      "op": "LT"
    },
    "3774": {
      "op": "ISZERO"
    },
    "3775": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "3778": {
      "op": "JUMPI"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3781": {
      "op": "DUP1"
    },
    "3782": {
      "op": "REVERT"
    },
    "3783": {
      "op": "JUMPDEST"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3786": {
      "op": "DUP1"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3789": {
      "op": "DUP1"
    },
    "3790": {
      "op": "PUSH2",
      "value": "0x4060"
    },
    "3793": {
      "op": "DUP6"
    },
    "3794": {
      "op": "DUP8"
    },
    "3795": {
      "op": "SUB"
    },
    "3796": {
      "op": "SLT"
    },
    "3797": {
      "op": "ISZERO"
    },
    "3798": {
      "op": "PUSH2",
      "value": "0xEDE"
    },
    "3801": {
      "op": "JUMPI"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3804": {
      "op": "DUP1"
    },
    "3805": {
      "op": "REVERT"
    },
    "3806": {
      "op": "JUMPDEST"
    },
    "3807": {
      "op": "PUSH2",
      "value": "0xEE8"
    },
    "3810": {
      "op": "DUP7"
    },
    "3811": {
      "op": "DUP7"
    },
    "3812": {
      "op": "PUSH2",
      "value": "0xEA3"
    },
    "3815": {
      "jump": "i",
      "op": "JUMP"
    },
    "3816": {
      "op": "JUMPDEST"
    },
    "3817": {
      "op": "SWAP4"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "3822": {
      "op": "DUP6"
    },
    "3823": {
      "op": "ADD"
    },
    "3824": {
      "op": "CALLDATALOAD"
    },
    "3825": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3834": {
      "op": "DUP2"
    },
    "3835": {
      "op": "GT"
    },
    "3836": {
      "op": "ISZERO"
    },
    "3837": {
      "op": "PUSH2",
      "value": "0xF05"
    },
    "3840": {
      "op": "JUMPI"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3843": {
      "op": "DUP1"
    },
    "3844": {
      "op": "REVERT"
    },
    "3845": {
      "op": "JUMPDEST"
    },
    "3846": {
      "op": "PUSH2",
      "value": "0xF11"
    },
    "3849": {
      "op": "DUP8"
    },
    "3850": {
      "op": "DUP3"
    },
    "3851": {
      "op": "DUP9"
    },
    "3852": {
      "op": "ADD"
    },
    "3853": {
      "op": "PUSH2",
      "value": "0xEB5"
    },
    "3856": {
      "jump": "i",
      "op": "JUMP"
    },
    "3857": {
      "op": "JUMPDEST"
    },
    "3858": {
      "op": "SWAP4"
    },
    "3859": {
      "op": "POP"
    },
    "3860": {
      "op": "POP"
    },
    "3861": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "3864": {
      "op": "DUP6"
    },
    "3865": {
      "op": "ADD"
    },
    "3866": {
      "op": "CALLDATALOAD"
    },
    "3867": {
      "op": "SWAP2"
    },
    "3868": {
      "op": "POP"
    },
    "3869": {
      "op": "PUSH2",
      "value": "0xF29"
    },
    "3872": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "3875": {
      "op": "DUP7"
    },
    "3876": {
      "op": "ADD"
    },
    "3877": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3880": {
      "jump": "i",
      "op": "JUMP"
    },
    "3881": {
      "op": "JUMPDEST"
    },
    "3882": {
      "op": "SWAP1"
    },
    "3883": {
      "op": "POP"
    },
    "3884": {
      "op": "SWAP3"
    },
    "3885": {
      "op": "SWAP6"
    },
    "3886": {
      "op": "SWAP2"
    },
    "3887": {
      "op": "SWAP5"
    },
    "3888": {
      "op": "POP"
    },
    "3889": {
      "op": "SWAP3"
    },
    "3890": {
      "op": "POP"
    },
    "3891": {
      "jump": "o",
      "op": "JUMP"
    },
    "3892": {
      "op": "JUMPDEST"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3897": {
      "op": "DUP3"
    },
    "3898": {
      "op": "DUP5"
    },
    "3899": {
      "op": "SUB"
    },
    "3900": {
      "op": "SLT"
    },
    "3901": {
      "op": "ISZERO"
    },
    "3902": {
      "op": "PUSH2",
      "value": "0xF46"
    },
    "3905": {
      "op": "JUMPI"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3908": {
      "op": "DUP1"
    },
    "3909": {
      "op": "REVERT"
    },
    "3910": {
      "op": "JUMPDEST"
    },
    "3911": {
      "op": "PUSH2",
      "value": "0xE1A"
    },
    "3914": {
      "op": "DUP3"
    },
    "3915": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3918": {
      "jump": "i",
      "op": "JUMP"
    },
    "3919": {
      "op": "JUMPDEST"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3922": {
      "op": "DUP1"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3925": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "3928": {
      "op": "DUP5"
    },
    "3929": {
      "op": "DUP7"
    },
    "3930": {
      "op": "SUB"
    },
    "3931": {
      "op": "SLT"
    },
    "3932": {
      "op": "ISZERO"
    },
    "3933": {
      "op": "PUSH2",
      "value": "0xF65"
    },
    "3936": {
      "op": "JUMPI"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3939": {
      "op": "DUP1"
    },
    "3940": {
      "op": "REVERT"
    },
    "3941": {
      "op": "JUMPDEST"
    },
    "3942": {
      "op": "PUSH2",
      "value": "0xF6F"
    },
    "3945": {
      "op": "DUP6"
    },
    "3946": {
      "op": "DUP6"
    },
    "3947": {
      "op": "PUSH2",
      "value": "0xEA3"
    },
    "3950": {
      "jump": "i",
      "op": "JUMP"
    },
    "3951": {
      "op": "JUMPDEST"
    },
    "3952": {
      "op": "SWAP3"
    },
    "3953": {
      "op": "POP"
    },
    "3954": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "3957": {
      "op": "DUP5"
    },
    "3958": {
      "op": "ADD"
    },
    "3959": {
      "op": "CALLDATALOAD"
    },
    "3960": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3969": {
      "op": "DUP2"
    },
    "3970": {
      "op": "GT"
    },
    "3971": {
      "op": "ISZERO"
    },
    "3972": {
      "op": "PUSH2",
      "value": "0xF8C"
    },
    "3975": {
      "op": "JUMPI"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3978": {
      "op": "DUP1"
    },
    "3979": {
      "op": "REVERT"
    },
    "3980": {
      "op": "JUMPDEST"
    },
    "3981": {
      "op": "PUSH2",
      "value": "0xF98"
    },
    "3984": {
      "op": "DUP7"
    },
    "3985": {
      "op": "DUP3"
    },
    "3986": {
      "op": "DUP8"
    },
    "3987": {
      "op": "ADD"
    },
    "3988": {
      "op": "PUSH2",
      "value": "0xEB5"
    },
    "3991": {
      "jump": "i",
      "op": "JUMP"
    },
    "3992": {
      "op": "JUMPDEST"
    },
    "3993": {
      "op": "SWAP3"
    },
    "3994": {
      "op": "POP"
    },
    "3995": {
      "op": "POP"
    },
    "3996": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "3999": {
      "op": "DUP5"
    },
    "4000": {
      "op": "ADD"
    },
    "4001": {
      "op": "CALLDATALOAD"
    },
    "4002": {
      "op": "SWAP1"
    },
    "4003": {
      "op": "POP"
    },
    "4004": {
      "op": "SWAP3"
    },
    "4005": {
      "op": "POP"
    },
    "4006": {
      "op": "SWAP3"
    },
    "4007": {
      "op": "POP"
    },
    "4008": {
      "op": "SWAP3"
    },
    "4009": {
      "jump": "o",
      "op": "JUMP"
    },
    "4010": {
      "op": "JUMPDEST"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4013": {
      "op": "DUP1"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4016": {
      "op": "DUP4"
    },
    "4017": {
      "op": "DUP6"
    },
    "4018": {
      "op": "SUB"
    },
    "4019": {
      "op": "SLT"
    },
    "4020": {
      "op": "ISZERO"
    },
    "4021": {
      "op": "PUSH2",
      "value": "0xFBD"
    },
    "4024": {
      "op": "JUMPI"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4027": {
      "op": "DUP1"
    },
    "4028": {
      "op": "REVERT"
    },
    "4029": {
      "op": "JUMPDEST"
    },
    "4030": {
      "op": "PUSH2",
      "value": "0xFC6"
    },
    "4033": {
      "op": "DUP4"
    },
    "4034": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "4037": {
      "jump": "i",
      "op": "JUMP"
    },
    "4038": {
      "op": "JUMPDEST"
    },
    "4039": {
      "op": "SWAP2"
    },
    "4040": {
      "op": "POP"
    },
    "4041": {
      "op": "PUSH2",
      "value": "0xFD4"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4046": {
      "op": "DUP5"
    },
    "4047": {
      "op": "ADD"
    },
    "4048": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "4051": {
      "jump": "i",
      "op": "JUMP"
    },
    "4052": {
      "op": "JUMPDEST"
    },
    "4053": {
      "op": "SWAP1"
    },
    "4054": {
      "op": "POP"
    },
    "4055": {
      "op": "SWAP3"
    },
    "4056": {
      "op": "POP"
    },
    "4057": {
      "op": "SWAP3"
    },
    "4058": {
      "op": "SWAP1"
    },
    "4059": {
      "op": "POP"
    },
    "4060": {
      "jump": "o",
      "op": "JUMP"
    },
    "4061": {
      "op": "JUMPDEST"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4064": {
      "op": "DUP2"
    },
    "4065": {
      "op": "DUP2"
    },
    "4066": {
      "op": "SHR"
    },
    "4067": {
      "op": "SWAP1"
    },
    "4068": {
      "op": "DUP3"
    },
    "4069": {
      "op": "AND"
    },
    "4070": {
      "op": "DUP1"
    },
    "4071": {
      "op": "PUSH2",
      "value": "0xFF1"
    },
    "4074": {
      "op": "JUMPI"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4077": {
      "op": "DUP3"
    },
    "4078": {
      "op": "AND"
    },
    "4079": {
      "op": "SWAP2"
    },
    "4080": {
      "op": "POP"
    },
    "4081": {
      "op": "JUMPDEST"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4084": {
      "op": "DUP3"
    },
    "4085": {
      "op": "LT"
    },
    "4086": {
      "op": "DUP2"
    },
    "4087": {
      "op": "SUB"
    },
    "4088": {
      "op": "PUSH2",
      "value": "0x1011"
    },
    "4091": {
      "op": "JUMPI"
    },
    "4092": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4099": {
      "op": "SHL"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4102": {
      "op": "MSTORE"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4107": {
      "op": "MSTORE"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4112": {
      "op": "REVERT"
    },
    "4113": {
      "op": "JUMPDEST"
    },
    "4114": {
      "op": "POP"
    },
    "4115": {
      "op": "SWAP2"
    },
    "4116": {
      "op": "SWAP1"
    },
    "4117": {
      "op": "POP"
    },
    "4118": {
      "jump": "o",
      "op": "JUMP"
    },
    "4119": {
      "op": "JUMPDEST"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4122": {
      "op": "DUP1"
    },
    "4123": {
      "op": "DUP3"
    },
    "4124": {
      "op": "MSTORE"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4127": {
      "op": "SWAP1"
    },
    "4128": {
      "op": "DUP3"
    },
    "4129": {
      "op": "ADD"
    },
    "4130": {
      "op": "MSTORE"
    },
    "4131": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4166": {
      "op": "DUP3"
    },
    "4167": {
      "op": "ADD"
    },
    "4168": {
      "op": "MSTORE"
    },
    "4169": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4175": {
      "op": "SHL"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4178": {
      "op": "DUP3"
    },
    "4179": {
      "op": "ADD"
    },
    "4180": {
      "op": "MSTORE"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4183": {
      "op": "ADD"
    },
    "4184": {
      "op": "SWAP1"
    },
    "4185": {
      "jump": "o",
      "op": "JUMP"
    },
    "4186": {
      "op": "JUMPDEST"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4189": {
      "op": "DUP1"
    },
    "4190": {
      "op": "DUP3"
    },
    "4191": {
      "op": "MSTORE"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4194": {
      "op": "SWAP1"
    },
    "4195": {
      "op": "DUP3"
    },
    "4196": {
      "op": "ADD"
    },
    "4197": {
      "op": "MSTORE"
    },
    "4198": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4233": {
      "op": "DUP3"
    },
    "4234": {
      "op": "ADD"
    },
    "4235": {
      "op": "MSTORE"
    },
    "4236": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4245": {
      "op": "SHL"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4248": {
      "op": "DUP3"
    },
    "4249": {
      "op": "ADD"
    },
    "4250": {
      "op": "MSTORE"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4253": {
      "op": "ADD"
    },
    "4254": {
      "op": "SWAP1"
    },
    "4255": {
      "jump": "o",
      "op": "JUMP"
    },
    "4256": {
      "op": "JUMPDEST"
    },
    "4257": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4264": {
      "op": "SHL"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4267": {
      "op": "MSTORE"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4272": {
      "op": "MSTORE"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4277": {
      "op": "REVERT"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "op": "DUP2"
    },
    "4280": {
      "op": "DUP2"
    },
    "4281": {
      "op": "SUB"
    },
    "4282": {
      "op": "DUP2"
    },
    "4283": {
      "op": "DUP2"
    },
    "4284": {
      "op": "GT"
    },
    "4285": {
      "op": "ISZERO"
    },
    "4286": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "4289": {
      "op": "JUMPI"
    },
    "4290": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "4293": {
      "op": "PUSH2",
      "value": "0x10A0"
    },
    "4296": {
      "jump": "i",
      "op": "JUMP"
    },
    "4297": {
      "op": "JUMPDEST"
    },
    "4298": {
      "op": "DUP1"
    },
    "4299": {
      "op": "DUP3"
    },
    "4300": {
      "op": "ADD"
    },
    "4301": {
      "op": "DUP1"
    },
    "4302": {
      "op": "DUP3"
    },
    "4303": {
      "op": "GT"
    },
    "4304": {
      "op": "ISZERO"
    },
    "4305": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "4308": {
      "op": "JUMPI"
    },
    "4309": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "4312": {
      "op": "PUSH2",
      "value": "0x10A0"
    },
    "4315": {
      "jump": "i",
      "op": "JUMP"
    },
    "4316": {
      "op": "JUMPDEST"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4319": {
      "op": "SWAP2"
    },
    "4320": {
      "op": "SWAP1"
    },
    "4321": {
      "op": "SWAP2"
    },
    "4322": {
      "op": "SHL"
    },
    "4323": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4336": {
      "op": "NOT"
    },
    "4337": {
      "op": "AND"
    },
    "4338": {
      "op": "DUP2"
    },
    "4339": {
      "op": "MSTORE"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4342": {
      "op": "ADD"
    },
    "4343": {
      "op": "SWAP1"
    },
    "4344": {
      "jump": "o",
      "op": "JUMP"
    },
    "4345": {
      "op": "JUMPDEST"
    },
    "4346": {
      "op": "DUP2"
    },
    "4347": {
      "op": "DUP4"
    },
    "4348": {
      "op": "MSTORE"
    },
    "4349": {
      "op": "DUP2"
    },
    "4350": {
      "op": "DUP2"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4353": {
      "op": "DUP6"
    },
    "4354": {
      "op": "ADD"
    },
    "4355": {
      "op": "CALLDATACOPY"
    },
    "4356": {
      "op": "POP"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4359": {
      "op": "DUP3"
    },
    "4360": {
      "op": "DUP3"
    },
    "4361": {
      "op": "ADD"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4364": {
      "op": "SWAP1"
    },
    "4365": {
      "op": "DUP2"
    },
    "4366": {
      "op": "ADD"
    },
    "4367": {
      "op": "SWAP2"
    },
    "4368": {
      "op": "SWAP1"
    },
    "4369": {
      "op": "SWAP2"
    },
    "4370": {
      "op": "MSTORE"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4373": {
      "op": "SWAP1"
    },
    "4374": {
      "op": "SWAP2"
    },
    "4375": {
      "op": "ADD"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4378": {
      "op": "NOT"
    },
    "4379": {
      "op": "AND"
    },
    "4380": {
      "op": "SWAP1"
    },
    "4381": {
      "op": "SWAP2"
    },
    "4382": {
      "op": "ADD"
    },
    "4383": {
      "op": "ADD"
    },
    "4384": {
      "op": "SWAP1"
    },
    "4385": {
      "jump": "o",
      "op": "JUMP"
    },
    "4386": {
      "op": "JUMPDEST"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4389": {
      "op": "PUSH2",
      "value": "0x4060"
    },
    "4392": {
      "op": "DUP3"
    },
    "4393": {
      "op": "DUP2"
    },
    "4394": {
      "op": "ADD"
    },
    "4395": {
      "op": "DUP4"
    },
    "4396": {
      "op": "DUP9"
    },
    "4397": {
      "op": "DUP5"
    },
    "4398": {
      "op": "JUMPDEST"
    },
    "4399": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4402": {
      "op": "DUP2"
    },
    "4403": {
      "op": "LT"
    },
    "4404": {
      "op": "ISZERO"
    },
    "4405": {
      "op": "PUSH2",
      "value": "0x114F"
    },
    "4408": {
      "op": "JUMPI"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4411": {
      "op": "DUP1"
    },
    "4412": {
      "op": "DUP4"
    },
    "4413": {
      "op": "DUP6"
    },
    "4414": {
      "op": "CALLDATACOPY"
    },
    "4415": {
      "op": "SWAP3"
    },
    "4416": {
      "op": "DUP4"
    },
    "4417": {
      "op": "ADD"
    },
    "4418": {
      "op": "SWAP3"
    },
    "4419": {
      "op": "SWAP2"
    },
    "4420": {
      "op": "SWAP1"
    },
    "4421": {
      "op": "SWAP2"
    },
    "4422": {
      "op": "ADD"
    },
    "4423": {
      "op": "SWAP1"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4426": {
      "op": "ADD"
    },
    "4427": {
      "op": "PUSH2",
      "value": "0x112E"
    },
    "4430": {
      "op": "JUMP"
    },
    "4431": {
      "op": "JUMPDEST"
    },
    "4432": {
      "op": "POP"
    },
    "4433": {
      "op": "POP"
    },
    "4434": {
      "op": "POP"
    },
    "4435": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "4438": {
      "op": "DUP5"
    },
    "4439": {
      "op": "ADD"
    },
    "4440": {
      "op": "SWAP2"
    },
    "4441": {
      "op": "SWAP1"
    },
    "4442": {
      "op": "SWAP2"
    },
    "4443": {
      "op": "MSTORE"
    },
    "4444": {
      "op": "PUSH2",
      "value": "0x6060"
    },
    "4447": {
      "op": "DUP4"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "DUP7"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4452": {
      "op": "JUMPDEST"
    },
    "4453": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4456": {
      "op": "DUP2"
    },
    "4457": {
      "op": "LT"
    },
    "4458": {
      "op": "ISZERO"
    },
    "4459": {
      "op": "PUSH2",
      "value": "0x11DB"
    },
    "4462": {
      "op": "JUMPI"
    },
    "4463": {
      "op": "DUP6"
    },
    "4464": {
      "op": "DUP4"
    },
    "4465": {
      "op": "SUB"
    },
    "4466": {
      "op": "PUSH2",
      "value": "0x405F"
    },
    "4469": {
      "op": "NOT"
    },
    "4470": {
      "op": "ADD"
    },
    "4471": {
      "op": "DUP5"
    },
    "4472": {
      "op": "MSTORE"
    },
    "4473": {
      "op": "DUP2"
    },
    "4474": {
      "op": "CALLDATALOAD"
    },
    "4475": {
      "op": "CALLDATASIZE"
    },
    "4476": {
      "op": "DUP11"
    },
    "4477": {
      "op": "SWAP1"
    },
    "4478": {
      "op": "SUB"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4481": {
      "op": "NOT"
    },
    "4482": {
      "op": "ADD"
    },
    "4483": {
      "op": "DUP2"
    },
    "4484": {
      "op": "SLT"
    },
    "4485": {
      "op": "PUSH2",
      "value": "0x118D"
    },
    "4488": {
      "op": "JUMPI"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4491": {
      "op": "DUP1"
    },
    "4492": {
      "op": "REVERT"
    },
    "4493": {
      "op": "JUMPDEST"
    },
    "4494": {
      "op": "DUP10"
    },
    "4495": {
      "op": "ADD"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4498": {
      "op": "DUP2"
    },
    "4499": {
      "op": "DUP2"
    },
    "4500": {
      "op": "ADD"
    },
    "4501": {
      "op": "SWAP2"
    },
    "4502": {
      "op": "CALLDATALOAD"
    },
    "4503": {
      "op": "SWAP1"
    },
    "4504": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4513": {
      "op": "DUP3"
    },
    "4514": {
      "op": "GT"
    },
    "4515": {
      "op": "ISZERO"
    },
    "4516": {
      "op": "PUSH2",
      "value": "0x11AC"
    },
    "4519": {
      "op": "JUMPI"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4522": {
      "op": "DUP1"
    },
    "4523": {
      "op": "REVERT"
    },
    "4524": {
      "op": "JUMPDEST"
    },
    "4525": {
      "op": "DUP2"
    },
    "4526": {
      "op": "CALLDATASIZE"
    },
    "4527": {
      "op": "SUB"
    },
    "4528": {
      "op": "DUP4"
    },
    "4529": {
      "op": "SGT"
    },
    "4530": {
      "op": "ISZERO"
    },
    "4531": {
      "op": "PUSH2",
      "value": "0x11BB"
    },
    "4534": {
      "op": "JUMPI"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4537": {
      "op": "DUP1"
    },
    "4538": {
      "op": "REVERT"
    },
    "4539": {
      "op": "JUMPDEST"
    },
    "4540": {
      "op": "PUSH2",
      "value": "0x11C6"
    },
    "4543": {
      "op": "DUP7"
    },
    "4544": {
      "op": "DUP4"
    },
    "4545": {
      "op": "DUP6"
    },
    "4546": {
      "op": "PUSH2",
      "value": "0x10F9"
    },
    "4549": {
      "jump": "i",
      "op": "JUMP"
    },
    "4550": {
      "op": "JUMPDEST"
    },
    "4551": {
      "op": "SWAP7"
    },
    "4552": {
      "op": "DUP2"
    },
    "4553": {
      "op": "ADD"
    },
    "4554": {
      "op": "SWAP7"
    },
    "4555": {
      "op": "SWAP6"
    },
    "4556": {
      "op": "POP"
    },
    "4557": {
      "op": "SWAP4"
    },
    "4558": {
      "op": "SWAP1"
    },
    "4559": {
      "op": "SWAP4"
    },
    "4560": {
      "op": "ADD"
    },
    "4561": {
      "op": "SWAP3"
    },
    "4562": {
      "op": "POP"
    },
    "4563": {
      "op": "POP"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4566": {
      "op": "ADD"
    },
    "4567": {
      "op": "PUSH2",
      "value": "0x1164"
    },
    "4570": {
      "op": "JUMP"
    },
    "4571": {
      "op": "JUMPDEST"
    },
    "4572": {
      "op": "POP"
    },
    "4573": {
      "op": "POP"
    },
    "4574": {
      "op": "DUP6"
    },
    "4575": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "4578": {
      "op": "DUP6"
    },
    "4579": {
      "op": "ADD"
    },
    "4580": {
      "op": "MSTORE"
    },
    "4581": {
      "op": "DUP4"
    },
    "4582": {
      "op": "DUP2"
    },
    "4583": {
      "op": "SUB"
    },
    "4584": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "4587": {
      "op": "DUP6"
    },
    "4588": {
      "op": "ADD"
    },
    "4589": {
      "op": "MSTORE"
    },
    "4590": {
      "op": "PUSH2",
      "value": "0x11F7"
    },
    "4593": {
      "op": "DUP2"
    },
    "4594": {
      "op": "DUP7"
    },
    "4595": {
      "op": "PUSH2",
      "value": "0xDC1"
    },
    "4598": {
      "jump": "i",
      "op": "JUMP"
    },
    "4599": {
      "op": "JUMPDEST"
    },
    "4600": {
      "op": "SWAP9"
    },
    "4601": {
      "op": "SWAP8"
    },
    "4602": {
      "op": "POP"
    },
    "4603": {
      "op": "POP"
    },
    "4604": {
      "op": "POP"
    },
    "4605": {
      "op": "POP"
    },
    "4606": {
      "op": "POP"
    },
    "4607": {
      "op": "POP"
    },
    "4608": {
      "op": "POP"
    },
    "4609": {
      "op": "POP"
    },
    "4610": {
      "jump": "o",
      "op": "JUMP"
    },
    "4611": {
      "op": "JUMPDEST"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4616": {
      "op": "DUP3"
    },
    "4617": {
      "op": "DUP5"
    },
    "4618": {
      "op": "SUB"
    },
    "4619": {
      "op": "SLT"
    },
    "4620": {
      "op": "ISZERO"
    },
    "4621": {
      "op": "PUSH2",
      "value": "0x1215"
    },
    "4624": {
      "op": "JUMPI"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4627": {
      "op": "DUP1"
    },
    "4628": {
      "op": "REVERT"
    },
    "4629": {
      "op": "JUMPDEST"
    },
    "4630": {
      "op": "DUP2"
    },
    "4631": {
      "op": "MLOAD"
    },
    "4632": {
      "op": "DUP1"
    },
    "4633": {
      "op": "ISZERO"
    },
    "4634": {
      "op": "ISZERO"
    },
    "4635": {
      "op": "DUP2"
    },
    "4636": {
      "op": "EQ"
    },
    "4637": {
      "op": "PUSH2",
      "value": "0xE1A"
    },
    "4640": {
      "op": "JUMPI"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4643": {
      "op": "DUP1"
    },
    "4644": {
      "op": "REVERT"
    },
    "4645": {
      "op": "JUMPDEST"
    },
    "4646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4648": {
      "op": "DUP1"
    },
    "4649": {
      "op": "DUP3"
    },
    "4650": {
      "op": "MSTORE"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4653": {
      "op": "SWAP1"
    },
    "4654": {
      "op": "DUP3"
    },
    "4655": {
      "op": "ADD"
    },
    "4656": {
      "op": "MSTORE"
    },
    "4657": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A20417574686F72697A6174696F6E206661696C65"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4692": {
      "op": "DUP3"
    },
    "4693": {
      "op": "ADD"
    },
    "4694": {
      "op": "MSTORE"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "4699": {
      "op": "SHL"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4702": {
      "op": "DUP3"
    },
    "4703": {
      "op": "ADD"
    },
    "4704": {
      "op": "MSTORE"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4707": {
      "op": "ADD"
    },
    "4708": {
      "op": "SWAP1"
    },
    "4709": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e79998c892456f9a5faee14201cda32c3d80673c",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n//import \"./LamportBase.sol\"; // Adjust the path according to your project structure\n\n// This is a full ERC20 token mint with Lamport permissions on which contract can mint it.\ninterface ILamportBase {\n    function performLamportMasterCheck(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        bytes memory prepacked\n    ) external returns (bool);\n}\n\ncontract GP_Mint {\n\n    ILamportBase public lamportBase;\n    mapping(address => uint256) private _balances;\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    // Function to set the authorized minter (Step One)\n    address private authorizedMinter;\n    mapping(address => address) private proposedMinters; // Temporary storage for proposed minters\n\n    event AuthorizedMinterSet(address indexed minter);\n    event AuthorizedMinterRemoved(address indexed minter);\n    constructor() {\n        lamportBase = ILamportBase(0x81C8C758c3987D9dca8d0dA30E5000828a169bfE);\n        _name = \"GPGrens\";\n        _symbol = \"GPG\";\n        _initializeMintProcess();\n    }\n    function _initializeMintProcess() private {\n        // Set the authorized minter (hardcoded for one-off execution)\n        authorizedMinter = 0x98828b2784eCE054aA699909175a5a4082681Cc5;\n\n        // Mint tokens\n        _mint(0x239fA7623354eC26520dE878B52f13Fe84b06971, 80000 * (10 ** uint256(decimals())));\n\n        // Reset the authorized minter\n        authorizedMinter = address(0);\n    }\n\n    function setAuthorizedMinterStepOne(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        address minter\n    ) public {\n        // Encode the minter address to bytes\n        bytes memory prepacked = abi.encodePacked(minter);\n\n        // Perform the Lamport Master Check\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n\n        // Ensure that the Lamport Master Check passed\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n\n        proposedMinters[msg.sender] = minter;\n    }\n\n    function setAuthorizedMinterStepTwo(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        address minter\n    ) public {\n        // Encode the minter address to bytes\n        bytes memory prepacked = abi.encodePacked(minter);\n\n        // Perform the Lamport Master Check\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n\n        // Ensure that the Lamport Master Check passed\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n\n        // Check that the proposed minter matches the minter in the current call\n        require(proposedMinters[msg.sender] == minter, \"MyERC20: Minter address mismatch\");\n\n        // Check if the authorized minter is either not set or matches the minter being set\n        require(authorizedMinter == address(0) || authorizedMinter == minter, \"MyERC20: Another minter already set\");\n\n        // Set the authorized minter\n        authorizedMinter = minter;\n\n        // Emit the event for setting the authorized minter\n        emit AuthorizedMinterSet(minter);\n\n        // Clear the temporary storage for the proposed minter\n        delete proposedMinters[msg.sender];\n    }\n\n    function removeAuthorizedMinterStepOne(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH\n    ) public {\n        // Encode the authorizedMinter address to bytes\n        bytes memory prepacked = abi.encodePacked(authorizedMinter);\n\n        // Perform the Lamport Master Check\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n\n        // Ensure that the Lamport Master Check passed\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n\n        // Set the proposed minter to the zero address\n        proposedMinters[msg.sender] = address(0);\n    }\n\n    function removeAuthorizedMinterStepTwo(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH\n    ) public {\n        // Encode the zero address to bytes\n        bytes memory prepacked = abi.encodePacked(address(0));\n\n        // Perform the Lamport Master Check\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n\n        // Ensure that the Lamport Master Check passed\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n\n        // Check the conditions for removing the minter\n        require(proposedMinters[msg.sender] == address(0), \"GP_Mint: No minter removal proposed\");\n        require(authorizedMinter != address(0), \"GP_Mint: No minter set\");\n\n        // Emit the AuthorizedMinterRemoved event\n        emit AuthorizedMinterRemoved(authorizedMinter);\n\n        // Set the authorizedMinter to the zero address\n        authorizedMinter = address(0);\n\n        // Clear the temporary storage\n        delete proposedMinters[msg.sender];\n    }\n\n    // External function to mint tokens, callable by the authorized minter\n    function mintTokens(address account, uint256 amount) external {\n        require(msg.sender == authorizedMinter, \"GP_Mint: Unauthorized minter\");\n        _mint(account, amount);\n    }\n\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public pure returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address to, uint256 value) public returns (bool) {\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(_balances[msg.sender] >= value, \"ERC20: transfer amount exceeds balance\");\n\n        _balances[msg.sender] -= value;\n        _balances[to] += value;\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 value) public returns (bool) {\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(value <= _balances[from], \"ERC20: transfer amount exceeds balance\");\n        require(value <= _allowances[from][msg.sender], \"ERC20: transfer amount exceeds allowance\");\n\n        _balances[from] -= value;\n        _balances[to] += value;\n        _allowances[from][msg.sender] -= value;\n        emit Transfer(from, to, value);\n        return true;\n    }\n\n    function _mint(address account, uint256 amount) internal {\n        require(msg.sender == authorizedMinter, \"GP_Mint: Unauthorized minter\");\n        _totalSupply += amount;\n        _balances[account] += amount;\n        //emit Minted(address(0), account, amount);\n        emit Minted(msg.sender, account, amount);\n\n    }\n\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n        require(_balances[account] >= amount, \"ERC20: burn amount exceeds balance\");\n\n        _balances[account] -= amount;\n        _totalSupply -= amount;\n        emit Transfer(account, address(0), amount);\n    }\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Minted(address indexed minter, address indexed account, uint256 amount);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n",
  "sourceMap": "468:7752:0:-:0;;;1052:187;;;;;;;;;-1:-1:-1;1076:11:0;:70;;-1:-1:-1;;;;;;1076:70:0;1103:42;1076:70;;;1156:17;;;;;;;;;;;;-1:-1:-1;;;1156:17:0;;;;:5;;:17;;:5;:17;:::i;:::-;-1:-1:-1;1183:15:0;;;;;;;;;;;;-1:-1:-1;;;1183:15:0;;;;:7;;:15;;:7;:15;:::i;:::-;-1:-1:-1;1208:24:0;:22;:24::i;:::-;468:7752;;1244:390;1367:16;:61;;-1:-1:-1;;;;;;1367:61:0;1386:42;1367:61;;;1462:86;1468:42;1535:10;5735:2;;5670:74;1535:10;1521:25;;1527:19;;1521:2;:25;:::i;:::-;1512:35;;:5;:35;:::i;:::-;1462:5;:86::i;:::-;1598:16;:29;;-1:-1:-1;;;;;;1598:29:0;;;1244:390::o;7301:318::-;7390:16;;-1:-1:-1;;;;;7390:16:0;7376:10;:30;7368:71;;;;-1:-1:-1;;;7368:71:0;;4616:2:4;7368:71:0;;;4598:21:4;4655:2;4635:18;;;4628:30;4694;4674:18;;;4667:58;4742:18;;7368:71:0;;;;;;;;7465:6;7449:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7481:18:0;;;;;;:9;:18;;;;;:28;;7503:6;;7481:18;:28;;7503:6;;7481:28;:::i;:::-;;;;-1:-1:-1;;7576:35:0;;5047:25:4;;;-1:-1:-1;;;;;7576:35:0;;;7583:10;;7576:35;;5035:2:4;5020:18;7576:35:0;;;;;;;7301:318;;:::o;14:127:4:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:4;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:4;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:4;;;2580:26;2531:89;-1:-1:-1;;1335:1:4;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:4;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:4;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:4;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:4:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:422;2956:1;2999:5;2956:1;3013:270;3034:7;3024:8;3021:21;3013:270;;;3093:4;3089:1;3085:6;3081:17;3075:4;3072:27;3069:53;;;3102:18;;:::i;:::-;3152:7;3142:8;3138:22;3135:55;;;3172:16;;;;3135:55;3251:22;;;;3211:15;;;;3013:270;;;3017:3;2867:422;;;;;:::o;3294:806::-;3343:5;3373:8;3363:80;;-1:-1:-1;3414:1:4;3428:5;;3363:80;3462:4;3452:76;;-1:-1:-1;3499:1:4;3513:5;;3452:76;3544:4;3562:1;3557:59;;;;3630:1;3625:130;;;;3537:218;;3557:59;3587:1;3578:10;;3601:5;;;3625:130;3662:3;3652:8;3649:17;3646:43;;;3669:18;;:::i;:::-;-1:-1:-1;;3725:1:4;3711:16;;3740:5;;3537:218;;3839:2;3829:8;3826:16;3820:3;3814:4;3811:13;3807:36;3801:2;3791:8;3788:16;3783:2;3777:4;3774:12;3770:35;3767:77;3764:159;;;-1:-1:-1;3876:19:4;;;3908:5;;3764:159;3955:34;3980:8;3974:4;3955:34;:::i;:::-;4025:6;4021:1;4017:6;4013:19;4004:7;4001:32;3998:58;;;4036:18;;:::i;:::-;4074:20;;-1:-1:-1;3294:806:4;;;;;:::o;4105:131::-;4165:5;4194:36;4221:8;4215:4;4194:36;:::i;:::-;4185:45;4105:131;-1:-1:-1;;;4105:131:4:o;4241:168::-;4314:9;;;4345;;4362:15;;;4356:22;;4342:37;4332:71;;4383:18;;:::i;4771:125::-;4836:9;;;4857:10;;;4854:36;;;4870:18;;:::i;4901:177::-;468:7752:0;;;;;;",
  "sourcePath": "contracts/2_GP_Mint.sol",
  "type": "contract"
}