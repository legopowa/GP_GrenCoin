{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "AuthorizedMinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "AuthorizedMinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lamportBase",
      "outputs": [
        {
          "internalType": "contract ILamportBase",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        }
      ],
      "name": "removeAuthorizedMinterStepOne",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        }
      ],
      "name": "removeAuthorizedMinterStepTwo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "setAuthorizedMinterStepOne",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "setAuthorizedMinterStepTwo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewAuthorizedMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/2_GP_Mint.sol"
  },
  "ast": {
    "absolutePath": "contracts/2_GP_Mint.sol",
    "exportedSymbols": {
      "GP_Mint": [
        749
      ],
      "ILamportBase": [
        21
      ]
    },
    "id": 750,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ILamportBase",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 21,
        "linearizedBaseContracts": [
          21
        ],
        "name": "ILamportBase",
        "nameLocation": "245:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "333f6111",
            "id": 20,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "performLamportMasterCheck",
            "nameLocation": "273:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "333:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "308:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 2,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "308:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 4,
                      "length": {
                        "hexValue": "32",
                        "id": 3,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "316:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "308:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 6,
                    "length": {
                      "hexValue": "323536",
                      "id": 5,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "319:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "308:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "373:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "353:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "353:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 10,
                    "length": {
                      "hexValue": "323536",
                      "id": 9,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "359:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "353:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "394:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "386:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "prepacked",
                  "nameLocation": "424:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "411:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:141:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "458:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "457:6:0"
            },
            "scope": 21,
            "src": "264:200:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 750,
        "src": "235:231:0",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GP_Mint",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 749,
        "linearizedBaseContracts": [
          749
        ],
        "name": "GP_Mint",
        "nameLocation": "477:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "56bf7b57",
            "id": 24,
            "mutability": "mutable",
            "name": "lamportBase",
            "nameLocation": "512:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 749,
            "src": "492:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILamportBase_$21",
              "typeString": "contract ILamportBase"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "ILamportBase",
                "nameLocations": [
                  "492:12:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21,
                "src": "492:12:0"
              },
              "referencedDeclaration": 21,
              "src": "492:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILamportBase_$21",
                "typeString": "contract ILamportBase"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "565:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 749,
            "src": "529:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 27,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "537:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "529:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "548:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 34,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "636:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 749,
            "src": "580:67:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 33,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "588:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "580:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 30,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "607:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "599:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "618:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "storedNextPKH",
            "nameLocation": "669:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 749,
            "src": "653:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 35,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "653:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "705:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 749,
            "src": "689:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "689:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "739:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 749,
            "src": "724:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 39,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "724:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "765:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 749,
            "src": "750:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 41,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "750:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "authorizedMinter",
            "nameLocation": "851:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 749,
            "src": "835:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 43,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "835:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "proposedMinters",
            "nameLocation": "909:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 749,
            "src": "873:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 47,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "881:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "873:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "892:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "fe7c7fcb0ae0ce6bfd0a653fa3ab6c97a51a0819e6c27cdab8a08d456338c5fa",
            "id": 52,
            "name": "AuthorizedMinterSet",
            "nameLocation": "979:19:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1015:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "999:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:24:0"
            },
            "src": "973:50:0"
          },
          {
            "anonymous": false,
            "eventSelector": "c6711413797b8a562634e98c95d50e7619d39702ed5b82ce335dc93546c3a88c",
            "id": 56,
            "name": "AuthorizedMinterRemoved",
            "nameLocation": "1034:23:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1074:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1058:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1057:24:0"
            },
            "src": "1028:54:0"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "1101:173:0",
              "statements": [
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "lamportBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1111:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILamportBase_$21",
                        "typeString": "contract ILamportBase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307842333833304145363945453539363233353565383466366262414332373446663333373936304535",
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1138:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xB3830AE69EE5962355e84f6bbAC274Ff337960E5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 60,
                        "name": "ILamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1125:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILamportBase_$21_$",
                          "typeString": "type(contract ILamportBase)"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1125:56:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILamportBase_$21",
                        "typeString": "contract ILamportBase"
                      }
                    },
                    "src": "1111:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILamportBase_$21",
                      "typeString": "contract ILamportBase"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:70:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1191:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "47504772656e73",
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1199:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_85d23d8815db0386ffcab147251f14b940cc30f01028c74f890ccc54e82161f8",
                        "typeString": "literal_string \"GPGrens\""
                      },
                      "value": "GPGrens"
                    },
                    "src": "1191:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:17:0"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1218:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "475047",
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1228:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e8ce4bb4b5e5e059c89aa7348567c209fb8542ebce9f149be0a20dbaecaf6000",
                        "typeString": "literal_string \"GPG\""
                      },
                      "value": "GPG"
                    },
                    "src": "1218:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:15:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 73,
                      "name": "_initializeMintProcess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1243:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1243:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:24:0"
                }
              ]
            },
            "id": 77,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:2:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:0:0"
            },
            "scope": 749,
            "src": "1087:187:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1321:447:0",
              "statements": [
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1428:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307846334139394139613238333661366663466345423834363136314239303042336431343437323336",
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1447:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xF3A99A9a2836a6fcFcEB846161B900B3d1447236"
                    },
                    "src": "1428:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1428:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307832333966413736323333353465433236353230644538373842353266313346653834623036393731",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1529:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x239fA7623354eC26520dE878B52f13Fe84b06971"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3830303030",
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1573:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_80000_by_1",
                            "typeString": "int_const 80000"
                          },
                          "value": "80000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 93,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1582:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 90,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 447,
                                      "src": "1596:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
                                        "typeString": "function () pure returns (uint8)"
                                      }
                                    },
                                    "id": 91,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1596:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 89,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1588:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 88,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1588:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1588:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1582:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 94,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1581:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1573:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 84,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 678,
                      "src": "1523:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1523:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:86:0"
                },
                {
                  "expression": {
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1700:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307832424366464163324239454236354337393635303038414142373232386534353544383134353461",
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1719:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x2BCfFAc2B9EB65C7965008AAB7228e455D81454a"
                    },
                    "src": "1700:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:61:0"
                }
              ]
            },
            "id": 103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializeMintProcess",
            "nameLocation": "1288:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1310:2:0"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1321:0:0"
            },
            "scope": 749,
            "src": "1279:489:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "1950:464:0",
              "statements": [
                {
                  "assignments": [
                    121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 121,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "2019:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "2006:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 120,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2006:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 126,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 124,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "2048:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 122,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2031:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2035:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2031:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2006:49:0"
                },
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "2115:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "2110:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2110:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 136,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 131,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2168:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 132,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2180:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 133,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2185:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 134,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2194:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 129,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "2130:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2142:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "2130:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2130:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2110:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 138,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "2278:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2292:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2270:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2270:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2270:58:0"
                },
                {
                  "expression": {
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 142,
                      "name": "storedNextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2338:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 143,
                      "name": "nextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "2354:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2338:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2338:23:0"
                },
                {
                  "expression": {
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 146,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2371:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 149,
                      "indexExpression": {
                        "expression": {
                          "id": 147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2387:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2391:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2387:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2371:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 150,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "2401:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2371:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2371:36:0"
                }
              ]
            },
            "functionSelector": "2a663120",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAuthorizedMinterStepOne",
            "nameLocation": "1783:26:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "1844:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "1819:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 104,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1819:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 106,
                      "length": {
                        "hexValue": "32",
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1827:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1819:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 108,
                    "length": {
                      "hexValue": "323536",
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1830:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1819:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1884:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "1864:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 110,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1864:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 112,
                    "length": {
                      "hexValue": "323536",
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1870:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1864:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "1905:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "1897:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1930:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "1922:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1922:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1809:133:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1950:0:0"
            },
            "scope": 749,
            "src": "1774:640:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2481:40:0",
              "statements": [
                {
                  "expression": {
                    "id": 159,
                    "name": "authorizedMinter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "2498:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 158,
                  "id": 160,
                  "nodeType": "Return",
                  "src": "2491:23:0"
                }
              ]
            },
            "functionSelector": "e2eb6dab",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewAuthorizedMinter",
            "nameLocation": "2428:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2448:2:0"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2472:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2472:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2471:9:0"
            },
            "scope": 749,
            "src": "2419:102:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "2702:1335:0",
              "statements": [
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "currentPKH",
                      "nameLocation": "2729:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "2721:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 179,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2721:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 187,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 184,
                            "name": "currentpub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "2769:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          ],
                          "expression": {
                            "id": 182,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2752:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2756:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2752:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2752:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 181,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2742:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2742:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2721:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 189,
                          "name": "currentPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "2877:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 190,
                          "name": "storedNextPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2891:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2877:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a2043616e6e6f7420757365207468652073616d65206b6579636861696e20747769636520666f7220746869732066756e6374696f6e",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2906:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bdf9454beb89511004e45aedd03e7152aa0650749bcef477fb3f83f85944a00",
                          "typeString": "literal_string \"LamportBase: Cannot use the same keychain twice for this function\""
                        },
                        "value": "LamportBase: Cannot use the same keychain twice for this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bdf9454beb89511004e45aedd03e7152aa0650749bcef477fb3f83f85944a00",
                          "typeString": "literal_string \"LamportBase: Cannot use the same keychain twice for this function\""
                        }
                      ],
                      "id": 188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2869:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2869:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:105:0"
                },
                {
                  "assignments": [
                    196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "3052:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "3039:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 195,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3039:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 201,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 199,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "3081:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 197,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3064:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3068:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "3064:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3064:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3039:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 203,
                            "name": "proposedMinters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3233:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 206,
                          "indexExpression": {
                            "expression": {
                              "id": 204,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3249:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3253:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3249:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3233:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 207,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "3264:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3233:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7945524332303a204d696e7465722061646472657373206d69736d61746368",
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3272:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33a164b915b06bfe8d682ce5eb3166400dd659d2d7b8fc839105034ce2391ccd",
                          "typeString": "literal_string \"MyERC20: Minter address mismatch\""
                        },
                        "value": "MyERC20: Minter address mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33a164b915b06bfe8d682ce5eb3166400dd659d2d7b8fc839105034ce2391ccd",
                          "typeString": "literal_string \"MyERC20: Minter address mismatch\""
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3225:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3225:82:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "3225:82:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 213,
                            "name": "authorizedMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "3418:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3446:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3438:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 214,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3438:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3438:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3418:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 219,
                            "name": "authorizedMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "3452:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 220,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "3472:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3452:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3418:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7945524332303a20416e6f74686572206d696e74657220616c726561647920736574",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3480:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad111b00b3849438767c7f5800f52786c55cc1bc1e6bddddc503e87c1eff38db",
                          "typeString": "literal_string \"MyERC20: Another minter already set\""
                        },
                        "value": "MyERC20: Another minter already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad111b00b3849438767c7f5800f52786c55cc1bc1e6bddddc503e87c1eff38db",
                          "typeString": "literal_string \"MyERC20: Another minter already set\""
                        }
                      ],
                      "id": 212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3410:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3410:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3410:108:0"
                },
                {
                  "assignments": [
                    227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 227,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "3533:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "3528:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 226,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3528:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 235,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 230,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "3586:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 231,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "3598:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 232,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "3603:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 233,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "3612:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 228,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "3548:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3560:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "3548:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3528:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 237,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "3696:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3710:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3688:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:58:0"
                },
                {
                  "expression": {
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 241,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "3794:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 242,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "3813:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3794:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "3794:25:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 246,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "3915:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 245,
                      "name": "AuthorizedMinterSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "3895:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3895:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "EmitStatement",
                  "src": "3890:32:0"
                },
                {
                  "expression": {
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3996:34:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 249,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4003:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 252,
                      "indexExpression": {
                        "expression": {
                          "id": 250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4019:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4023:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4019:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4003:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "3996:34:0"
                }
              ]
            },
            "functionSelector": "e951ae23",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAuthorizedMinterStepTwo",
            "nameLocation": "2535:26:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "2596:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2571:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 163,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2571:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 165,
                      "length": {
                        "hexValue": "32",
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2579:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2571:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 167,
                    "length": {
                      "hexValue": "323536",
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2582:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2571:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "2636:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2616:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 169,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2616:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 171,
                    "length": {
                      "hexValue": "323536",
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2622:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2616:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "2657:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2649:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2649:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "2682:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2674:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2674:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2561:133:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2702:0:0"
            },
            "scope": 749,
            "src": "2526:1511:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "4198:544:0",
              "statements": [
                {
                  "assignments": [
                    272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 272,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "4277:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 307,
                      "src": "4264:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4264:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 275,
                        "name": "authorizedMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "4306:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 273,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4289:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4293:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "4289:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4289:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4264:59:0"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "4383:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 307,
                      "src": "4378:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4378:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 287,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 282,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "4436:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 283,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "4448:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 284,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "4453:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 285,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "4462:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 280,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "4398:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4410:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "4398:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4398:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4378:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 289,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "4546:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4560:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4538:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4538:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "4538:58:0"
                },
                {
                  "expression": {
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 293,
                      "name": "storedNextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "4606:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 294,
                      "name": "nextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "4622:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4606:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "4606:23:0"
                },
                {
                  "expression": {
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 297,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4695:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 300,
                      "indexExpression": {
                        "expression": {
                          "id": 298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4711:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4715:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4711:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4695:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4733:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4725:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 301,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4725:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4725:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4695:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "4695:40:0"
                }
              ]
            },
            "functionSelector": "e5f855b7",
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAuthorizedMinterStepOne",
            "nameLocation": "4052:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "4116:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "4091:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 257,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4091:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 259,
                      "length": {
                        "hexValue": "32",
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4099:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "4091:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 261,
                    "length": {
                      "hexValue": "323536",
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4102:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4091:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "4156:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "4136:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 263,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4136:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 265,
                    "length": {
                      "hexValue": "323536",
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4142:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4136:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "4177:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "4169:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4169:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4081:109:0"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4198:0:0"
            },
            "scope": 749,
            "src": "4043:699:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 401,
              "nodeType": "Block",
              "src": "4903:1188:0",
              "statements": [
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "currentPKH",
                      "nameLocation": "4922:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "4914:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 323,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4914:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 331,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 328,
                            "name": "currentpub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "4962:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          ],
                          "expression": {
                            "id": 326,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4945:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4949:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4945:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4945:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 325,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4935:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4935:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4914:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 333,
                          "name": "currentPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "5070:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 334,
                          "name": "storedNextPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "5084:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "5070:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a2043616e6e6f7420757365207468652073616d65206b6579636861696e20747769636520666f7220746869732066756e6374696f6e",
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5099:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bdf9454beb89511004e45aedd03e7152aa0650749bcef477fb3f83f85944a00",
                          "typeString": "literal_string \"LamportBase: Cannot use the same keychain twice for this function\""
                        },
                        "value": "LamportBase: Cannot use the same keychain twice for this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bdf9454beb89511004e45aedd03e7152aa0650749bcef477fb3f83f85944a00",
                          "typeString": "literal_string \"LamportBase: Cannot use the same keychain twice for this function\""
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5062:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5062:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "5062:105:0"
                },
                {
                  "assignments": [
                    340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 340,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "5247:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "5234:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 339,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5234:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 343,
                        "name": "authorizedMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "5276:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 341,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5259:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5263:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "5259:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5259:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5234:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 347,
                            "name": "proposedMinters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "5469:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 350,
                          "indexExpression": {
                            "expression": {
                              "id": 348,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5485:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5489:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5485:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5469:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5508:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5500:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 351,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5500:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5500:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5469:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a204e6f206d696e7465722072656d6f76616c2070726f706f736564",
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5512:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f83813399d7cc357b21a11c0dbe37a521ad3709a05e3244fb040e79bc0bd5d6",
                          "typeString": "literal_string \"GP_Mint: No minter removal proposed\""
                        },
                        "value": "GP_Mint: No minter removal proposed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f83813399d7cc357b21a11c0dbe37a521ad3709a05e3244fb040e79bc0bd5d6",
                          "typeString": "literal_string \"GP_Mint: No minter removal proposed\""
                        }
                      ],
                      "id": 346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5461:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5461:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "5461:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 360,
                          "name": "authorizedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "5568:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5596:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5588:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 361,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5588:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5588:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5568:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a204e6f206d696e74657220736574",
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5600:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76b64a47d62a8fc72866498900144b3b8491da9a7f93d1c8acb7d9ac5f6deaec",
                          "typeString": "literal_string \"GP_Mint: No minter set\""
                        },
                        "value": "GP_Mint: No minter set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76b64a47d62a8fc72866498900144b3b8491da9a7f93d1c8acb7d9ac5f6deaec",
                          "typeString": "literal_string \"GP_Mint: No minter set\""
                        }
                      ],
                      "id": 359,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5560:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5560:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "5560:65:0"
                },
                {
                  "assignments": [
                    370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 370,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "5640:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "5635:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 369,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5635:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 378,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 373,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "5693:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 374,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "5705:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 375,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "5710:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 376,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "5719:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 371,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5655:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5667:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "5655:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5655:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5635:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 380,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "5747:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5761:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 379,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5739:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5739:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "5739:58:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 385,
                        "name": "authorizedMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "5887:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 384,
                      "name": "AuthorizedMinterRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "5863:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5863:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 387,
                  "nodeType": "EmitStatement",
                  "src": "5858:46:0"
                },
                {
                  "expression": {
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 388,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "5971:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5998:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5990:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5990:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5990:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5971:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "5971:29:0"
                },
                {
                  "expression": {
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6050:34:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 395,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "6057:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 398,
                      "indexExpression": {
                        "expression": {
                          "id": 396,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6073:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6077:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6073:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6057:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "6050:34:0"
                }
              ]
            },
            "functionSelector": "8486e2ff",
            "id": 402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAuthorizedMinterStepTwo",
            "nameLocation": "4757:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "4821:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "4796:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 309,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4796:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 311,
                      "length": {
                        "hexValue": "32",
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4804:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "4796:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 313,
                    "length": {
                      "hexValue": "323536",
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4807:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4796:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "4861:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "4841:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 315,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4841:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 317,
                    "length": {
                      "hexValue": "323536",
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4847:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4841:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "4882:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "4874:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4874:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4786:109:0"
            },
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4903:0:0"
            },
            "scope": 749,
            "src": "4748:1343:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 422,
              "nodeType": "Block",
              "src": "6234:120:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 410,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6252:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6256:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6252:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 412,
                          "name": "authorizedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6266:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6252:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a20556e617574686f72697a6564206d696e746572",
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6284:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        },
                        "value": "GP_Mint: Unauthorized minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        }
                      ],
                      "id": 409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6244:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6244:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "6244:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 418,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "6331:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 419,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "6340:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 417,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 678,
                      "src": "6325:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6325:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "6325:22:0"
                }
              ]
            },
            "functionSelector": "f0dda65c",
            "id": 423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokens",
            "nameLocation": "6181:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6200:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "6192:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6192:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6217:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "6209:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6209:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6191:33:0"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6234:0:0"
            },
            "scope": 749,
            "src": "6172:182:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "6413:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 428,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "6430:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 427,
                  "id": 429,
                  "nodeType": "Return",
                  "src": "6423:12:0"
                }
              ]
            },
            "functionSelector": "06fdde03",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "6370:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6374:2:0"
            },
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "6398:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6398:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6397:15:0"
            },
            "scope": 749,
            "src": "6361:81:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "6502:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 436,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "6519:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 435,
                  "id": 437,
                  "nodeType": "Return",
                  "src": "6512:14:0"
                }
              ]
            },
            "functionSelector": "95d89b41",
            "id": 439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "6457:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6463:2:0"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "6487:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6487:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6486:15:0"
            },
            "scope": 749,
            "src": "6448:85:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 446,
              "nodeType": "Block",
              "src": "6587:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6604:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 443,
                  "id": 445,
                  "nodeType": "Return",
                  "src": "6597:9:0"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "6548:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6556:2:0"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "6580:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6580:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6579:7:0"
            },
            "scope": 749,
            "src": "6539:74:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "6672:36:0",
              "statements": [
                {
                  "expression": {
                    "id": 452,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "6689:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 451,
                  "id": 453,
                  "nodeType": "Return",
                  "src": "6682:19:0"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "6628:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6639:2:0"
            },
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "6663:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6663:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6662:9:0"
            },
            "scope": 749,
            "src": "6619:89:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "6780:42:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 462,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "6797:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 464,
                    "indexExpression": {
                      "id": 463,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "6807:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6797:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 461,
                  "id": 465,
                  "nodeType": "Return",
                  "src": "6790:25:0"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "6723:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6741:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "6733:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6733:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6732:17:0"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "6771:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6771:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6770:9:0"
            },
            "scope": 749,
            "src": "6714:108:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "6895:312:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 477,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "6913:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6927:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6919:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 478,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6919:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6919:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6913:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6931:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6905:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6905:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "6905:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 487,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "6987:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 490,
                          "indexExpression": {
                            "expression": {
                              "id": 488,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6997:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7001:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6997:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6987:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 491,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 471,
                          "src": "7012:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6987:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7019:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6979:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6979:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "6979:81:0"
                },
                {
                  "expression": {
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 496,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7071:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 499,
                      "indexExpression": {
                        "expression": {
                          "id": 497,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7081:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7085:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7081:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7071:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 500,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "7096:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7071:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "7071:30:0"
                },
                {
                  "expression": {
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 503,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7111:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 505,
                      "indexExpression": {
                        "id": 504,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "7121:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7111:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 506,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "7128:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7111:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "7111:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 510,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7157:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7161:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7157:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 512,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "7169:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 513,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "7173:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 509,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "7148:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7148:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "EmitStatement",
                  "src": "7143:36:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7196:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 475,
                  "id": 517,
                  "nodeType": "Return",
                  "src": "7189:11:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "6837:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 469,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6854:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "6846:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6846:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 471,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6866:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "6858:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6858:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6845:27:0"
            },
            "returnParameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "6889:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6889:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6888:6:0"
            },
            "scope": 749,
            "src": "6828:379:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "7294:51:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 528,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "7311:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 530,
                      "indexExpression": {
                        "id": 529,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "7323:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7311:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 532,
                    "indexExpression": {
                      "id": 531,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "7330:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7311:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 527,
                  "id": 533,
                  "nodeType": "Return",
                  "src": "7304:34:0"
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "7222:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7240:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "7232:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7232:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7255:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "7247:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7247:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7231:32:0"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "7285:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7285:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7284:9:0"
            },
            "scope": 749,
            "src": "7213:132:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "7422:208:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 545,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 537,
                          "src": "7440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7459:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7451:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 546,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7451:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7451:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7440:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7463:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7432:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7432:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "7432:68:0"
                },
                {
                  "expression": {
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 554,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "7511:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 558,
                        "indexExpression": {
                          "expression": {
                            "id": 555,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7523:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7527:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7523:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7511:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 559,
                      "indexExpression": {
                        "id": 557,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "7535:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7511:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 560,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 539,
                      "src": "7546:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7511:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "7511:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 564,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7575:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7579:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7575:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 566,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "7587:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 567,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 539,
                        "src": "7596:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 563,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 748,
                      "src": "7566:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7566:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "EmitStatement",
                  "src": "7561:41:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7619:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 543,
                  "id": 571,
                  "nodeType": "Return",
                  "src": "7612:11:0"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "7360:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7376:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "7368:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7368:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7393:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "7385:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7385:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7367:32:0"
            },
            "returnParameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 542,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "7416:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7416:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7415:6:0"
            },
            "scope": 749,
            "src": "7351:279:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 644,
              "nodeType": "Block",
              "src": "7721:443:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 585,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 577,
                          "src": "7739:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7753:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7745:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 586,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7745:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7745:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7739:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7757:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 584,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7731:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7731:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "7731:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 595,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 579,
                          "src": "7813:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 596,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "7822:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 598,
                          "indexExpression": {
                            "id": 597,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 575,
                            "src": "7832:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7822:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7813:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7839:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 594,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7805:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7805:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "7805:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 604,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 579,
                          "src": "7898:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 605,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "7907:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 607,
                            "indexExpression": {
                              "id": 606,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 575,
                              "src": "7919:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7907:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 610,
                          "indexExpression": {
                            "expression": {
                              "id": 608,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7925:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7929:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7925:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7907:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7898:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7938:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 603,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7890:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7890:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "7890:91:0"
                },
                {
                  "expression": {
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 615,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7992:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 617,
                      "indexExpression": {
                        "id": 616,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "8002:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7992:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 618,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 579,
                      "src": "8011:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7992:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "7992:24:0"
                },
                {
                  "expression": {
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 621,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "8026:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 623,
                      "indexExpression": {
                        "id": 622,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 577,
                        "src": "8036:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8026:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 624,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 579,
                      "src": "8043:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8026:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "8026:22:0"
                },
                {
                  "expression": {
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 627,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "8058:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 631,
                        "indexExpression": {
                          "id": 628,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "8070:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8058:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 632,
                      "indexExpression": {
                        "expression": {
                          "id": 629,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8076:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8080:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8076:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8058:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 633,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 579,
                      "src": "8091:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8058:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "8058:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 637,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "8120:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 638,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 577,
                        "src": "8126:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 639,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 579,
                        "src": "8130:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 636,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "8111:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8111:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 641,
                  "nodeType": "EmitStatement",
                  "src": "8106:30:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8153:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 583,
                  "id": 643,
                  "nodeType": "Return",
                  "src": "8146:11:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "7645:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7666:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "7658:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7658:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7680:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "7672:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7672:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7692:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "7684:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7684:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7657:41:0"
            },
            "returnParameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "7715:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7715:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7714:6:0"
            },
            "scope": 749,
            "src": "7636:528:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 677,
              "nodeType": "Block",
              "src": "8227:261:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 653,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8245:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8249:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8245:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 655,
                          "name": "authorizedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "8259:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8245:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a20556e617574686f72697a6564206d696e746572",
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8277:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        },
                        "value": "GP_Mint: Unauthorized minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        }
                      ],
                      "id": 652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8237:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8237:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "8237:71:0"
                },
                {
                  "expression": {
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 660,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "8318:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 661,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "8334:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8318:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "8318:22:0"
                },
                {
                  "expression": {
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 664,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "8350:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 666,
                      "indexExpression": {
                        "id": 665,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "8360:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8350:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 667,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "8372:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8350:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "8350:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 671,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8452:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8456:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8452:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 673,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "8464:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 674,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "8473:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 670,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 740,
                      "src": "8445:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8445:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 676,
                  "nodeType": "EmitStatement",
                  "src": "8440:40:0"
                }
              ]
            },
            "id": 678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8179:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8193:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "8185:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8185:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8210:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "8202:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8202:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8184:33:0"
            },
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8227:0:0"
            },
            "scope": 749,
            "src": "8170:318:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 723,
              "nodeType": "Block",
              "src": "8551:292:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 686,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 680,
                          "src": "8569:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8588:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8580:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 687,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8580:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8580:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8569:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8592:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 685,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8561:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8561:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "8561:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 696,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "8646:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 698,
                          "indexExpression": {
                            "id": 697,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 680,
                            "src": "8656:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8646:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 699,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 682,
                          "src": "8668:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8646:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8676:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8638:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8638:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "8638:75:0"
                },
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 704,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "8724:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 706,
                      "indexExpression": {
                        "id": 705,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "8734:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8724:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 707,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "8746:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8724:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "8724:28:0"
                },
                {
                  "expression": {
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 710,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "8762:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 711,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "8778:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8762:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "8762:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 715,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "8808:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8825:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8817:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 716,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8817:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8817:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 720,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "8829:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 714,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "8799:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8799:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "EmitStatement",
                  "src": "8794:42:0"
                }
              ]
            },
            "id": 724,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8503:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 680,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8517:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "8509:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8509:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8534:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "8526:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8526:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8508:33:0"
            },
            "returnParameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8551:0:0"
            },
            "scope": 749,
            "src": "8494:349:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 732,
            "name": "Transfer",
            "nameLocation": "8855:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 726,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8880:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "8864:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8864:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 728,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8902:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "8886:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8886:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 730,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8914:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "8906:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8906:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8863:57:0"
            },
            "src": "8849:72:0"
          },
          {
            "anonymous": false,
            "eventSelector": "9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f0",
            "id": 740,
            "name": "Minted",
            "nameLocation": "8932:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "8955:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "8939:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8939:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 736,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8979:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "8963:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8963:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 738,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8996:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "8988:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8988:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8938:65:0"
            },
            "src": "8926:78:0"
          },
          {
            "anonymous": false,
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 748,
            "name": "Approval",
            "nameLocation": "9015:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "9040:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "9024:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9024:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 744,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "9063:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "9047:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9047:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "9080:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "9072:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9072:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9023:63:0"
            },
            "src": "9009:78:0"
          }
        ],
        "scope": 750,
        "src": "468:8621:0",
        "usedErrors": [],
        "usedEvents": [
          52,
          56,
          732,
          740,
          748
        ]
      }
    ],
    "src": "32:9058:0"
  },
  "bytecode": "60806040523480156200001157600080fd5b50600080546001600160a01b03191673b3830ae69ee5962355e84f6bbac274ff337960e517905560408051808201909152600781526647504772656e7360c81b6020820152600590620000659082620002c7565b5060408051808201909152600381526247504760e81b60208201526006906200008f9082620002c7565b506200009a620000a0565b620004ed565b600780546001600160a01b03191673f3a99a9a2836a6fcfceb846161b900b3d14472361790556200010d73239fa7623354ec26520de878b52f13fe84b06971620000e8601290565b620000f89060ff16600a620004a8565b620001079062013880620004bd565b62000135565b600780546001600160a01b031916732bcffac2b9eb65c7965008aab7228e455d81454a179055565b6007546001600160a01b03163314620001945760405162461bcd60e51b815260206004820152601c60248201527f47505f4d696e743a20556e617574686f72697a6564206d696e74657200000000604482015260640160405180910390fd5b8060046000828254620001a89190620004d7565b90915550506001600160a01b03821660009081526001602052604081208054839290620001d7908490620004d7565b90915550506040518181526001600160a01b0383169033907f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200024b57607f821691505b6020821081036200026c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002c2576000816000526020600020601f850160051c810160208610156200029d5750805b601f850160051c820191505b81811015620002be57828155600101620002a9565b5050505b505050565b81516001600160401b03811115620002e357620002e362000220565b620002fb81620002f4845462000236565b8462000272565b602080601f8311600181146200033357600084156200031a5750858301515b600019600386901b1c1916600185901b178555620002be565b600085815260208120601f198616915b82811015620003645788860151825594840194600190910190840162000343565b5085821015620003835787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003ea578160001904821115620003ce57620003ce62000393565b80851615620003dc57918102915b93841c9390800290620003ae565b509250929050565b6000826200040357506001620004a2565b816200041257506000620004a2565b81600181146200042b5760028114620004365762000456565b6001915050620004a2565b60ff8411156200044a576200044a62000393565b50506001821b620004a2565b5060208310610133831016604e8410600b84101617156200047b575081810a620004a2565b620004878383620003a9565b80600019048211156200049e576200049e62000393565b0290505b92915050565b6000620004b68383620003f2565b9392505050565b8082028115828204841417620004a257620004a262000393565b80820180821115620004a257620004a262000393565b61140080620004fd6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638486e2ff11610097578063e2eb6dab11610066578063e2eb6dab1461024a578063e5f855b71461025b578063e951ae231461026e578063f0dda65c1461028157600080fd5b80638486e2ff146101e357806395d89b41146101f6578063a9059cbb146101fe578063dd62ed3e1461021157600080fd5b80632a663120116100d35780632a6631201461016b578063313ce5671461018057806356bf7b571461018f57806370a08231146101ba57600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610294565b60405161011a9190610ecd565b60405180910390f35b610136610131366004610f03565b610326565b604051901515815260200161011a565b6004545b60405190815260200161011a565b610136610166366004610f2d565b6103f4565b61017e610179366004610f8d565b6105c3565b005b6040516012815260200161011a565b6000546101a2906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61014a6101c8366004610ffa565b6001600160a01b031660009081526001602052604090205490565b61017e6101f1366004611015565b6106b9565b61010d6108fb565b61013661020c366004610f03565b61090a565b61014a61021f366004611070565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6007546001600160a01b03166101a2565b61017e610269366004611015565b6109ef565b61017e61027c366004610f8d565b610ae1565b61017e61028f366004610f03565b610d3d565b6060600580546102a3906110a3565b80601f01602080910402602001604051908101604052809291908181526020018280546102cf906110a3565b801561031c5780601f106102f15761010080835404028352916020019161031c565b820191906000526020600020905b8154815290600101906020018083116102ff57829003601f168201915b5050505050905090565b60006001600160a01b03831661038e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084015b60405180910390fd5b3360008181526002602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b60006001600160a01b03831661041c5760405162461bcd60e51b8152600401610385906110dd565b6001600160a01b0384166000908152600160205260409020548211156104545760405162461bcd60e51b815260040161038590611120565b6001600160a01b03841660009081526002602090815260408083203384529091529020548211156104d85760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610385565b6001600160a01b0384166000908152600160205260408120805484929061050090849061117c565b90915550506001600160a01b0383166000908152600160205260408120805484929061052d90849061118f565b90915550506001600160a01b03841660009081526002602090815260408083203384529091528120805484929061056590849061117c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105b191815260200190565b60405180910390a35060019392505050565b6000816040516020016105d691906111a2565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f61119061061f9089908990899088906004016111e8565b6020604051808303816000875af115801561063e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066291906112c9565b9050806106815760405162461bcd60e51b8152600401610385906112eb565b505060039190915533600090815260086020526040902080546001600160a01b0319166001600160a01b039092169190911790555050565b6000836040516020016106cc919061132c565b60405160208183030381529060405280519060200120905060035481036107055760405162461bcd60e51b815260040161038590611363565b600754604051600091610726916001600160a01b03909116906020016111a2565b60408051601f19818403018152918152336000908152600860205220549091506001600160a01b0316156107a85760405162461bcd60e51b815260206004820152602360248201527f47505f4d696e743a204e6f206d696e7465722072656d6f76616c2070726f706f6044820152621cd95960ea1b6064820152608401610385565b6007546001600160a01b03166107f95760405162461bcd60e51b815260206004820152601660248201527511d417d35a5b9d0e88139bc81b5a5b9d195c881cd95d60521b6044820152606401610385565b6000805460405163333f611160e01b81526001600160a01b039091169063333f6111906108309089908990899088906004016111e8565b6020604051808303816000875af115801561084f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087391906112c9565b9050806108925760405162461bcd60e51b8152600401610385906112eb565b6007546040516001600160a01b03909116907fc6711413797b8a562634e98c95d50e7619d39702ed5b82ce335dc93546c3a88c90600090a25050600780546001600160a01b03199081169091553360009081526008602052604090208054909116905550505050565b6060600680546102a3906110a3565b60006001600160a01b0383166109325760405162461bcd60e51b8152600401610385906110dd565b336000908152600160205260409020548211156109615760405162461bcd60e51b815260040161038590611120565b336000908152600160205260408120805484929061098090849061117c565b90915550506001600160a01b038316600090815260016020526040812080548492906109ad90849061118f565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016103e2565b600754604051600091610a10916001600160a01b03909116906020016111a2565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f611190610a599088908890889088906004016111e8565b6020604051808303816000875af1158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c91906112c9565b905080610abb5760405162461bcd60e51b8152600401610385906112eb565b5050600355505033600090815260086020526040902080546001600160a01b0319169055565b600084604051602001610af4919061132c565b6040516020818303038152906040528051906020012090506003548103610b2d5760405162461bcd60e51b815260040161038590611363565b600082604051602001610b4091906111a2565b60408051808303601f19018152918152336000908152600860205220549091506001600160a01b03848116911614610bba5760405162461bcd60e51b815260206004820181905260248201527f4d7945524332303a204d696e7465722061646472657373206d69736d617463686044820152606401610385565b6007546001600160a01b03161580610bdf57506007546001600160a01b038481169116145b610c375760405162461bcd60e51b815260206004820152602360248201527f4d7945524332303a20416e6f74686572206d696e74657220616c7265616479206044820152621cd95d60ea1b6064820152608401610385565b6000805460405163333f611160e01b81526001600160a01b039091169063333f611190610c6e908a908a908a9088906004016111e8565b6020604051808303816000875af1158015610c8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb191906112c9565b905080610cd05760405162461bcd60e51b8152600401610385906112eb565b600780546001600160a01b0319166001600160a01b0386169081179091556040517ffe7c7fcb0ae0ce6bfd0a653fa3ab6c97a51a0819e6c27cdab8a08d456338c5fa90600090a2505033600090815260086020526040902080546001600160a01b03191690555050505050565b6007546001600160a01b03163314610d975760405162461bcd60e51b815260206004820152601c60248201527f47505f4d696e743a20556e617574686f72697a6564206d696e746572000000006044820152606401610385565b610da18282610da5565b5050565b6007546001600160a01b03163314610dff5760405162461bcd60e51b815260206004820152601c60248201527f47505f4d696e743a20556e617574686f72697a6564206d696e746572000000006044820152606401610385565b8060046000828254610e11919061118f565b90915550506001600160a01b03821660009081526001602052604081208054839290610e3e90849061118f565b90915550506040518181526001600160a01b0383169033907f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050565b6000815180845260005b81811015610ead57602081850181015186830182015201610e91565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ee06020830184610e87565b9392505050565b80356001600160a01b0381168114610efe57600080fd5b919050565b60008060408385031215610f1657600080fd5b610f1f83610ee7565b946020939093013593505050565b600080600060608486031215610f4257600080fd5b610f4b84610ee7565b9250610f5960208501610ee7565b9150604084013590509250925092565b8061400081018310156103ee57600080fd5b8061200081018310156103ee57600080fd5b6000806000806140608587031215610fa457600080fd5b610fae8686610f69565b935061400085013567ffffffffffffffff811115610fcb57600080fd5b610fd787828801610f7b565b9350506140208501359150610fef6140408601610ee7565b905092959194509250565b60006020828403121561100c57600080fd5b610ee082610ee7565b6000806000614040848603121561102b57600080fd5b6110358585610f69565b925061400084013567ffffffffffffffff81111561105257600080fd5b61105e86828701610f7b565b92505061402084013590509250925092565b6000806040838503121561108357600080fd5b61108c83610ee7565b915061109a60208401610ee7565b90509250929050565b600181811c908216806110b757607f821691505b6020821081036110d757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156103ee576103ee611166565b808201808211156103ee576103ee611166565b60609190911b6bffffffffffffffffffffffff1916815260140190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006140608281018388845b610100811015611215576040808385379283019291909101906001016111f4565b50505061400084019190915261606083018660005b6101008110156112a15785830361405f190184528135368a9003601e1901811261125357600080fd5b8901602081810191359067ffffffffffffffff82111561127257600080fd5b81360383131561128157600080fd5b61128c8683856111bf565b9681019695509390930192505060010161122a565b5050856140208501528381036140408501526112bd8186610e87565b98975050505050505050565b6000602082840312156112db57600080fd5b81518015158114610ee057600080fd5b60208082526021908201527f4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c656040820152601960fa1b606082015260800190565b60008183825b61010081101561135357604080838537928301929190910190600101611332565b5050506140008201905092915050565b60208082526041908201527f4c616d706f7274426173653a2043616e6e6f7420757365207468652073616d6560408201527f206b6579636861696e20747769636520666f7220746869732066756e6374696f6060820152603760f91b608082015260a0019056fea26469706673582212207b62b7bf64f37efd01e60d7d8ee797e399935f9fa88a7e06918b61f0cd80da3764736f6c63430008180033",
  "bytecodeSha1": "f9e7c6de1888ac67e74f23f070e40073475df1fa",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.24+commit.e11b9ed9"
  },
  "contractName": "GP_Mint",
  "coverageMap": {
    "branches": {
      "0": {
        "GP_Mint._mint": {
          "67": [
            8245,
            8275,
            true
          ]
        },
        "GP_Mint.approve": {
          "50": [
            7440,
            7461,
            true
          ]
        },
        "GP_Mint.mintTokens": {
          "66": [
            6252,
            6282,
            true
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepOne": {
          "60": [
            4546,
            4558,
            true
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepTwo": {
          "55": [
            5070,
            5097,
            true
          ],
          "56": [
            5469,
            5510,
            true
          ],
          "57": [
            5747,
            5759,
            true
          ]
        },
        "GP_Mint.setAuthorizedMinterStepOne": {
          "54": [
            2278,
            2290,
            true
          ]
        },
        "GP_Mint.setAuthorizedMinterStepTwo": {
          "61": [
            2877,
            2904,
            true
          ],
          "62": [
            3233,
            3270,
            true
          ],
          "63": [
            3418,
            3448,
            true
          ],
          "64": [
            3452,
            3478,
            true
          ],
          "65": [
            3696,
            3708,
            true
          ]
        },
        "GP_Mint.transfer": {
          "58": [
            6913,
            6929,
            true
          ],
          "59": [
            6987,
            7017,
            true
          ]
        },
        "GP_Mint.transferFrom": {
          "51": [
            7739,
            7755,
            true
          ],
          "52": [
            7813,
            7837,
            true
          ],
          "53": [
            7898,
            7936,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "GP_Mint._mint": {
          "46": [
            8237,
            8308
          ],
          "47": [
            8318,
            8340
          ],
          "48": [
            8350,
            8378
          ],
          "49": [
            8440,
            8480
          ]
        },
        "GP_Mint.allowance": {
          "3": [
            7304,
            7338
          ]
        },
        "GP_Mint.approve": {
          "6": [
            7432,
            7500
          ],
          "7": [
            7511,
            7551
          ],
          "8": [
            7561,
            7602
          ],
          "9": [
            7612,
            7623
          ]
        },
        "GP_Mint.balanceOf": {
          "2": [
            6790,
            6815
          ]
        },
        "GP_Mint.decimals": {
          "1": [
            6597,
            6606
          ]
        },
        "GP_Mint.mintTokens": {
          "44": [
            6244,
            6315
          ],
          "45": [
            6325,
            6347
          ]
        },
        "GP_Mint.name": {
          "5": [
            6423,
            6435
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepOne": {
          "34": [
            4538,
            4596
          ],
          "35": [
            4606,
            4629
          ],
          "36": [
            4695,
            4735
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepTwo": {
          "21": [
            5062,
            5167
          ],
          "22": [
            5461,
            5550
          ],
          "23": [
            5560,
            5625
          ],
          "24": [
            5739,
            5797
          ],
          "25": [
            5858,
            5904
          ],
          "26": [
            5971,
            6000
          ],
          "27": [
            6050,
            6084
          ]
        },
        "GP_Mint.setAuthorizedMinterStepOne": {
          "18": [
            2270,
            2328
          ],
          "19": [
            2338,
            2361
          ],
          "20": [
            2371,
            2407
          ]
        },
        "GP_Mint.setAuthorizedMinterStepTwo": {
          "37": [
            2869,
            2974
          ],
          "38": [
            3225,
            3307
          ],
          "39": [
            3410,
            3518
          ],
          "40": [
            3688,
            3746
          ],
          "41": [
            3794,
            3819
          ],
          "42": [
            3890,
            3922
          ],
          "43": [
            3996,
            4030
          ]
        },
        "GP_Mint.symbol": {
          "28": [
            6512,
            6526
          ]
        },
        "GP_Mint.totalSupply": {
          "0": [
            6682,
            6701
          ]
        },
        "GP_Mint.transfer": {
          "29": [
            6905,
            6969
          ],
          "30": [
            6979,
            7060
          ],
          "31": [
            7071,
            7101
          ],
          "32": [
            7111,
            7133
          ],
          "33": [
            7143,
            7179
          ]
        },
        "GP_Mint.transferFrom": {
          "10": [
            7731,
            7795
          ],
          "11": [
            7805,
            7880
          ],
          "12": [
            7890,
            7981
          ],
          "13": [
            7992,
            8016
          ],
          "14": [
            8026,
            8048
          ],
          "15": [
            8058,
            8096
          ],
          "16": [
            8106,
            8136
          ],
          "17": [
            8146,
            8157
          ]
        },
        "GP_Mint.viewAuthorizedMinter": {
          "4": [
            2491,
            2514
          ]
        }
      }
    }
  },
  "dependencies": [
    "ILamportBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "468:8621:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6361:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7351:279;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:5;;1262:22;1244:41;;1232:2;1217:18;7351:279:0;1104:187:5;6619:89:0;6689:12;;6619:89;;;1442:25:5;;;1430:2;1415:18;6619:89:0;1296:177:5;7636:528:0;;;;;;:::i;:::-;;:::i;1774:640::-;;;;;;:::i;:::-;;:::i;:::-;;6539:74;;;6604:2;3005:36:5;;2993:2;2978:18;6539:74:0;2863:184:5;492:31:0;;;;;-1:-1:-1;;;;;492:31:0;;;;;;-1:-1:-1;;;;;3235:32:5;;;3217:51;;3205:2;3190:18;492:31:0;3052:222:5;6714:108:0;;;;;;:::i;:::-;-1:-1:-1;;;;;6797:18:0;6771:7;6797:18;;;:9;:18;;;;;;;6714:108;4748:1343;;;;;;:::i;:::-;;:::i;6448:85::-;;;:::i;6828:379::-;;;;;;:::i;:::-;;:::i;7213:132::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7311:18:0;;;7285:7;7311:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;7213:132;2419:102;2498:16;;-1:-1:-1;;;;;2498:16:0;2419:102;;4043:699;;;;;;:::i;:::-;;:::i;2526:1511::-;;;;;;:::i;:::-;;:::i;6172:182::-;;;;;;:::i;:::-;;:::i;6361:81::-;6398:13;6430:5;6423:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6361:81;:::o;7351:279::-;7416:4;-1:-1:-1;;;;;7440:21:0;;7432:68;;;;-1:-1:-1;;;7432:68:0;;5150:2:5;7432:68:0;;;5132:21:5;5189:2;5169:18;;;5162:30;5228:34;5208:18;;;5201:62;-1:-1:-1;;;5279:18:5;;;5272:32;5321:19;;7432:68:0;;;;;;;;;7523:10;7511:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;7511:32:0;;;;;;;;;;;;:40;;;7566:36;1442:25:5;;;7511:32:0;;7523:10;7566:36;;1415:18:5;7566:36:0;;;;;;;;-1:-1:-1;7619:4:0;7351:279;;;;;:::o;7636:528::-;7715:4;-1:-1:-1;;;;;7739:16:0;;7731:64;;;;-1:-1:-1;;;7731:64:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7822:15:0;;;;;;:9;:15;;;;;;7813:24;;;7805:75;;;;-1:-1:-1;;;7805:75:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7907:17:0;;;;;;:11;:17;;;;;;;;7925:10;7907:29;;;;;;;;7898:38;;;7890:91;;;;-1:-1:-1;;;7890:91:0;;6364:2:5;7890:91:0;;;6346:21:5;6403:2;6383:18;;;6376:30;6442:34;6422:18;;;6415:62;-1:-1:-1;;;6493:18:5;;;6486:38;6541:19;;7890:91:0;6162:404:5;7890:91:0;-1:-1:-1;;;;;7992:15:0;;;;;;:9;:15;;;;;:24;;8011:5;;7992:15;:24;;8011:5;;7992:24;:::i;:::-;;;;-1:-1:-1;;;;;;;8026:13:0;;;;;;:9;:13;;;;;:22;;8043:5;;8026:13;:22;;8043:5;;8026:22;:::i;:::-;;;;-1:-1:-1;;;;;;;8058:17:0;;;;;;:11;:17;;;;;;;;8076:10;8058:29;;;;;;;:38;;8091:5;;8058:17;:38;;8091:5;;8058:38;:::i;:::-;;;;;;;;8126:2;-1:-1:-1;;;;;8111:25:0;8120:4;-1:-1:-1;;;;;8111:25:0;;8130:5;8111:25;;;;1442::5;;1430:2;1415:18;;1296:177;8111:25:0;;;;;;;;-1:-1:-1;8153:4:0;7636:528;;;;;:::o;1774:640::-;2006:22;2048:6;2031:24;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2031:24:0;;;;;;;;;;2110:17;2130:11;;-1:-1:-1;;;2130:74:0;;2031:24;;-1:-1:-1;2110:17:0;-1:-1:-1;;;;;2130:11:0;;;;:37;;:74;;2168:10;;2180:3;;2185:7;;2031:24;;2130:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2110:94;;2278:12;2270:58;;;;-1:-1:-1;;;2270:58:0;;;;;;;:::i;:::-;-1:-1:-1;;2338:13:0;:23;;;;2387:10;2371:27;;;;:15;:27;;;;;:36;;-1:-1:-1;;;;;;2371:36:0;-1:-1:-1;;;;;2371:36:0;;;;;;;;;-1:-1:-1;;1774:640:0:o;4748:1343::-;4914:18;4962:10;4945:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;4935:39;;;;;;4914:60;;5084:13;;5070:10;:27;5062:105;;;;-1:-1:-1;;;5062:105:0;;;;;;;:::i;:::-;5276:16;;5259:34;;5234:22;;5259:34;;-1:-1:-1;;;;;5276:16:0;;;;5259:34;;;:::i;:::-;;;;-1:-1:-1;;5259:34:0;;;;;;;;;5485:10;5508:1;5469:27;;;:15;5259:34;5469:27;;;5259:34;;-1:-1:-1;;;;;;5469:27:0;:41;5461:89;;;;-1:-1:-1;;;5461:89:0;;11281:2:5;5461:89:0;;;11263:21:5;11320:2;11300:18;;;11293:30;11359:34;11339:18;;;11332:62;-1:-1:-1;;;11410:18:5;;;11403:33;11453:19;;5461:89:0;11079:399:5;5461:89:0;5568:16;;-1:-1:-1;;;;;5568:16:0;5560:65;;;;-1:-1:-1;;;5560:65:0;;11685:2:5;5560:65:0;;;11667:21:5;11724:2;11704:18;;;11697:30;-1:-1:-1;;;11743:18:5;;;11736:52;11805:18;;5560:65:0;11483:346:5;5560:65:0;5635:17;5655:11;;:74;;-1:-1:-1;;;5655:74:0;;-1:-1:-1;;;;;5655:11:0;;;;:37;;:74;;5693:10;;5705:3;;5710:7;;5719:9;;5655:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5635:94;;5747:12;5739:58;;;;-1:-1:-1;;;5739:58:0;;;;;;;:::i;:::-;5887:16;;5863:41;;-1:-1:-1;;;;;5887:16:0;;;;5863:41;;5887:16;;5863:41;-1:-1:-1;;5971:16:0;:29;;-1:-1:-1;;;;;;5971:29:0;;;;;;6073:10;5998:1;6057:27;;;:15;:27;;;;;6050:34;;;;;;;-1:-1:-1;;;;4748:1343:0:o;6448:85::-;6487:13;6519:7;6512:14;;;;;:::i;6828:379::-;6889:4;-1:-1:-1;;;;;6913:16:0;;6905:64;;;;-1:-1:-1;;;6905:64:0;;;;;;;:::i;:::-;6997:10;6987:21;;;;:9;:21;;;;;;:30;-1:-1:-1;6987:30:0;6979:81;;;;-1:-1:-1;;;6979:81:0;;;;;;;:::i;:::-;7081:10;7071:21;;;;:9;:21;;;;;:30;;7096:5;;7071:21;:30;;7096:5;;7071:30;:::i;:::-;;;;-1:-1:-1;;;;;;;7111:13:0;;;;;;:9;:13;;;;;:22;;7128:5;;7111:13;:22;;7128:5;;7111:22;:::i;:::-;;;;-1:-1:-1;;7148:31:0;;1442:25:5;;;-1:-1:-1;;;;;7148:31:0;;;7157:10;;7148:31;;1430:2:5;1415:18;7148:31:0;1296:177:5;4043:699:0;4306:16;;4289:34;;4264:22;;4289:34;;-1:-1:-1;;;;;4306:16:0;;;;4289:34;;;:::i;:::-;;;;-1:-1:-1;;4289:34:0;;;;;;;;;;4378:17;4398:11;;-1:-1:-1;;;4398:74:0;;4289:34;;-1:-1:-1;4378:17:0;-1:-1:-1;;;;;4398:11:0;;;;:37;;:74;;4436:10;;4448:3;;4453:7;;4289:34;;4398:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4378:94;;4546:12;4538:58;;;;-1:-1:-1;;;4538:58:0;;;;;;;:::i;:::-;-1:-1:-1;;4606:13:0;:23;-1:-1:-1;;4711:10:0;4733:1;4695:27;;;:15;:27;;;;;:40;;-1:-1:-1;;;;;;4695:40:0;;;4043:699::o;2526:1511::-;2721:18;2769:10;2752:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;2742:39;;;;;;2721:60;;2891:13;;2877:10;:27;2869:105;;;;-1:-1:-1;;;2869:105:0;;;;;;;:::i;:::-;3039:22;3081:6;3064:24;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;3064:24:0;;;;;;3249:10;3233:27;;;;:15;3064:24;3233:27;;;3064:24;;-1:-1:-1;;;;;;3233:37:0;;;:27;;:37;3225:82;;;;-1:-1:-1;;;3225:82:0;;12036:2:5;3225:82:0;;;12018:21:5;;;12055:18;;;12048:30;12114:34;12094:18;;;12087:62;12166:18;;3225:82:0;11834:356:5;3225:82:0;3418:16;;-1:-1:-1;;;;;3418:16:0;:30;;:60;;-1:-1:-1;3452:16:0;;-1:-1:-1;;;;;3452:26:0;;;:16;;:26;3418:60;3410:108;;;;-1:-1:-1;;;3410:108:0;;12397:2:5;3410:108:0;;;12379:21:5;12436:2;12416:18;;;12409:30;12475:34;12455:18;;;12448:62;-1:-1:-1;;;12526:18:5;;;12519:33;12569:19;;3410:108:0;12195:399:5;3410:108:0;3528:17;3548:11;;:74;;-1:-1:-1;;;3548:74:0;;-1:-1:-1;;;;;3548:11:0;;;;:37;;:74;;3586:10;;3598:3;;3603:7;;3612:9;;3548:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3528:94;;3696:12;3688:58;;;;-1:-1:-1;;;3688:58:0;;;;;;;:::i;:::-;3794:16;:25;;-1:-1:-1;;;;;;3794:25:0;-1:-1:-1;;;;;3794:25:0;;;;;;;;3895:27;;;;-1:-1:-1;;3895:27:0;-1:-1:-1;;4019:10:0;4003:27;;;;:15;:27;;;;;3996:34;;-1:-1:-1;;;;;;3996:34:0;;;-1:-1:-1;;;;;2526:1511:0:o;6172:182::-;6266:16;;-1:-1:-1;;;;;6266:16:0;6252:10;:30;6244:71;;;;-1:-1:-1;;;6244:71:0;;12801:2:5;6244:71:0;;;12783:21:5;12840:2;12820:18;;;12813:30;12879;12859:18;;;12852:58;12927:18;;6244:71:0;12599:352:5;6244:71:0;6325:22;6331:7;6340:6;6325:5;:22::i;:::-;6172:182;;:::o;8170:318::-;8259:16;;-1:-1:-1;;;;;8259:16:0;8245:10;:30;8237:71;;;;-1:-1:-1;;;8237:71:0;;12801:2:5;8237:71:0;;;12783:21:5;12840:2;12820:18;;;12813:30;12879;12859:18;;;12852:58;12927:18;;8237:71:0;12599:352:5;8237:71:0;8334:6;8318:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8350:18:0;;;;;;:9;:18;;;;;:28;;8372:6;;8350:18;:28;;8372:6;;8350:28;:::i;:::-;;;;-1:-1:-1;;8445:35:0;;1442:25:5;;;-1:-1:-1;;;;;8445:35:0;;;8452:10;;8445:35;;1430:2:5;1415:18;8445:35:0;;;;;;;8170:318;;:::o;14:423:5:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:5:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:5;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:5:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;1811:177::-;1920:6;1953:5;1941:18;;1938:27;-1:-1:-1;1935:47:5;;;1978:1;1975;1968:12;1993:168;2094:6;2127:4;2115:17;;2112:26;-1:-1:-1;2109:46:5;;;2151:1;2148;2141:12;2166:692;2342:6;2350;2358;2366;2419:5;2407:9;2398:7;2394:23;2390:35;2387:55;;;2438:1;2435;2428:12;2387:55;2461:68;2521:7;2510:9;2461:68;:::i;:::-;2451:78;;2580:5;2569:9;2565:21;2552:35;2610:18;2602:6;2599:30;2596:50;;;2642:1;2639;2632:12;2596:50;2665:73;2730:7;2721:6;2710:9;2706:22;2665:73;:::i;:::-;2655:83;;;2785:5;2774:9;2770:21;2757:35;2747:45;;2811:41;2845:5;2834:9;2830:21;2811:41;:::i;:::-;2801:51;;2166:692;;;;;;;:::o;3279:186::-;3338:6;3391:2;3379:9;3370:7;3366:23;3362:32;3359:52;;;3407:1;3404;3397:12;3359:52;3430:29;3449:9;3430:29;:::i;3470:615::-;3637:6;3645;3653;3706:5;3694:9;3685:7;3681:23;3677:35;3674:55;;;3725:1;3722;3715:12;3674:55;3748:68;3808:7;3797:9;3748:68;:::i;:::-;3738:78;;3867:5;3856:9;3852:21;3839:35;3897:18;3889:6;3886:30;3883:50;;;3929:1;3926;3919:12;3883:50;3952:73;4017:7;4008:6;3997:9;3993:22;3952:73;:::i;:::-;3942:83;;;4072:5;4061:9;4057:21;4044:35;4034:45;;3470:615;;;;;:::o;4090:260::-;4158:6;4166;4219:2;4207:9;4198:7;4194:23;4190:32;4187:52;;;4235:1;4232;4225:12;4187:52;4258:29;4277:9;4258:29;:::i;:::-;4248:39;;4306:38;4340:2;4329:9;4325:18;4306:38;:::i;:::-;4296:48;;4090:260;;;;;:::o;4563:380::-;4642:1;4638:12;;;;4685;;;4706:61;;4760:4;4752:6;4748:17;4738:27;;4706:61;4813:2;4805:6;4802:14;4782:18;4779:38;4776:161;;4859:10;4854:3;4850:20;4847:1;4840:31;4894:4;4891:1;4884:15;4922:4;4919:1;4912:15;4776:161;;4563:380;;;:::o;5351:399::-;5553:2;5535:21;;;5592:2;5572:18;;;5565:30;5631:34;5626:2;5611:18;;5604:62;-1:-1:-1;;;5697:2:5;5682:18;;5675:33;5740:3;5725:19;;5351:399::o;5755:402::-;5957:2;5939:21;;;5996:2;5976:18;;;5969:30;6035:34;6030:2;6015:18;;6008:62;-1:-1:-1;;;6101:2:5;6086:18;;6079:36;6147:3;6132:19;;5755:402::o;6571:127::-;6632:10;6627:3;6623:20;6620:1;6613:31;6663:4;6660:1;6653:15;6687:4;6684:1;6677:15;6703:128;6770:9;;;6791:11;;;6788:37;;;6805:18;;:::i;6836:125::-;6901:9;;;6922:10;;;6919:36;;;6935:18;;:::i;6966:229::-;7115:2;7111:15;;;;-1:-1:-1;;7107:53:5;7095:66;;7186:2;7177:12;;6966:229::o;7200:266::-;7288:6;7283:3;7276:19;7340:6;7333:5;7326:4;7321:3;7317:14;7304:43;-1:-1:-1;7392:1:5;7367:16;;;7385:4;7363:27;;;7356:38;;;;7448:2;7427:15;;;-1:-1:-1;;7423:29:5;7414:39;;;7410:50;;7200:266::o;7471:1875::-;7837:4;7866:5;7894:18;;;7898:9;7989:6;7837:4;8023:199;8037:6;8034:1;8031:13;8023:199;;;8096:4;8139:2;8131:6;8126:3;8113:29;8162:12;;;;8197:15;;;;;8059:1;8052:9;8023:199;;;-1:-1:-1;;;8253:5:5;8238:21;;8231:33;;;;8354:5;8339:21;;8385:6;8411:1;8421:761;8437:6;8432:3;8429:15;8421:761;;;8508:22;;;-1:-1:-1;;8504:39:5;8490:54;;8583:22;;8660:14;8656:27;;;-1:-1:-1;;8652:41:5;8628:66;;8618:94;;8708:1;8705;8698:12;8618:94;8738:31;;8838:4;8870:14;;;;8796:19;;8911:18;8900:30;;8897:50;;;8943:1;8940;8933:12;8897:50;8996:6;8980:14;8976:27;8967:7;8963:41;8960:61;;;9017:1;9014;9007:12;8960:61;9044:50;9087:6;9079;9070:7;9044:50;:::i;:::-;9158:14;;;;9034:60;-1:-1:-1;9119:17:5;;;;;-1:-1:-1;;8463:1:5;8454:11;8421:761;;;8425:3;;9221:6;9213:5;9202:9;9198:21;9191:37;9279:9;9271:6;9267:22;9259:5;9248:9;9244:21;9237:53;9307:33;9333:6;9325;9307:33;:::i;:::-;9299:41;7471:1875;-1:-1:-1;;;;;;;;7471:1875:5:o;9351:277::-;9418:6;9471:2;9459:9;9450:7;9446:23;9442:32;9439:52;;;9487:1;9484;9477:12;9439:52;9519:9;9513:16;9572:5;9565:13;9558:21;9551:5;9548:32;9538:60;;9594:1;9591;9584:12;9633:397;9835:2;9817:21;;;9874:2;9854:18;;;9847:30;9913:34;9908:2;9893:18;;9886:62;-1:-1:-1;;;9979:2:5;9964:18;;9957:31;10020:3;10005:19;;9633:397::o;10035:565::-;10246:3;10277;10324:6;10246:3;10358:205;10372:6;10369:1;10366:13;10358:205;;;10431:4;10476:2;10468:6;10461:5;10448:31;10501:14;;;;10538:15;;;;;10394:1;10387:9;10358:205;;;10362:3;;;10588:5;10583:3;10579:15;10572:22;;10035:565;;;;:::o;10605:469::-;10807:2;10789:21;;;10846:2;10826:18;;;10819:30;10885:34;10880:2;10865:18;;10858:62;10956:34;10951:2;10936:18;;10929:62;-1:-1:-1;;;11022:3:5;11007:19;;11000:32;11064:3;11049:19;;10605:469::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    468,
    9089
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8486E2FF GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE2EB6DAB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE2EB6DAB EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xE5F855B7 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xE951AE23 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8486E2FF EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A663120 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2A663120 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x56BF7B57 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1A2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1015 JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x136 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x90A JUMP JUMPDEST PUSH2 0x14A PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1015 JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH2 0x17E PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x2A3 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CF SWAP1 PUSH2 0x10A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x385 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x500 SWAP1 DUP5 SWAP1 PUSH2 0x117C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x52D SWAP1 DUP5 SWAP1 PUSH2 0x118F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x565 SWAP1 DUP5 SWAP1 PUSH2 0x117C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP5 MSTORE SWAP2 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0x61F SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x12EB JUMP JUMPDEST POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x3 SLOAD DUP2 SUB PUSH2 0x705 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x726 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 ADD PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47505F4D696E743A204E6F206D696E7465722072656D6F76616C2070726F706F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x385 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11D417D35A5B9D0E88139BC81B5A5B9D195C881CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x385 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0x830 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xC6711413797B8A562634E98C95D50E7619D39702ED5B82CE335DC93546C3A88C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x2A3 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x10DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x1120 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x980 SWAP1 DUP5 SWAP1 PUSH2 0x117C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x9AD SWAP1 DUP5 SWAP1 PUSH2 0x118F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0xA10 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 ADD PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP5 MSTORE SWAP2 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0xA59 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x12EB JUMP JUMPDEST POP POP PUSH1 0x3 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF4 SWAP2 SWAP1 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x3 SLOAD DUP2 SUB PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7945524332303A204D696E7465722061646472657373206D69736D61746368 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x385 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0xBDF JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0xC37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7945524332303A20416E6F74686572206D696E74657220616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x385 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0xC6E SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB1 SWAP2 SWAP1 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xFE7C7FCB0AE0CE6BFD0A653FA3AB6C97A51A0819E6C27CDAB8A08D456338C5FA SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x385 JUMP JUMPDEST PUSH2 0xDA1 DUP3 DUP3 PUSH2 0xDA5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x385 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE11 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xE3E SWAP1 DUP5 SWAP1 PUSH2 0x118F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH32 0x9D228D69B5FDB8D273A2336F8FB8612D039631024EA9BF09C424A9503AA078F0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEAD JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE91 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xEE0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE87 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF1F DUP4 PUSH2 0xEE7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4B DUP5 PUSH2 0xEE7 JUMP JUMPDEST SWAP3 POP PUSH2 0xF59 PUSH1 0x20 DUP6 ADD PUSH2 0xEE7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 PUSH2 0x4000 DUP2 ADD DUP4 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x2000 DUP2 ADD DUP4 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4060 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFAE DUP7 DUP7 PUSH2 0xF69 JUMP JUMPDEST SWAP4 POP PUSH2 0x4000 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD7 DUP8 DUP3 DUP9 ADD PUSH2 0xF7B JUMP JUMPDEST SWAP4 POP POP PUSH2 0x4020 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0xFEF PUSH2 0x4040 DUP7 ADD PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x100C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE0 DUP3 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4040 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x102B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1035 DUP6 DUP6 PUSH2 0xF69 JUMP JUMPDEST SWAP3 POP PUSH2 0x4000 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x105E DUP7 DUP3 DUP8 ADD PUSH2 0xF7B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x4020 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1083 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108C DUP4 PUSH2 0xEE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x109A PUSH1 0x20 DUP5 ADD PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x10B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3EE JUMPI PUSH2 0x3EE PUSH2 0x1166 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3EE JUMPI PUSH2 0x3EE PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4060 DUP3 DUP2 ADD DUP4 DUP9 DUP5 JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x1215 JUMPI PUSH1 0x40 DUP1 DUP4 DUP6 CALLDATACOPY SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11F4 JUMP JUMPDEST POP POP POP PUSH2 0x4000 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x6060 DUP4 ADD DUP7 PUSH1 0x0 JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x12A1 JUMPI DUP6 DUP4 SUB PUSH2 0x405F NOT ADD DUP5 MSTORE DUP2 CALLDATALOAD CALLDATASIZE DUP11 SWAP1 SUB PUSH1 0x1E NOT ADD DUP2 SLT PUSH2 0x1253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 ADD PUSH1 0x20 DUP2 DUP2 ADD SWAP2 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128C DUP7 DUP4 DUP6 PUSH2 0x11BF JUMP JUMPDEST SWAP7 DUP2 ADD SWAP7 SWAP6 POP SWAP4 SWAP1 SWAP4 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x122A JUMP JUMPDEST POP POP DUP6 PUSH2 0x4020 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH2 0x4040 DUP6 ADD MSTORE PUSH2 0x12BD DUP2 DUP7 PUSH2 0xE87 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A20417574686F72697A6174696F6E206661696C65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP3 JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x1353 JUMPI PUSH1 0x40 DUP1 DUP4 DUP6 CALLDATACOPY SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1332 JUMP JUMPDEST POP POP POP PUSH2 0x4000 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x41 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A2043616E6E6F7420757365207468652073616D65 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206B6579636861696E20747769636520666F7220746869732066756E6374696F PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x62B7BF64F37EFD01E60D7D8EE797E399935F9FA88A7E06918B61F0CD DUP1 0xDA CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        468,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "25": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8486E2FF"
    },
    "38": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE2EB6DAB"
    },
    "49": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE2EB6DAB"
    },
    "60": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A"
    },
    "64": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE5F855B7"
    },
    "71": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B"
    },
    "75": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE951AE23"
    },
    "82": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26E"
    },
    "86": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF0DDA65C"
    },
    "93": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x281"
    },
    "97": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8486E2FF"
    },
    "109": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E3"
    },
    "113": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "120": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6"
    },
    "124": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "131": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FE"
    },
    "135": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "142": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "146": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "150": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "REVERT",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2A663120"
    },
    "158": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "GT",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2A663120"
    },
    "169": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B"
    },
    "173": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "180": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "184": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x56BF7B57"
    },
    "191": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F"
    },
    "195": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "202": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA"
    },
    "206": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "REVERT",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "218": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105"
    },
    "222": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "229": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123"
    },
    "233": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "240": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "244": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "251": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "EQ",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "255": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "259": {
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "260": {
      "first_revert": true,
      "fn": null,
      "offset": [
        468,
        9089
      ],
      "op": "REVERT",
      "path": "0"
    },
    "261": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "262": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "265": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294"
    },
    "268": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        6361,
        6442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "269": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "270": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "272": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "273": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "276": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "277": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "278": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECD"
    },
    "281": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        6361,
        6442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "282": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "283": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "285": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "286": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "287": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "288": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "SUB",
      "path": "0"
    },
    "289": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "290": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "RETURN",
      "path": "0"
    },
    "291": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "292": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "295": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "298": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "299": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "301": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF03"
    },
    "304": {
      "fn": "GP_Mint.approve",
      "jump": "i",
      "offset": [
        7351,
        7630
      ],
      "op": "JUMP",
      "path": "0"
    },
    "305": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x326"
    },
    "309": {
      "fn": "GP_Mint.approve",
      "jump": "i",
      "offset": [
        7351,
        7630
      ],
      "op": "JUMP",
      "path": "0"
    },
    "310": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "311": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "313": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "314": {
      "op": "SWAP1"
    },
    "315": {
      "op": "ISZERO"
    },
    "316": {
      "op": "ISZERO"
    },
    "317": {
      "op": "DUP2"
    },
    "318": {
      "op": "MSTORE"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "321": {
      "op": "ADD"
    },
    "322": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "325": {
      "op": "JUMP"
    },
    "326": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6619,
        6708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "327": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6689,
        6701
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x4"
    },
    "329": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6689,
        6701
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "330": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6619,
        6708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6619,
        6708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "333": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6619,
        6708
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "334": {
      "op": "SWAP1"
    },
    "335": {
      "op": "DUP2"
    },
    "336": {
      "op": "MSTORE"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "339": {
      "op": "ADD"
    },
    "340": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6619,
        6708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "343": {
      "op": "JUMP"
    },
    "344": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "345": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "348": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166"
    },
    "351": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "352": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "354": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2D"
    },
    "357": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7636,
        8164
      ],
      "op": "JUMP",
      "path": "0"
    },
    "358": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "359": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F4"
    },
    "362": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7636,
        8164
      ],
      "op": "JUMP",
      "path": "0"
    },
    "363": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1774,
        2414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "364": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1774,
        2414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "367": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1774,
        2414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x179"
    },
    "370": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1774,
        2414
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "371": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1774,
        2414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "373": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1774,
        2414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8D"
    },
    "376": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        1774,
        2414
      ],
      "op": "JUMP",
      "path": "0"
    },
    "377": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1774,
        2414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "378": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1774,
        2414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C3"
    },
    "381": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        1774,
        2414
      ],
      "op": "JUMP",
      "path": "0"
    },
    "382": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1774,
        2414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "383": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1774,
        2414
      ],
      "op": "STOP",
      "path": "0"
    },
    "384": {
      "fn": "GP_Mint.decimals",
      "offset": [
        6539,
        6613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "385": {
      "fn": "GP_Mint.decimals",
      "offset": [
        6539,
        6613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "387": {
      "fn": "GP_Mint.decimals",
      "offset": [
        6539,
        6613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "388": {
      "fn": "GP_Mint.decimals",
      "offset": [
        6604,
        6606
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x12"
    },
    "390": {
      "op": "DUP2"
    },
    "391": {
      "op": "MSTORE"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "394": {
      "op": "ADD"
    },
    "395": {
      "fn": "GP_Mint.decimals",
      "offset": [
        6539,
        6613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "398": {
      "op": "JUMP"
    },
    "399": {
      "offset": [
        492,
        523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "400": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "402": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "403": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2"
    },
    "406": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "413": {
      "op": "SHL"
    },
    "414": {
      "op": "SUB"
    },
    "415": {
      "offset": [
        492,
        523
      ],
      "op": "AND",
      "path": "0"
    },
    "416": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "417": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "JUMP",
      "path": "0"
    },
    "418": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "419": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "421": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "428": {
      "op": "SHL"
    },
    "429": {
      "op": "SUB"
    },
    "430": {
      "op": "SWAP1"
    },
    "431": {
      "op": "SWAP2"
    },
    "432": {
      "op": "AND"
    },
    "433": {
      "op": "DUP2"
    },
    "434": {
      "op": "MSTORE"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "offset": [
        492,
        523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "441": {
      "op": "JUMP"
    },
    "442": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6714,
        6822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "443": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6714,
        6822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "446": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6714,
        6822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C8"
    },
    "449": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6714,
        6822
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "450": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6714,
        6822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "452": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6714,
        6822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFA"
    },
    "455": {
      "fn": "GP_Mint.balanceOf",
      "jump": "i",
      "offset": [
        6714,
        6822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "456": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6714,
        6822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "463": {
      "op": "SHL"
    },
    "464": {
      "op": "SUB"
    },
    "465": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6815
      ],
      "op": "AND",
      "path": "0",
      "statement": 2
    },
    "466": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6771,
        6778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "468": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "469": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6815
      ],
      "op": "DUP2",
      "path": "0"
    },
    "470": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6815
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "471": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "473": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "475": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6815
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "476": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "478": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "479": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6815
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "480": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6815
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "481": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6797,
        6815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "482": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6714,
        6822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "483": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4748,
        6091
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "484": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4748,
        6091
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "487": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4748,
        6091
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1"
    },
    "490": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4748,
        6091
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "491": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4748,
        6091
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "493": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4748,
        6091
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1015"
    },
    "496": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4748,
        6091
      ],
      "op": "JUMP",
      "path": "0"
    },
    "497": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4748,
        6091
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "498": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4748,
        6091
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B9"
    },
    "501": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4748,
        6091
      ],
      "op": "JUMP",
      "path": "0"
    },
    "502": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6448,
        6533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "503": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6448,
        6533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "506": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6448,
        6533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FB"
    },
    "509": {
      "fn": "GP_Mint.symbol",
      "jump": "i",
      "offset": [
        6448,
        6533
      ],
      "op": "JUMP",
      "path": "0"
    },
    "510": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6828,
        7207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "511": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6828,
        7207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "514": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6828,
        7207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C"
    },
    "517": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6828,
        7207
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "518": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6828,
        7207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "520": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6828,
        7207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF03"
    },
    "523": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6828,
        7207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "524": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6828,
        7207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "525": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6828,
        7207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90A"
    },
    "528": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6828,
        7207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "529": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7213,
        7345
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "530": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7213,
        7345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "533": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7213,
        7345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21F"
    },
    "536": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7213,
        7345
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "537": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7213,
        7345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "539": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7213,
        7345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1070"
    },
    "542": {
      "fn": "GP_Mint.allowance",
      "jump": "i",
      "offset": [
        7213,
        7345
      ],
      "op": "JUMP",
      "path": "0"
    },
    "543": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7213,
        7345
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "550": {
      "op": "SHL"
    },
    "551": {
      "op": "SUB"
    },
    "552": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 3
    },
    "553": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "DUP3",
      "path": "0"
    },
    "554": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "AND",
      "path": "0"
    },
    "555": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7285,
        7292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "557": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "558": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "DUP2",
      "path": "0"
    },
    "559": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "560": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "562": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "564": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "565": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "DUP2",
      "path": "0"
    },
    "566": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "567": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "569": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "DUP1",
      "path": "0"
    },
    "570": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "DUP4",
      "path": "0"
    },
    "571": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7329
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "572": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "573": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "574": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "575": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "AND",
      "path": "0"
    },
    "576": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "DUP3",
      "path": "0"
    },
    "577": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "578": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "579": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "580": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "581": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "582": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "583": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "584": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7311,
        7338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "585": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7213,
        7345
      ],
      "op": "JUMP",
      "path": "0"
    },
    "586": {
      "fn": "GP_Mint.viewAuthorizedMinter",
      "offset": [
        2419,
        2521
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "587": {
      "fn": "GP_Mint.viewAuthorizedMinter",
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x7"
    },
    "589": {
      "fn": "GP_Mint.viewAuthorizedMinter",
      "offset": [
        2498,
        2514
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "596": {
      "op": "SHL"
    },
    "597": {
      "op": "SUB"
    },
    "598": {
      "fn": "GP_Mint.viewAuthorizedMinter",
      "offset": [
        2498,
        2514
      ],
      "op": "AND",
      "path": "0"
    },
    "599": {
      "fn": "GP_Mint.viewAuthorizedMinter",
      "offset": [
        2419,
        2521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2"
    },
    "602": {
      "fn": "GP_Mint.viewAuthorizedMinter",
      "offset": [
        2419,
        2521
      ],
      "op": "JUMP",
      "path": "0"
    },
    "603": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4043,
        4742
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "604": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4043,
        4742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "607": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4043,
        4742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "610": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4043,
        4742
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "611": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4043,
        4742
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "613": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4043,
        4742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1015"
    },
    "616": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        4043,
        4742
      ],
      "op": "JUMP",
      "path": "0"
    },
    "617": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4043,
        4742
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "618": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4043,
        4742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EF"
    },
    "621": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        4043,
        4742
      ],
      "op": "JUMP",
      "path": "0"
    },
    "622": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2526,
        4037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "623": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2526,
        4037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "626": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2526,
        4037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27C"
    },
    "629": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2526,
        4037
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "630": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2526,
        4037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "632": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2526,
        4037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8D"
    },
    "635": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2526,
        4037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "636": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2526,
        4037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "637": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2526,
        4037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE1"
    },
    "640": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2526,
        4037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "641": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6172,
        6354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "642": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6172,
        6354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "645": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6172,
        6354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F"
    },
    "648": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6172,
        6354
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "649": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6172,
        6354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "651": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6172,
        6354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF03"
    },
    "654": {
      "fn": "GP_Mint.mintTokens",
      "jump": "i",
      "offset": [
        6172,
        6354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "655": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6172,
        6354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "656": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6172,
        6354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3D"
    },
    "659": {
      "fn": "GP_Mint.mintTokens",
      "jump": "i",
      "offset": [
        6172,
        6354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "660": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "661": {
      "fn": "GP_Mint.name",
      "offset": [
        6398,
        6411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "663": {
      "fn": "GP_Mint.name",
      "offset": [
        6430,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x5"
    },
    "665": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP1",
      "path": "0"
    },
    "666": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "667": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A3"
    },
    "670": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "671": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A3"
    },
    "674": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        6423,
        6435
      ],
      "op": "JUMP",
      "path": "0"
    },
    "675": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "676": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP1",
      "path": "0"
    },
    "677": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "679": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "ADD",
      "path": "0"
    },
    "680": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "682": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP1",
      "path": "0"
    },
    "683": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "684": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DIV",
      "path": "0"
    },
    "685": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "MUL",
      "path": "0"
    },
    "686": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "688": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "ADD",
      "path": "0"
    },
    "689": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "691": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "692": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "693": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP2",
      "path": "0"
    },
    "694": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "ADD",
      "path": "0"
    },
    "695": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "697": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "698": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP1",
      "path": "0"
    },
    "699": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "700": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "701": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "702": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP2",
      "path": "0"
    },
    "703": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP2",
      "path": "0"
    },
    "704": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "705": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "707": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "ADD",
      "path": "0"
    },
    "708": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP3",
      "path": "0"
    },
    "709": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP1",
      "path": "0"
    },
    "710": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "711": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF"
    },
    "714": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "715": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A3"
    },
    "718": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        6423,
        6435
      ],
      "op": "JUMP",
      "path": "0"
    },
    "719": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "720": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP1",
      "path": "0"
    },
    "721": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "722": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C"
    },
    "725": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "726": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP1",
      "path": "0"
    },
    "727": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "729": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "LT",
      "path": "0"
    },
    "730": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F1"
    },
    "733": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "734": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "737": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP1",
      "path": "0"
    },
    "738": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP4",
      "path": "0"
    },
    "739": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "740": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DIV",
      "path": "0"
    },
    "741": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "MUL",
      "path": "0"
    },
    "742": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP4",
      "path": "0"
    },
    "743": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "744": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "745": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "747": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "ADD",
      "path": "0"
    },
    "748": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "749": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C"
    },
    "752": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "JUMP",
      "path": "0"
    },
    "753": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "754": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP3",
      "path": "0"
    },
    "755": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "ADD",
      "path": "0"
    },
    "756": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "757": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "758": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "760": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "761": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "763": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "765": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "766": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "767": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP2",
      "path": "0"
    },
    "769": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "770": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP2",
      "path": "0"
    },
    "771": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "772": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "773": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "775": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "ADD",
      "path": "0"
    },
    "776": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "777": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "779": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "ADD",
      "path": "0"
    },
    "780": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP1",
      "path": "0"
    },
    "781": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP4",
      "path": "0"
    },
    "782": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "GT",
      "path": "0"
    },
    "783": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "786": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "787": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP3",
      "path": "0"
    },
    "788": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "789": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SUB",
      "path": "0"
    },
    "790": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "792": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "AND",
      "path": "0"
    },
    "793": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "DUP3",
      "path": "0"
    },
    "794": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "ADD",
      "path": "0"
    },
    "795": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "796": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "797": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "POP",
      "path": "0"
    },
    "798": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "POP",
      "path": "0"
    },
    "799": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "POP",
      "path": "0"
    },
    "800": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "POP",
      "path": "0"
    },
    "801": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "POP",
      "path": "0"
    },
    "802": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "803": {
      "fn": "GP_Mint.name",
      "offset": [
        6423,
        6435
      ],
      "op": "POP",
      "path": "0"
    },
    "804": {
      "fn": "GP_Mint.name",
      "offset": [
        6361,
        6442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "805": {
      "fn": "GP_Mint.name",
      "jump": "o",
      "offset": [
        6361,
        6442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "806": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "807": {
      "fn": "GP_Mint.approve",
      "offset": [
        7416,
        7420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "815": {
      "op": "SHL"
    },
    "816": {
      "op": "SUB"
    },
    "817": {
      "fn": "GP_Mint.approve",
      "offset": [
        7440,
        7461
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 6
    },
    "818": {
      "branch": 50,
      "fn": "GP_Mint.approve",
      "offset": [
        7440,
        7461
      ],
      "op": "AND",
      "path": "0"
    },
    "819": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38E"
    },
    "822": {
      "branch": 50,
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "823": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "825": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "830": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "832": {
      "op": "SHL"
    },
    "833": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "DUP2",
      "path": "0"
    },
    "834": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "837": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "839": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "DUP3",
      "path": "0"
    },
    "840": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "ADD",
      "path": "0"
    },
    "841": {
      "op": "MSTORE"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "846": {
      "op": "DUP3"
    },
    "847": {
      "op": "ADD"
    },
    "848": {
      "op": "MSTORE"
    },
    "849": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "884": {
      "op": "DUP3"
    },
    "885": {
      "op": "ADD"
    },
    "886": {
      "op": "MSTORE"
    },
    "887": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "890": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "892": {
      "op": "SHL"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "895": {
      "op": "DUP3"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "op": "MSTORE"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "900": {
      "op": "ADD"
    },
    "901": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "902": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "904": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "905": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "DUP1",
      "path": "0"
    },
    "906": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "907": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "SUB",
      "path": "0"
    },
    "908": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "909": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "910": {
      "fn": "GP_Mint.approve",
      "offset": [
        7432,
        7500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "911": {
      "fn": "GP_Mint.approve",
      "offset": [
        7523,
        7533
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 7
    },
    "912": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "914": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "915": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "916": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "917": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "919": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "921": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "922": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "923": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "924": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "926": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "DUP1",
      "path": "0"
    },
    "927": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "DUP4",
      "path": "0"
    },
    "928": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7534
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "op": "SUB"
    },
    "937": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "DUP9",
      "path": "0"
    },
    "938": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "AND",
      "path": "0"
    },
    "939": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "DUP1",
      "path": "0"
    },
    "940": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "DUP6",
      "path": "0"
    },
    "941": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "942": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "943": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "DUP4",
      "path": "0"
    },
    "944": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "945": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "946": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "947": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "948": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "949": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7551
      ],
      "op": "DUP7",
      "path": "0"
    },
    "950": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7551
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "951": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7551
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "952": {
      "fn": "GP_Mint.approve",
      "offset": [
        7566,
        7602
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 8
    },
    "953": {
      "op": "DUP6"
    },
    "954": {
      "op": "DUP2"
    },
    "955": {
      "op": "MSTORE"
    },
    "956": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "957": {
      "fn": "GP_Mint.approve",
      "offset": [
        7511,
        7543
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "958": {
      "fn": "GP_Mint.approve",
      "offset": [
        7523,
        7533
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "959": {
      "fn": "GP_Mint.approve",
      "offset": [
        7566,
        7602
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "992": {
      "fn": "GP_Mint.approve",
      "offset": [
        7566,
        7602
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "fn": "GP_Mint.approve",
      "offset": [
        7566,
        7602
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "995": {
      "fn": "GP_Mint.approve",
      "offset": [
        7566,
        7602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "997": {
      "fn": "GP_Mint.approve",
      "offset": [
        7566,
        7602
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "998": {
      "fn": "GP_Mint.approve",
      "offset": [
        7566,
        7602
      ],
      "op": "DUP1",
      "path": "0"
    },
    "999": {
      "fn": "GP_Mint.approve",
      "offset": [
        7566,
        7602
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1000": {
      "fn": "GP_Mint.approve",
      "offset": [
        7566,
        7602
      ],
      "op": "SUB",
      "path": "0"
    },
    "1001": {
      "fn": "GP_Mint.approve",
      "offset": [
        7566,
        7602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1002": {
      "fn": "GP_Mint.approve",
      "offset": [
        7566,
        7602
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "fn": "GP_Mint.approve",
      "offset": [
        7619,
        7623
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x1"
    },
    "1006": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1007": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1008": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1009": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "POP",
      "path": "0"
    },
    "1010": {
      "fn": "GP_Mint.approve",
      "offset": [
        7351,
        7630
      ],
      "op": "POP",
      "path": "0"
    },
    "1011": {
      "fn": "GP_Mint.approve",
      "jump": "o",
      "offset": [
        7351,
        7630
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1012": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1013": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7715,
        7719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1021": {
      "op": "SHL"
    },
    "1022": {
      "op": "SUB"
    },
    "1023": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7739,
        7755
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 10
    },
    "1024": {
      "branch": 51,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7739,
        7755
      ],
      "op": "AND",
      "path": "0"
    },
    "1025": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41C"
    },
    "1028": {
      "branch": 51,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1029": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1031": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1040": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1041": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1043": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "ADD",
      "path": "0"
    },
    "1044": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1047": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1048": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DD"
    },
    "1051": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7731,
        7795
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1052": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7731,
        7795
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1059": {
      "op": "SHL"
    },
    "1060": {
      "op": "SUB"
    },
    "1061": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 11
    },
    "1062": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "AND",
      "path": "0"
    },
    "1063": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1065": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1066": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1067": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1068": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1070": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1072": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1073": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1075": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1076": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1077": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7822,
        7837
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1078": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1079": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "GT",
      "path": "0"
    },
    "1080": {
      "branch": 52,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1081": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x454"
    },
    "1084": {
      "branch": 52,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1085": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1087": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1088": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1096": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1097": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1099": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "ADD",
      "path": "0"
    },
    "1100": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1103": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1104": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1120"
    },
    "1107": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7805,
        7880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1108": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7805,
        7880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "op": "SUB"
    },
    "1117": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 12
    },
    "1118": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "AND",
      "path": "0"
    },
    "1119": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1121": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1122": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1123": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1124": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1126": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1128": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1129": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1130": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1131": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1133": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1134": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1135": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7924
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1136": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7925,
        7935
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1137": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7936
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1138": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7936
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1139": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7936
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1140": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7936
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1141": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7936
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1142": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7936
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1143": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7936
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1144": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7907,
        7936
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1145": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7898,
        7936
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1146": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7898,
        7936
      ],
      "op": "GT",
      "path": "0"
    },
    "1147": {
      "branch": 53,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7898,
        7936
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1148": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7890,
        7981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D8"
    },
    "1151": {
      "branch": 53,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7890,
        7981
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1152": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7890,
        7981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1154": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7890,
        7981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1161": {
      "op": "SHL"
    },
    "1162": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7890,
        7981
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1163": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7890,
        7981
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1166": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7890,
        7981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1168": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7890,
        7981
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1169": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7890,
        7981
      ],
      "op": "ADD",
      "path": "0"
    },
    "1170": {
      "op": "MSTORE"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1175": {
      "op": "DUP3"
    },
    "1176": {
      "op": "ADD"
    },
    "1177": {
      "op": "MSTORE"
    },
    "1178": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1213": {
      "op": "DUP3"
    },
    "1214": {
      "op": "ADD"
    },
    "1215": {
      "op": "MSTORE"
    },
    "1216": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1227": {
      "op": "SHL"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1230": {
      "op": "DUP3"
    },
    "1231": {
      "op": "ADD"
    },
    "1232": {
      "op": "MSTORE"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1235": {
      "op": "ADD"
    },
    "1236": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7890,
        7981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1239": {
      "op": "JUMP"
    },
    "1240": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7890,
        7981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1247": {
      "op": "SHL"
    },
    "1248": {
      "op": "SUB"
    },
    "1249": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 13
    },
    "1250": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "AND",
      "path": "0"
    },
    "1251": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1253": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1254": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1255": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1256": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1258": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1260": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1261": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1263": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1264": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1265": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1266": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8016
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1267": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8011,
        8016
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1268": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8011,
        8016
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1269": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1270": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x500"
    },
    "1273": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1274": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8011,
        8016
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1275": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8011,
        8016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1276": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117C"
    },
    "1279": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7992,
        8016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1280": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1281": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1282": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8016
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1283": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7992,
        8016
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1284": {
      "op": "POP"
    },
    "1285": {
      "op": "POP"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1292": {
      "op": "SHL"
    },
    "1293": {
      "op": "SUB"
    },
    "1294": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 14
    },
    "1295": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "AND",
      "path": "0"
    },
    "1296": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1298": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1299": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1300": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1301": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1303": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1305": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1306": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1308": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1309": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1310": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8048
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1311": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8048
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1312": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8043,
        8048
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1313": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8043,
        8048
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1314": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8039
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1315": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52D"
    },
    "1318": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1319": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8043,
        8048
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1320": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8043,
        8048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1321": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118F"
    },
    "1324": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        8026,
        8048
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1325": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8048
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1326": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1327": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8048
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1328": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8026,
        8048
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "op": "POP"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1337": {
      "op": "SHL"
    },
    "1338": {
      "op": "SUB"
    },
    "1339": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 15
    },
    "1340": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "AND",
      "path": "0"
    },
    "1341": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1343": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1344": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1345": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1346": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1348": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1350": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1351": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1352": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1353": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1355": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1356": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1357": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1358": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8076,
        8086
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1359": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8087
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1360": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8087
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1361": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1362": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8087
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1363": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8087
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1364": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1365": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8087
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1366": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1367": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1368": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8091,
        8096
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1369": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8091,
        8096
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1370": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8075
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1371": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x565"
    },
    "1374": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1375": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8091,
        8096
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1376": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8091,
        8096
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1377": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117C"
    },
    "1380": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        8058,
        8096
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1381": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1382": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1383": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "POP",
      "path": "0"
    },
    "1384": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "POP",
      "path": "0"
    },
    "1385": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1386": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1387": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1388": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8058,
        8096
      ],
      "op": "POP",
      "path": "0"
    },
    "1389": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8126,
        8128
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 16
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1396": {
      "op": "SHL"
    },
    "1397": {
      "op": "SUB"
    },
    "1398": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "AND",
      "path": "0"
    },
    "1399": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8120,
        8124
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "op": "SUB"
    },
    "1408": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "AND",
      "path": "0"
    },
    "1409": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1442": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8130,
        8135
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1443": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1445": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1446": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B1"
    },
    "1449": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1450": {
      "op": "DUP2"
    },
    "1451": {
      "op": "MSTORE"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1454": {
      "op": "ADD"
    },
    "1455": {
      "op": "SWAP1"
    },
    "1456": {
      "op": "JUMP"
    },
    "1457": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1458": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1460": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1461": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1462": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1463": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "SUB",
      "path": "0"
    },
    "1464": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1465": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8111,
        8136
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1466": {
      "op": "POP"
    },
    "1467": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        8153,
        8157
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x1"
    },
    "1469": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1470": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1471": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "POP",
      "path": "0"
    },
    "1472": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "POP",
      "path": "0"
    },
    "1473": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7636,
        8164
      ],
      "op": "POP",
      "path": "0"
    },
    "1474": {
      "fn": "GP_Mint.transferFrom",
      "jump": "o",
      "offset": [
        7636,
        8164
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1475": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1774,
        2414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1476": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2006,
        2028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1478": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2048,
        2054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1479": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1481": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1482": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1484": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "ADD",
      "path": "0"
    },
    "1485": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D6"
    },
    "1488": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1489": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1490": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A2"
    },
    "1493": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        2031,
        2055
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1494": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1495": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1497": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1498": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1501": {
      "op": "NOT"
    },
    "1502": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1503": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1504": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "SUB",
      "path": "0"
    },
    "1505": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "ADD",
      "path": "0"
    },
    "1506": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1507": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1508": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1509": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1510": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1511": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1512": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2110,
        2127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1514": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2141
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1515": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2141
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1516": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1523": {
      "op": "SHL"
    },
    "1524": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1525": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1526": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1527": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1528": {
      "op": "POP"
    },
    "1529": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2110,
        2127
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1536": {
      "op": "SHL"
    },
    "1537": {
      "op": "SUB"
    },
    "1538": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2141
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1539": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2141
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1540": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2141
      ],
      "op": "AND",
      "path": "0"
    },
    "1541": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2141
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1542": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2167
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "1547": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1548": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61F"
    },
    "1551": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1552": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2168,
        2178
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1553": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2168,
        2178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1554": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2180,
        2183
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1555": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2180,
        2183
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1556": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2185,
        2192
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1557": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2185,
        2192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1558": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1559": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2031,
        2055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1560": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1562": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "ADD",
      "path": "0"
    },
    "1563": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E8"
    },
    "1566": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        2130,
        2204
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1567": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1568": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1570": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1572": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1573": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1574": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1575": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "SUB",
      "path": "0"
    },
    "1576": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1577": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1579": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1580": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "GAS",
      "path": "0"
    },
    "1581": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "CALL",
      "path": "0"
    },
    "1582": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1583": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1584": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1585": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63E"
    },
    "1588": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1589": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1590": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1592": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1593": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1594": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1595": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1597": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1598": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1599": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "POP",
      "path": "0"
    },
    "1600": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "POP",
      "path": "0"
    },
    "1601": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "POP",
      "path": "0"
    },
    "1602": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "POP",
      "path": "0"
    },
    "1603": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1605": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1606": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1607": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1609": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "NOT",
      "path": "0"
    },
    "1610": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1612": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1613": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "ADD",
      "path": "0"
    },
    "1614": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "AND",
      "path": "0"
    },
    "1615": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1616": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "ADD",
      "path": "0"
    },
    "1617": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1618": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1620": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1621": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "POP",
      "path": "0"
    },
    "1622": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1623": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "ADD",
      "path": "0"
    },
    "1624": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1625": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x662"
    },
    "1628": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1629": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1630": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C9"
    },
    "1633": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        2130,
        2204
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1634": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2130,
        2204
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1635": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2110,
        2204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1636": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2110,
        2204
      ],
      "op": "POP",
      "path": "0"
    },
    "1637": {
      "branch": 54,
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2278,
        2290
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 18
    },
    "1638": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x681"
    },
    "1641": {
      "branch": 54,
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1642": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1644": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1645": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1651": {
      "op": "SHL"
    },
    "1652": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1653": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1654": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1656": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "ADD",
      "path": "0"
    },
    "1657": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1660": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1661": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12EB"
    },
    "1664": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        2270,
        2328
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1665": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2270,
        2328
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1666": {
      "op": "POP"
    },
    "1667": {
      "op": "POP"
    },
    "1668": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2338,
        2351
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x3"
    },
    "1670": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2338,
        2361
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1671": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2338,
        2361
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1672": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2338,
        2361
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1673": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2338,
        2361
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1674": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2387,
        2397
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 20
    },
    "1675": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1677": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1678": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2398
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1679": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2398
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1680": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1682": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1684": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2398
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1685": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1687": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1688": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2398
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1689": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1690": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1697": {
      "op": "SHL"
    },
    "1698": {
      "op": "SUB"
    },
    "1699": {
      "op": "NOT"
    },
    "1700": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "AND",
      "path": "0"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1707": {
      "op": "SHL"
    },
    "1708": {
      "op": "SUB"
    },
    "1709": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1710": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1711": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "AND",
      "path": "0"
    },
    "1712": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1713": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1714": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1715": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "OR",
      "path": "0"
    },
    "1716": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1717": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2371,
        2407
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1718": {
      "op": "POP"
    },
    "1719": {
      "op": "POP"
    },
    "1720": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "o",
      "offset": [
        1774,
        2414
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1721": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4748,
        6091
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1722": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4914,
        4932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1724": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4962,
        4972
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1725": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1727": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1728": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1730": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "ADD",
      "path": "0"
    },
    "1731": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CC"
    },
    "1734": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1735": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1736": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132C"
    },
    "1739": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4945,
        4973
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1740": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1741": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1743": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1744": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1746": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1747": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1748": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "SUB",
      "path": "0"
    },
    "1749": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "SUB",
      "path": "0"
    },
    "1750": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1751": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1752": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1753": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1755": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4945,
        4973
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1756": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4935,
        4974
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1757": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4935,
        4974
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1758": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4935,
        4974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1759": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4935,
        4974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1761": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4935,
        4974
      ],
      "op": "ADD",
      "path": "0"
    },
    "1762": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4935,
        4974
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1763": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4914,
        4974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1764": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4914,
        4974
      ],
      "op": "POP",
      "path": "0"
    },
    "1765": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5084,
        5097
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x3"
    },
    "1767": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5084,
        5097
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1768": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5070,
        5080
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1769": {
      "branch": 55,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5070,
        5097
      ],
      "op": "SUB",
      "path": "0"
    },
    "1770": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x705"
    },
    "1773": {
      "branch": 55,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1774": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1776": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1777": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1783": {
      "op": "SHL"
    },
    "1784": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1785": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1786": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1788": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "ADD",
      "path": "0"
    },
    "1789": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1792": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1793": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1363"
    },
    "1796": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        5062,
        5167
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1797": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5062,
        5167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1798": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5276,
        5292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1800": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5276,
        5292
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1801": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1803": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1804": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5234,
        5256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1806": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5234,
        5256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1807": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x726"
    },
    "1810": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1817": {
      "op": "SHL"
    },
    "1818": {
      "op": "SUB"
    },
    "1819": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5276,
        5292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1820": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5276,
        5292
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1821": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5276,
        5292
      ],
      "op": "AND",
      "path": "0"
    },
    "1822": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5276,
        5292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1823": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1825": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "ADD",
      "path": "0"
    },
    "1826": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A2"
    },
    "1829": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        5259,
        5293
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1830": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1831": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1833": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1834": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1837": {
      "op": "NOT"
    },
    "1838": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1839": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1840": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "SUB",
      "path": "0"
    },
    "1841": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "ADD",
      "path": "0"
    },
    "1842": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1843": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1844": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1845": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1846": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1847": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5485,
        5495
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 22
    },
    "1848": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5508,
        5509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1850": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5469,
        5496
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1851": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5469,
        5496
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1852": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5469,
        5496
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1853": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5469,
        5484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1855": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1857": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5469,
        5496
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1858": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5469,
        5496
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1859": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5469,
        5496
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1860": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1861": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5259,
        5293
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1869": {
      "op": "SHL"
    },
    "1870": {
      "op": "SUB"
    },
    "1871": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5469,
        5496
      ],
      "op": "AND",
      "path": "0"
    },
    "1872": {
      "branch": 56,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5469,
        5510
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1873": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5461,
        5550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A8"
    },
    "1876": {
      "branch": 56,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5461,
        5550
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1877": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5461,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1879": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5461,
        5550
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1880": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1886": {
      "op": "SHL"
    },
    "1887": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5461,
        5550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1888": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5461,
        5550
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1891": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5461,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1893": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5461,
        5550
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1894": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5461,
        5550
      ],
      "op": "ADD",
      "path": "0"
    },
    "1895": {
      "op": "MSTORE"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1900": {
      "op": "DUP3"
    },
    "1901": {
      "op": "ADD"
    },
    "1902": {
      "op": "MSTORE"
    },
    "1903": {
      "op": "PUSH32",
      "value": "0x47505F4D696E743A204E6F206D696E7465722072656D6F76616C2070726F706F"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1938": {
      "op": "DUP3"
    },
    "1939": {
      "op": "ADD"
    },
    "1940": {
      "op": "MSTORE"
    },
    "1941": {
      "op": "PUSH3",
      "value": "0x1CD959"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "1947": {
      "op": "SHL"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1950": {
      "op": "DUP3"
    },
    "1951": {
      "op": "ADD"
    },
    "1952": {
      "op": "MSTORE"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1955": {
      "op": "ADD"
    },
    "1956": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5461,
        5550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1959": {
      "op": "JUMP"
    },
    "1960": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5461,
        5550
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1961": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5568,
        5584
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x7"
    },
    "1963": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5568,
        5584
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "op": "SUB"
    },
    "1972": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5568,
        5584
      ],
      "op": "AND",
      "path": "0"
    },
    "1973": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5625
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F9"
    },
    "1976": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5625
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1977": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1979": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5625
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1986": {
      "op": "SHL"
    },
    "1987": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5625
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1988": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5625
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1991": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1993": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5625
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1994": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5625
      ],
      "op": "ADD",
      "path": "0"
    },
    "1995": {
      "op": "MSTORE"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2000": {
      "op": "DUP3"
    },
    "2001": {
      "op": "ADD"
    },
    "2002": {
      "op": "MSTORE"
    },
    "2003": {
      "op": "PUSH22",
      "value": "0x11D417D35A5B9D0E88139BC81B5A5B9D195C881CD95D"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "2028": {
      "op": "SHL"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2031": {
      "op": "DUP3"
    },
    "2032": {
      "op": "ADD"
    },
    "2033": {
      "op": "MSTORE"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5625
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "2040": {
      "op": "JUMP"
    },
    "2041": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5625
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2042": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5635,
        5652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2044": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5666
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2045": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5666
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2046": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2048": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2049": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2056": {
      "op": "SHL"
    },
    "2057": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2058": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2065": {
      "op": "SHL"
    },
    "2066": {
      "op": "SUB"
    },
    "2067": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2068": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5666
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2069": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5666
      ],
      "op": "AND",
      "path": "0"
    },
    "2070": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2071": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5692
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "2076": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2077": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x830"
    },
    "2080": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2081": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5693,
        5703
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2082": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5693,
        5703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2083": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5705,
        5708
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2084": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5705,
        5708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2085": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5710,
        5717
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2086": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5710,
        5717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2087": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5719,
        5728
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2088": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5719,
        5728
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2089": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2091": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "ADD",
      "path": "0"
    },
    "2092": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E8"
    },
    "2095": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        5655,
        5729
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2096": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2097": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2099": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2101": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2102": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2103": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2104": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "SUB",
      "path": "0"
    },
    "2105": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2106": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2108": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2109": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "GAS",
      "path": "0"
    },
    "2110": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "CALL",
      "path": "0"
    },
    "2111": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2112": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2113": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2114": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84F"
    },
    "2117": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2118": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2119": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2121": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2122": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2123": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2124": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2126": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2127": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2128": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "POP",
      "path": "0"
    },
    "2129": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "POP",
      "path": "0"
    },
    "2130": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "POP",
      "path": "0"
    },
    "2131": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "POP",
      "path": "0"
    },
    "2132": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2134": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2135": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2136": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2138": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "NOT",
      "path": "0"
    },
    "2139": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2141": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2142": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "ADD",
      "path": "0"
    },
    "2143": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "AND",
      "path": "0"
    },
    "2144": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2145": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "ADD",
      "path": "0"
    },
    "2146": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2147": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2149": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2150": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "POP",
      "path": "0"
    },
    "2151": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2152": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "ADD",
      "path": "0"
    },
    "2153": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2154": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x873"
    },
    "2157": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2158": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2159": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C9"
    },
    "2162": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        5655,
        5729
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2163": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5655,
        5729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2164": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5635,
        5729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2165": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5635,
        5729
      ],
      "op": "POP",
      "path": "0"
    },
    "2166": {
      "branch": 57,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5747,
        5759
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 24
    },
    "2167": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x892"
    },
    "2170": {
      "branch": 57,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2171": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2173": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2180": {
      "op": "SHL"
    },
    "2181": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2182": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2183": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2185": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "ADD",
      "path": "0"
    },
    "2186": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "2189": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2190": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12EB"
    },
    "2193": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        5739,
        5797
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2194": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5739,
        5797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2195": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5887,
        5903
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x7"
    },
    "2197": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5887,
        5903
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2198": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5863,
        5904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2200": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5863,
        5904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2207": {
      "op": "SHL"
    },
    "2208": {
      "op": "SUB"
    },
    "2209": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5887,
        5903
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2210": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5887,
        5903
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2211": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5887,
        5903
      ],
      "op": "AND",
      "path": "0"
    },
    "2212": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5887,
        5903
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2213": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5863,
        5904
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC6711413797B8A562634E98C95D50E7619D39702ED5B82CE335DC93546C3A88C"
    },
    "2246": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5863,
        5904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2247": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5887,
        5903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2249": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5887,
        5903
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2250": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5863,
        5904
      ],
      "op": "LOG2",
      "path": "0"
    },
    "2251": {
      "op": "POP"
    },
    "2252": {
      "op": "POP"
    },
    "2253": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5971,
        5987
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x7"
    },
    "2255": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5971,
        6000
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2256": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5971,
        6000
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2263": {
      "op": "SHL"
    },
    "2264": {
      "op": "SUB"
    },
    "2265": {
      "op": "NOT"
    },
    "2266": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5971,
        6000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2267": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5971,
        6000
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2268": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5971,
        6000
      ],
      "op": "AND",
      "path": "0"
    },
    "2269": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5971,
        6000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2270": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5971,
        6000
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2271": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5971,
        6000
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2272": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6073,
        6083
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 27
    },
    "2273": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5998,
        5999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2275": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6057,
        6084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2276": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6057,
        6084
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2277": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6057,
        6084
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2278": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6057,
        6072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2280": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6057,
        6084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2282": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6057,
        6084
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2283": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6057,
        6084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2285": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6057,
        6084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2286": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6057,
        6084
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2287": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6050,
        6084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2288": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6050,
        6084
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2289": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6050,
        6084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2290": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6050,
        6084
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2291": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6050,
        6084
      ],
      "op": "AND",
      "path": "0"
    },
    "2292": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6050,
        6084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2293": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        6050,
        6084
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2294": {
      "op": "POP"
    },
    "2295": {
      "op": "POP"
    },
    "2296": {
      "op": "POP"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "o",
      "offset": [
        4748,
        6091
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2299": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6448,
        6533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2300": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6487,
        6500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2302": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6519,
        6526
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x6"
    },
    "2304": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6512,
        6526
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2305": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6512,
        6526
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2306": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6512,
        6526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A3"
    },
    "2309": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6512,
        6526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2310": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6512,
        6526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A3"
    },
    "2313": {
      "fn": "GP_Mint.symbol",
      "jump": "i",
      "offset": [
        6512,
        6526
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2314": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6828,
        7207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2315": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6889,
        6893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "op": "SUB"
    },
    "2325": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6913,
        6929
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 29
    },
    "2326": {
      "branch": 58,
      "fn": "GP_Mint.transfer",
      "offset": [
        6913,
        6929
      ],
      "op": "AND",
      "path": "0"
    },
    "2327": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x932"
    },
    "2330": {
      "branch": 58,
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2331": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2333": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2340": {
      "op": "SHL"
    },
    "2341": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2342": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2343": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2345": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "ADD",
      "path": "0"
    },
    "2346": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "2349": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2350": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DD"
    },
    "2353": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6905,
        6969
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2354": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6905,
        6969
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2355": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6997,
        7007
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 30
    },
    "2356": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2358": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7008
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2359": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7008
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2360": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7008
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2361": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        6996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2363": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2365": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7008
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2366": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2368": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7008
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2369": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7008
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2370": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7008
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2371": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7017
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2372": {
      "op": "GT"
    },
    "2373": {
      "branch": 59,
      "fn": "GP_Mint.transfer",
      "offset": [
        6987,
        7017
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2374": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x961"
    },
    "2377": {
      "branch": 59,
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2378": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2380": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2381": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2387": {
      "op": "SHL"
    },
    "2388": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2389": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2390": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2392": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "ADD",
      "path": "0"
    },
    "2393": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "2396": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2397": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1120"
    },
    "2400": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6979,
        7060
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2401": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6979,
        7060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2402": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7081,
        7091
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 31
    },
    "2403": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2405": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2406": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7092
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2407": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7092
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2408": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2410": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2412": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7092
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2413": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2415": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7092
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2416": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7092
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2417": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2418": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7101
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2419": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7096,
        7101
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2420": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7096,
        7101
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2421": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2422": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x980"
    },
    "2425": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7101
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2426": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7096,
        7101
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2427": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7096,
        7101
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2428": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117C"
    },
    "2431": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        7071,
        7101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2432": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2433": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7101
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2434": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7101
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2435": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7071,
        7101
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2436": {
      "op": "POP"
    },
    "2437": {
      "op": "POP"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2444": {
      "op": "SHL"
    },
    "2445": {
      "op": "SUB"
    },
    "2446": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 32
    },
    "2447": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "AND",
      "path": "0"
    },
    "2448": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2450": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2451": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2452": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2453": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2455": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2457": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2458": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2460": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2461": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2462": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2463": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7133
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2464": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7128,
        7133
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2465": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7128,
        7133
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2466": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2467": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9AD"
    },
    "2470": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2471": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7128,
        7133
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2472": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7128,
        7133
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2473": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118F"
    },
    "2476": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2477": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2478": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2479": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2480": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7111,
        7133
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2481": {
      "op": "POP"
    },
    "2482": {
      "op": "POP"
    },
    "2483": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7148,
        7179
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x40"
    },
    "2485": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7148,
        7179
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2486": {
      "op": "DUP3"
    },
    "2487": {
      "op": "DUP2"
    },
    "2488": {
      "op": "MSTORE"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2495": {
      "op": "SHL"
    },
    "2496": {
      "op": "SUB"
    },
    "2497": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7148,
        7179
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2498": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7148,
        7179
      ],
      "op": "AND",
      "path": "0"
    },
    "2499": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7148,
        7179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2500": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7157,
        7167
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2501": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7157,
        7167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2502": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7148,
        7179
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2535": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7148,
        7179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2538": {
      "op": "ADD"
    },
    "2539": {
      "fn": "GP_Mint.transfer",
      "offset": [
        7148,
        7179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E2"
    },
    "2542": {
      "op": "JUMP"
    },
    "2543": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4043,
        4742
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2544": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4306,
        4322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2546": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4306,
        4322
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2547": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2549": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2550": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4264,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2552": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4264,
        4286
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2553": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA10"
    },
    "2556": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2563": {
      "op": "SHL"
    },
    "2564": {
      "op": "SUB"
    },
    "2565": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4306,
        4322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2566": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4306,
        4322
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2567": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4306,
        4322
      ],
      "op": "AND",
      "path": "0"
    },
    "2568": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4306,
        4322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2569": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2571": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "ADD",
      "path": "0"
    },
    "2572": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A2"
    },
    "2575": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        4289,
        4323
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2576": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2577": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2579": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2580": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2583": {
      "op": "NOT"
    },
    "2584": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2585": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2586": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "SUB",
      "path": "0"
    },
    "2587": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "ADD",
      "path": "0"
    },
    "2588": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2589": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2590": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2591": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2592": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2593": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2594": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4378,
        4395
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2596": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4409
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2597": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4409
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2598": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2605": {
      "op": "SHL"
    },
    "2606": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2607": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2608": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2609": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2610": {
      "op": "POP"
    },
    "2611": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4378,
        4395
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2618": {
      "op": "SHL"
    },
    "2619": {
      "op": "SUB"
    },
    "2620": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4409
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2621": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4409
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2622": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4409
      ],
      "op": "AND",
      "path": "0"
    },
    "2623": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4409
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2624": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4435
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "2629": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2630": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA59"
    },
    "2633": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2634": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4436,
        4446
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2635": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4436,
        4446
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2636": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4448,
        4451
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2637": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4448,
        4451
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2638": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4453,
        4460
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2639": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4453,
        4460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2640": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2641": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4289,
        4323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2642": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2644": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "ADD",
      "path": "0"
    },
    "2645": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E8"
    },
    "2648": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        4398,
        4472
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2649": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2650": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2652": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2654": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2655": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2656": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2657": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "SUB",
      "path": "0"
    },
    "2658": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2659": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2661": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2662": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "GAS",
      "path": "0"
    },
    "2663": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "CALL",
      "path": "0"
    },
    "2664": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2665": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2666": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2667": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA78"
    },
    "2670": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2671": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2672": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2674": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2675": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2676": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2677": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2679": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2680": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2681": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "POP",
      "path": "0"
    },
    "2682": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "POP",
      "path": "0"
    },
    "2683": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "POP",
      "path": "0"
    },
    "2684": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "POP",
      "path": "0"
    },
    "2685": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2687": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2688": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2689": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2691": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "NOT",
      "path": "0"
    },
    "2692": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2694": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2695": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "ADD",
      "path": "0"
    },
    "2696": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "AND",
      "path": "0"
    },
    "2697": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2698": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "ADD",
      "path": "0"
    },
    "2699": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2700": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2702": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2703": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "POP",
      "path": "0"
    },
    "2704": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2705": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "ADD",
      "path": "0"
    },
    "2706": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2707": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9C"
    },
    "2710": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2711": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2712": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C9"
    },
    "2715": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        4398,
        4472
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2716": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4398,
        4472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2717": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4378,
        4472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2718": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4378,
        4472
      ],
      "op": "POP",
      "path": "0"
    },
    "2719": {
      "branch": 60,
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4546,
        4558
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 34
    },
    "2720": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABB"
    },
    "2723": {
      "branch": 60,
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2724": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2726": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2727": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2733": {
      "op": "SHL"
    },
    "2734": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2735": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2736": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2738": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "ADD",
      "path": "0"
    },
    "2739": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "2742": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2743": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12EB"
    },
    "2746": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        4538,
        4596
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2747": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4538,
        4596
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2748": {
      "op": "POP"
    },
    "2749": {
      "op": "POP"
    },
    "2750": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4606,
        4619
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x3"
    },
    "2752": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4606,
        4629
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2753": {
      "op": "POP"
    },
    "2754": {
      "op": "POP"
    },
    "2755": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4711,
        4721
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 36
    },
    "2756": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4733,
        4734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2758": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4722
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2759": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4722
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2760": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4722
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2761": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2763": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2765": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4722
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2766": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2768": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4722
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2769": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4722
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2770": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2771": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2778": {
      "op": "SHL"
    },
    "2779": {
      "op": "SUB"
    },
    "2780": {
      "op": "NOT"
    },
    "2781": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4735
      ],
      "op": "AND",
      "path": "0"
    },
    "2782": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2783": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4695,
        4735
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2784": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "o",
      "offset": [
        4043,
        4742
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2785": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2526,
        4037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2786": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2721,
        2739
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2788": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2769,
        2779
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2789": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2791": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2792": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2794": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "ADD",
      "path": "0"
    },
    "2795": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF4"
    },
    "2798": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2799": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2800": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132C"
    },
    "2803": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2752,
        2780
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2804": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2805": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2807": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2808": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2810": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2811": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2812": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "SUB",
      "path": "0"
    },
    "2813": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "SUB",
      "path": "0"
    },
    "2814": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2815": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2816": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2817": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2819": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2752,
        2780
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2820": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2742,
        2781
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2821": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2742,
        2781
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2822": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2742,
        2781
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2823": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2742,
        2781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2825": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2742,
        2781
      ],
      "op": "ADD",
      "path": "0"
    },
    "2826": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2742,
        2781
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2827": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2721,
        2781
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2828": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2721,
        2781
      ],
      "op": "POP",
      "path": "0"
    },
    "2829": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2891,
        2904
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x3"
    },
    "2831": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2891,
        2904
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2832": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2877,
        2887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2833": {
      "branch": 61,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2877,
        2904
      ],
      "op": "SUB",
      "path": "0"
    },
    "2834": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2D"
    },
    "2837": {
      "branch": 61,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2838": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2840": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2841": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2847": {
      "op": "SHL"
    },
    "2848": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2849": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2850": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2852": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "ADD",
      "path": "0"
    },
    "2853": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "2856": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2857": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1363"
    },
    "2860": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2869,
        2974
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2861": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2869,
        2974
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2862": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3039,
        3061
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2864": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3081,
        3087
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2865": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2867": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2868": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2870": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "ADD",
      "path": "0"
    },
    "2871": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "2874": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2875": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2876": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A2"
    },
    "2879": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        3064,
        3088
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2880": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2881": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2883": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2884": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2885": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2886": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2887": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "SUB",
      "path": "0"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2890": {
      "op": "NOT"
    },
    "2891": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "ADD",
      "path": "0"
    },
    "2892": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2893": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2894": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2895": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2896": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2897": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3249,
        3259
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 38
    },
    "2898": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2900": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3260
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2901": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3260
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2902": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3260
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2903": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3248
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2905": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2907": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3260
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2908": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3260
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2909": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3260
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2910": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2911": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3064,
        3088
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2912": {
      "op": "POP"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2919": {
      "op": "SHL"
    },
    "2920": {
      "op": "SUB"
    },
    "2921": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3270
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2922": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2923": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3270
      ],
      "op": "AND",
      "path": "0"
    },
    "2924": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3260
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2925": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3260
      ],
      "op": "AND",
      "path": "0"
    },
    "2926": {
      "branch": 62,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3233,
        3270
      ],
      "op": "EQ",
      "path": "0"
    },
    "2927": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3225,
        3307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBBA"
    },
    "2930": {
      "branch": 62,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3225,
        3307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2931": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3225,
        3307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2933": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3225,
        3307
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2940": {
      "op": "SHL"
    },
    "2941": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3225,
        3307
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2942": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3225,
        3307
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2945": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3225,
        3307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2947": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3225,
        3307
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2948": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3225,
        3307
      ],
      "op": "ADD",
      "path": "0"
    },
    "2949": {
      "op": "DUP2"
    },
    "2950": {
      "op": "SWAP1"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2954": {
      "op": "DUP3"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "PUSH32",
      "value": "0x4D7945524332303A204D696E7465722061646472657373206D69736D61746368"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2992": {
      "op": "DUP3"
    },
    "2993": {
      "op": "ADD"
    },
    "2994": {
      "op": "MSTORE"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2997": {
      "op": "ADD"
    },
    "2998": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3225,
        3307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "3001": {
      "op": "JUMP"
    },
    "3002": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3225,
        3307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3003": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3418,
        3434
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x7"
    },
    "3005": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3418,
        3434
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3012": {
      "op": "SHL"
    },
    "3013": {
      "op": "SUB"
    },
    "3014": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3418,
        3434
      ],
      "op": "AND",
      "path": "0"
    },
    "3015": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3418,
        3448
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3016": {
      "branch": 63,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3418,
        3448
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3017": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3418,
        3478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBDF"
    },
    "3020": {
      "branch": 63,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3418,
        3478
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3021": {
      "op": "POP"
    },
    "3022": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3452,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3024": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3452,
        3468
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3031": {
      "op": "SHL"
    },
    "3032": {
      "op": "SUB"
    },
    "3033": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3452,
        3478
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3034": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3452,
        3478
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3035": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3452,
        3478
      ],
      "op": "AND",
      "path": "0"
    },
    "3036": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3452,
        3468
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3037": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3452,
        3468
      ],
      "op": "AND",
      "path": "0"
    },
    "3038": {
      "branch": 64,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3452,
        3478
      ],
      "op": "EQ",
      "path": "0"
    },
    "3039": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3418,
        3478
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3040": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3410,
        3518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC37"
    },
    "3043": {
      "branch": 64,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3410,
        3518
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3044": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3410,
        3518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3046": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3410,
        3518
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3053": {
      "op": "SHL"
    },
    "3054": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3410,
        3518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3055": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3410,
        3518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3058": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3410,
        3518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3060": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3410,
        3518
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3061": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3410,
        3518
      ],
      "op": "ADD",
      "path": "0"
    },
    "3062": {
      "op": "MSTORE"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3067": {
      "op": "DUP3"
    },
    "3068": {
      "op": "ADD"
    },
    "3069": {
      "op": "MSTORE"
    },
    "3070": {
      "op": "PUSH32",
      "value": "0x4D7945524332303A20416E6F74686572206D696E74657220616C726561647920"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3105": {
      "op": "DUP3"
    },
    "3106": {
      "op": "ADD"
    },
    "3107": {
      "op": "MSTORE"
    },
    "3108": {
      "op": "PUSH3",
      "value": "0x1CD95D"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "3114": {
      "op": "SHL"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3117": {
      "op": "DUP3"
    },
    "3118": {
      "op": "ADD"
    },
    "3119": {
      "op": "MSTORE"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3122": {
      "op": "ADD"
    },
    "3123": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3410,
        3518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "3126": {
      "op": "JUMP"
    },
    "3127": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3410,
        3518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3128": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3528,
        3545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3130": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3559
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3131": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3559
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3132": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3134": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3135": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3142": {
      "op": "SHL"
    },
    "3143": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3144": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3151": {
      "op": "SHL"
    },
    "3152": {
      "op": "SUB"
    },
    "3153": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3154": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3559
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3155": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3559
      ],
      "op": "AND",
      "path": "0"
    },
    "3156": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3157": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "3162": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3585
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3163": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6E"
    },
    "3166": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3167": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3586,
        3596
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3168": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3586,
        3596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3169": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3598,
        3601
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3170": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3598,
        3601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3171": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3603,
        3610
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3172": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3603,
        3610
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3173": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3612,
        3621
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3174": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3612,
        3621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3175": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3177": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "ADD",
      "path": "0"
    },
    "3178": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E8"
    },
    "3181": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        3548,
        3622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3182": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3183": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3185": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3187": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3188": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3189": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3190": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "SUB",
      "path": "0"
    },
    "3191": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3192": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3194": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3195": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "GAS",
      "path": "0"
    },
    "3196": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "CALL",
      "path": "0"
    },
    "3197": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3198": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3199": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3200": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8D"
    },
    "3203": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3204": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3205": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3207": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3208": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3209": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3210": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3212": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3213": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3214": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "POP",
      "path": "0"
    },
    "3215": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "POP",
      "path": "0"
    },
    "3216": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "POP",
      "path": "0"
    },
    "3217": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "POP",
      "path": "0"
    },
    "3218": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3220": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3221": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3222": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3224": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "NOT",
      "path": "0"
    },
    "3225": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3227": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3228": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "ADD",
      "path": "0"
    },
    "3229": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "AND",
      "path": "0"
    },
    "3230": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3231": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "ADD",
      "path": "0"
    },
    "3232": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3233": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3235": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3236": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "POP",
      "path": "0"
    },
    "3237": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3238": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "ADD",
      "path": "0"
    },
    "3239": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3240": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB1"
    },
    "3243": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3244": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3245": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C9"
    },
    "3248": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        3548,
        3622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3249": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3548,
        3622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3250": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3528,
        3622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3251": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3528,
        3622
      ],
      "op": "POP",
      "path": "0"
    },
    "3252": {
      "branch": 65,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3696,
        3708
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 40
    },
    "3253": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD0"
    },
    "3256": {
      "branch": 65,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3257": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3259": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3266": {
      "op": "SHL"
    },
    "3267": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3268": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3269": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3271": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "ADD",
      "path": "0"
    },
    "3272": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "3275": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3276": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12EB"
    },
    "3279": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        3688,
        3746
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3280": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3688,
        3746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3281": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3810
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x7"
    },
    "3283": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3819
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3284": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3819
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3291": {
      "op": "SHL"
    },
    "3292": {
      "op": "SUB"
    },
    "3293": {
      "op": "NOT"
    },
    "3294": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3819
      ],
      "op": "AND",
      "path": "0"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3301": {
      "op": "SHL"
    },
    "3302": {
      "op": "SUB"
    },
    "3303": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3819
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3304": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3819
      ],
      "op": "AND",
      "path": "0"
    },
    "3305": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3819
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3306": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3819
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3307": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3819
      ],
      "op": "OR",
      "path": "0"
    },
    "3308": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3819
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3309": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3819
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3310": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3794,
        3819
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3311": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3895,
        3922
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 42,
      "value": "0x40"
    },
    "3313": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3895,
        3922
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3314": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3895,
        3922
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xFE7C7FCB0AE0CE6BFD0A653FA3AB6C97A51A0819E6C27CDAB8A08D456338C5FA"
    },
    "3347": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3895,
        3922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3350": {
      "op": "SWAP1"
    },
    "3351": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3895,
        3922
      ],
      "op": "LOG2",
      "path": "0"
    },
    "3352": {
      "op": "POP"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        4019,
        4029
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 43
    },
    "3355": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        4003,
        4030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3357": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        4003,
        4030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3358": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        4003,
        4030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3359": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        4003,
        4030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3360": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        4003,
        4018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "3362": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        4003,
        4030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3364": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        4003,
        4030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3365": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        4003,
        4030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3367": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        4003,
        4030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3368": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        4003,
        4030
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3369": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3996,
        4030
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3370": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3996,
        4030
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3377": {
      "op": "SHL"
    },
    "3378": {
      "op": "SUB"
    },
    "3379": {
      "op": "NOT"
    },
    "3380": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3996,
        4030
      ],
      "op": "AND",
      "path": "0"
    },
    "3381": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3996,
        4030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3382": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3996,
        4030
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3383": {
      "op": "POP"
    },
    "3384": {
      "op": "POP"
    },
    "3385": {
      "op": "POP"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "op": "POP"
    },
    "3388": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "o",
      "offset": [
        2526,
        4037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3389": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6172,
        6354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3390": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6266,
        6282
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x7"
    },
    "3392": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6266,
        6282
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3399": {
      "op": "SHL"
    },
    "3400": {
      "op": "SUB"
    },
    "3401": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6266,
        6282
      ],
      "op": "AND",
      "path": "0"
    },
    "3402": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6252,
        6262
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3403": {
      "branch": 66,
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6252,
        6282
      ],
      "op": "EQ",
      "path": "0"
    },
    "3404": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6244,
        6315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD97"
    },
    "3407": {
      "branch": 66,
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6244,
        6315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3408": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6244,
        6315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3410": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6244,
        6315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3411": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3417": {
      "op": "SHL"
    },
    "3418": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6244,
        6315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3419": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6244,
        6315
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3422": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6244,
        6315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3424": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6244,
        6315
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3425": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6244,
        6315
      ],
      "op": "ADD",
      "path": "0"
    },
    "3426": {
      "op": "MSTORE"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3431": {
      "op": "DUP3"
    },
    "3432": {
      "op": "ADD"
    },
    "3433": {
      "op": "MSTORE"
    },
    "3434": {
      "op": "PUSH32",
      "value": "0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3469": {
      "op": "DUP3"
    },
    "3470": {
      "op": "ADD"
    },
    "3471": {
      "op": "MSTORE"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3474": {
      "op": "ADD"
    },
    "3475": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6244,
        6315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "3478": {
      "op": "JUMP"
    },
    "3479": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6244,
        6315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3480": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6325,
        6347
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0xDA1"
    },
    "3483": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6331,
        6338
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3484": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6340,
        6346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3485": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6325,
        6330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA5"
    },
    "3488": {
      "fn": "GP_Mint.mintTokens",
      "jump": "i",
      "offset": [
        6325,
        6347
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3489": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6325,
        6347
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3490": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6172,
        6354
      ],
      "op": "POP",
      "path": "0"
    },
    "3491": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6172,
        6354
      ],
      "op": "POP",
      "path": "0"
    },
    "3492": {
      "fn": "GP_Mint.mintTokens",
      "jump": "o",
      "offset": [
        6172,
        6354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3493": {
      "fn": "GP_Mint._mint",
      "offset": [
        8170,
        8488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3494": {
      "fn": "GP_Mint._mint",
      "offset": [
        8259,
        8275
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x7"
    },
    "3496": {
      "fn": "GP_Mint._mint",
      "offset": [
        8259,
        8275
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3503": {
      "op": "SHL"
    },
    "3504": {
      "op": "SUB"
    },
    "3505": {
      "fn": "GP_Mint._mint",
      "offset": [
        8259,
        8275
      ],
      "op": "AND",
      "path": "0"
    },
    "3506": {
      "fn": "GP_Mint._mint",
      "offset": [
        8245,
        8255
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3507": {
      "branch": 67,
      "fn": "GP_Mint._mint",
      "offset": [
        8245,
        8275
      ],
      "op": "EQ",
      "path": "0"
    },
    "3508": {
      "fn": "GP_Mint._mint",
      "offset": [
        8237,
        8308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFF"
    },
    "3511": {
      "branch": 67,
      "fn": "GP_Mint._mint",
      "offset": [
        8237,
        8308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3512": {
      "fn": "GP_Mint._mint",
      "offset": [
        8237,
        8308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3514": {
      "fn": "GP_Mint._mint",
      "offset": [
        8237,
        8308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3521": {
      "op": "SHL"
    },
    "3522": {
      "fn": "GP_Mint._mint",
      "offset": [
        8237,
        8308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3523": {
      "fn": "GP_Mint._mint",
      "offset": [
        8237,
        8308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3526": {
      "fn": "GP_Mint._mint",
      "offset": [
        8237,
        8308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3528": {
      "fn": "GP_Mint._mint",
      "offset": [
        8237,
        8308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3529": {
      "fn": "GP_Mint._mint",
      "offset": [
        8237,
        8308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3530": {
      "op": "MSTORE"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3535": {
      "op": "DUP3"
    },
    "3536": {
      "op": "ADD"
    },
    "3537": {
      "op": "MSTORE"
    },
    "3538": {
      "op": "PUSH32",
      "value": "0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3573": {
      "op": "DUP3"
    },
    "3574": {
      "op": "ADD"
    },
    "3575": {
      "op": "MSTORE"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3578": {
      "op": "ADD"
    },
    "3579": {
      "fn": "GP_Mint._mint",
      "offset": [
        8237,
        8308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "3582": {
      "op": "JUMP"
    },
    "3583": {
      "fn": "GP_Mint._mint",
      "offset": [
        8237,
        8308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3584": {
      "fn": "GP_Mint._mint",
      "offset": [
        8334,
        8340
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 47
    },
    "3585": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3587": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3589": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8340
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3590": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8340
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3591": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8340
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3592": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE11"
    },
    "3595": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8340
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3596": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3597": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118F"
    },
    "3600": {
      "fn": "GP_Mint._mint",
      "jump": "i",
      "offset": [
        8318,
        8340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3601": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3602": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3603": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8340
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3604": {
      "fn": "GP_Mint._mint",
      "offset": [
        8318,
        8340
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3605": {
      "op": "POP"
    },
    "3606": {
      "op": "POP"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3613": {
      "op": "SHL"
    },
    "3614": {
      "op": "SUB"
    },
    "3615": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 48
    },
    "3616": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "AND",
      "path": "0"
    },
    "3617": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3619": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3620": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3621": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3622": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3624": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3626": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3627": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3629": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3630": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3631": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3632": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8378
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3633": {
      "fn": "GP_Mint._mint",
      "offset": [
        8372,
        8378
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3634": {
      "fn": "GP_Mint._mint",
      "offset": [
        8372,
        8378
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3635": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3636": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3E"
    },
    "3639": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3640": {
      "fn": "GP_Mint._mint",
      "offset": [
        8372,
        8378
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3641": {
      "fn": "GP_Mint._mint",
      "offset": [
        8372,
        8378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3642": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118F"
    },
    "3645": {
      "fn": "GP_Mint._mint",
      "jump": "i",
      "offset": [
        8350,
        8378
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3646": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3647": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3648": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3649": {
      "fn": "GP_Mint._mint",
      "offset": [
        8350,
        8378
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3650": {
      "op": "POP"
    },
    "3651": {
      "op": "POP"
    },
    "3652": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x40"
    },
    "3654": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3655": {
      "op": "DUP2"
    },
    "3656": {
      "op": "DUP2"
    },
    "3657": {
      "op": "MSTORE"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3664": {
      "op": "SHL"
    },
    "3665": {
      "op": "SUB"
    },
    "3666": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3667": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "AND",
      "path": "0"
    },
    "3668": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3669": {
      "fn": "GP_Mint._mint",
      "offset": [
        8452,
        8462
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3670": {
      "fn": "GP_Mint._mint",
      "offset": [
        8452,
        8462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3671": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x9D228D69B5FDB8D273A2336F8FB8612D039631024EA9BF09C424A9503AA078F0"
    },
    "3704": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3707": {
      "op": "ADD"
    },
    "3708": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3710": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3711": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3712": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3713": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "SUB",
      "path": "0"
    },
    "3714": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3715": {
      "fn": "GP_Mint._mint",
      "offset": [
        8445,
        8480
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3716": {
      "fn": "GP_Mint._mint",
      "offset": [
        8170,
        8488
      ],
      "op": "POP",
      "path": "0"
    },
    "3717": {
      "fn": "GP_Mint._mint",
      "offset": [
        8170,
        8488
      ],
      "op": "POP",
      "path": "0"
    },
    "3718": {
      "fn": "GP_Mint._mint",
      "jump": "o",
      "offset": [
        8170,
        8488
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3719": {
      "op": "JUMPDEST"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3722": {
      "op": "DUP2"
    },
    "3723": {
      "op": "MLOAD"
    },
    "3724": {
      "op": "DUP1"
    },
    "3725": {
      "op": "DUP5"
    },
    "3726": {
      "op": "MSTORE"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3729": {
      "op": "JUMPDEST"
    },
    "3730": {
      "op": "DUP2"
    },
    "3731": {
      "op": "DUP2"
    },
    "3732": {
      "op": "LT"
    },
    "3733": {
      "op": "ISZERO"
    },
    "3734": {
      "op": "PUSH2",
      "value": "0xEAD"
    },
    "3737": {
      "op": "JUMPI"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3740": {
      "op": "DUP2"
    },
    "3741": {
      "op": "DUP6"
    },
    "3742": {
      "op": "ADD"
    },
    "3743": {
      "op": "DUP2"
    },
    "3744": {
      "op": "ADD"
    },
    "3745": {
      "op": "MLOAD"
    },
    "3746": {
      "op": "DUP7"
    },
    "3747": {
      "op": "DUP4"
    },
    "3748": {
      "op": "ADD"
    },
    "3749": {
      "op": "DUP3"
    },
    "3750": {
      "op": "ADD"
    },
    "3751": {
      "op": "MSTORE"
    },
    "3752": {
      "op": "ADD"
    },
    "3753": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3756": {
      "op": "JUMP"
    },
    "3757": {
      "op": "JUMPDEST"
    },
    "3758": {
      "op": "POP"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3763": {
      "op": "DUP3"
    },
    "3764": {
      "op": "DUP7"
    },
    "3765": {
      "op": "ADD"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "op": "MSTORE"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3772": {
      "op": "NOT"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3775": {
      "op": "DUP4"
    },
    "3776": {
      "op": "ADD"
    },
    "3777": {
      "op": "AND"
    },
    "3778": {
      "op": "DUP6"
    },
    "3779": {
      "op": "ADD"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "SWAP2"
    },
    "3782": {
      "op": "POP"
    },
    "3783": {
      "op": "POP"
    },
    "3784": {
      "op": "SWAP3"
    },
    "3785": {
      "op": "SWAP2"
    },
    "3786": {
      "op": "POP"
    },
    "3787": {
      "op": "POP"
    },
    "3788": {
      "jump": "o",
      "op": "JUMP"
    },
    "3789": {
      "op": "JUMPDEST"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3792": {
      "op": "DUP2"
    },
    "3793": {
      "op": "MSTORE"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3796": {
      "op": "PUSH2",
      "value": "0xEE0"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3801": {
      "op": "DUP4"
    },
    "3802": {
      "op": "ADD"
    },
    "3803": {
      "op": "DUP5"
    },
    "3804": {
      "op": "PUSH2",
      "value": "0xE87"
    },
    "3807": {
      "jump": "i",
      "op": "JUMP"
    },
    "3808": {
      "op": "JUMPDEST"
    },
    "3809": {
      "op": "SWAP4"
    },
    "3810": {
      "op": "SWAP3"
    },
    "3811": {
      "op": "POP"
    },
    "3812": {
      "op": "POP"
    },
    "3813": {
      "op": "POP"
    },
    "3814": {
      "jump": "o",
      "op": "JUMP"
    },
    "3815": {
      "op": "JUMPDEST"
    },
    "3816": {
      "op": "DUP1"
    },
    "3817": {
      "op": "CALLDATALOAD"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3824": {
      "op": "SHL"
    },
    "3825": {
      "op": "SUB"
    },
    "3826": {
      "op": "DUP2"
    },
    "3827": {
      "op": "AND"
    },
    "3828": {
      "op": "DUP2"
    },
    "3829": {
      "op": "EQ"
    },
    "3830": {
      "op": "PUSH2",
      "value": "0xEFE"
    },
    "3833": {
      "op": "JUMPI"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3836": {
      "op": "DUP1"
    },
    "3837": {
      "op": "REVERT"
    },
    "3838": {
      "op": "JUMPDEST"
    },
    "3839": {
      "op": "SWAP2"
    },
    "3840": {
      "op": "SWAP1"
    },
    "3841": {
      "op": "POP"
    },
    "3842": {
      "jump": "o",
      "op": "JUMP"
    },
    "3843": {
      "op": "JUMPDEST"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3846": {
      "op": "DUP1"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3849": {
      "op": "DUP4"
    },
    "3850": {
      "op": "DUP6"
    },
    "3851": {
      "op": "SUB"
    },
    "3852": {
      "op": "SLT"
    },
    "3853": {
      "op": "ISZERO"
    },
    "3854": {
      "op": "PUSH2",
      "value": "0xF16"
    },
    "3857": {
      "op": "JUMPI"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3860": {
      "op": "DUP1"
    },
    "3861": {
      "op": "REVERT"
    },
    "3862": {
      "op": "JUMPDEST"
    },
    "3863": {
      "op": "PUSH2",
      "value": "0xF1F"
    },
    "3866": {
      "op": "DUP4"
    },
    "3867": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "3870": {
      "jump": "i",
      "op": "JUMP"
    },
    "3871": {
      "op": "JUMPDEST"
    },
    "3872": {
      "op": "SWAP5"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3875": {
      "op": "SWAP4"
    },
    "3876": {
      "op": "SWAP1"
    },
    "3877": {
      "op": "SWAP4"
    },
    "3878": {
      "op": "ADD"
    },
    "3879": {
      "op": "CALLDATALOAD"
    },
    "3880": {
      "op": "SWAP4"
    },
    "3881": {
      "op": "POP"
    },
    "3882": {
      "op": "POP"
    },
    "3883": {
      "op": "POP"
    },
    "3884": {
      "jump": "o",
      "op": "JUMP"
    },
    "3885": {
      "op": "JUMPDEST"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3888": {
      "op": "DUP1"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3893": {
      "op": "DUP5"
    },
    "3894": {
      "op": "DUP7"
    },
    "3895": {
      "op": "SUB"
    },
    "3896": {
      "op": "SLT"
    },
    "3897": {
      "op": "ISZERO"
    },
    "3898": {
      "op": "PUSH2",
      "value": "0xF42"
    },
    "3901": {
      "op": "JUMPI"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3904": {
      "op": "DUP1"
    },
    "3905": {
      "op": "REVERT"
    },
    "3906": {
      "op": "JUMPDEST"
    },
    "3907": {
      "op": "PUSH2",
      "value": "0xF4B"
    },
    "3910": {
      "op": "DUP5"
    },
    "3911": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "3914": {
      "jump": "i",
      "op": "JUMP"
    },
    "3915": {
      "op": "JUMPDEST"
    },
    "3916": {
      "op": "SWAP3"
    },
    "3917": {
      "op": "POP"
    },
    "3918": {
      "op": "PUSH2",
      "value": "0xF59"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3923": {
      "op": "DUP6"
    },
    "3924": {
      "op": "ADD"
    },
    "3925": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "3928": {
      "jump": "i",
      "op": "JUMP"
    },
    "3929": {
      "op": "JUMPDEST"
    },
    "3930": {
      "op": "SWAP2"
    },
    "3931": {
      "op": "POP"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3934": {
      "op": "DUP5"
    },
    "3935": {
      "op": "ADD"
    },
    "3936": {
      "op": "CALLDATALOAD"
    },
    "3937": {
      "op": "SWAP1"
    },
    "3938": {
      "op": "POP"
    },
    "3939": {
      "op": "SWAP3"
    },
    "3940": {
      "op": "POP"
    },
    "3941": {
      "op": "SWAP3"
    },
    "3942": {
      "op": "POP"
    },
    "3943": {
      "op": "SWAP3"
    },
    "3944": {
      "jump": "o",
      "op": "JUMP"
    },
    "3945": {
      "op": "JUMPDEST"
    },
    "3946": {
      "op": "DUP1"
    },
    "3947": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "3950": {
      "op": "DUP2"
    },
    "3951": {
      "op": "ADD"
    },
    "3952": {
      "op": "DUP4"
    },
    "3953": {
      "op": "LT"
    },
    "3954": {
      "op": "ISZERO"
    },
    "3955": {
      "op": "PUSH2",
      "value": "0x3EE"
    },
    "3958": {
      "op": "JUMPI"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3961": {
      "op": "DUP1"
    },
    "3962": {
      "op": "REVERT"
    },
    "3963": {
      "op": "JUMPDEST"
    },
    "3964": {
      "op": "DUP1"
    },
    "3965": {
      "op": "PUSH2",
      "value": "0x2000"
    },
    "3968": {
      "op": "DUP2"
    },
    "3969": {
      "op": "ADD"
    },
    "3970": {
      "op": "DUP4"
    },
    "3971": {
      "op": "LT"
    },
    "3972": {
      "op": "ISZERO"
    },
    "3973": {
      "op": "PUSH2",
      "value": "0x3EE"
    },
    "3976": {
      "op": "JUMPI"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3979": {
      "op": "DUP1"
    },
    "3980": {
      "op": "REVERT"
    },
    "3981": {
      "op": "JUMPDEST"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3984": {
      "op": "DUP1"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3987": {
      "op": "DUP1"
    },
    "3988": {
      "op": "PUSH2",
      "value": "0x4060"
    },
    "3991": {
      "op": "DUP6"
    },
    "3992": {
      "op": "DUP8"
    },
    "3993": {
      "op": "SUB"
    },
    "3994": {
      "op": "SLT"
    },
    "3995": {
      "op": "ISZERO"
    },
    "3996": {
      "op": "PUSH2",
      "value": "0xFA4"
    },
    "3999": {
      "op": "JUMPI"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4002": {
      "op": "DUP1"
    },
    "4003": {
      "op": "REVERT"
    },
    "4004": {
      "op": "JUMPDEST"
    },
    "4005": {
      "op": "PUSH2",
      "value": "0xFAE"
    },
    "4008": {
      "op": "DUP7"
    },
    "4009": {
      "op": "DUP7"
    },
    "4010": {
      "op": "PUSH2",
      "value": "0xF69"
    },
    "4013": {
      "jump": "i",
      "op": "JUMP"
    },
    "4014": {
      "op": "JUMPDEST"
    },
    "4015": {
      "op": "SWAP4"
    },
    "4016": {
      "op": "POP"
    },
    "4017": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "4020": {
      "op": "DUP6"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "CALLDATALOAD"
    },
    "4023": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4032": {
      "op": "DUP2"
    },
    "4033": {
      "op": "GT"
    },
    "4034": {
      "op": "ISZERO"
    },
    "4035": {
      "op": "PUSH2",
      "value": "0xFCB"
    },
    "4038": {
      "op": "JUMPI"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4041": {
      "op": "DUP1"
    },
    "4042": {
      "op": "REVERT"
    },
    "4043": {
      "op": "JUMPDEST"
    },
    "4044": {
      "op": "PUSH2",
      "value": "0xFD7"
    },
    "4047": {
      "op": "DUP8"
    },
    "4048": {
      "op": "DUP3"
    },
    "4049": {
      "op": "DUP9"
    },
    "4050": {
      "op": "ADD"
    },
    "4051": {
      "op": "PUSH2",
      "value": "0xF7B"
    },
    "4054": {
      "jump": "i",
      "op": "JUMP"
    },
    "4055": {
      "op": "JUMPDEST"
    },
    "4056": {
      "op": "SWAP4"
    },
    "4057": {
      "op": "POP"
    },
    "4058": {
      "op": "POP"
    },
    "4059": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "4062": {
      "op": "DUP6"
    },
    "4063": {
      "op": "ADD"
    },
    "4064": {
      "op": "CALLDATALOAD"
    },
    "4065": {
      "op": "SWAP2"
    },
    "4066": {
      "op": "POP"
    },
    "4067": {
      "op": "PUSH2",
      "value": "0xFEF"
    },
    "4070": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "4073": {
      "op": "DUP7"
    },
    "4074": {
      "op": "ADD"
    },
    "4075": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "4078": {
      "jump": "i",
      "op": "JUMP"
    },
    "4079": {
      "op": "JUMPDEST"
    },
    "4080": {
      "op": "SWAP1"
    },
    "4081": {
      "op": "POP"
    },
    "4082": {
      "op": "SWAP3"
    },
    "4083": {
      "op": "SWAP6"
    },
    "4084": {
      "op": "SWAP2"
    },
    "4085": {
      "op": "SWAP5"
    },
    "4086": {
      "op": "POP"
    },
    "4087": {
      "op": "SWAP3"
    },
    "4088": {
      "op": "POP"
    },
    "4089": {
      "jump": "o",
      "op": "JUMP"
    },
    "4090": {
      "op": "JUMPDEST"
    },
    "4091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4095": {
      "op": "DUP3"
    },
    "4096": {
      "op": "DUP5"
    },
    "4097": {
      "op": "SUB"
    },
    "4098": {
      "op": "SLT"
    },
    "4099": {
      "op": "ISZERO"
    },
    "4100": {
      "op": "PUSH2",
      "value": "0x100C"
    },
    "4103": {
      "op": "JUMPI"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4106": {
      "op": "DUP1"
    },
    "4107": {
      "op": "REVERT"
    },
    "4108": {
      "op": "JUMPDEST"
    },
    "4109": {
      "op": "PUSH2",
      "value": "0xEE0"
    },
    "4112": {
      "op": "DUP3"
    },
    "4113": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "4116": {
      "jump": "i",
      "op": "JUMP"
    },
    "4117": {
      "op": "JUMPDEST"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4120": {
      "op": "DUP1"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4123": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "4126": {
      "op": "DUP5"
    },
    "4127": {
      "op": "DUP7"
    },
    "4128": {
      "op": "SUB"
    },
    "4129": {
      "op": "SLT"
    },
    "4130": {
      "op": "ISZERO"
    },
    "4131": {
      "op": "PUSH2",
      "value": "0x102B"
    },
    "4134": {
      "op": "JUMPI"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4137": {
      "op": "DUP1"
    },
    "4138": {
      "op": "REVERT"
    },
    "4139": {
      "op": "JUMPDEST"
    },
    "4140": {
      "op": "PUSH2",
      "value": "0x1035"
    },
    "4143": {
      "op": "DUP6"
    },
    "4144": {
      "op": "DUP6"
    },
    "4145": {
      "op": "PUSH2",
      "value": "0xF69"
    },
    "4148": {
      "jump": "i",
      "op": "JUMP"
    },
    "4149": {
      "op": "JUMPDEST"
    },
    "4150": {
      "op": "SWAP3"
    },
    "4151": {
      "op": "POP"
    },
    "4152": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "4155": {
      "op": "DUP5"
    },
    "4156": {
      "op": "ADD"
    },
    "4157": {
      "op": "CALLDATALOAD"
    },
    "4158": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4167": {
      "op": "DUP2"
    },
    "4168": {
      "op": "GT"
    },
    "4169": {
      "op": "ISZERO"
    },
    "4170": {
      "op": "PUSH2",
      "value": "0x1052"
    },
    "4173": {
      "op": "JUMPI"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4176": {
      "op": "DUP1"
    },
    "4177": {
      "op": "REVERT"
    },
    "4178": {
      "op": "JUMPDEST"
    },
    "4179": {
      "op": "PUSH2",
      "value": "0x105E"
    },
    "4182": {
      "op": "DUP7"
    },
    "4183": {
      "op": "DUP3"
    },
    "4184": {
      "op": "DUP8"
    },
    "4185": {
      "op": "ADD"
    },
    "4186": {
      "op": "PUSH2",
      "value": "0xF7B"
    },
    "4189": {
      "jump": "i",
      "op": "JUMP"
    },
    "4190": {
      "op": "JUMPDEST"
    },
    "4191": {
      "op": "SWAP3"
    },
    "4192": {
      "op": "POP"
    },
    "4193": {
      "op": "POP"
    },
    "4194": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "4197": {
      "op": "DUP5"
    },
    "4198": {
      "op": "ADD"
    },
    "4199": {
      "op": "CALLDATALOAD"
    },
    "4200": {
      "op": "SWAP1"
    },
    "4201": {
      "op": "POP"
    },
    "4202": {
      "op": "SWAP3"
    },
    "4203": {
      "op": "POP"
    },
    "4204": {
      "op": "SWAP3"
    },
    "4205": {
      "op": "POP"
    },
    "4206": {
      "op": "SWAP3"
    },
    "4207": {
      "jump": "o",
      "op": "JUMP"
    },
    "4208": {
      "op": "JUMPDEST"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4211": {
      "op": "DUP1"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4214": {
      "op": "DUP4"
    },
    "4215": {
      "op": "DUP6"
    },
    "4216": {
      "op": "SUB"
    },
    "4217": {
      "op": "SLT"
    },
    "4218": {
      "op": "ISZERO"
    },
    "4219": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4222": {
      "op": "JUMPI"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4225": {
      "op": "DUP1"
    },
    "4226": {
      "op": "REVERT"
    },
    "4227": {
      "op": "JUMPDEST"
    },
    "4228": {
      "op": "PUSH2",
      "value": "0x108C"
    },
    "4231": {
      "op": "DUP4"
    },
    "4232": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "4235": {
      "jump": "i",
      "op": "JUMP"
    },
    "4236": {
      "op": "JUMPDEST"
    },
    "4237": {
      "op": "SWAP2"
    },
    "4238": {
      "op": "POP"
    },
    "4239": {
      "op": "PUSH2",
      "value": "0x109A"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4244": {
      "op": "DUP5"
    },
    "4245": {
      "op": "ADD"
    },
    "4246": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "4249": {
      "jump": "i",
      "op": "JUMP"
    },
    "4250": {
      "op": "JUMPDEST"
    },
    "4251": {
      "op": "SWAP1"
    },
    "4252": {
      "op": "POP"
    },
    "4253": {
      "op": "SWAP3"
    },
    "4254": {
      "op": "POP"
    },
    "4255": {
      "op": "SWAP3"
    },
    "4256": {
      "op": "SWAP1"
    },
    "4257": {
      "op": "POP"
    },
    "4258": {
      "jump": "o",
      "op": "JUMP"
    },
    "4259": {
      "op": "JUMPDEST"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4262": {
      "op": "DUP2"
    },
    "4263": {
      "op": "DUP2"
    },
    "4264": {
      "op": "SHR"
    },
    "4265": {
      "op": "SWAP1"
    },
    "4266": {
      "op": "DUP3"
    },
    "4267": {
      "op": "AND"
    },
    "4268": {
      "op": "DUP1"
    },
    "4269": {
      "op": "PUSH2",
      "value": "0x10B7"
    },
    "4272": {
      "op": "JUMPI"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4275": {
      "op": "DUP3"
    },
    "4276": {
      "op": "AND"
    },
    "4277": {
      "op": "SWAP2"
    },
    "4278": {
      "op": "POP"
    },
    "4279": {
      "op": "JUMPDEST"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4282": {
      "op": "DUP3"
    },
    "4283": {
      "op": "LT"
    },
    "4284": {
      "op": "DUP2"
    },
    "4285": {
      "op": "SUB"
    },
    "4286": {
      "op": "PUSH2",
      "value": "0x10D7"
    },
    "4289": {
      "op": "JUMPI"
    },
    "4290": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4297": {
      "op": "SHL"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4300": {
      "op": "MSTORE"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4305": {
      "op": "MSTORE"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4310": {
      "op": "REVERT"
    },
    "4311": {
      "op": "JUMPDEST"
    },
    "4312": {
      "op": "POP"
    },
    "4313": {
      "op": "SWAP2"
    },
    "4314": {
      "op": "SWAP1"
    },
    "4315": {
      "op": "POP"
    },
    "4316": {
      "jump": "o",
      "op": "JUMP"
    },
    "4317": {
      "op": "JUMPDEST"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4320": {
      "op": "DUP1"
    },
    "4321": {
      "op": "DUP3"
    },
    "4322": {
      "op": "MSTORE"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4325": {
      "op": "SWAP1"
    },
    "4326": {
      "op": "DUP3"
    },
    "4327": {
      "op": "ADD"
    },
    "4328": {
      "op": "MSTORE"
    },
    "4329": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4364": {
      "op": "DUP3"
    },
    "4365": {
      "op": "ADD"
    },
    "4366": {
      "op": "MSTORE"
    },
    "4367": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4373": {
      "op": "SHL"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4376": {
      "op": "DUP3"
    },
    "4377": {
      "op": "ADD"
    },
    "4378": {
      "op": "MSTORE"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4381": {
      "op": "ADD"
    },
    "4382": {
      "op": "SWAP1"
    },
    "4383": {
      "jump": "o",
      "op": "JUMP"
    },
    "4384": {
      "op": "JUMPDEST"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4387": {
      "op": "DUP1"
    },
    "4388": {
      "op": "DUP3"
    },
    "4389": {
      "op": "MSTORE"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4392": {
      "op": "SWAP1"
    },
    "4393": {
      "op": "DUP3"
    },
    "4394": {
      "op": "ADD"
    },
    "4395": {
      "op": "MSTORE"
    },
    "4396": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4431": {
      "op": "DUP3"
    },
    "4432": {
      "op": "ADD"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4443": {
      "op": "SHL"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4446": {
      "op": "DUP3"
    },
    "4447": {
      "op": "ADD"
    },
    "4448": {
      "op": "MSTORE"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4451": {
      "op": "ADD"
    },
    "4452": {
      "op": "SWAP1"
    },
    "4453": {
      "jump": "o",
      "op": "JUMP"
    },
    "4454": {
      "op": "JUMPDEST"
    },
    "4455": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4462": {
      "op": "SHL"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4465": {
      "op": "MSTORE"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4470": {
      "op": "MSTORE"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4475": {
      "op": "REVERT"
    },
    "4476": {
      "op": "JUMPDEST"
    },
    "4477": {
      "op": "DUP2"
    },
    "4478": {
      "op": "DUP2"
    },
    "4479": {
      "op": "SUB"
    },
    "4480": {
      "op": "DUP2"
    },
    "4481": {
      "op": "DUP2"
    },
    "4482": {
      "op": "GT"
    },
    "4483": {
      "op": "ISZERO"
    },
    "4484": {
      "op": "PUSH2",
      "value": "0x3EE"
    },
    "4487": {
      "op": "JUMPI"
    },
    "4488": {
      "op": "PUSH2",
      "value": "0x3EE"
    },
    "4491": {
      "op": "PUSH2",
      "value": "0x1166"
    },
    "4494": {
      "jump": "i",
      "op": "JUMP"
    },
    "4495": {
      "op": "JUMPDEST"
    },
    "4496": {
      "op": "DUP1"
    },
    "4497": {
      "op": "DUP3"
    },
    "4498": {
      "op": "ADD"
    },
    "4499": {
      "op": "DUP1"
    },
    "4500": {
      "op": "DUP3"
    },
    "4501": {
      "op": "GT"
    },
    "4502": {
      "op": "ISZERO"
    },
    "4503": {
      "op": "PUSH2",
      "value": "0x3EE"
    },
    "4506": {
      "op": "JUMPI"
    },
    "4507": {
      "op": "PUSH2",
      "value": "0x3EE"
    },
    "4510": {
      "op": "PUSH2",
      "value": "0x1166"
    },
    "4513": {
      "jump": "i",
      "op": "JUMP"
    },
    "4514": {
      "op": "JUMPDEST"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4517": {
      "op": "SWAP2"
    },
    "4518": {
      "op": "SWAP1"
    },
    "4519": {
      "op": "SWAP2"
    },
    "4520": {
      "op": "SHL"
    },
    "4521": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4534": {
      "op": "NOT"
    },
    "4535": {
      "op": "AND"
    },
    "4536": {
      "op": "DUP2"
    },
    "4537": {
      "op": "MSTORE"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4540": {
      "op": "ADD"
    },
    "4541": {
      "op": "SWAP1"
    },
    "4542": {
      "jump": "o",
      "op": "JUMP"
    },
    "4543": {
      "op": "JUMPDEST"
    },
    "4544": {
      "op": "DUP2"
    },
    "4545": {
      "op": "DUP4"
    },
    "4546": {
      "op": "MSTORE"
    },
    "4547": {
      "op": "DUP2"
    },
    "4548": {
      "op": "DUP2"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4551": {
      "op": "DUP6"
    },
    "4552": {
      "op": "ADD"
    },
    "4553": {
      "op": "CALLDATACOPY"
    },
    "4554": {
      "op": "POP"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4557": {
      "op": "DUP3"
    },
    "4558": {
      "op": "DUP3"
    },
    "4559": {
      "op": "ADD"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4562": {
      "op": "SWAP1"
    },
    "4563": {
      "op": "DUP2"
    },
    "4564": {
      "op": "ADD"
    },
    "4565": {
      "op": "SWAP2"
    },
    "4566": {
      "op": "SWAP1"
    },
    "4567": {
      "op": "SWAP2"
    },
    "4568": {
      "op": "MSTORE"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4571": {
      "op": "SWAP1"
    },
    "4572": {
      "op": "SWAP2"
    },
    "4573": {
      "op": "ADD"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4576": {
      "op": "NOT"
    },
    "4577": {
      "op": "AND"
    },
    "4578": {
      "op": "SWAP1"
    },
    "4579": {
      "op": "SWAP2"
    },
    "4580": {
      "op": "ADD"
    },
    "4581": {
      "op": "ADD"
    },
    "4582": {
      "op": "SWAP1"
    },
    "4583": {
      "jump": "o",
      "op": "JUMP"
    },
    "4584": {
      "op": "JUMPDEST"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4587": {
      "op": "PUSH2",
      "value": "0x4060"
    },
    "4590": {
      "op": "DUP3"
    },
    "4591": {
      "op": "DUP2"
    },
    "4592": {
      "op": "ADD"
    },
    "4593": {
      "op": "DUP4"
    },
    "4594": {
      "op": "DUP9"
    },
    "4595": {
      "op": "DUP5"
    },
    "4596": {
      "op": "JUMPDEST"
    },
    "4597": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4600": {
      "op": "DUP2"
    },
    "4601": {
      "op": "LT"
    },
    "4602": {
      "op": "ISZERO"
    },
    "4603": {
      "op": "PUSH2",
      "value": "0x1215"
    },
    "4606": {
      "op": "JUMPI"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4609": {
      "op": "DUP1"
    },
    "4610": {
      "op": "DUP4"
    },
    "4611": {
      "op": "DUP6"
    },
    "4612": {
      "op": "CALLDATACOPY"
    },
    "4613": {
      "op": "SWAP3"
    },
    "4614": {
      "op": "DUP4"
    },
    "4615": {
      "op": "ADD"
    },
    "4616": {
      "op": "SWAP3"
    },
    "4617": {
      "op": "SWAP2"
    },
    "4618": {
      "op": "SWAP1"
    },
    "4619": {
      "op": "SWAP2"
    },
    "4620": {
      "op": "ADD"
    },
    "4621": {
      "op": "SWAP1"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4624": {
      "op": "ADD"
    },
    "4625": {
      "op": "PUSH2",
      "value": "0x11F4"
    },
    "4628": {
      "op": "JUMP"
    },
    "4629": {
      "op": "JUMPDEST"
    },
    "4630": {
      "op": "POP"
    },
    "4631": {
      "op": "POP"
    },
    "4632": {
      "op": "POP"
    },
    "4633": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "4636": {
      "op": "DUP5"
    },
    "4637": {
      "op": "ADD"
    },
    "4638": {
      "op": "SWAP2"
    },
    "4639": {
      "op": "SWAP1"
    },
    "4640": {
      "op": "SWAP2"
    },
    "4641": {
      "op": "MSTORE"
    },
    "4642": {
      "op": "PUSH2",
      "value": "0x6060"
    },
    "4645": {
      "op": "DUP4"
    },
    "4646": {
      "op": "ADD"
    },
    "4647": {
      "op": "DUP7"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4650": {
      "op": "JUMPDEST"
    },
    "4651": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4654": {
      "op": "DUP2"
    },
    "4655": {
      "op": "LT"
    },
    "4656": {
      "op": "ISZERO"
    },
    "4657": {
      "op": "PUSH2",
      "value": "0x12A1"
    },
    "4660": {
      "op": "JUMPI"
    },
    "4661": {
      "op": "DUP6"
    },
    "4662": {
      "op": "DUP4"
    },
    "4663": {
      "op": "SUB"
    },
    "4664": {
      "op": "PUSH2",
      "value": "0x405F"
    },
    "4667": {
      "op": "NOT"
    },
    "4668": {
      "op": "ADD"
    },
    "4669": {
      "op": "DUP5"
    },
    "4670": {
      "op": "MSTORE"
    },
    "4671": {
      "op": "DUP2"
    },
    "4672": {
      "op": "CALLDATALOAD"
    },
    "4673": {
      "op": "CALLDATASIZE"
    },
    "4674": {
      "op": "DUP11"
    },
    "4675": {
      "op": "SWAP1"
    },
    "4676": {
      "op": "SUB"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4679": {
      "op": "NOT"
    },
    "4680": {
      "op": "ADD"
    },
    "4681": {
      "op": "DUP2"
    },
    "4682": {
      "op": "SLT"
    },
    "4683": {
      "op": "PUSH2",
      "value": "0x1253"
    },
    "4686": {
      "op": "JUMPI"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4689": {
      "op": "DUP1"
    },
    "4690": {
      "op": "REVERT"
    },
    "4691": {
      "op": "JUMPDEST"
    },
    "4692": {
      "op": "DUP10"
    },
    "4693": {
      "op": "ADD"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4696": {
      "op": "DUP2"
    },
    "4697": {
      "op": "DUP2"
    },
    "4698": {
      "op": "ADD"
    },
    "4699": {
      "op": "SWAP2"
    },
    "4700": {
      "op": "CALLDATALOAD"
    },
    "4701": {
      "op": "SWAP1"
    },
    "4702": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4711": {
      "op": "DUP3"
    },
    "4712": {
      "op": "GT"
    },
    "4713": {
      "op": "ISZERO"
    },
    "4714": {
      "op": "PUSH2",
      "value": "0x1272"
    },
    "4717": {
      "op": "JUMPI"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4720": {
      "op": "DUP1"
    },
    "4721": {
      "op": "REVERT"
    },
    "4722": {
      "op": "JUMPDEST"
    },
    "4723": {
      "op": "DUP2"
    },
    "4724": {
      "op": "CALLDATASIZE"
    },
    "4725": {
      "op": "SUB"
    },
    "4726": {
      "op": "DUP4"
    },
    "4727": {
      "op": "SGT"
    },
    "4728": {
      "op": "ISZERO"
    },
    "4729": {
      "op": "PUSH2",
      "value": "0x1281"
    },
    "4732": {
      "op": "JUMPI"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4735": {
      "op": "DUP1"
    },
    "4736": {
      "op": "REVERT"
    },
    "4737": {
      "op": "JUMPDEST"
    },
    "4738": {
      "op": "PUSH2",
      "value": "0x128C"
    },
    "4741": {
      "op": "DUP7"
    },
    "4742": {
      "op": "DUP4"
    },
    "4743": {
      "op": "DUP6"
    },
    "4744": {
      "op": "PUSH2",
      "value": "0x11BF"
    },
    "4747": {
      "jump": "i",
      "op": "JUMP"
    },
    "4748": {
      "op": "JUMPDEST"
    },
    "4749": {
      "op": "SWAP7"
    },
    "4750": {
      "op": "DUP2"
    },
    "4751": {
      "op": "ADD"
    },
    "4752": {
      "op": "SWAP7"
    },
    "4753": {
      "op": "SWAP6"
    },
    "4754": {
      "op": "POP"
    },
    "4755": {
      "op": "SWAP4"
    },
    "4756": {
      "op": "SWAP1"
    },
    "4757": {
      "op": "SWAP4"
    },
    "4758": {
      "op": "ADD"
    },
    "4759": {
      "op": "SWAP3"
    },
    "4760": {
      "op": "POP"
    },
    "4761": {
      "op": "POP"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4764": {
      "op": "ADD"
    },
    "4765": {
      "op": "PUSH2",
      "value": "0x122A"
    },
    "4768": {
      "op": "JUMP"
    },
    "4769": {
      "op": "JUMPDEST"
    },
    "4770": {
      "op": "POP"
    },
    "4771": {
      "op": "POP"
    },
    "4772": {
      "op": "DUP6"
    },
    "4773": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "4776": {
      "op": "DUP6"
    },
    "4777": {
      "op": "ADD"
    },
    "4778": {
      "op": "MSTORE"
    },
    "4779": {
      "op": "DUP4"
    },
    "4780": {
      "op": "DUP2"
    },
    "4781": {
      "op": "SUB"
    },
    "4782": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "4785": {
      "op": "DUP6"
    },
    "4786": {
      "op": "ADD"
    },
    "4787": {
      "op": "MSTORE"
    },
    "4788": {
      "op": "PUSH2",
      "value": "0x12BD"
    },
    "4791": {
      "op": "DUP2"
    },
    "4792": {
      "op": "DUP7"
    },
    "4793": {
      "op": "PUSH2",
      "value": "0xE87"
    },
    "4796": {
      "jump": "i",
      "op": "JUMP"
    },
    "4797": {
      "op": "JUMPDEST"
    },
    "4798": {
      "op": "SWAP9"
    },
    "4799": {
      "op": "SWAP8"
    },
    "4800": {
      "op": "POP"
    },
    "4801": {
      "op": "POP"
    },
    "4802": {
      "op": "POP"
    },
    "4803": {
      "op": "POP"
    },
    "4804": {
      "op": "POP"
    },
    "4805": {
      "op": "POP"
    },
    "4806": {
      "op": "POP"
    },
    "4807": {
      "op": "POP"
    },
    "4808": {
      "jump": "o",
      "op": "JUMP"
    },
    "4809": {
      "op": "JUMPDEST"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4814": {
      "op": "DUP3"
    },
    "4815": {
      "op": "DUP5"
    },
    "4816": {
      "op": "SUB"
    },
    "4817": {
      "op": "SLT"
    },
    "4818": {
      "op": "ISZERO"
    },
    "4819": {
      "op": "PUSH2",
      "value": "0x12DB"
    },
    "4822": {
      "op": "JUMPI"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4825": {
      "op": "DUP1"
    },
    "4826": {
      "op": "REVERT"
    },
    "4827": {
      "op": "JUMPDEST"
    },
    "4828": {
      "op": "DUP2"
    },
    "4829": {
      "op": "MLOAD"
    },
    "4830": {
      "op": "DUP1"
    },
    "4831": {
      "op": "ISZERO"
    },
    "4832": {
      "op": "ISZERO"
    },
    "4833": {
      "op": "DUP2"
    },
    "4834": {
      "op": "EQ"
    },
    "4835": {
      "op": "PUSH2",
      "value": "0xEE0"
    },
    "4838": {
      "op": "JUMPI"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4841": {
      "op": "DUP1"
    },
    "4842": {
      "op": "REVERT"
    },
    "4843": {
      "op": "JUMPDEST"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4846": {
      "op": "DUP1"
    },
    "4847": {
      "op": "DUP3"
    },
    "4848": {
      "op": "MSTORE"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4851": {
      "op": "SWAP1"
    },
    "4852": {
      "op": "DUP3"
    },
    "4853": {
      "op": "ADD"
    },
    "4854": {
      "op": "MSTORE"
    },
    "4855": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A20417574686F72697A6174696F6E206661696C65"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4890": {
      "op": "DUP3"
    },
    "4891": {
      "op": "ADD"
    },
    "4892": {
      "op": "MSTORE"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "4897": {
      "op": "SHL"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4900": {
      "op": "DUP3"
    },
    "4901": {
      "op": "ADD"
    },
    "4902": {
      "op": "MSTORE"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4905": {
      "op": "ADD"
    },
    "4906": {
      "op": "SWAP1"
    },
    "4907": {
      "jump": "o",
      "op": "JUMP"
    },
    "4908": {
      "op": "JUMPDEST"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4911": {
      "op": "DUP2"
    },
    "4912": {
      "op": "DUP4"
    },
    "4913": {
      "op": "DUP3"
    },
    "4914": {
      "op": "JUMPDEST"
    },
    "4915": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4918": {
      "op": "DUP2"
    },
    "4919": {
      "op": "LT"
    },
    "4920": {
      "op": "ISZERO"
    },
    "4921": {
      "op": "PUSH2",
      "value": "0x1353"
    },
    "4924": {
      "op": "JUMPI"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4927": {
      "op": "DUP1"
    },
    "4928": {
      "op": "DUP4"
    },
    "4929": {
      "op": "DUP6"
    },
    "4930": {
      "op": "CALLDATACOPY"
    },
    "4931": {
      "op": "SWAP3"
    },
    "4932": {
      "op": "DUP4"
    },
    "4933": {
      "op": "ADD"
    },
    "4934": {
      "op": "SWAP3"
    },
    "4935": {
      "op": "SWAP2"
    },
    "4936": {
      "op": "SWAP1"
    },
    "4937": {
      "op": "SWAP2"
    },
    "4938": {
      "op": "ADD"
    },
    "4939": {
      "op": "SWAP1"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4942": {
      "op": "ADD"
    },
    "4943": {
      "op": "PUSH2",
      "value": "0x1332"
    },
    "4946": {
      "op": "JUMP"
    },
    "4947": {
      "op": "JUMPDEST"
    },
    "4948": {
      "op": "POP"
    },
    "4949": {
      "op": "POP"
    },
    "4950": {
      "op": "POP"
    },
    "4951": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "4954": {
      "op": "DUP3"
    },
    "4955": {
      "op": "ADD"
    },
    "4956": {
      "op": "SWAP1"
    },
    "4957": {
      "op": "POP"
    },
    "4958": {
      "op": "SWAP3"
    },
    "4959": {
      "op": "SWAP2"
    },
    "4960": {
      "op": "POP"
    },
    "4961": {
      "op": "POP"
    },
    "4962": {
      "jump": "o",
      "op": "JUMP"
    },
    "4963": {
      "op": "JUMPDEST"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4966": {
      "op": "DUP1"
    },
    "4967": {
      "op": "DUP3"
    },
    "4968": {
      "op": "MSTORE"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4971": {
      "op": "SWAP1"
    },
    "4972": {
      "op": "DUP3"
    },
    "4973": {
      "op": "ADD"
    },
    "4974": {
      "op": "MSTORE"
    },
    "4975": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A2043616E6E6F7420757365207468652073616D65"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5010": {
      "op": "DUP3"
    },
    "5011": {
      "op": "ADD"
    },
    "5012": {
      "op": "MSTORE"
    },
    "5013": {
      "op": "PUSH32",
      "value": "0x206B6579636861696E20747769636520666F7220746869732066756E6374696F"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5048": {
      "op": "DUP3"
    },
    "5049": {
      "op": "ADD"
    },
    "5050": {
      "op": "MSTORE"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "5055": {
      "op": "SHL"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5058": {
      "op": "DUP3"
    },
    "5059": {
      "op": "ADD"
    },
    "5060": {
      "op": "MSTORE"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5063": {
      "op": "ADD"
    },
    "5064": {
      "op": "SWAP1"
    },
    "5065": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f6dc86653ba2960bf83cc49ea2770e5729c19a84",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n//import \"./LamportBase.sol\"; // Adjust the path according to your project structure\n\n// This is a full ERC20 token mint with Lamport permissions on which contract can mint it.\ninterface ILamportBase {\n    function performLamportMasterCheck(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        bytes memory prepacked\n    ) external returns (bool);\n}\n\ncontract GP_Mint {\n\n    ILamportBase public lamportBase;\n    mapping(address => uint256) private _balances;\n    mapping(address => mapping(address => uint256)) private _allowances;\n    bytes32 private storedNextPKH;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    // Function to set the authorized minter (Step One)\n    address private authorizedMinter;\n    mapping(address => address) private proposedMinters; // Temporary storage for proposed minters\n\n    event AuthorizedMinterSet(address indexed minter);\n    event AuthorizedMinterRemoved(address indexed minter);\n    constructor() {\n        lamportBase = ILamportBase(0xB3830AE69EE5962355e84f6bbAC274Ff337960E5);\n        _name = \"GPGrens\";\n        _symbol = \"GPG\";\n        _initializeMintProcess();\n    }\n    function _initializeMintProcess() private {\n        // Set the authorized minter (it's AnonID contract ok) (hardcoded for one-off execution)\n        authorizedMinter = 0xF3A99A9a2836a6fcFcEB846161B900B3d1447236;\n\n        // Mint tokens\n        _mint(0x239fA7623354eC26520dE878B52f13Fe84b06971, 80000 * (10 ** uint256(decimals())));\n\n        // Reset the authorized minter\n        //authorizedMinter = address(0);\n        authorizedMinter = 0x2BCfFAc2B9EB65C7965008AAB7228e455D81454a;\n    }\n\n    function setAuthorizedMinterStepOne(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        address minter\n    ) public {\n        // Encode the minter address to bytes\n        bytes memory prepacked = abi.encodePacked(minter);\n\n        // Perform the Lamport Master Check\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n\n        // Ensure that the Lamport Master Check passed\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n        storedNextPKH = nextPKH;\n        proposedMinters[msg.sender] = minter;\n    }\n    function viewAuthorizedMinter() public view returns (address) {\n        return authorizedMinter;\n    }\n    function setAuthorizedMinterStepTwo(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        address minter\n    ) public {\n        \n        bytes32 currentPKH = keccak256(abi.encodePacked(currentpub));\n        \n        // Check if storedNextPKH is not the same as the current PKH\n        require(currentPKH != storedNextPKH, \"LamportBase: Cannot use the same keychain twice for this function\");\n        \n        // Encode the minter address to bytes\n        bytes memory prepacked = abi.encodePacked(minter);\n\n        // Perform the Lamport Master Check\n\n        // Check that the proposed minter matches the minter in the current call\n        require(proposedMinters[msg.sender] == minter, \"MyERC20: Minter address mismatch\");\n\n        // Check if the authorized minter is either not set or matches the minter being set\n        require(authorizedMinter == address(0) || authorizedMinter == minter, \"MyERC20: Another minter already set\");\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n\n        // Ensure that the Lamport Master Check passed\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n\n        // Set the authorized minter\n        authorizedMinter = minter;\n\n        // Emit the event for setting the authorized minter\n        emit AuthorizedMinterSet(minter);\n\n        // Clear the temporary storage for the proposed minter\n        delete proposedMinters[msg.sender];\n    }\n\n    function removeAuthorizedMinterStepOne(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH\n    ) public {\n        // Encode the authorizedMinter address to bytes\n        bytes memory prepacked = abi.encodePacked(authorizedMinter);\n\n        // Perform the Lamport Master Check\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n\n        // Ensure that the Lamport Master Check passed\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n        storedNextPKH = nextPKH;\n\n        // Set the proposed minter to the zero address\n        proposedMinters[msg.sender] = address(0);\n    }\n\n    function removeAuthorizedMinterStepTwo(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH\n    ) public {\n\n        bytes32 currentPKH = keccak256(abi.encodePacked(currentpub));\n        \n        // Check if storedNextPKH is not the same as the current PKH\n        require(currentPKH != storedNextPKH, \"LamportBase: Cannot use the same keychain twice for this function\");\n        \n        // Encode the authorizedMinter to bytes\n        bytes memory prepacked = abi.encodePacked(authorizedMinter);\n\n        // Perform the Lamport Master Check\n\n        // Ensure that the Lamport Master Check passed\n\n        // Check the conditions for removing the minter\n        require(proposedMinters[msg.sender] == address(0), \"GP_Mint: No minter removal proposed\");\n        require(authorizedMinter != address(0), \"GP_Mint: No minter set\");\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n\n        // Emit the AuthorizedMinterRemoved event\n        emit AuthorizedMinterRemoved(authorizedMinter);\n\n        // Set the authorizedMinter to the zero address\n        authorizedMinter = address(0);\n\n        // Clear the temporary storage\n        delete proposedMinters[msg.sender];\n    }\n\n    // External function to mint tokens, callable by the authorized minter\n    function mintTokens(address account, uint256 amount) external {\n        require(msg.sender == authorizedMinter, \"GP_Mint: Unauthorized minter\");\n        _mint(account, amount);\n    }\n\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public pure returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address to, uint256 value) public returns (bool) {\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(_balances[msg.sender] >= value, \"ERC20: transfer amount exceeds balance\");\n\n        _balances[msg.sender] -= value;\n        _balances[to] += value;\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 value) public returns (bool) {\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(value <= _balances[from], \"ERC20: transfer amount exceeds balance\");\n        require(value <= _allowances[from][msg.sender], \"ERC20: transfer amount exceeds allowance\");\n\n        _balances[from] -= value;\n        _balances[to] += value;\n        _allowances[from][msg.sender] -= value;\n        emit Transfer(from, to, value);\n        return true;\n    }\n\n    function _mint(address account, uint256 amount) internal {\n        require(msg.sender == authorizedMinter, \"GP_Mint: Unauthorized minter\");\n        _totalSupply += amount;\n        _balances[account] += amount;\n        //emit Minted(address(0), account, amount);\n        emit Minted(msg.sender, account, amount);\n\n    }\n\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n        require(_balances[account] >= amount, \"ERC20: burn amount exceeds balance\");\n\n        _balances[account] -= amount;\n        _totalSupply -= amount;\n        emit Transfer(account, address(0), amount);\n    }\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Minted(address indexed minter, address indexed account, uint256 amount);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n",
  "sourceMap": "468:8621:0:-:0;;;1087:187;;;;;;;;;-1:-1:-1;1111:11:0;:70;;-1:-1:-1;;;;;;1111:70:0;1138:42;1111:70;;;1191:17;;;;;;;;;;;;-1:-1:-1;;;1191:17:0;;;;:5;;:17;;:5;:17;:::i;:::-;-1:-1:-1;1218:15:0;;;;;;;;;;;;-1:-1:-1;;;1218:15:0;;;;:7;;:15;;:7;:15;:::i;:::-;-1:-1:-1;1243:24:0;:22;:24::i;:::-;468:8621;;1279:489;1428:16;:61;;-1:-1:-1;;;;;;1428:61:0;1447:42;1428:61;;;1523:86;1529:42;1596:10;6604:2;;6539:74;1596:10;1582:25;;1588:19;;1582:2;:25;:::i;:::-;1573:35;;:5;:35;:::i;:::-;1523:5;:86::i;:::-;1700:16;:61;;-1:-1:-1;;;;;;1700:61:0;1719:42;1700:61;;;1279:489::o;8170:318::-;8259:16;;-1:-1:-1;;;;;8259:16:0;8245:10;:30;8237:71;;;;-1:-1:-1;;;8237:71:0;;4601:2:5;8237:71:0;;;4583:21:5;4640:2;4620:18;;;4613:30;4679;4659:18;;;4652:58;4727:18;;8237:71:0;;;;;;;;8334:6;8318:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8350:18:0;;;;;;:9;:18;;;;;:28;;8372:6;;8350:18;:28;;8372:6;;8350:28;:::i;:::-;;;;-1:-1:-1;;8445:35:0;;5032:25:5;;;-1:-1:-1;;;;;8445:35:0;;;8452:10;;8445:35;;5020:2:5;5005:18;8445:35:0;;;;;;;8170:318;;:::o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:5;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:5;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:5;;;2571:26;2522:89;-1:-1:-1;;1333:1:5;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:5;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:5;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:5;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:5:o;2726:127::-;2787:10;2782:3;2778:20;2775:1;2768:31;2818:4;2815:1;2808:15;2842:4;2839:1;2832:15;2858:416;2947:1;2984:5;2947:1;2998:270;3019:7;3009:8;3006:21;2998:270;;;3078:4;3074:1;3070:6;3066:17;3060:4;3057:27;3054:53;;;3087:18;;:::i;:::-;3137:7;3127:8;3123:22;3120:55;;;3157:16;;;;3120:55;3236:22;;;;3196:15;;;;2998:270;;;3002:3;2858:416;;;;;:::o;3279:806::-;3328:5;3358:8;3348:80;;-1:-1:-1;3399:1:5;3413:5;;3348:80;3447:4;3437:76;;-1:-1:-1;3484:1:5;3498:5;;3437:76;3529:4;3547:1;3542:59;;;;3615:1;3610:130;;;;3522:218;;3542:59;3572:1;3563:10;;3586:5;;;3610:130;3647:3;3637:8;3634:17;3631:43;;;3654:18;;:::i;:::-;-1:-1:-1;;3710:1:5;3696:16;;3725:5;;3522:218;;3824:2;3814:8;3811:16;3805:3;3799:4;3796:13;3792:36;3786:2;3776:8;3773:16;3768:2;3762:4;3759:12;3755:35;3752:77;3749:159;;;-1:-1:-1;3861:19:5;;;3893:5;;3749:159;3940:34;3965:8;3959:4;3940:34;:::i;:::-;4010:6;4006:1;4002:6;3998:19;3989:7;3986:32;3983:58;;;4021:18;;:::i;:::-;4059:20;;-1:-1:-1;3279:806:5;;;;;:::o;4090:131::-;4150:5;4179:36;4206:8;4200:4;4179:36;:::i;:::-;4170:45;4090:131;-1:-1:-1;;;4090:131:5:o;4226:168::-;4299:9;;;4330;;4347:15;;;4341:22;;4327:37;4317:71;;4368:18;;:::i;4756:125::-;4821:9;;;4842:10;;;4839:36;;;4855:18;;:::i;4886:177::-;468:8621:0;;;;;;",
  "sourcePath": "contracts/2_GP_Mint.sol",
  "type": "contract"
}