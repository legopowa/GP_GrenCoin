{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "AuthorizedMinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "AuthorizedMinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lamportBase",
      "outputs": [
        {
          "internalType": "contract ILamportBase",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        }
      ],
      "name": "removeAuthorizedMinterStepOne",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        }
      ],
      "name": "removeAuthorizedMinterStepTwo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "setAuthorizedMinterStepOne",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[2][256]",
          "name": "currentpub",
          "type": "bytes32[2][256]"
        },
        {
          "internalType": "bytes[256]",
          "name": "sig",
          "type": "bytes[256]"
        },
        {
          "internalType": "bytes32",
          "name": "nextPKH",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "setAuthorizedMinterStepTwo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/2_GP_Mint.sol"
  },
  "ast": {
    "absolutePath": "contracts/2_GP_Mint.sol",
    "exportedSymbols": {
      "GP_Mint": [
        744
      ],
      "ILamportBase": [
        21
      ]
    },
    "id": 745,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ILamportBase",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 21,
        "linearizedBaseContracts": [
          21
        ],
        "name": "ILamportBase",
        "nameLocation": "245:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "333f6111",
            "id": 20,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "performLamportMasterCheck",
            "nameLocation": "273:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "333:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "308:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 2,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "308:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 4,
                      "length": {
                        "hexValue": "32",
                        "id": 3,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "316:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "308:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 6,
                    "length": {
                      "hexValue": "323536",
                      "id": 5,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "319:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "308:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "373:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "353:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "353:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 10,
                    "length": {
                      "hexValue": "323536",
                      "id": 9,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "359:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "353:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "394:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "386:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "prepacked",
                  "nameLocation": "424:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "411:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:141:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "458:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "457:6:0"
            },
            "scope": 21,
            "src": "264:200:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 745,
        "src": "235:231:0",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GP_Mint",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 744,
        "linearizedBaseContracts": [
          744
        ],
        "name": "GP_Mint",
        "nameLocation": "477:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "56bf7b57",
            "id": 24,
            "mutability": "mutable",
            "name": "lamportBase",
            "nameLocation": "512:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 744,
            "src": "492:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILamportBase_$21",
              "typeString": "contract ILamportBase"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "ILamportBase",
                "nameLocations": [
                  "492:12:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21,
                "src": "492:12:0"
              },
              "referencedDeclaration": 21,
              "src": "492:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILamportBase_$21",
                "typeString": "contract ILamportBase"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "565:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 744,
            "src": "529:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 27,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "537:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "529:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "548:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 34,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "636:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 744,
            "src": "580:67:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 33,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "588:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "580:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 30,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "607:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "599:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "618:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "storedNextPKH",
            "nameLocation": "669:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 744,
            "src": "653:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 35,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "653:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "705:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 744,
            "src": "689:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "689:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "739:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 744,
            "src": "724:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 39,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "724:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "765:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 744,
            "src": "750:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 41,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "750:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "authorizedMinter",
            "nameLocation": "851:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 744,
            "src": "835:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 43,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "835:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "proposedMinters",
            "nameLocation": "909:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 744,
            "src": "873:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 47,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "881:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "873:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "892:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "fe7c7fcb0ae0ce6bfd0a653fa3ab6c97a51a0819e6c27cdab8a08d456338c5fa",
            "id": 52,
            "name": "AuthorizedMinterSet",
            "nameLocation": "979:19:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1015:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "999:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:24:0"
            },
            "src": "973:50:0"
          },
          {
            "anonymous": false,
            "eventSelector": "c6711413797b8a562634e98c95d50e7619d39702ed5b82ce335dc93546c3a88c",
            "id": 56,
            "name": "AuthorizedMinterRemoved",
            "nameLocation": "1034:23:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1074:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1058:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1057:24:0"
            },
            "src": "1028:54:0"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "1101:173:0",
              "statements": [
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "lamportBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1111:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILamportBase_$21",
                        "typeString": "contract ILamportBase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307842333833304145363945453539363233353565383466366262414332373446663333373936304535",
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1138:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xB3830AE69EE5962355e84f6bbAC274Ff337960E5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 60,
                        "name": "ILamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1125:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILamportBase_$21_$",
                          "typeString": "type(contract ILamportBase)"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1125:56:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILamportBase_$21",
                        "typeString": "contract ILamportBase"
                      }
                    },
                    "src": "1111:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILamportBase_$21",
                      "typeString": "contract ILamportBase"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:70:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1191:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "47504772656e73",
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1199:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_85d23d8815db0386ffcab147251f14b940cc30f01028c74f890ccc54e82161f8",
                        "typeString": "literal_string \"GPGrens\""
                      },
                      "value": "GPGrens"
                    },
                    "src": "1191:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:17:0"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1218:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "475047",
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1228:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e8ce4bb4b5e5e059c89aa7348567c209fb8542ebce9f149be0a20dbaecaf6000",
                        "typeString": "literal_string \"GPG\""
                      },
                      "value": "GPG"
                    },
                    "src": "1218:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:15:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 73,
                      "name": "_initializeMintProcess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "1243:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1243:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:24:0"
                }
              ]
            },
            "id": 77,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:2:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:0:0"
            },
            "scope": 744,
            "src": "1087:187:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "1321:374:0",
              "statements": [
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1428:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307846334139394139613238333661366663466345423834363136314239303042336431343437323336",
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1447:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xF3A99A9a2836a6fcFcEB846161B900B3d1447236"
                    },
                    "src": "1428:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1428:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307832333966413736323333353465433236353230644538373842353266313346653834623036393731",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1529:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x239fA7623354eC26520dE878B52f13Fe84b06971"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3830303030",
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1573:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_80000_by_1",
                            "typeString": "int_const 80000"
                          },
                          "value": "80000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 93,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1582:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 90,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 442,
                                      "src": "1596:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
                                        "typeString": "function () pure returns (uint8)"
                                      }
                                    },
                                    "id": 91,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1596:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 89,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1588:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 88,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1588:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1588:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1582:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 94,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1581:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1573:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 84,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "1523:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1523:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:86:0"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1659:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1686:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1678:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1678:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1678:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1659:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1659:29:0"
                }
              ]
            },
            "id": 106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializeMintProcess",
            "nameLocation": "1288:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1310:2:0"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1321:0:0"
            },
            "scope": 744,
            "src": "1279:416:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1877:464:0",
              "statements": [
                {
                  "assignments": [
                    124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 124,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "1946:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "1933:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 123,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1933:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 129,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 127,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1975:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 125,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1958:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1962:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "1958:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1958:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1933:49:0"
                },
                {
                  "assignments": [
                    131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 131,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "2042:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "2037:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 130,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2037:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 134,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2095:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 135,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2107:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 136,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2112:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 137,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "2121:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 132,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "2057:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2069:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "2057:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2057:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2037:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 141,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "2205:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2219:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2197:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2197:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:58:0"
                },
                {
                  "expression": {
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 145,
                      "name": "storedNextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2265:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 146,
                      "name": "nextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "2281:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2265:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "2265:23:0"
                },
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 149,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2298:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 152,
                      "indexExpression": {
                        "expression": {
                          "id": 150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2314:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2318:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2314:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2298:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 153,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "2328:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2298:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "2298:36:0"
                }
              ]
            },
            "functionSelector": "2a663120",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAuthorizedMinterStepOne",
            "nameLocation": "1710:26:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "1771:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1746:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 107,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1746:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 109,
                      "length": {
                        "hexValue": "32",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1754:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1746:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 111,
                    "length": {
                      "hexValue": "323536",
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1757:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1746:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1811:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1791:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 113,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1791:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 115,
                    "length": {
                      "hexValue": "323536",
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1797:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1791:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "1832:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1824:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1824:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1857:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1849:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1736:133:0"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1877:0:0"
            },
            "scope": 744,
            "src": "1701:640:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "2523:1335:0",
              "statements": [
                {
                  "assignments": [
                    175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 175,
                      "mutability": "mutable",
                      "name": "currentPKH",
                      "nameLocation": "2550:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 250,
                      "src": "2542:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 174,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2542:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 182,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 179,
                            "name": "currentpub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "2590:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          ],
                          "expression": {
                            "id": 177,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2573:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2577:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2573:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2573:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 176,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2563:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2563:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2542:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 184,
                          "name": "currentPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 175,
                          "src": "2698:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 185,
                          "name": "storedNextPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2712:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2698:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a2043616e6e6f7420757365207468652073616d65206b6579636861696e20747769636520666f7220746869732066756e6374696f6e",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2727:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bdf9454beb89511004e45aedd03e7152aa0650749bcef477fb3f83f85944a00",
                          "typeString": "literal_string \"LamportBase: Cannot use the same keychain twice for this function\""
                        },
                        "value": "LamportBase: Cannot use the same keychain twice for this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bdf9454beb89511004e45aedd03e7152aa0650749bcef477fb3f83f85944a00",
                          "typeString": "literal_string \"LamportBase: Cannot use the same keychain twice for this function\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2690:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2690:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2690:105:0"
                },
                {
                  "assignments": [
                    191
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 191,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "2873:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 250,
                      "src": "2860:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 190,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2860:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 196,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 194,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2902:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 192,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2885:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2889:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2885:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2885:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2860:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 198,
                            "name": "proposedMinters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3054:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 201,
                          "indexExpression": {
                            "expression": {
                              "id": 199,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3070:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3074:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3070:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3054:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 202,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "3085:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3054:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7945524332303a204d696e7465722061646472657373206d69736d61746368",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3093:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33a164b915b06bfe8d682ce5eb3166400dd659d2d7b8fc839105034ce2391ccd",
                          "typeString": "literal_string \"MyERC20: Minter address mismatch\""
                        },
                        "value": "MyERC20: Minter address mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33a164b915b06bfe8d682ce5eb3166400dd659d2d7b8fc839105034ce2391ccd",
                          "typeString": "literal_string \"MyERC20: Minter address mismatch\""
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3046:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3046:82:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "3046:82:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 208,
                            "name": "authorizedMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "3239:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3267:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3259:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 209,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3259:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3259:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3239:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 214,
                            "name": "authorizedMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "3273:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 215,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "3293:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3239:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7945524332303a20416e6f74686572206d696e74657220616c726561647920736574",
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3301:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad111b00b3849438767c7f5800f52786c55cc1bc1e6bddddc503e87c1eff38db",
                          "typeString": "literal_string \"MyERC20: Another minter already set\""
                        },
                        "value": "MyERC20: Another minter already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad111b00b3849438767c7f5800f52786c55cc1bc1e6bddddc503e87c1eff38db",
                          "typeString": "literal_string \"MyERC20: Another minter already set\""
                        }
                      ],
                      "id": 207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3231:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3231:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "3231:108:0"
                },
                {
                  "assignments": [
                    222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 222,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "3354:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 250,
                      "src": "3349:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 221,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3349:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 230,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 225,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "3407:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 226,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "3419:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 227,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "3424:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 228,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3433:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 223,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "3369:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3381:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "3369:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3369:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3349:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 232,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "3517:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3531:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3509:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3509:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "3509:58:0"
                },
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 236,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "3615:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 237,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "3634:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3615:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "3615:25:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 241,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "3736:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 240,
                      "name": "AuthorizedMinterSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "3716:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3716:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "EmitStatement",
                  "src": "3711:32:0"
                },
                {
                  "expression": {
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3817:34:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 244,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3824:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 247,
                      "indexExpression": {
                        "expression": {
                          "id": 245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3840:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3844:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3840:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3824:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:34:0"
                }
              ]
            },
            "functionSelector": "e951ae23",
            "id": 251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAuthorizedMinterStepTwo",
            "nameLocation": "2356:26:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "2417:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "2392:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 158,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2392:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 160,
                      "length": {
                        "hexValue": "32",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2400:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2392:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 162,
                    "length": {
                      "hexValue": "323536",
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2403:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2392:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "2457:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "2437:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 164,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2437:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 166,
                    "length": {
                      "hexValue": "323536",
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2443:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2437:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "2478:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "2470:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "2503:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "2495:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2382:133:0"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2523:0:0"
            },
            "scope": 744,
            "src": "2347:1511:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "4019:544:0",
              "statements": [
                {
                  "assignments": [
                    267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 267,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "4098:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 302,
                      "src": "4085:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 266,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4085:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 272,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 270,
                        "name": "authorizedMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "4127:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 268,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4110:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4114:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "4110:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4110:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4085:59:0"
                },
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "4204:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 302,
                      "src": "4199:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4199:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 282,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 277,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "4257:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 278,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "4269:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 279,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "4274:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 280,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "4283:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 275,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "4219:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4231:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "4219:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4219:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4199:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 284,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "4367:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4381:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4359:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4359:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "4359:58:0"
                },
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 288,
                      "name": "storedNextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "4427:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 289,
                      "name": "nextPKH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "4443:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4427:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "4427:23:0"
                },
                {
                  "expression": {
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 292,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4516:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 295,
                      "indexExpression": {
                        "expression": {
                          "id": 293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4532:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4536:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4532:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4516:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4554:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4546:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4546:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4546:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4516:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "4516:40:0"
                }
              ]
            },
            "functionSelector": "e5f855b7",
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAuthorizedMinterStepOne",
            "nameLocation": "3873:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "3937:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "3912:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 252,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3912:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 254,
                      "length": {
                        "hexValue": "32",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3920:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "3912:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 256,
                    "length": {
                      "hexValue": "323536",
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3923:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3912:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "3977:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "3957:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 258,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "3957:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 260,
                    "length": {
                      "hexValue": "323536",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3963:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3957:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "3998:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "3990:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3990:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3902:109:0"
            },
            "returnParameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4019:0:0"
            },
            "scope": 744,
            "src": "3864:699:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "4724:1188:0",
              "statements": [
                {
                  "assignments": [
                    319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 319,
                      "mutability": "mutable",
                      "name": "currentPKH",
                      "nameLocation": "4743:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 396,
                      "src": "4735:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4735:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 326,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 323,
                            "name": "currentpub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 309,
                            "src": "4783:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                              "typeString": "bytes32[2] calldata[256] calldata"
                            }
                          ],
                          "expression": {
                            "id": 321,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4766:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4770:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4766:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4766:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 320,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4756:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4756:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4735:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 328,
                          "name": "currentPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "4891:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 329,
                          "name": "storedNextPKH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "4905:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4891:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a2043616e6e6f7420757365207468652073616d65206b6579636861696e20747769636520666f7220746869732066756e6374696f6e",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4920:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bdf9454beb89511004e45aedd03e7152aa0650749bcef477fb3f83f85944a00",
                          "typeString": "literal_string \"LamportBase: Cannot use the same keychain twice for this function\""
                        },
                        "value": "LamportBase: Cannot use the same keychain twice for this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bdf9454beb89511004e45aedd03e7152aa0650749bcef477fb3f83f85944a00",
                          "typeString": "literal_string \"LamportBase: Cannot use the same keychain twice for this function\""
                        }
                      ],
                      "id": 327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4883:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4883:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "4883:105:0"
                },
                {
                  "assignments": [
                    335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 335,
                      "mutability": "mutable",
                      "name": "prepacked",
                      "nameLocation": "5068:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 396,
                      "src": "5055:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5055:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 340,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 338,
                        "name": "authorizedMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "5097:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 336,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5080:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5084:12:0",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "5080:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5080:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5055:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 342,
                            "name": "proposedMinters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "5290:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 345,
                          "indexExpression": {
                            "expression": {
                              "id": 343,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5306:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5310:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5306:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5290:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5329:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5321:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 346,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5321:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5321:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5290:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a204e6f206d696e7465722072656d6f76616c2070726f706f736564",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5333:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f83813399d7cc357b21a11c0dbe37a521ad3709a05e3244fb040e79bc0bd5d6",
                          "typeString": "literal_string \"GP_Mint: No minter removal proposed\""
                        },
                        "value": "GP_Mint: No minter removal proposed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f83813399d7cc357b21a11c0dbe37a521ad3709a05e3244fb040e79bc0bd5d6",
                          "typeString": "literal_string \"GP_Mint: No minter removal proposed\""
                        }
                      ],
                      "id": 341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5282:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5282:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "5282:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 355,
                          "name": "authorizedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "5389:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5417:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5409:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 356,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5409:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5409:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5389:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a204e6f206d696e74657220736574",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5421:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76b64a47d62a8fc72866498900144b3b8491da9a7f93d1c8acb7d9ac5f6deaec",
                          "typeString": "literal_string \"GP_Mint: No minter set\""
                        },
                        "value": "GP_Mint: No minter set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76b64a47d62a8fc72866498900144b3b8491da9a7f93d1c8acb7d9ac5f6deaec",
                          "typeString": "literal_string \"GP_Mint: No minter set\""
                        }
                      ],
                      "id": 354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5381:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5381:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "5381:65:0"
                },
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "isAuthorized",
                      "nameLocation": "5461:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 396,
                      "src": "5456:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5456:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 368,
                        "name": "currentpub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "5514:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        }
                      },
                      {
                        "id": 369,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "5526:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        }
                      },
                      {
                        "id": 370,
                        "name": "nextPKH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "5531:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 371,
                        "name": "prepacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 335,
                        "src": "5540:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes32[2] calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                          "typeString": "bytes calldata[256] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 366,
                        "name": "lamportBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5476:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILamportBase_$21",
                          "typeString": "contract ILamportBase"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5488:25:0",
                      "memberName": "performLamportMasterCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "5476:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_array$_t_bytes32_$2_memory_ptr_$256_memory_ptr_$_t_array$_t_bytes_memory_ptr_$256_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32[2] memory[256] memory,bytes memory[256] memory,bytes32,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5476:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5456:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 375,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "5568:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c6564",
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5582:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        },
                        "value": "LamportBase: Authorization failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad62c9b134124244efd23143f2d52b399863ea743b062b1040ebc159d981a400",
                          "typeString": "literal_string \"LamportBase: Authorization failed\""
                        }
                      ],
                      "id": 374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5560:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5560:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "5560:58:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 380,
                        "name": "authorizedMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "5708:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 379,
                      "name": "AuthorizedMinterRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "5684:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5684:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "EmitStatement",
                  "src": "5679:46:0"
                },
                {
                  "expression": {
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 383,
                      "name": "authorizedMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "5792:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5819:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5811:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5811:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5811:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5792:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "5792:29:0"
                },
                {
                  "expression": {
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5871:34:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 390,
                        "name": "proposedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "5878:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 393,
                      "indexExpression": {
                        "expression": {
                          "id": 391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5894:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5898:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5894:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5878:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "5871:34:0"
                }
              ]
            },
            "functionSelector": "8486e2ff",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAuthorizedMinterStepTwo",
            "nameLocation": "4578:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "currentpub",
                  "nameLocation": "4642:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "4617:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes32[2][256]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 304,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4617:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 306,
                      "length": {
                        "hexValue": "32",
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4625:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "4617:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                        "typeString": "bytes32[2]"
                      }
                    },
                    "id": 308,
                    "length": {
                      "hexValue": "323536",
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4628:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4617:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_bytes32_$2_storage_$256_storage_ptr",
                      "typeString": "bytes32[2][256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "4682:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "4662:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$256_calldata_ptr",
                    "typeString": "bytes[256]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 310,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4662:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 312,
                    "length": {
                      "hexValue": "323536",
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4668:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4662:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$256_storage_ptr",
                      "typeString": "bytes[256]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "nextPKH",
                  "nameLocation": "4703:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "4695:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4695:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4607:109:0"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4724:0:0"
            },
            "scope": 744,
            "src": "4569:1343:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "6055:120:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 405,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6073:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6077:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6073:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 407,
                          "name": "authorizedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6087:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6073:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a20556e617574686f72697a6564206d696e746572",
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6105:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        },
                        "value": "GP_Mint: Unauthorized minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        }
                      ],
                      "id": 404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6065:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6065:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "6065:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 413,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "6152:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 414,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "6161:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 412,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "6146:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6146:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "6146:22:0"
                }
              ]
            },
            "functionSelector": "f0dda65c",
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokens",
            "nameLocation": "6002:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6021:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "6013:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6013:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6038:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "6030:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6030:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6012:33:0"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6055:0:0"
            },
            "scope": 744,
            "src": "5993:182:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "6234:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 423,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "6251:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 422,
                  "id": 424,
                  "nodeType": "Return",
                  "src": "6244:12:0"
                }
              ]
            },
            "functionSelector": "06fdde03",
            "id": 426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "6191:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6195:2:0"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "6219:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6219:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6218:15:0"
            },
            "scope": 744,
            "src": "6182:81:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "6323:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 431,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "6340:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 430,
                  "id": 432,
                  "nodeType": "Return",
                  "src": "6333:14:0"
                }
              ]
            },
            "functionSelector": "95d89b41",
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "6278:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6284:2:0"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "6308:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6308:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6307:15:0"
            },
            "scope": 744,
            "src": "6269:85:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 441,
              "nodeType": "Block",
              "src": "6408:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6425:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 438,
                  "id": 440,
                  "nodeType": "Return",
                  "src": "6418:9:0"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "6369:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6377:2:0"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 442,
                  "src": "6401:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6401:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6400:7:0"
            },
            "scope": 744,
            "src": "6360:74:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "6493:36:0",
              "statements": [
                {
                  "expression": {
                    "id": 447,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "6510:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 446,
                  "id": 448,
                  "nodeType": "Return",
                  "src": "6503:19:0"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "6449:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6460:2:0"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "6484:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6484:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6483:9:0"
            },
            "scope": 744,
            "src": "6440:89:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 461,
              "nodeType": "Block",
              "src": "6601:42:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 457,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "6618:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 459,
                    "indexExpression": {
                      "id": 458,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "6628:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6618:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 456,
                  "id": 460,
                  "nodeType": "Return",
                  "src": "6611:25:0"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 462,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "6544:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6562:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "6554:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6554:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6553:17:0"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "6592:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6592:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6591:9:0"
            },
            "scope": 744,
            "src": "6535:108:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "6716:312:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 472,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 464,
                          "src": "6734:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6748:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6740:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 473,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6740:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6740:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6734:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6752:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6726:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6726:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "6726:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 482,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "6808:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 485,
                          "indexExpression": {
                            "expression": {
                              "id": 483,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6818:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6822:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6818:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6808:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 486,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 466,
                          "src": "6833:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6808:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6840:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6800:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6800:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "6800:81:0"
                },
                {
                  "expression": {
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 491,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "6892:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 494,
                      "indexExpression": {
                        "expression": {
                          "id": 492,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6902:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6906:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6902:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6892:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 495,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "6917:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6892:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "6892:30:0"
                },
                {
                  "expression": {
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 498,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "6932:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 500,
                      "indexExpression": {
                        "id": 499,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "6942:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6932:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 501,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "6949:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6932:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 503,
                  "nodeType": "ExpressionStatement",
                  "src": "6932:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 505,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6978:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6982:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6978:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 507,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "6990:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 508,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 466,
                        "src": "6994:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 504,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "6969:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6969:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "EmitStatement",
                  "src": "6964:36:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7017:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 470,
                  "id": 512,
                  "nodeType": "Return",
                  "src": "7010:11:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "6658:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 464,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6675:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "6667:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6667:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6687:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "6679:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6679:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6666:27:0"
            },
            "returnParameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 469,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "6710:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6710:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6709:6:0"
            },
            "scope": 744,
            "src": "6649:379:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "7115:51:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 523,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "7132:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 525,
                      "indexExpression": {
                        "id": 524,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "7144:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7132:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 527,
                    "indexExpression": {
                      "id": 526,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "7151:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7132:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 522,
                  "id": 528,
                  "nodeType": "Return",
                  "src": "7125:34:0"
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "7043:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7061:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "7053:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7053:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7076:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "7068:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7068:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7052:32:0"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "7106:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7106:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7105:9:0"
            },
            "scope": 744,
            "src": "7034:132:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "7243:208:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 540,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "7261:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7280:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7272:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 541,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7272:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7272:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7261:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7284:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7253:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7253:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "7253:68:0"
                },
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 549,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "7332:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 553,
                        "indexExpression": {
                          "expression": {
                            "id": 550,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7344:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7348:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7344:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7332:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 554,
                      "indexExpression": {
                        "id": 552,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "7356:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7332:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 555,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "7367:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7332:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "7332:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 559,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7396:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7400:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7396:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 561,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "7408:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 562,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "7417:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 558,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 743,
                      "src": "7387:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7387:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "EmitStatement",
                  "src": "7382:41:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7440:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 538,
                  "id": 566,
                  "nodeType": "Return",
                  "src": "7433:11:0"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "7181:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7197:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "7189:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7189:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7214:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "7206:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7206:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7188:32:0"
            },
            "returnParameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "7237:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7237:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7236:6:0"
            },
            "scope": 744,
            "src": "7172:279:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 639,
              "nodeType": "Block",
              "src": "7542:443:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 580,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 572,
                          "src": "7560:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7574:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7566:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 581,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7566:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7566:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7560:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7578:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7552:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 590,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 574,
                          "src": "7634:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 591,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "7643:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 593,
                          "indexExpression": {
                            "id": 592,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "7653:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7643:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7634:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7660:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7626:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7626:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "7626:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 599,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 574,
                          "src": "7719:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 600,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "7728:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 602,
                            "indexExpression": {
                              "id": 601,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 570,
                              "src": "7740:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7728:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 605,
                          "indexExpression": {
                            "expression": {
                              "id": 603,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7746:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7750:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7746:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7728:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7719:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7759:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7711:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7711:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "7711:91:0"
                },
                {
                  "expression": {
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 610,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7813:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 612,
                      "indexExpression": {
                        "id": 611,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 570,
                        "src": "7823:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7813:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 613,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "7832:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7813:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "7813:24:0"
                },
                {
                  "expression": {
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 616,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "7847:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 618,
                      "indexExpression": {
                        "id": 617,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "7857:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7847:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 619,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "7864:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7847:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "7847:22:0"
                },
                {
                  "expression": {
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 622,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "7879:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 626,
                        "indexExpression": {
                          "id": 623,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 570,
                          "src": "7891:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7879:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 627,
                      "indexExpression": {
                        "expression": {
                          "id": 624,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7897:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7901:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7897:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7879:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 628,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "7912:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7879:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 630,
                  "nodeType": "ExpressionStatement",
                  "src": "7879:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 632,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 570,
                        "src": "7941:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 633,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "7947:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 634,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 574,
                        "src": "7951:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 631,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "7932:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7932:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 636,
                  "nodeType": "EmitStatement",
                  "src": "7927:30:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7974:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 578,
                  "id": 638,
                  "nodeType": "Return",
                  "src": "7967:11:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "7466:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7487:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "7479:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7479:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 572,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7501:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "7493:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7493:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 574,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7513:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "7505:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7505:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7478:41:0"
            },
            "returnParameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "7536:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7536:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7535:6:0"
            },
            "scope": 744,
            "src": "7457:528:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 672,
              "nodeType": "Block",
              "src": "8048:261:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 648,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8066:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8070:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8066:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 650,
                          "name": "authorizedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "8080:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8066:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47505f4d696e743a20556e617574686f72697a6564206d696e746572",
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8098:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        },
                        "value": "GP_Mint: Unauthorized minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e8fc6b9e1770c2c34e42e6e5937e6737e7d54bfd27935a4f89682a3cac409ce",
                          "typeString": "literal_string \"GP_Mint: Unauthorized minter\""
                        }
                      ],
                      "id": 647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8058:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8058:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "8058:71:0"
                },
                {
                  "expression": {
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 655,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "8139:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 656,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "8155:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8139:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "8139:22:0"
                },
                {
                  "expression": {
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 659,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "8171:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 661,
                      "indexExpression": {
                        "id": 660,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "8181:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8171:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 662,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "8193:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8171:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "8171:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 666,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8273:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8277:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8273:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 668,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "8285:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 669,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "8294:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 665,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "8266:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8266:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "EmitStatement",
                  "src": "8261:40:0"
                }
              ]
            },
            "id": 673,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8000:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8014:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "8006:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8006:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8031:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "8023:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8023:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8005:33:0"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8048:0:0"
            },
            "scope": 744,
            "src": "7991:318:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "8372:292:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 681,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "8390:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8409:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8401:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 682,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8401:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8401:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8390:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8413:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 680,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8382:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8382:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "8382:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 691,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "8467:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 693,
                          "indexExpression": {
                            "id": 692,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 675,
                            "src": "8477:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8467:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 694,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "8489:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8467:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8497:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8459:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8459:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "8459:75:0"
                },
                {
                  "expression": {
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 699,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "8545:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 701,
                      "indexExpression": {
                        "id": 700,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "8555:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8545:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 702,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "8567:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8545:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 704,
                  "nodeType": "ExpressionStatement",
                  "src": "8545:28:0"
                },
                {
                  "expression": {
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 705,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "8583:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 706,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "8599:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8583:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "8583:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 710,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "8629:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8646:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8638:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 711,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8638:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8638:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 715,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "8650:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 709,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "8620:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8620:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "EmitStatement",
                  "src": "8615:42:0"
                }
              ]
            },
            "id": 719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8324:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8338:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "8330:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8330:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8355:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "8347:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8347:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8329:33:0"
            },
            "returnParameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8372:0:0"
            },
            "scope": 744,
            "src": "8315:349:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 727,
            "name": "Transfer",
            "nameLocation": "8676:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8701:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "8685:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8685:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 723,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8723:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "8707:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8707:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 725,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8735:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "8727:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8727:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8684:57:0"
            },
            "src": "8670:72:0"
          },
          {
            "anonymous": false,
            "eventSelector": "9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f0",
            "id": 735,
            "name": "Minted",
            "nameLocation": "8753:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "8776:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "8760:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8760:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 731,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8800:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "8784:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8784:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 733,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8817:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "8809:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8809:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8759:65:0"
            },
            "src": "8747:78:0"
          },
          {
            "anonymous": false,
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 743,
            "name": "Approval",
            "nameLocation": "8836:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 737,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "8861:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "8845:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8845:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8884:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "8868:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8868:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8901:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "8893:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8893:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8844:63:0"
            },
            "src": "8830:78:0"
          }
        ],
        "scope": 745,
        "src": "468:8442:0",
        "usedErrors": [],
        "usedEvents": [
          52,
          56,
          727,
          735,
          743
        ]
      }
    ],
    "src": "32:8879:0"
  },
  "bytecode": "60806040523480156200001157600080fd5b50600080546001600160a01b03191673b3830ae69ee5962355e84f6bbac274ff337960e517905560408051808201909152600781526647504772656e7360c81b6020820152600590620000659082620002b1565b5060408051808201909152600381526247504760e81b60208201526006906200008f9082620002b1565b506200009a620000a0565b620004d7565b600780546001600160a01b03191673f3a99a9a2836a6fcfceb846161b900b3d14472361790556200010d73239fa7623354ec26520de878b52f13fe84b06971620000e8601290565b620000f89060ff16600a62000492565b620001079062013880620004a7565b6200011f565b600780546001600160a01b0319169055565b6007546001600160a01b031633146200017e5760405162461bcd60e51b815260206004820152601c60248201527f47505f4d696e743a20556e617574686f72697a6564206d696e74657200000000604482015260640160405180910390fd5b8060046000828254620001929190620004c1565b90915550506001600160a01b03821660009081526001602052604081208054839290620001c1908490620004c1565b90915550506040518181526001600160a01b0383169033907f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023557607f821691505b6020821081036200025657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ac576000816000526020600020601f850160051c81016020861015620002875750805b601f850160051c820191505b81811015620002a85782815560010162000293565b5050505b505050565b81516001600160401b03811115620002cd57620002cd6200020a565b620002e581620002de845462000220565b846200025c565b602080601f8311600181146200031d5760008415620003045750858301515b600019600386901b1c1916600185901b178555620002a8565b600085815260208120601f198616915b828110156200034e578886015182559484019460019091019084016200032d565b50858210156200036d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003d4578160001904821115620003b857620003b86200037d565b80851615620003c657918102915b93841c939080029062000398565b509250929050565b600082620003ed575060016200048c565b81620003fc575060006200048c565b8160018114620004155760028114620004205762000440565b60019150506200048c565b60ff8411156200043457620004346200037d565b50506001821b6200048c565b5060208310610133831016604e8410600b841016171562000465575081810a6200048c565b62000471838362000393565b80600019048211156200048857620004886200037d565b0290505b92915050565b6000620004a08383620003dc565b9392505050565b80820281158282048414176200048c576200048c6200037d565b808201808211156200048c576200048c6200037d565b6113e480620004e76000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063dd62ed3e11610066578063dd62ed3e14610206578063e5f855b71461023f578063e951ae2314610252578063f0dda65c1461026557600080fd5b806370a08231146101af5780638486e2ff146101d857806395d89b41146101eb578063a9059cbb146101f357600080fd5b806323b872dd116100d357806323b872dd1461014d5780632a66312014610160578063313ce5671461017557806356bf7b571461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610278565b60405161010f9190610eb1565b60405180910390f35b61012b610126366004610ee7565b61030a565b604051901515815260200161010f565b6004545b60405190815260200161010f565b61012b61015b366004610f11565b6103d8565b61017361016e366004610f71565b6105a7565b005b6040516012815260200161010f565b600054610197906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b61013f6101bd366004610fde565b6001600160a01b031660009081526001602052604090205490565b6101736101e6366004610ff9565b61069d565b6101026108df565b61012b610201366004610ee7565b6108ee565b61013f610214366004611054565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61017361024d366004610ff9565b6109d3565b610173610260366004610f71565b610ac5565b610173610273366004610ee7565b610d21565b60606005805461028790611087565b80601f01602080910402602001604051908101604052809291908181526020018280546102b390611087565b80156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b5050505050905090565b60006001600160a01b0383166103725760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084015b60405180910390fd5b3360008181526002602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b60006001600160a01b0383166104005760405162461bcd60e51b8152600401610369906110c1565b6001600160a01b0384166000908152600160205260409020548211156104385760405162461bcd60e51b815260040161036990611104565b6001600160a01b03841660009081526002602090815260408083203384529091529020548211156104bc5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610369565b6001600160a01b038416600090815260016020526040812080548492906104e4908490611160565b90915550506001600160a01b03831660009081526001602052604081208054849290610511908490611173565b90915550506001600160a01b038416600090815260026020908152604080832033845290915281208054849290610549908490611160565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161059591815260200190565b60405180910390a35060019392505050565b6000816040516020016105ba9190611186565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f6111906106039089908990899088906004016111cc565b6020604051808303816000875af1158015610622573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064691906112ad565b9050806106655760405162461bcd60e51b8152600401610369906112cf565b505060039190915533600090815260086020526040902080546001600160a01b0319166001600160a01b039092169190911790555050565b6000836040516020016106b09190611310565b60405160208183030381529060405280519060200120905060035481036106e95760405162461bcd60e51b815260040161036990611347565b60075460405160009161070a916001600160a01b0390911690602001611186565b60408051601f19818403018152918152336000908152600860205220549091506001600160a01b03161561078c5760405162461bcd60e51b815260206004820152602360248201527f47505f4d696e743a204e6f206d696e7465722072656d6f76616c2070726f706f6044820152621cd95960ea1b6064820152608401610369565b6007546001600160a01b03166107dd5760405162461bcd60e51b815260206004820152601660248201527511d417d35a5b9d0e88139bc81b5a5b9d195c881cd95d60521b6044820152606401610369565b6000805460405163333f611160e01b81526001600160a01b039091169063333f6111906108149089908990899088906004016111cc565b6020604051808303816000875af1158015610833573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085791906112ad565b9050806108765760405162461bcd60e51b8152600401610369906112cf565b6007546040516001600160a01b03909116907fc6711413797b8a562634e98c95d50e7619d39702ed5b82ce335dc93546c3a88c90600090a25050600780546001600160a01b03199081169091553360009081526008602052604090208054909116905550505050565b60606006805461028790611087565b60006001600160a01b0383166109165760405162461bcd60e51b8152600401610369906110c1565b336000908152600160205260409020548211156109455760405162461bcd60e51b815260040161036990611104565b3360009081526001602052604081208054849290610964908490611160565b90915550506001600160a01b03831660009081526001602052604081208054849290610991908490611173565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016103c6565b6007546040516000916109f4916001600160a01b0390911690602001611186565b60408051601f19818403018152908290526000805463333f611160e01b8452919350916001600160a01b039091169063333f611190610a3d9088908890889088906004016111cc565b6020604051808303816000875af1158015610a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8091906112ad565b905080610a9f5760405162461bcd60e51b8152600401610369906112cf565b5050600355505033600090815260086020526040902080546001600160a01b0319169055565b600084604051602001610ad89190611310565b6040516020818303038152906040528051906020012090506003548103610b115760405162461bcd60e51b815260040161036990611347565b600082604051602001610b249190611186565b60408051808303601f19018152918152336000908152600860205220549091506001600160a01b03848116911614610b9e5760405162461bcd60e51b815260206004820181905260248201527f4d7945524332303a204d696e7465722061646472657373206d69736d617463686044820152606401610369565b6007546001600160a01b03161580610bc357506007546001600160a01b038481169116145b610c1b5760405162461bcd60e51b815260206004820152602360248201527f4d7945524332303a20416e6f74686572206d696e74657220616c7265616479206044820152621cd95d60ea1b6064820152608401610369565b6000805460405163333f611160e01b81526001600160a01b039091169063333f611190610c52908a908a908a9088906004016111cc565b6020604051808303816000875af1158015610c71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9591906112ad565b905080610cb45760405162461bcd60e51b8152600401610369906112cf565b600780546001600160a01b0319166001600160a01b0386169081179091556040517ffe7c7fcb0ae0ce6bfd0a653fa3ab6c97a51a0819e6c27cdab8a08d456338c5fa90600090a2505033600090815260086020526040902080546001600160a01b03191690555050505050565b6007546001600160a01b03163314610d7b5760405162461bcd60e51b815260206004820152601c60248201527f47505f4d696e743a20556e617574686f72697a6564206d696e746572000000006044820152606401610369565b610d858282610d89565b5050565b6007546001600160a01b03163314610de35760405162461bcd60e51b815260206004820152601c60248201527f47505f4d696e743a20556e617574686f72697a6564206d696e746572000000006044820152606401610369565b8060046000828254610df59190611173565b90915550506001600160a01b03821660009081526001602052604081208054839290610e22908490611173565b90915550506040518181526001600160a01b0383169033907f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050565b6000815180845260005b81811015610e9157602081850181015186830182015201610e75565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ec46020830184610e6b565b9392505050565b80356001600160a01b0381168114610ee257600080fd5b919050565b60008060408385031215610efa57600080fd5b610f0383610ecb565b946020939093013593505050565b600080600060608486031215610f2657600080fd5b610f2f84610ecb565b9250610f3d60208501610ecb565b9150604084013590509250925092565b8061400081018310156103d257600080fd5b8061200081018310156103d257600080fd5b6000806000806140608587031215610f8857600080fd5b610f928686610f4d565b935061400085013567ffffffffffffffff811115610faf57600080fd5b610fbb87828801610f5f565b9350506140208501359150610fd36140408601610ecb565b905092959194509250565b600060208284031215610ff057600080fd5b610ec482610ecb565b6000806000614040848603121561100f57600080fd5b6110198585610f4d565b925061400084013567ffffffffffffffff81111561103657600080fd5b61104286828701610f5f565b92505061402084013590509250925092565b6000806040838503121561106757600080fd5b61107083610ecb565b915061107e60208401610ecb565b90509250929050565b600181811c9082168061109b57607f821691505b6020821081036110bb57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156103d2576103d261114a565b808201808211156103d2576103d261114a565b60609190911b6bffffffffffffffffffffffff1916815260140190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006140608281018388845b6101008110156111f9576040808385379283019291909101906001016111d8565b50505061400084019190915261606083018660005b6101008110156112855785830361405f190184528135368a9003601e1901811261123757600080fd5b8901602081810191359067ffffffffffffffff82111561125657600080fd5b81360383131561126557600080fd5b6112708683856111a3565b9681019695509390930192505060010161120e565b5050856140208501528381036140408501526112a18186610e6b565b98975050505050505050565b6000602082840312156112bf57600080fd5b81518015158114610ec457600080fd5b60208082526021908201527f4c616d706f7274426173653a20417574686f72697a6174696f6e206661696c656040820152601960fa1b606082015260800190565b60008183825b61010081101561133757604080838537928301929190910190600101611316565b5050506140008201905092915050565b60208082526041908201527f4c616d706f7274426173653a2043616e6e6f7420757365207468652073616d6560408201527f206b6579636861696e20747769636520666f7220746869732066756e6374696f6060820152603760f91b608082015260a0019056fea26469706673582212204ba09dc51d5299a2c042a65c00b9cd92e96a31f8b6b2c0f22e8cda03c064691964736f6c63430008180033",
  "bytecodeSha1": "88eb711a322be4184f28efd241813d5943ecee4f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.24+commit.e11b9ed9"
  },
  "contractName": "GP_Mint",
  "coverageMap": {
    "branches": {
      "0": {
        "GP_Mint._mint": {
          "66": [
            8066,
            8096,
            true
          ]
        },
        "GP_Mint.approve": {
          "49": [
            7261,
            7282,
            true
          ]
        },
        "GP_Mint.mintTokens": {
          "65": [
            6073,
            6103,
            true
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepOne": {
          "59": [
            4367,
            4379,
            true
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepTwo": {
          "54": [
            4891,
            4918,
            true
          ],
          "55": [
            5290,
            5331,
            true
          ],
          "56": [
            5568,
            5580,
            true
          ]
        },
        "GP_Mint.setAuthorizedMinterStepOne": {
          "53": [
            2205,
            2217,
            true
          ]
        },
        "GP_Mint.setAuthorizedMinterStepTwo": {
          "60": [
            2698,
            2725,
            true
          ],
          "61": [
            3054,
            3091,
            true
          ],
          "62": [
            3239,
            3269,
            true
          ],
          "63": [
            3273,
            3299,
            true
          ],
          "64": [
            3517,
            3529,
            true
          ]
        },
        "GP_Mint.transfer": {
          "57": [
            6734,
            6750,
            true
          ],
          "58": [
            6808,
            6838,
            true
          ]
        },
        "GP_Mint.transferFrom": {
          "50": [
            7560,
            7576,
            true
          ],
          "51": [
            7634,
            7658,
            true
          ],
          "52": [
            7719,
            7757,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "GP_Mint._mint": {
          "45": [
            8058,
            8129
          ],
          "46": [
            8139,
            8161
          ],
          "47": [
            8171,
            8199
          ],
          "48": [
            8261,
            8301
          ]
        },
        "GP_Mint.allowance": {
          "3": [
            7125,
            7159
          ]
        },
        "GP_Mint.approve": {
          "5": [
            7253,
            7321
          ],
          "6": [
            7332,
            7372
          ],
          "7": [
            7382,
            7423
          ],
          "8": [
            7433,
            7444
          ]
        },
        "GP_Mint.balanceOf": {
          "2": [
            6611,
            6636
          ]
        },
        "GP_Mint.decimals": {
          "1": [
            6418,
            6427
          ]
        },
        "GP_Mint.mintTokens": {
          "43": [
            6065,
            6136
          ],
          "44": [
            6146,
            6168
          ]
        },
        "GP_Mint.name": {
          "4": [
            6244,
            6256
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepOne": {
          "33": [
            4359,
            4417
          ],
          "34": [
            4427,
            4450
          ],
          "35": [
            4516,
            4556
          ]
        },
        "GP_Mint.removeAuthorizedMinterStepTwo": {
          "20": [
            4883,
            4988
          ],
          "21": [
            5282,
            5371
          ],
          "22": [
            5381,
            5446
          ],
          "23": [
            5560,
            5618
          ],
          "24": [
            5679,
            5725
          ],
          "25": [
            5792,
            5821
          ],
          "26": [
            5871,
            5905
          ]
        },
        "GP_Mint.setAuthorizedMinterStepOne": {
          "17": [
            2197,
            2255
          ],
          "18": [
            2265,
            2288
          ],
          "19": [
            2298,
            2334
          ]
        },
        "GP_Mint.setAuthorizedMinterStepTwo": {
          "36": [
            2690,
            2795
          ],
          "37": [
            3046,
            3128
          ],
          "38": [
            3231,
            3339
          ],
          "39": [
            3509,
            3567
          ],
          "40": [
            3615,
            3640
          ],
          "41": [
            3711,
            3743
          ],
          "42": [
            3817,
            3851
          ]
        },
        "GP_Mint.symbol": {
          "27": [
            6333,
            6347
          ]
        },
        "GP_Mint.totalSupply": {
          "0": [
            6503,
            6522
          ]
        },
        "GP_Mint.transfer": {
          "28": [
            6726,
            6790
          ],
          "29": [
            6800,
            6881
          ],
          "30": [
            6892,
            6922
          ],
          "31": [
            6932,
            6954
          ],
          "32": [
            6964,
            7000
          ]
        },
        "GP_Mint.transferFrom": {
          "9": [
            7552,
            7616
          ],
          "10": [
            7626,
            7701
          ],
          "11": [
            7711,
            7802
          ],
          "12": [
            7813,
            7837
          ],
          "13": [
            7847,
            7869
          ],
          "14": [
            7879,
            7917
          ],
          "15": [
            7927,
            7957
          ],
          "16": [
            7967,
            7978
          ]
        }
      }
    }
  },
  "dependencies": [
    "ILamportBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "468:8442:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6182:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7172:279;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:5;;1262:22;1244:41;;1232:2;1217:18;7172:279:0;1104:187:5;6440:89:0;6510:12;;6440:89;;;1442:25:5;;;1430:2;1415:18;6440:89:0;1296:177:5;7457:528:0;;;;;;:::i;:::-;;:::i;1701:640::-;;;;;;:::i;:::-;;:::i;:::-;;6360:74;;;6425:2;3005:36:5;;2993:2;2978:18;6360:74:0;2863:184:5;492:31:0;;;;;-1:-1:-1;;;;;492:31:0;;;;;;-1:-1:-1;;;;;3235:32:5;;;3217:51;;3205:2;3190:18;492:31:0;3052:222:5;6535:108:0;;;;;;:::i;:::-;-1:-1:-1;;;;;6618:18:0;6592:7;6618:18;;;:9;:18;;;;;;;6535:108;4569:1343;;;;;;:::i;:::-;;:::i;6269:85::-;;;:::i;6649:379::-;;;;;;:::i;:::-;;:::i;7034:132::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7132:18:0;;;7106:7;7132:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;7034:132;3864:699;;;;;;:::i;:::-;;:::i;2347:1511::-;;;;;;:::i;:::-;;:::i;5993:182::-;;;;;;:::i;:::-;;:::i;6182:81::-;6219:13;6251:5;6244:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6182:81;:::o;7172:279::-;7237:4;-1:-1:-1;;;;;7261:21:0;;7253:68;;;;-1:-1:-1;;;7253:68:0;;4942:2:5;7253:68:0;;;4924:21:5;4981:2;4961:18;;;4954:30;5020:34;5000:18;;;4993:62;-1:-1:-1;;;5071:18:5;;;5064:32;5113:19;;7253:68:0;;;;;;;;;7344:10;7332:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;7332:32:0;;;;;;;;;;;;:40;;;7387:36;1442:25:5;;;7332:32:0;;7344:10;7387:36;;1415:18:5;7387:36:0;;;;;;;;-1:-1:-1;7440:4:0;7172:279;;;;;:::o;7457:528::-;7536:4;-1:-1:-1;;;;;7560:16:0;;7552:64;;;;-1:-1:-1;;;7552:64:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7643:15:0;;;;;;:9;:15;;;;;;7634:24;;;7626:75;;;;-1:-1:-1;;;7626:75:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7728:17:0;;;;;;:11;:17;;;;;;;;7746:10;7728:29;;;;;;;;7719:38;;;7711:91;;;;-1:-1:-1;;;7711:91:0;;6156:2:5;7711:91:0;;;6138:21:5;6195:2;6175:18;;;6168:30;6234:34;6214:18;;;6207:62;-1:-1:-1;;;6285:18:5;;;6278:38;6333:19;;7711:91:0;5954:404:5;7711:91:0;-1:-1:-1;;;;;7813:15:0;;;;;;:9;:15;;;;;:24;;7832:5;;7813:15;:24;;7832:5;;7813:24;:::i;:::-;;;;-1:-1:-1;;;;;;;7847:13:0;;;;;;:9;:13;;;;;:22;;7864:5;;7847:13;:22;;7864:5;;7847:22;:::i;:::-;;;;-1:-1:-1;;;;;;;7879:17:0;;;;;;:11;:17;;;;;;;;7897:10;7879:29;;;;;;;:38;;7912:5;;7879:17;:38;;7912:5;;7879:38;:::i;:::-;;;;;;;;7947:2;-1:-1:-1;;;;;7932:25:0;7941:4;-1:-1:-1;;;;;7932:25:0;;7951:5;7932:25;;;;1442::5;;1430:2;1415:18;;1296:177;7932:25:0;;;;;;;;-1:-1:-1;7974:4:0;7457:528;;;;;:::o;1701:640::-;1933:22;1975:6;1958:24;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1958:24:0;;;;;;;;;;2037:17;2057:11;;-1:-1:-1;;;2057:74:0;;1958:24;;-1:-1:-1;2037:17:0;-1:-1:-1;;;;;2057:11:0;;;;:37;;:74;;2095:10;;2107:3;;2112:7;;1958:24;;2057:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2037:94;;2205:12;2197:58;;;;-1:-1:-1;;;2197:58:0;;;;;;;:::i;:::-;-1:-1:-1;;2265:13:0;:23;;;;2314:10;2298:27;;;;:15;:27;;;;;:36;;-1:-1:-1;;;;;;2298:36:0;-1:-1:-1;;;;;2298:36:0;;;;;;;;;-1:-1:-1;;1701:640:0:o;4569:1343::-;4735:18;4783:10;4766:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;4756:39;;;;;;4735:60;;4905:13;;4891:10;:27;4883:105;;;;-1:-1:-1;;;4883:105:0;;;;;;;:::i;:::-;5097:16;;5080:34;;5055:22;;5080:34;;-1:-1:-1;;;;;5097:16:0;;;;5080:34;;;:::i;:::-;;;;-1:-1:-1;;5080:34:0;;;;;;;;;5306:10;5329:1;5290:27;;;:15;5080:34;5290:27;;;5080:34;;-1:-1:-1;;;;;;5290:27:0;:41;5282:89;;;;-1:-1:-1;;;5282:89:0;;11073:2:5;5282:89:0;;;11055:21:5;11112:2;11092:18;;;11085:30;11151:34;11131:18;;;11124:62;-1:-1:-1;;;11202:18:5;;;11195:33;11245:19;;5282:89:0;10871:399:5;5282:89:0;5389:16;;-1:-1:-1;;;;;5389:16:0;5381:65;;;;-1:-1:-1;;;5381:65:0;;11477:2:5;5381:65:0;;;11459:21:5;11516:2;11496:18;;;11489:30;-1:-1:-1;;;11535:18:5;;;11528:52;11597:18;;5381:65:0;11275:346:5;5381:65:0;5456:17;5476:11;;:74;;-1:-1:-1;;;5476:74:0;;-1:-1:-1;;;;;5476:11:0;;;;:37;;:74;;5514:10;;5526:3;;5531:7;;5540:9;;5476:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5456:94;;5568:12;5560:58;;;;-1:-1:-1;;;5560:58:0;;;;;;;:::i;:::-;5708:16;;5684:41;;-1:-1:-1;;;;;5708:16:0;;;;5684:41;;5708:16;;5684:41;-1:-1:-1;;5792:16:0;:29;;-1:-1:-1;;;;;;5792:29:0;;;;;;5894:10;5819:1;5878:27;;;:15;:27;;;;;5871:34;;;;;;;-1:-1:-1;;;;4569:1343:0:o;6269:85::-;6308:13;6340:7;6333:14;;;;;:::i;6649:379::-;6710:4;-1:-1:-1;;;;;6734:16:0;;6726:64;;;;-1:-1:-1;;;6726:64:0;;;;;;;:::i;:::-;6818:10;6808:21;;;;:9;:21;;;;;;:30;-1:-1:-1;6808:30:0;6800:81;;;;-1:-1:-1;;;6800:81:0;;;;;;;:::i;:::-;6902:10;6892:21;;;;:9;:21;;;;;:30;;6917:5;;6892:21;:30;;6917:5;;6892:30;:::i;:::-;;;;-1:-1:-1;;;;;;;6932:13:0;;;;;;:9;:13;;;;;:22;;6949:5;;6932:13;:22;;6949:5;;6932:22;:::i;:::-;;;;-1:-1:-1;;6969:31:0;;1442:25:5;;;-1:-1:-1;;;;;6969:31:0;;;6978:10;;6969:31;;1430:2:5;1415:18;6969:31:0;1296:177:5;3864:699:0;4127:16;;4110:34;;4085:22;;4110:34;;-1:-1:-1;;;;;4127:16:0;;;;4110:34;;;:::i;:::-;;;;-1:-1:-1;;4110:34:0;;;;;;;;;;4199:17;4219:11;;-1:-1:-1;;;4219:74:0;;4110:34;;-1:-1:-1;4199:17:0;-1:-1:-1;;;;;4219:11:0;;;;:37;;:74;;4257:10;;4269:3;;4274:7;;4110:34;;4219:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4199:94;;4367:12;4359:58;;;;-1:-1:-1;;;4359:58:0;;;;;;;:::i;:::-;-1:-1:-1;;4427:13:0;:23;-1:-1:-1;;4532:10:0;4554:1;4516:27;;;:15;:27;;;;;:40;;-1:-1:-1;;;;;;4516:40:0;;;3864:699::o;2347:1511::-;2542:18;2590:10;2573:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;2563:39;;;;;;2542:60;;2712:13;;2698:10;:27;2690:105;;;;-1:-1:-1;;;2690:105:0;;;;;;;:::i;:::-;2860:22;2902:6;2885:24;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2885:24:0;;;;;;3070:10;3054:27;;;;:15;2885:24;3054:27;;;2885:24;;-1:-1:-1;;;;;;3054:37:0;;;:27;;:37;3046:82;;;;-1:-1:-1;;;3046:82:0;;11828:2:5;3046:82:0;;;11810:21:5;;;11847:18;;;11840:30;11906:34;11886:18;;;11879:62;11958:18;;3046:82:0;11626:356:5;3046:82:0;3239:16;;-1:-1:-1;;;;;3239:16:0;:30;;:60;;-1:-1:-1;3273:16:0;;-1:-1:-1;;;;;3273:26:0;;;:16;;:26;3239:60;3231:108;;;;-1:-1:-1;;;3231:108:0;;12189:2:5;3231:108:0;;;12171:21:5;12228:2;12208:18;;;12201:30;12267:34;12247:18;;;12240:62;-1:-1:-1;;;12318:18:5;;;12311:33;12361:19;;3231:108:0;11987:399:5;3231:108:0;3349:17;3369:11;;:74;;-1:-1:-1;;;3369:74:0;;-1:-1:-1;;;;;3369:11:0;;;;:37;;:74;;3407:10;;3419:3;;3424:7;;3433:9;;3369:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3349:94;;3517:12;3509:58;;;;-1:-1:-1;;;3509:58:0;;;;;;;:::i;:::-;3615:16;:25;;-1:-1:-1;;;;;;3615:25:0;-1:-1:-1;;;;;3615:25:0;;;;;;;;3716:27;;;;-1:-1:-1;;3716:27:0;-1:-1:-1;;3840:10:0;3824:27;;;;:15;:27;;;;;3817:34;;-1:-1:-1;;;;;;3817:34:0;;;-1:-1:-1;;;;;2347:1511:0:o;5993:182::-;6087:16;;-1:-1:-1;;;;;6087:16:0;6073:10;:30;6065:71;;;;-1:-1:-1;;;6065:71:0;;12593:2:5;6065:71:0;;;12575:21:5;12632:2;12612:18;;;12605:30;12671;12651:18;;;12644:58;12719:18;;6065:71:0;12391:352:5;6065:71:0;6146:22;6152:7;6161:6;6146:5;:22::i;:::-;5993:182;;:::o;7991:318::-;8080:16;;-1:-1:-1;;;;;8080:16:0;8066:10;:30;8058:71;;;;-1:-1:-1;;;8058:71:0;;12593:2:5;8058:71:0;;;12575:21:5;12632:2;12612:18;;;12605:30;12671;12651:18;;;12644:58;12719:18;;8058:71:0;12391:352:5;8058:71:0;8155:6;8139:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8171:18:0;;;;;;:9;:18;;;;;:28;;8193:6;;8171:18;:28;;8193:6;;8171:28;:::i;:::-;;;;-1:-1:-1;;8266:35:0;;1442:25:5;;;-1:-1:-1;;;;;8266:35:0;;;8273:10;;8266:35;;1430:2:5;1415:18;8266:35:0;;;;;;;7991:318;;:::o;14:423:5:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:5:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:5;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:5:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;1811:177::-;1920:6;1953:5;1941:18;;1938:27;-1:-1:-1;1935:47:5;;;1978:1;1975;1968:12;1993:168;2094:6;2127:4;2115:17;;2112:26;-1:-1:-1;2109:46:5;;;2151:1;2148;2141:12;2166:692;2342:6;2350;2358;2366;2419:5;2407:9;2398:7;2394:23;2390:35;2387:55;;;2438:1;2435;2428:12;2387:55;2461:68;2521:7;2510:9;2461:68;:::i;:::-;2451:78;;2580:5;2569:9;2565:21;2552:35;2610:18;2602:6;2599:30;2596:50;;;2642:1;2639;2632:12;2596:50;2665:73;2730:7;2721:6;2710:9;2706:22;2665:73;:::i;:::-;2655:83;;;2785:5;2774:9;2770:21;2757:35;2747:45;;2811:41;2845:5;2834:9;2830:21;2811:41;:::i;:::-;2801:51;;2166:692;;;;;;;:::o;3279:186::-;3338:6;3391:2;3379:9;3370:7;3366:23;3362:32;3359:52;;;3407:1;3404;3397:12;3359:52;3430:29;3449:9;3430:29;:::i;3470:615::-;3637:6;3645;3653;3706:5;3694:9;3685:7;3681:23;3677:35;3674:55;;;3725:1;3722;3715:12;3674:55;3748:68;3808:7;3797:9;3748:68;:::i;:::-;3738:78;;3867:5;3856:9;3852:21;3839:35;3897:18;3889:6;3886:30;3883:50;;;3929:1;3926;3919:12;3883:50;3952:73;4017:7;4008:6;3997:9;3993:22;3952:73;:::i;:::-;3942:83;;;4072:5;4061:9;4057:21;4044:35;4034:45;;3470:615;;;;;:::o;4090:260::-;4158:6;4166;4219:2;4207:9;4198:7;4194:23;4190:32;4187:52;;;4235:1;4232;4225:12;4187:52;4258:29;4277:9;4258:29;:::i;:::-;4248:39;;4306:38;4340:2;4329:9;4325:18;4306:38;:::i;:::-;4296:48;;4090:260;;;;;:::o;4355:380::-;4434:1;4430:12;;;;4477;;;4498:61;;4552:4;4544:6;4540:17;4530:27;;4498:61;4605:2;4597:6;4594:14;4574:18;4571:38;4568:161;;4651:10;4646:3;4642:20;4639:1;4632:31;4686:4;4683:1;4676:15;4714:4;4711:1;4704:15;4568:161;;4355:380;;;:::o;5143:399::-;5345:2;5327:21;;;5384:2;5364:18;;;5357:30;5423:34;5418:2;5403:18;;5396:62;-1:-1:-1;;;5489:2:5;5474:18;;5467:33;5532:3;5517:19;;5143:399::o;5547:402::-;5749:2;5731:21;;;5788:2;5768:18;;;5761:30;5827:34;5822:2;5807:18;;5800:62;-1:-1:-1;;;5893:2:5;5878:18;;5871:36;5939:3;5924:19;;5547:402::o;6363:127::-;6424:10;6419:3;6415:20;6412:1;6405:31;6455:4;6452:1;6445:15;6479:4;6476:1;6469:15;6495:128;6562:9;;;6583:11;;;6580:37;;;6597:18;;:::i;6628:125::-;6693:9;;;6714:10;;;6711:36;;;6727:18;;:::i;6758:229::-;6907:2;6903:15;;;;-1:-1:-1;;6899:53:5;6887:66;;6978:2;6969:12;;6758:229::o;6992:266::-;7080:6;7075:3;7068:19;7132:6;7125:5;7118:4;7113:3;7109:14;7096:43;-1:-1:-1;7184:1:5;7159:16;;;7177:4;7155:27;;;7148:38;;;;7240:2;7219:15;;;-1:-1:-1;;7215:29:5;7206:39;;;7202:50;;6992:266::o;7263:1875::-;7629:4;7658:5;7686:18;;;7690:9;7781:6;7629:4;7815:199;7829:6;7826:1;7823:13;7815:199;;;7888:4;7931:2;7923:6;7918:3;7905:29;7954:12;;;;7989:15;;;;;7851:1;7844:9;7815:199;;;-1:-1:-1;;;8045:5:5;8030:21;;8023:33;;;;8146:5;8131:21;;8177:6;8203:1;8213:761;8229:6;8224:3;8221:15;8213:761;;;8300:22;;;-1:-1:-1;;8296:39:5;8282:54;;8375:22;;8452:14;8448:27;;;-1:-1:-1;;8444:41:5;8420:66;;8410:94;;8500:1;8497;8490:12;8410:94;8530:31;;8630:4;8662:14;;;;8588:19;;8703:18;8692:30;;8689:50;;;8735:1;8732;8725:12;8689:50;8788:6;8772:14;8768:27;8759:7;8755:41;8752:61;;;8809:1;8806;8799:12;8752:61;8836:50;8879:6;8871;8862:7;8836:50;:::i;:::-;8950:14;;;;8826:60;-1:-1:-1;8911:17:5;;;;;-1:-1:-1;;8255:1:5;8246:11;8213:761;;;8217:3;;9013:6;9005:5;8994:9;8990:21;8983:37;9071:9;9063:6;9059:22;9051:5;9040:9;9036:21;9029:53;9099:33;9125:6;9117;9099:33;:::i;:::-;9091:41;7263:1875;-1:-1:-1;;;;;;;;7263:1875:5:o;9143:277::-;9210:6;9263:2;9251:9;9242:7;9238:23;9234:32;9231:52;;;9279:1;9276;9269:12;9231:52;9311:9;9305:16;9364:5;9357:13;9350:21;9343:5;9340:32;9330:60;;9386:1;9383;9376:12;9425:397;9627:2;9609:21;;;9666:2;9646:18;;;9639:30;9705:34;9700:2;9685:18;;9678:62;-1:-1:-1;;;9771:2:5;9756:18;;9749:31;9812:3;9797:19;;9425:397::o;9827:565::-;10038:3;10069;10116:6;10038:3;10150:205;10164:6;10161:1;10158:13;10150:205;;;10223:4;10268:2;10260:6;10253:5;10240:31;10293:14;;;;10330:15;;;;;10186:1;10179:9;10150:205;;;10154:3;;;10380:5;10375:3;10371:15;10364:22;;9827:565;;;;:::o;10397:469::-;10599:2;10581:21;;;10638:2;10618:18;;;10611:30;10677:34;10672:2;10657:18;;10650:62;10748:34;10743:2;10728:18;;10721:62;-1:-1:-1;;;10814:3:5;10799:19;;10792:32;10856:3;10841:19;;10397:469::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    468,
    8910
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xE5F855B7 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xE951AE23 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8486E2FF EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x2A663120 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x56BF7B57 EQ PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x197 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH2 0x102 PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x12B PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x13F PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x287 SWAP1 PUSH2 0x1087 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B3 SWAP1 PUSH2 0x1087 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x300 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x300 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x369 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4E4 SWAP1 DUP5 SWAP1 PUSH2 0x1160 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x511 SWAP1 DUP5 SWAP1 PUSH2 0x1173 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x549 SWAP1 DUP5 SWAP1 PUSH2 0x1160 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP5 MSTORE SWAP2 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0x603 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x12CF JUMP JUMPDEST POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x3 SLOAD DUP2 SUB PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x70A SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 ADD PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47505F4D696E743A204E6F206D696E7465722072656D6F76616C2070726F706F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x369 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11D417D35A5B9D0E88139BC81B5A5B9D195C881CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x369 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0x814 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x833 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x857 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xC6711413797B8A562634E98C95D50E7619D39702ED5B82CE335DC93546C3A88C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x287 SWAP1 PUSH2 0x1087 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x916 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x1104 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x964 SWAP1 DUP5 SWAP1 PUSH2 0x1160 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x991 SWAP1 DUP5 SWAP1 PUSH2 0x1173 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x9F4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 ADD PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP5 MSTORE SWAP2 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0xA3D SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA80 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x12CF JUMP JUMPDEST POP POP PUSH1 0x3 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x3 SLOAD DUP2 SUB PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7945524332303A204D696E7465722061646472657373206D69736D61746368 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x369 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0xBC3 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7945524332303A20416E6F74686572206D696E74657220616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x369 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x333F6111 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x333F6111 SWAP1 PUSH2 0xC52 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xFE7C7FCB0AE0CE6BFD0A653FA3AB6C97A51A0819E6C27CDAB8A08D456338C5FA SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x369 JUMP JUMPDEST PUSH2 0xD85 DUP3 DUP3 PUSH2 0xD89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x369 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDF5 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xE22 SWAP1 DUP5 SWAP1 PUSH2 0x1173 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH32 0x9D228D69B5FDB8D273A2336F8FB8612D039631024EA9BF09C424A9503AA078F0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE75 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xEC4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE6B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF03 DUP4 PUSH2 0xECB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2F DUP5 PUSH2 0xECB JUMP JUMPDEST SWAP3 POP PUSH2 0xF3D PUSH1 0x20 DUP6 ADD PUSH2 0xECB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 PUSH2 0x4000 DUP2 ADD DUP4 LT ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x2000 DUP2 ADD DUP4 LT ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4060 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF92 DUP7 DUP7 PUSH2 0xF4D JUMP JUMPDEST SWAP4 POP PUSH2 0x4000 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFBB DUP8 DUP3 DUP9 ADD PUSH2 0xF5F JUMP JUMPDEST SWAP4 POP POP PUSH2 0x4020 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0xFD3 PUSH2 0x4040 DUP7 ADD PUSH2 0xECB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC4 DUP3 PUSH2 0xECB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4040 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x100F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1019 DUP6 DUP6 PUSH2 0xF4D JUMP JUMPDEST SWAP3 POP PUSH2 0x4000 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1042 DUP7 DUP3 DUP8 ADD PUSH2 0xF5F JUMP JUMPDEST SWAP3 POP POP PUSH2 0x4020 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1070 DUP4 PUSH2 0xECB JUMP JUMPDEST SWAP2 POP PUSH2 0x107E PUSH1 0x20 DUP5 ADD PUSH2 0xECB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x109B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3D2 JUMPI PUSH2 0x3D2 PUSH2 0x114A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3D2 JUMPI PUSH2 0x3D2 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4060 DUP3 DUP2 ADD DUP4 DUP9 DUP5 JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x11F9 JUMPI PUSH1 0x40 DUP1 DUP4 DUP6 CALLDATACOPY SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11D8 JUMP JUMPDEST POP POP POP PUSH2 0x4000 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x6060 DUP4 ADD DUP7 PUSH1 0x0 JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x1285 JUMPI DUP6 DUP4 SUB PUSH2 0x405F NOT ADD DUP5 MSTORE DUP2 CALLDATALOAD CALLDATASIZE DUP11 SWAP1 SUB PUSH1 0x1E NOT ADD DUP2 SLT PUSH2 0x1237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 ADD PUSH1 0x20 DUP2 DUP2 ADD SWAP2 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1270 DUP7 DUP4 DUP6 PUSH2 0x11A3 JUMP JUMPDEST SWAP7 DUP2 ADD SWAP7 SWAP6 POP SWAP4 SWAP1 SWAP4 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x120E JUMP JUMPDEST POP POP DUP6 PUSH2 0x4020 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH2 0x4040 DUP6 ADD MSTORE PUSH2 0x12A1 DUP2 DUP7 PUSH2 0xE6B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A20417574686F72697A6174696F6E206661696C65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP3 JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x1337 JUMPI PUSH1 0x40 DUP1 DUP4 DUP6 CALLDATACOPY SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1316 JUMP JUMPDEST POP POP POP PUSH2 0x4000 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x41 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C616D706F7274426173653A2043616E6E6F7420757365207468652073616D65 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206B6579636861696E20747769636520666F7220746869732066756E6374696F PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B LOG0 SWAP14 0xC5 SAR MSTORE SWAP10 LOG2 0xC0 TIMESTAMP 0xA6 TLOAD STOP 0xB9 0xCD SWAP3 0xE9 PUSH11 0x31F8B6B2C0F22E8CDA03C0 PUSH5 0x691964736F PUSH13 0x63430008180033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        468,
        8910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "49": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "60": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x206"
    },
    "64": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE5F855B7"
    },
    "71": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23F"
    },
    "75": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE951AE23"
    },
    "82": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x252"
    },
    "86": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF0DDA65C"
    },
    "93": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265"
    },
    "97": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "109": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "113": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8486E2FF"
    },
    "120": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D8"
    },
    "124": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB"
    },
    "135": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "142": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "146": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "150": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "REVERT",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "158": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "GT",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "169": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "173": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2A663120"
    },
    "180": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "184": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x175"
    },
    "195": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x56BF7B57"
    },
    "202": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "206": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "REVERT",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "218": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "229": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118"
    },
    "233": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "240": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "EQ",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B"
    },
    "244": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        468,
        8910
      ],
      "op": "REVERT",
      "path": "0"
    },
    "250": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "251": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "254": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x278"
    },
    "257": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        6182,
        6263
      ],
      "op": "JUMP",
      "path": "0"
    },
    "258": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "259": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "261": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "262": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "265": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "266": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "267": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB1"
    },
    "270": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        6182,
        6263
      ],
      "op": "JUMP",
      "path": "0"
    },
    "271": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "272": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "274": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "275": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "DUP1",
      "path": "0"
    },
    "276": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "277": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "SUB",
      "path": "0"
    },
    "278": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "279": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "RETURN",
      "path": "0"
    },
    "280": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "281": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B"
    },
    "284": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126"
    },
    "287": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "288": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "290": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE7"
    },
    "293": {
      "fn": "GP_Mint.approve",
      "jump": "i",
      "offset": [
        7172,
        7451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "294": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "295": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30A"
    },
    "298": {
      "fn": "GP_Mint.approve",
      "jump": "i",
      "offset": [
        7172,
        7451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "299": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "300": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "302": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "303": {
      "op": "SWAP1"
    },
    "304": {
      "op": "ISZERO"
    },
    "305": {
      "op": "ISZERO"
    },
    "306": {
      "op": "DUP2"
    },
    "307": {
      "op": "MSTORE"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "310": {
      "op": "ADD"
    },
    "311": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "314": {
      "op": "JUMP"
    },
    "315": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6440,
        6529
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "316": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6510,
        6522
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x4"
    },
    "318": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6510,
        6522
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "319": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6440,
        6529
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "320": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6440,
        6529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "322": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6440,
        6529
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "323": {
      "op": "SWAP1"
    },
    "324": {
      "op": "DUP2"
    },
    "325": {
      "op": "MSTORE"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "328": {
      "op": "ADD"
    },
    "329": {
      "fn": "GP_Mint.totalSupply",
      "offset": [
        6440,
        6529
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "332": {
      "op": "JUMP"
    },
    "333": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B"
    },
    "337": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B"
    },
    "340": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "341": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "343": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF11"
    },
    "346": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7457,
        7985
      ],
      "op": "JUMP",
      "path": "0"
    },
    "347": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "348": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D8"
    },
    "351": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7457,
        7985
      ],
      "op": "JUMP",
      "path": "0"
    },
    "352": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1701,
        2341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "353": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1701,
        2341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "356": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1701,
        2341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E"
    },
    "359": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1701,
        2341
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "360": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1701,
        2341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "362": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1701,
        2341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF71"
    },
    "365": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        1701,
        2341
      ],
      "op": "JUMP",
      "path": "0"
    },
    "366": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1701,
        2341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "367": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1701,
        2341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A7"
    },
    "370": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        1701,
        2341
      ],
      "op": "JUMP",
      "path": "0"
    },
    "371": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1701,
        2341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "372": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1701,
        2341
      ],
      "op": "STOP",
      "path": "0"
    },
    "373": {
      "fn": "GP_Mint.decimals",
      "offset": [
        6360,
        6434
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "374": {
      "fn": "GP_Mint.decimals",
      "offset": [
        6360,
        6434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "376": {
      "fn": "GP_Mint.decimals",
      "offset": [
        6360,
        6434
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "377": {
      "fn": "GP_Mint.decimals",
      "offset": [
        6425,
        6427
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x12"
    },
    "379": {
      "op": "DUP2"
    },
    "380": {
      "op": "MSTORE"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "383": {
      "op": "ADD"
    },
    "384": {
      "fn": "GP_Mint.decimals",
      "offset": [
        6360,
        6434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "387": {
      "op": "JUMP"
    },
    "388": {
      "offset": [
        492,
        523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "391": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "392": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x197"
    },
    "395": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "402": {
      "op": "SHL"
    },
    "403": {
      "op": "SUB"
    },
    "404": {
      "offset": [
        492,
        523
      ],
      "op": "AND",
      "path": "0"
    },
    "405": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "406": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "JUMP",
      "path": "0"
    },
    "407": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "408": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "410": {
      "fn": "GP_Mint.decimals",
      "offset": [
        492,
        523
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "417": {
      "op": "SHL"
    },
    "418": {
      "op": "SUB"
    },
    "419": {
      "op": "SWAP1"
    },
    "420": {
      "op": "SWAP2"
    },
    "421": {
      "op": "AND"
    },
    "422": {
      "op": "DUP2"
    },
    "423": {
      "op": "MSTORE"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "426": {
      "op": "ADD"
    },
    "427": {
      "offset": [
        492,
        523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "430": {
      "op": "JUMP"
    },
    "431": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6535,
        6643
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6535,
        6643
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F"
    },
    "435": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6535,
        6643
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BD"
    },
    "438": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6535,
        6643
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "439": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6535,
        6643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "441": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6535,
        6643
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDE"
    },
    "444": {
      "fn": "GP_Mint.balanceOf",
      "jump": "i",
      "offset": [
        6535,
        6643
      ],
      "op": "JUMP",
      "path": "0"
    },
    "445": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6535,
        6643
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "452": {
      "op": "SHL"
    },
    "453": {
      "op": "SUB"
    },
    "454": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6636
      ],
      "op": "AND",
      "path": "0",
      "statement": 2
    },
    "455": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6592,
        6599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "457": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "458": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6636
      ],
      "op": "DUP2",
      "path": "0"
    },
    "459": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6636
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "460": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "462": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "464": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6636
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "465": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "467": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "468": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6636
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "469": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6636
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "470": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6618,
        6636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "471": {
      "fn": "GP_Mint.balanceOf",
      "offset": [
        6535,
        6643
      ],
      "op": "JUMP",
      "path": "0"
    },
    "472": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4569,
        5912
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "473": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4569,
        5912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "476": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4569,
        5912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6"
    },
    "479": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4569,
        5912
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "480": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4569,
        5912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "482": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4569,
        5912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF9"
    },
    "485": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4569,
        5912
      ],
      "op": "JUMP",
      "path": "0"
    },
    "486": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4569,
        5912
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "487": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4569,
        5912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69D"
    },
    "490": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4569,
        5912
      ],
      "op": "JUMP",
      "path": "0"
    },
    "491": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6269,
        6354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "492": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6269,
        6354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "495": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6269,
        6354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8DF"
    },
    "498": {
      "fn": "GP_Mint.symbol",
      "jump": "i",
      "offset": [
        6269,
        6354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "499": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6649,
        7028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "500": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6649,
        7028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B"
    },
    "503": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6649,
        7028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201"
    },
    "506": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6649,
        7028
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "507": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6649,
        7028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "509": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6649,
        7028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE7"
    },
    "512": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6649,
        7028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "513": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6649,
        7028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "514": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6649,
        7028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EE"
    },
    "517": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6649,
        7028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "518": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7034,
        7166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "519": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7034,
        7166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F"
    },
    "522": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7034,
        7166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x214"
    },
    "525": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7034,
        7166
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "526": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7034,
        7166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "528": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7034,
        7166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1054"
    },
    "531": {
      "fn": "GP_Mint.allowance",
      "jump": "i",
      "offset": [
        7034,
        7166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "532": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7034,
        7166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "539": {
      "op": "SHL"
    },
    "540": {
      "op": "SUB"
    },
    "541": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 3
    },
    "542": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "DUP3",
      "path": "0"
    },
    "543": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "AND",
      "path": "0"
    },
    "544": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7106,
        7113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "546": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "547": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "DUP2",
      "path": "0"
    },
    "548": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "549": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "551": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "553": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "554": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "DUP2",
      "path": "0"
    },
    "555": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "556": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "558": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "DUP1",
      "path": "0"
    },
    "559": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "DUP4",
      "path": "0"
    },
    "560": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7150
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "561": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "562": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "563": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "564": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "AND",
      "path": "0"
    },
    "565": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "DUP3",
      "path": "0"
    },
    "566": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "567": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "568": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "569": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "570": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "571": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "572": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "573": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7132,
        7159
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "574": {
      "fn": "GP_Mint.allowance",
      "offset": [
        7034,
        7166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "575": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3864,
        4563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "576": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3864,
        4563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "579": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3864,
        4563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24D"
    },
    "582": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3864,
        4563
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "583": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3864,
        4563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "585": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3864,
        4563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF9"
    },
    "588": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        3864,
        4563
      ],
      "op": "JUMP",
      "path": "0"
    },
    "589": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3864,
        4563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "590": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3864,
        4563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D3"
    },
    "593": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        3864,
        4563
      ],
      "op": "JUMP",
      "path": "0"
    },
    "594": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2347,
        3858
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "595": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2347,
        3858
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "598": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2347,
        3858
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "601": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2347,
        3858
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "602": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2347,
        3858
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "604": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2347,
        3858
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF71"
    },
    "607": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2347,
        3858
      ],
      "op": "JUMP",
      "path": "0"
    },
    "608": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2347,
        3858
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "609": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2347,
        3858
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "612": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2347,
        3858
      ],
      "op": "JUMP",
      "path": "0"
    },
    "613": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5993,
        6175
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "614": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5993,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "617": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5993,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x273"
    },
    "620": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5993,
        6175
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "621": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5993,
        6175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "623": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5993,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE7"
    },
    "626": {
      "fn": "GP_Mint.mintTokens",
      "jump": "i",
      "offset": [
        5993,
        6175
      ],
      "op": "JUMP",
      "path": "0"
    },
    "627": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5993,
        6175
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "628": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5993,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD21"
    },
    "631": {
      "fn": "GP_Mint.mintTokens",
      "jump": "i",
      "offset": [
        5993,
        6175
      ],
      "op": "JUMP",
      "path": "0"
    },
    "632": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "633": {
      "fn": "GP_Mint.name",
      "offset": [
        6219,
        6232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "635": {
      "fn": "GP_Mint.name",
      "offset": [
        6251,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x5"
    },
    "637": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "638": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "639": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "642": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "643": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1087"
    },
    "646": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        6244,
        6256
      ],
      "op": "JUMP",
      "path": "0"
    },
    "647": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "648": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "649": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "651": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "ADD",
      "path": "0"
    },
    "652": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "654": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "655": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "656": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DIV",
      "path": "0"
    },
    "657": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "MUL",
      "path": "0"
    },
    "658": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "660": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "ADD",
      "path": "0"
    },
    "661": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "663": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "664": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "665": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "666": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "ADD",
      "path": "0"
    },
    "667": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "669": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "670": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "671": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "672": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "673": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "674": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "675": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "676": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "677": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "679": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "ADD",
      "path": "0"
    },
    "680": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP3",
      "path": "0"
    },
    "681": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "682": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "683": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3"
    },
    "686": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "687": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1087"
    },
    "690": {
      "fn": "GP_Mint.name",
      "jump": "i",
      "offset": [
        6244,
        6256
      ],
      "op": "JUMP",
      "path": "0"
    },
    "691": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "692": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "693": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "694": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x300"
    },
    "697": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "698": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "699": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "701": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "LT",
      "path": "0"
    },
    "702": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "705": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "706": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "709": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "710": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP4",
      "path": "0"
    },
    "711": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "712": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DIV",
      "path": "0"
    },
    "713": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "MUL",
      "path": "0"
    },
    "714": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP4",
      "path": "0"
    },
    "715": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "716": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "717": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "719": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "ADD",
      "path": "0"
    },
    "720": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "721": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x300"
    },
    "724": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "JUMP",
      "path": "0"
    },
    "725": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP3",
      "path": "0"
    },
    "727": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "ADD",
      "path": "0"
    },
    "728": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "729": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "730": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "732": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "733": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "735": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "737": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "738": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "739": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "741": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "742": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "743": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "744": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "745": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "747": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "ADD",
      "path": "0"
    },
    "748": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "749": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "751": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "ADD",
      "path": "0"
    },
    "752": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "753": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP4",
      "path": "0"
    },
    "754": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "GT",
      "path": "0"
    },
    "755": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "758": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "759": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP3",
      "path": "0"
    },
    "760": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "761": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SUB",
      "path": "0"
    },
    "762": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "764": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "AND",
      "path": "0"
    },
    "765": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "DUP3",
      "path": "0"
    },
    "766": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "ADD",
      "path": "0"
    },
    "767": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "768": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "769": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "POP",
      "path": "0"
    },
    "770": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "POP",
      "path": "0"
    },
    "771": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "POP",
      "path": "0"
    },
    "772": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "POP",
      "path": "0"
    },
    "773": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "POP",
      "path": "0"
    },
    "774": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "775": {
      "fn": "GP_Mint.name",
      "offset": [
        6244,
        6256
      ],
      "op": "POP",
      "path": "0"
    },
    "776": {
      "fn": "GP_Mint.name",
      "offset": [
        6182,
        6263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "777": {
      "fn": "GP_Mint.name",
      "jump": "o",
      "offset": [
        6182,
        6263
      ],
      "op": "JUMP",
      "path": "0"
    },
    "778": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "779": {
      "fn": "GP_Mint.approve",
      "offset": [
        7237,
        7241
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "op": "SUB"
    },
    "789": {
      "fn": "GP_Mint.approve",
      "offset": [
        7261,
        7282
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 5
    },
    "790": {
      "branch": 49,
      "fn": "GP_Mint.approve",
      "offset": [
        7261,
        7282
      ],
      "op": "AND",
      "path": "0"
    },
    "791": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x372"
    },
    "794": {
      "branch": 49,
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "795": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "797": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "798": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "DUP2",
      "path": "0"
    },
    "806": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "809": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "811": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "DUP3",
      "path": "0"
    },
    "812": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "ADD",
      "path": "0"
    },
    "813": {
      "op": "MSTORE"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "856": {
      "op": "DUP3"
    },
    "857": {
      "op": "ADD"
    },
    "858": {
      "op": "MSTORE"
    },
    "859": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "867": {
      "op": "DUP3"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "op": "MSTORE"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "872": {
      "op": "ADD"
    },
    "873": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "874": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "876": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "877": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "878": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "879": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "SUB",
      "path": "0"
    },
    "880": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "881": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "882": {
      "fn": "GP_Mint.approve",
      "offset": [
        7253,
        7321
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "883": {
      "fn": "GP_Mint.approve",
      "offset": [
        7344,
        7354
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 6
    },
    "884": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "886": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "887": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "888": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "889": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "891": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "893": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "894": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "895": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "896": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "898": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "899": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "DUP4",
      "path": "0"
    },
    "900": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7355
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "907": {
      "op": "SHL"
    },
    "908": {
      "op": "SUB"
    },
    "909": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "DUP9",
      "path": "0"
    },
    "910": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "AND",
      "path": "0"
    },
    "911": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "DUP1",
      "path": "0"
    },
    "912": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "DUP6",
      "path": "0"
    },
    "913": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "914": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "915": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "DUP4",
      "path": "0"
    },
    "916": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "917": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "918": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "DUP2",
      "path": "0"
    },
    "919": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "920": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "921": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7372
      ],
      "op": "DUP7",
      "path": "0"
    },
    "922": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7372
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "923": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7372
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "924": {
      "fn": "GP_Mint.approve",
      "offset": [
        7387,
        7423
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 7
    },
    "925": {
      "op": "DUP6"
    },
    "926": {
      "op": "DUP2"
    },
    "927": {
      "op": "MSTORE"
    },
    "928": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "929": {
      "fn": "GP_Mint.approve",
      "offset": [
        7332,
        7364
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "930": {
      "fn": "GP_Mint.approve",
      "offset": [
        7344,
        7354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "931": {
      "fn": "GP_Mint.approve",
      "offset": [
        7387,
        7423
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "964": {
      "fn": "GP_Mint.approve",
      "offset": [
        7387,
        7423
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "fn": "GP_Mint.approve",
      "offset": [
        7387,
        7423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "967": {
      "fn": "GP_Mint.approve",
      "offset": [
        7387,
        7423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "969": {
      "fn": "GP_Mint.approve",
      "offset": [
        7387,
        7423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "970": {
      "fn": "GP_Mint.approve",
      "offset": [
        7387,
        7423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "971": {
      "fn": "GP_Mint.approve",
      "offset": [
        7387,
        7423
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "972": {
      "fn": "GP_Mint.approve",
      "offset": [
        7387,
        7423
      ],
      "op": "SUB",
      "path": "0"
    },
    "973": {
      "fn": "GP_Mint.approve",
      "offset": [
        7387,
        7423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "974": {
      "fn": "GP_Mint.approve",
      "offset": [
        7387,
        7423
      ],
      "op": "LOG3",
      "path": "0"
    },
    "975": {
      "op": "POP"
    },
    "976": {
      "fn": "GP_Mint.approve",
      "offset": [
        7440,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "978": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "979": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "980": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "981": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "POP",
      "path": "0"
    },
    "982": {
      "fn": "GP_Mint.approve",
      "offset": [
        7172,
        7451
      ],
      "op": "POP",
      "path": "0"
    },
    "983": {
      "fn": "GP_Mint.approve",
      "jump": "o",
      "offset": [
        7172,
        7451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "984": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "985": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7536,
        7540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "993": {
      "op": "SHL"
    },
    "994": {
      "op": "SUB"
    },
    "995": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7560,
        7576
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 9
    },
    "996": {
      "branch": 50,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7560,
        7576
      ],
      "op": "AND",
      "path": "0"
    },
    "997": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x400"
    },
    "1000": {
      "branch": 50,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1001": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1003": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1004": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1010": {
      "op": "SHL"
    },
    "1011": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1012": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1013": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1015": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "ADD",
      "path": "0"
    },
    "1016": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1019": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1020": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C1"
    },
    "1023": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7552,
        7616
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1024": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7552,
        7616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 10
    },
    "1034": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "AND",
      "path": "0"
    },
    "1035": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1037": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1038": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1039": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1040": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1042": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1044": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1045": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1047": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1048": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1049": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7643,
        7658
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1050": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7634,
        7658
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1051": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7634,
        7658
      ],
      "op": "GT",
      "path": "0"
    },
    "1052": {
      "branch": 51,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7634,
        7658
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1053": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "1056": {
      "branch": 51,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1057": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1059": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1066": {
      "op": "SHL"
    },
    "1067": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1068": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1069": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1071": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "ADD",
      "path": "0"
    },
    "1072": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1075": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1076": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1104"
    },
    "1079": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7626,
        7701
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1080": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7626,
        7701
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1087": {
      "op": "SHL"
    },
    "1088": {
      "op": "SUB"
    },
    "1089": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 11
    },
    "1090": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "AND",
      "path": "0"
    },
    "1091": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1093": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1094": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1095": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1096": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7739
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1098": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1100": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1101": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1102": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1103": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1105": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1106": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1107": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7745
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1108": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7746,
        7756
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1109": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7757
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1110": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7757
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1111": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1112": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7757
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1113": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7757
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1114": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1115": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7757
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1116": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7728,
        7757
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1117": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7719,
        7757
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1118": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7719,
        7757
      ],
      "op": "GT",
      "path": "0"
    },
    "1119": {
      "branch": 52,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7719,
        7757
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1120": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7711,
        7802
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BC"
    },
    "1123": {
      "branch": 52,
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7711,
        7802
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1124": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7711,
        7802
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1126": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7711,
        7802
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7711,
        7802
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1135": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7711,
        7802
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1138": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7711,
        7802
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1140": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7711,
        7802
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1141": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7711,
        7802
      ],
      "op": "ADD",
      "path": "0"
    },
    "1142": {
      "op": "MSTORE"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1147": {
      "op": "DUP3"
    },
    "1148": {
      "op": "ADD"
    },
    "1149": {
      "op": "MSTORE"
    },
    "1150": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1185": {
      "op": "DUP3"
    },
    "1186": {
      "op": "ADD"
    },
    "1187": {
      "op": "MSTORE"
    },
    "1188": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1202": {
      "op": "DUP3"
    },
    "1203": {
      "op": "ADD"
    },
    "1204": {
      "op": "MSTORE"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1207": {
      "op": "ADD"
    },
    "1208": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7711,
        7802
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1211": {
      "op": "JUMP"
    },
    "1212": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7711,
        7802
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 12
    },
    "1222": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "AND",
      "path": "0"
    },
    "1223": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1225": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1226": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1227": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1228": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1230": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1232": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1233": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1235": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1236": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1237": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1238": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1239": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7832,
        7837
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1240": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7832,
        7837
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1241": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7828
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1242": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E4"
    },
    "1245": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1246": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7832,
        7837
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1247": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7832,
        7837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1248": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1160"
    },
    "1251": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7813,
        7837
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1252": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1253": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1254": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1255": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7813,
        7837
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "op": "POP"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "SUB"
    },
    "1266": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 13
    },
    "1267": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "AND",
      "path": "0"
    },
    "1268": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1270": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1271": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1272": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1273": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1275": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1277": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1278": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1280": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1281": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1282": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7869
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1283": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7869
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1284": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7864,
        7869
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1285": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7864,
        7869
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1286": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1287": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7869
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x511"
    },
    "1290": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7869
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1291": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7864,
        7869
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1292": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7864,
        7869
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1293": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7869
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1173"
    },
    "1296": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7847,
        7869
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1297": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7869
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1298": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7869
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1299": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7869
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1300": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7847,
        7869
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1301": {
      "op": "POP"
    },
    "1302": {
      "op": "POP"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "op": "SUB"
    },
    "1311": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 14
    },
    "1312": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "AND",
      "path": "0"
    },
    "1313": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1315": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1316": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1317": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1318": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7890
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1320": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1322": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1323": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1324": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1325": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1327": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1328": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1329": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1330": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7897,
        7907
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1331": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7908
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1332": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1333": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1334": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1335": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1336": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1337": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7908
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1338": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1339": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1340": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7912,
        7917
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1341": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7912,
        7917
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1342": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7896
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1343": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x549"
    },
    "1346": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1347": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7912,
        7917
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1348": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7912,
        7917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1349": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1160"
    },
    "1352": {
      "fn": "GP_Mint.transferFrom",
      "jump": "i",
      "offset": [
        7879,
        7917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1353": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1354": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1355": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "POP",
      "path": "0"
    },
    "1356": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "POP",
      "path": "0"
    },
    "1357": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1358": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1359": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1360": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7879,
        7917
      ],
      "op": "POP",
      "path": "0"
    },
    "1361": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7947,
        7949
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 15
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1368": {
      "op": "SHL"
    },
    "1369": {
      "op": "SUB"
    },
    "1370": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "AND",
      "path": "0"
    },
    "1371": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7941,
        7945
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "op": "SUB"
    },
    "1380": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "AND",
      "path": "0"
    },
    "1381": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1414": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7951,
        7956
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1415": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1417": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1418": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x595"
    },
    "1421": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1422": {
      "op": "DUP2"
    },
    "1423": {
      "op": "MSTORE"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1426": {
      "op": "ADD"
    },
    "1427": {
      "op": "SWAP1"
    },
    "1428": {
      "op": "JUMP"
    },
    "1429": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1430": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1432": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1433": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1434": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1435": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "SUB",
      "path": "0"
    },
    "1436": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1437": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7932,
        7957
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1438": {
      "op": "POP"
    },
    "1439": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7974,
        7978
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x1"
    },
    "1441": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1442": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1443": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "POP",
      "path": "0"
    },
    "1444": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "POP",
      "path": "0"
    },
    "1445": {
      "fn": "GP_Mint.transferFrom",
      "offset": [
        7457,
        7985
      ],
      "op": "POP",
      "path": "0"
    },
    "1446": {
      "fn": "GP_Mint.transferFrom",
      "jump": "o",
      "offset": [
        7457,
        7985
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1447": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1701,
        2341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1448": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1933,
        1955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1450": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1975,
        1981
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1451": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1453": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1454": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1456": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "ADD",
      "path": "0"
    },
    "1457": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BA"
    },
    "1460": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1461": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1462": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1186"
    },
    "1465": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        1958,
        1982
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1466": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1467": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1469": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1470": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1473": {
      "op": "NOT"
    },
    "1474": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1475": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1476": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "SUB",
      "path": "0"
    },
    "1477": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "ADD",
      "path": "0"
    },
    "1478": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1479": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1480": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1481": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1482": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1483": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1484": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2037,
        2054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1486": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2068
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1487": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2068
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1488": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1495": {
      "op": "SHL"
    },
    "1496": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1497": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1498": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1499": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1500": {
      "op": "POP"
    },
    "1501": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2037,
        2054
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2068
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1511": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2068
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1512": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2068
      ],
      "op": "AND",
      "path": "0"
    },
    "1513": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2068
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1514": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2094
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "1519": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1520": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x603"
    },
    "1523": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1524": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2095,
        2105
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1525": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2095,
        2105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1526": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2107,
        2110
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1527": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2107,
        2110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1528": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2112,
        2119
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1529": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2112,
        2119
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1530": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1531": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        1958,
        1982
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1532": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1534": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "ADD",
      "path": "0"
    },
    "1535": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11CC"
    },
    "1538": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        2057,
        2131
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1539": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1540": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1542": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1544": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1545": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1546": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1547": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "SUB",
      "path": "0"
    },
    "1548": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1549": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1551": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1552": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "GAS",
      "path": "0"
    },
    "1553": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "CALL",
      "path": "0"
    },
    "1554": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1555": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1556": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1557": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x622"
    },
    "1560": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1561": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1562": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1564": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1565": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1566": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1567": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1569": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1570": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1571": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "POP",
      "path": "0"
    },
    "1572": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "POP",
      "path": "0"
    },
    "1573": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "POP",
      "path": "0"
    },
    "1574": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "POP",
      "path": "0"
    },
    "1575": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1577": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1578": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1579": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1581": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "NOT",
      "path": "0"
    },
    "1582": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1584": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1585": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "ADD",
      "path": "0"
    },
    "1586": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "AND",
      "path": "0"
    },
    "1587": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1588": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "ADD",
      "path": "0"
    },
    "1589": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1590": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1592": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1593": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "POP",
      "path": "0"
    },
    "1594": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1595": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "ADD",
      "path": "0"
    },
    "1596": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1597": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x646"
    },
    "1600": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1601": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1602": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12AD"
    },
    "1605": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        2057,
        2131
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1606": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2057,
        2131
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1607": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2037,
        2131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1608": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2037,
        2131
      ],
      "op": "POP",
      "path": "0"
    },
    "1609": {
      "branch": 53,
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2205,
        2217
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 17
    },
    "1610": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x665"
    },
    "1613": {
      "branch": 53,
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1614": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1616": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1617": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1623": {
      "op": "SHL"
    },
    "1624": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1625": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1626": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1628": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "ADD",
      "path": "0"
    },
    "1629": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1632": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1633": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CF"
    },
    "1636": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        2197,
        2255
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1637": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2197,
        2255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1638": {
      "op": "POP"
    },
    "1639": {
      "op": "POP"
    },
    "1640": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2265,
        2278
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x3"
    },
    "1642": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2265,
        2288
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1643": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2265,
        2288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1644": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2265,
        2288
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1645": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2265,
        2288
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1646": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2314,
        2324
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 19
    },
    "1647": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1649": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1650": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2325
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1651": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2325
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1652": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1654": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1656": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2325
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1657": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1659": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1660": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2325
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1661": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1662": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "op": "SUB"
    },
    "1671": {
      "op": "NOT"
    },
    "1672": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "AND",
      "path": "0"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1679": {
      "op": "SHL"
    },
    "1680": {
      "op": "SUB"
    },
    "1681": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1682": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1683": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "AND",
      "path": "0"
    },
    "1684": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1685": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1686": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1687": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "OR",
      "path": "0"
    },
    "1688": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1689": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "offset": [
        2298,
        2334
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1690": {
      "op": "POP"
    },
    "1691": {
      "op": "POP"
    },
    "1692": {
      "fn": "GP_Mint.setAuthorizedMinterStepOne",
      "jump": "o",
      "offset": [
        1701,
        2341
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1693": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4569,
        5912
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1694": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4735,
        4753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1696": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4783,
        4793
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1697": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1699": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1700": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1702": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "ADD",
      "path": "0"
    },
    "1703": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B0"
    },
    "1706": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1707": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1708": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1310"
    },
    "1711": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4766,
        4794
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1712": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1713": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1715": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1716": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1718": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1719": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1720": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "SUB",
      "path": "0"
    },
    "1721": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "SUB",
      "path": "0"
    },
    "1722": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1723": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1724": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1725": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1727": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4766,
        4794
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1728": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4756,
        4795
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1729": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4756,
        4795
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1730": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4756,
        4795
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1731": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4756,
        4795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1733": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4756,
        4795
      ],
      "op": "ADD",
      "path": "0"
    },
    "1734": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4756,
        4795
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1735": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4735,
        4795
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1736": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4735,
        4795
      ],
      "op": "POP",
      "path": "0"
    },
    "1737": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4905,
        4918
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x3"
    },
    "1739": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4905,
        4918
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1740": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4891,
        4901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1741": {
      "branch": 54,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4891,
        4918
      ],
      "op": "SUB",
      "path": "0"
    },
    "1742": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E9"
    },
    "1745": {
      "branch": 54,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1746": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1748": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1757": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1758": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1760": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "ADD",
      "path": "0"
    },
    "1761": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1764": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1765": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1347"
    },
    "1768": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        4883,
        4988
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1769": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        4883,
        4988
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1770": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5097,
        5113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1772": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5097,
        5113
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1773": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1775": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1776": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1778": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5055,
        5077
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1779": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70A"
    },
    "1782": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1789": {
      "op": "SHL"
    },
    "1790": {
      "op": "SUB"
    },
    "1791": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5097,
        5113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1792": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5097,
        5113
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1793": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5097,
        5113
      ],
      "op": "AND",
      "path": "0"
    },
    "1794": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5097,
        5113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1795": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1797": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "ADD",
      "path": "0"
    },
    "1798": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1186"
    },
    "1801": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        5080,
        5114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1802": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1803": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1805": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1806": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1809": {
      "op": "NOT"
    },
    "1810": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1811": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1812": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "SUB",
      "path": "0"
    },
    "1813": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "ADD",
      "path": "0"
    },
    "1814": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1815": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1816": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1817": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1818": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1819": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5306,
        5316
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 21
    },
    "1820": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5329,
        5330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1822": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5290,
        5317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1823": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5290,
        5317
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1824": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5290,
        5317
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1825": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5290,
        5305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1827": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1829": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5290,
        5317
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1830": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5290,
        5317
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1831": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5290,
        5317
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1832": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1833": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5080,
        5114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1834": {
      "op": "POP"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1841": {
      "op": "SHL"
    },
    "1842": {
      "op": "SUB"
    },
    "1843": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5290,
        5317
      ],
      "op": "AND",
      "path": "0"
    },
    "1844": {
      "branch": 55,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5290,
        5331
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1845": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5282,
        5371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78C"
    },
    "1848": {
      "branch": 55,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5282,
        5371
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1849": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5282,
        5371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1851": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5282,
        5371
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1852": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5282,
        5371
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1860": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5282,
        5371
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1863": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5282,
        5371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1865": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5282,
        5371
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1866": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5282,
        5371
      ],
      "op": "ADD",
      "path": "0"
    },
    "1867": {
      "op": "MSTORE"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1872": {
      "op": "DUP3"
    },
    "1873": {
      "op": "ADD"
    },
    "1874": {
      "op": "MSTORE"
    },
    "1875": {
      "op": "PUSH32",
      "value": "0x47505F4D696E743A204E6F206D696E7465722072656D6F76616C2070726F706F"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1910": {
      "op": "DUP3"
    },
    "1911": {
      "op": "ADD"
    },
    "1912": {
      "op": "MSTORE"
    },
    "1913": {
      "op": "PUSH3",
      "value": "0x1CD959"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1922": {
      "op": "DUP3"
    },
    "1923": {
      "op": "ADD"
    },
    "1924": {
      "op": "MSTORE"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1927": {
      "op": "ADD"
    },
    "1928": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5282,
        5371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "1931": {
      "op": "JUMP"
    },
    "1932": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5282,
        5371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1933": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x7"
    },
    "1935": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5389,
        5405
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5389,
        5405
      ],
      "op": "AND",
      "path": "0"
    },
    "1945": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5381,
        5446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DD"
    },
    "1948": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5381,
        5446
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1949": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5381,
        5446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1951": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5381,
        5446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1952": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1958": {
      "op": "SHL"
    },
    "1959": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5381,
        5446
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1960": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5381,
        5446
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1963": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5381,
        5446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1965": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5381,
        5446
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1966": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5381,
        5446
      ],
      "op": "ADD",
      "path": "0"
    },
    "1967": {
      "op": "MSTORE"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1972": {
      "op": "DUP3"
    },
    "1973": {
      "op": "ADD"
    },
    "1974": {
      "op": "MSTORE"
    },
    "1975": {
      "op": "PUSH22",
      "value": "0x11D417D35A5B9D0E88139BC81B5A5B9D195C881CD95D"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "2000": {
      "op": "SHL"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2003": {
      "op": "DUP3"
    },
    "2004": {
      "op": "ADD"
    },
    "2005": {
      "op": "MSTORE"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2008": {
      "op": "ADD"
    },
    "2009": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5381,
        5446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2012": {
      "op": "JUMP"
    },
    "2013": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5381,
        5446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2014": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5456,
        5473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2016": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5487
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2017": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5487
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2018": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2020": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2021": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2028": {
      "op": "SHL"
    },
    "2029": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2030": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2037": {
      "op": "SHL"
    },
    "2038": {
      "op": "SUB"
    },
    "2039": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5487
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2040": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5487
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2041": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5487
      ],
      "op": "AND",
      "path": "0"
    },
    "2042": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5487
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2043": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "2048": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2049": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x814"
    },
    "2052": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2053": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5514,
        5524
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2054": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5514,
        5524
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2055": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5526,
        5529
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2056": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5526,
        5529
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2057": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5531,
        5538
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2058": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5531,
        5538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2059": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5540,
        5549
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2060": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5540,
        5549
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2061": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2063": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "ADD",
      "path": "0"
    },
    "2064": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11CC"
    },
    "2067": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        5476,
        5550
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2068": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2069": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2071": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2073": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2074": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2075": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2076": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "SUB",
      "path": "0"
    },
    "2077": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2078": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2080": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2081": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "GAS",
      "path": "0"
    },
    "2082": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "CALL",
      "path": "0"
    },
    "2083": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2084": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2085": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2086": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x833"
    },
    "2089": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2090": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2091": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2093": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2094": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2095": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2096": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2098": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2099": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2100": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "POP",
      "path": "0"
    },
    "2101": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "POP",
      "path": "0"
    },
    "2102": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "POP",
      "path": "0"
    },
    "2103": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "POP",
      "path": "0"
    },
    "2104": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2106": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2107": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2108": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2110": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "NOT",
      "path": "0"
    },
    "2111": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2113": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2114": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "ADD",
      "path": "0"
    },
    "2115": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "AND",
      "path": "0"
    },
    "2116": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2117": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "ADD",
      "path": "0"
    },
    "2118": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2119": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2121": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2122": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "POP",
      "path": "0"
    },
    "2123": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2124": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "ADD",
      "path": "0"
    },
    "2125": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2126": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x857"
    },
    "2129": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2130": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2131": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12AD"
    },
    "2134": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        5476,
        5550
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2135": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5476,
        5550
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2136": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5456,
        5550
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2137": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5456,
        5550
      ],
      "op": "POP",
      "path": "0"
    },
    "2138": {
      "branch": 56,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5568,
        5580
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 23
    },
    "2139": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x876"
    },
    "2142": {
      "branch": 56,
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2143": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2145": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2146": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2152": {
      "op": "SHL"
    },
    "2153": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2154": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2155": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2157": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "ADD",
      "path": "0"
    },
    "2158": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2161": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2162": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CF"
    },
    "2165": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        5560,
        5618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2166": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5560,
        5618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2167": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5708,
        5724
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x7"
    },
    "2169": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5708,
        5724
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2170": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5684,
        5725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2172": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5684,
        5725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2179": {
      "op": "SHL"
    },
    "2180": {
      "op": "SUB"
    },
    "2181": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5708,
        5724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2182": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5708,
        5724
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2183": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5708,
        5724
      ],
      "op": "AND",
      "path": "0"
    },
    "2184": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5708,
        5724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2185": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5684,
        5725
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC6711413797B8A562634E98C95D50E7619D39702ED5B82CE335DC93546C3A88C"
    },
    "2218": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5684,
        5725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2219": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5708,
        5724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2221": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5708,
        5724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2222": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5684,
        5725
      ],
      "op": "LOG2",
      "path": "0"
    },
    "2223": {
      "op": "POP"
    },
    "2224": {
      "op": "POP"
    },
    "2225": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5792,
        5808
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x7"
    },
    "2227": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5792,
        5821
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2228": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5792,
        5821
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2235": {
      "op": "SHL"
    },
    "2236": {
      "op": "SUB"
    },
    "2237": {
      "op": "NOT"
    },
    "2238": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5792,
        5821
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2239": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5792,
        5821
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2240": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5792,
        5821
      ],
      "op": "AND",
      "path": "0"
    },
    "2241": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5792,
        5821
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2242": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5792,
        5821
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2243": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5792,
        5821
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2244": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5894,
        5904
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 26
    },
    "2245": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5819,
        5820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2247": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5878,
        5905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2248": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5878,
        5905
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2249": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5878,
        5905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2250": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5878,
        5893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2252": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5878,
        5905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2254": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5878,
        5905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2255": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5878,
        5905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2257": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5878,
        5905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2258": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5878,
        5905
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2259": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5871,
        5905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2260": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5871,
        5905
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2261": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5871,
        5905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2262": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5871,
        5905
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2263": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5871,
        5905
      ],
      "op": "AND",
      "path": "0"
    },
    "2264": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5871,
        5905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2265": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "offset": [
        5871,
        5905
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2266": {
      "op": "POP"
    },
    "2267": {
      "op": "POP"
    },
    "2268": {
      "op": "POP"
    },
    "2269": {
      "op": "POP"
    },
    "2270": {
      "fn": "GP_Mint.removeAuthorizedMinterStepTwo",
      "jump": "o",
      "offset": [
        4569,
        5912
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2271": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6269,
        6354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2272": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6308,
        6321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2274": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6340,
        6347
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x6"
    },
    "2276": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6333,
        6347
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2277": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6333,
        6347
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2278": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6333,
        6347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "2281": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6333,
        6347
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2282": {
      "fn": "GP_Mint.symbol",
      "offset": [
        6333,
        6347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1087"
    },
    "2285": {
      "fn": "GP_Mint.symbol",
      "jump": "i",
      "offset": [
        6333,
        6347
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2286": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6649,
        7028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2287": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6710,
        6714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2295": {
      "op": "SHL"
    },
    "2296": {
      "op": "SUB"
    },
    "2297": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6734,
        6750
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 28
    },
    "2298": {
      "branch": 57,
      "fn": "GP_Mint.transfer",
      "offset": [
        6734,
        6750
      ],
      "op": "AND",
      "path": "0"
    },
    "2299": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x916"
    },
    "2302": {
      "branch": 57,
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2303": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2305": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2306": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2312": {
      "op": "SHL"
    },
    "2313": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2314": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2315": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2317": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "ADD",
      "path": "0"
    },
    "2318": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2321": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2322": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C1"
    },
    "2325": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6726,
        6790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2326": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6726,
        6790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2327": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6818,
        6828
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 29
    },
    "2328": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2330": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6829
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2331": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6829
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2332": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6829
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2333": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2335": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2337": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6829
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2338": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2340": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6829
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2341": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6829
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2342": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6829
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2343": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6838
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2344": {
      "op": "GT"
    },
    "2345": {
      "branch": 58,
      "fn": "GP_Mint.transfer",
      "offset": [
        6808,
        6838
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2346": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x945"
    },
    "2349": {
      "branch": 58,
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2350": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2352": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2353": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2359": {
      "op": "SHL"
    },
    "2360": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2361": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2362": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2364": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "ADD",
      "path": "0"
    },
    "2365": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2368": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2369": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1104"
    },
    "2372": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6800,
        6881
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2373": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6800,
        6881
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2374": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6902,
        6912
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 30
    },
    "2375": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2377": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2378": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6913
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2379": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2380": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2382": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2384": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2385": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2387": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6913
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2388": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6913
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2389": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6922
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2390": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6922
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2391": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6917,
        6922
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2392": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6917,
        6922
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2393": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2394": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6922
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x964"
    },
    "2397": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2398": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6917,
        6922
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2399": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6917,
        6922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2400": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6922
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1160"
    },
    "2403": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6892,
        6922
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2404": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6922
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2405": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2406": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6922
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2407": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6892,
        6922
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2408": {
      "op": "POP"
    },
    "2409": {
      "op": "POP"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2416": {
      "op": "SHL"
    },
    "2417": {
      "op": "SUB"
    },
    "2418": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 31
    },
    "2419": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "AND",
      "path": "0"
    },
    "2420": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2422": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2423": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2424": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2425": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2427": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2429": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2430": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2432": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2433": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2434": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2435": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6954
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2436": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6949,
        6954
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2437": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6949,
        6954
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2438": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2439": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x991"
    },
    "2442": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2443": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6949,
        6954
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2444": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6949,
        6954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2445": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1173"
    },
    "2448": {
      "fn": "GP_Mint.transfer",
      "jump": "i",
      "offset": [
        6932,
        6954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2449": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2450": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2451": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6954
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2452": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6932,
        6954
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2453": {
      "op": "POP"
    },
    "2454": {
      "op": "POP"
    },
    "2455": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6969,
        7000
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x40"
    },
    "2457": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6969,
        7000
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2458": {
      "op": "DUP3"
    },
    "2459": {
      "op": "DUP2"
    },
    "2460": {
      "op": "MSTORE"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2467": {
      "op": "SHL"
    },
    "2468": {
      "op": "SUB"
    },
    "2469": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6969,
        7000
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2470": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6969,
        7000
      ],
      "op": "AND",
      "path": "0"
    },
    "2471": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6969,
        7000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2472": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6978,
        6988
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2473": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6978,
        6988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2474": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6969,
        7000
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2507": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6969,
        7000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2510": {
      "op": "ADD"
    },
    "2511": {
      "fn": "GP_Mint.transfer",
      "offset": [
        6969,
        7000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C6"
    },
    "2514": {
      "op": "JUMP"
    },
    "2515": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        3864,
        4563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2516": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4127,
        4143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2518": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4127,
        4143
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2519": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2521": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2522": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4085,
        4107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2524": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4085,
        4107
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2525": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F4"
    },
    "2528": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2535": {
      "op": "SHL"
    },
    "2536": {
      "op": "SUB"
    },
    "2537": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4127,
        4143
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2538": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4127,
        4143
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2539": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4127,
        4143
      ],
      "op": "AND",
      "path": "0"
    },
    "2540": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4127,
        4143
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2541": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2543": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "ADD",
      "path": "0"
    },
    "2544": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1186"
    },
    "2547": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        4110,
        4144
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2548": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2549": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2551": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2552": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2555": {
      "op": "NOT"
    },
    "2556": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2557": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2558": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "SUB",
      "path": "0"
    },
    "2559": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "ADD",
      "path": "0"
    },
    "2560": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2561": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2562": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2563": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2564": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2565": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2566": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4199,
        4216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2568": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4230
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2569": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4230
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2570": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2577": {
      "op": "SHL"
    },
    "2578": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2579": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2580": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2581": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2582": {
      "op": "POP"
    },
    "2583": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4199,
        4216
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2590": {
      "op": "SHL"
    },
    "2591": {
      "op": "SUB"
    },
    "2592": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2593": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4230
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2594": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4230
      ],
      "op": "AND",
      "path": "0"
    },
    "2595": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2596": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4256
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "2601": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2602": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3D"
    },
    "2605": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2606": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4257,
        4267
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2607": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4257,
        4267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2608": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4269,
        4272
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2609": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4269,
        4272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2610": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4274,
        4281
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2611": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4274,
        4281
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2612": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2613": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4110,
        4144
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2614": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2616": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "ADD",
      "path": "0"
    },
    "2617": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11CC"
    },
    "2620": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        4219,
        4293
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2621": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2622": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2624": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2626": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2627": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2628": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2629": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "SUB",
      "path": "0"
    },
    "2630": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2631": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2633": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2634": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "GAS",
      "path": "0"
    },
    "2635": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "CALL",
      "path": "0"
    },
    "2636": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2637": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2638": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2639": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5C"
    },
    "2642": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2643": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2644": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2646": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2647": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2648": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2649": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2651": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2652": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2653": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "POP",
      "path": "0"
    },
    "2654": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "POP",
      "path": "0"
    },
    "2655": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "POP",
      "path": "0"
    },
    "2656": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "POP",
      "path": "0"
    },
    "2657": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2659": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2660": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2661": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2663": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "NOT",
      "path": "0"
    },
    "2664": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2666": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2667": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "ADD",
      "path": "0"
    },
    "2668": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "AND",
      "path": "0"
    },
    "2669": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2670": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "ADD",
      "path": "0"
    },
    "2671": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2672": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2674": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2675": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "POP",
      "path": "0"
    },
    "2676": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2677": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "ADD",
      "path": "0"
    },
    "2678": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2679": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA80"
    },
    "2682": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2683": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2684": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12AD"
    },
    "2687": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        4219,
        4293
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2688": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4219,
        4293
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2689": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4199,
        4293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2690": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4199,
        4293
      ],
      "op": "POP",
      "path": "0"
    },
    "2691": {
      "branch": 59,
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4367,
        4379
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 33
    },
    "2692": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9F"
    },
    "2695": {
      "branch": 59,
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2696": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2698": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2705": {
      "op": "SHL"
    },
    "2706": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2707": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2708": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2710": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "ADD",
      "path": "0"
    },
    "2711": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2714": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2715": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CF"
    },
    "2718": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "i",
      "offset": [
        4359,
        4417
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2719": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4359,
        4417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2720": {
      "op": "POP"
    },
    "2721": {
      "op": "POP"
    },
    "2722": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4427,
        4440
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x3"
    },
    "2724": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4427,
        4450
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2725": {
      "op": "POP"
    },
    "2726": {
      "op": "POP"
    },
    "2727": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4532,
        4542
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 35
    },
    "2728": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4554,
        4555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2730": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4543
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2731": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2732": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4543
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2733": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2735": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2737": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4543
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2738": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2740": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4543
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2741": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4543
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2742": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4556
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2743": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4556
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2750": {
      "op": "SHL"
    },
    "2751": {
      "op": "SUB"
    },
    "2752": {
      "op": "NOT"
    },
    "2753": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4556
      ],
      "op": "AND",
      "path": "0"
    },
    "2754": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4556
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2755": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "offset": [
        4516,
        4556
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2756": {
      "fn": "GP_Mint.removeAuthorizedMinterStepOne",
      "jump": "o",
      "offset": [
        3864,
        4563
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2757": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2347,
        3858
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2758": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2542,
        2560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2760": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2590,
        2600
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2761": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2763": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2764": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2766": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "ADD",
      "path": "0"
    },
    "2767": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD8"
    },
    "2770": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2771": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2772": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1310"
    },
    "2775": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2573,
        2601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2776": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2777": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2779": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2780": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2782": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2783": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2784": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "SUB",
      "path": "0"
    },
    "2785": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "SUB",
      "path": "0"
    },
    "2786": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2787": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2788": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2789": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2791": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2573,
        2601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2792": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2563,
        2602
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2793": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2563,
        2602
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2794": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2563,
        2602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2795": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2563,
        2602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2797": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2563,
        2602
      ],
      "op": "ADD",
      "path": "0"
    },
    "2798": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2563,
        2602
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2799": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2542,
        2602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2800": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2542,
        2602
      ],
      "op": "POP",
      "path": "0"
    },
    "2801": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2712,
        2725
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x3"
    },
    "2803": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2712,
        2725
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2804": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2698,
        2708
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2805": {
      "branch": 60,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2698,
        2725
      ],
      "op": "SUB",
      "path": "0"
    },
    "2806": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB11"
    },
    "2809": {
      "branch": 60,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2810": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2812": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2821": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2822": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2824": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "ADD",
      "path": "0"
    },
    "2825": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2828": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2829": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1347"
    },
    "2832": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2690,
        2795
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2833": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2690,
        2795
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2834": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2860,
        2882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2836": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2902,
        2908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2837": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2839": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2840": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2842": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "ADD",
      "path": "0"
    },
    "2843": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB24"
    },
    "2846": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2847": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2848": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1186"
    },
    "2851": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        2885,
        2909
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2852": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2853": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2855": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2856": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2857": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2858": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2859": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "SUB",
      "path": "0"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2862": {
      "op": "NOT"
    },
    "2863": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "ADD",
      "path": "0"
    },
    "2864": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2865": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2866": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2867": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2868": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2869": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3070,
        3080
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 37
    },
    "2870": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2872": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2873": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2874": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2875": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2877": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2879": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2880": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3081
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2881": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3081
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2882": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2883": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        2885,
        2909
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2884": {
      "op": "POP"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2891": {
      "op": "SHL"
    },
    "2892": {
      "op": "SUB"
    },
    "2893": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3091
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2894": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3091
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2895": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3091
      ],
      "op": "AND",
      "path": "0"
    },
    "2896": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3081
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2897": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3081
      ],
      "op": "AND",
      "path": "0"
    },
    "2898": {
      "branch": 61,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3054,
        3091
      ],
      "op": "EQ",
      "path": "0"
    },
    "2899": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3046,
        3128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9E"
    },
    "2902": {
      "branch": 61,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3046,
        3128
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2903": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3046,
        3128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2905": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3046,
        3128
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2906": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2912": {
      "op": "SHL"
    },
    "2913": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3046,
        3128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2914": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3046,
        3128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2917": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3046,
        3128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2919": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3046,
        3128
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2920": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3046,
        3128
      ],
      "op": "ADD",
      "path": "0"
    },
    "2921": {
      "op": "DUP2"
    },
    "2922": {
      "op": "SWAP1"
    },
    "2923": {
      "op": "MSTORE"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2926": {
      "op": "DUP3"
    },
    "2927": {
      "op": "ADD"
    },
    "2928": {
      "op": "MSTORE"
    },
    "2929": {
      "op": "PUSH32",
      "value": "0x4D7945524332303A204D696E7465722061646472657373206D69736D61746368"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2964": {
      "op": "DUP3"
    },
    "2965": {
      "op": "ADD"
    },
    "2966": {
      "op": "MSTORE"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2969": {
      "op": "ADD"
    },
    "2970": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3046,
        3128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "2973": {
      "op": "JUMP"
    },
    "2974": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3046,
        3128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2975": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3239,
        3255
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x7"
    },
    "2977": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3239,
        3255
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2984": {
      "op": "SHL"
    },
    "2985": {
      "op": "SUB"
    },
    "2986": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3239,
        3255
      ],
      "op": "AND",
      "path": "0"
    },
    "2987": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3239,
        3269
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2988": {
      "branch": 62,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3239,
        3269
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2989": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3239,
        3299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC3"
    },
    "2992": {
      "branch": 62,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3239,
        3299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2993": {
      "op": "POP"
    },
    "2994": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3273,
        3289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2996": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3273,
        3289
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3003": {
      "op": "SHL"
    },
    "3004": {
      "op": "SUB"
    },
    "3005": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3273,
        3299
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3006": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3273,
        3299
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3007": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3273,
        3299
      ],
      "op": "AND",
      "path": "0"
    },
    "3008": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3273,
        3289
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3009": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3273,
        3289
      ],
      "op": "AND",
      "path": "0"
    },
    "3010": {
      "branch": 63,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3273,
        3299
      ],
      "op": "EQ",
      "path": "0"
    },
    "3011": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3239,
        3299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3012": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3231,
        3339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1B"
    },
    "3015": {
      "branch": 63,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3231,
        3339
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3016": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3231,
        3339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3018": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3231,
        3339
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3025": {
      "op": "SHL"
    },
    "3026": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3231,
        3339
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3027": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3231,
        3339
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3030": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3231,
        3339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3032": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3231,
        3339
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3033": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3231,
        3339
      ],
      "op": "ADD",
      "path": "0"
    },
    "3034": {
      "op": "MSTORE"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3039": {
      "op": "DUP3"
    },
    "3040": {
      "op": "ADD"
    },
    "3041": {
      "op": "MSTORE"
    },
    "3042": {
      "op": "PUSH32",
      "value": "0x4D7945524332303A20416E6F74686572206D696E74657220616C726561647920"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3077": {
      "op": "DUP3"
    },
    "3078": {
      "op": "ADD"
    },
    "3079": {
      "op": "MSTORE"
    },
    "3080": {
      "op": "PUSH3",
      "value": "0x1CD95D"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "3086": {
      "op": "SHL"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3089": {
      "op": "DUP3"
    },
    "3090": {
      "op": "ADD"
    },
    "3091": {
      "op": "MSTORE"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3094": {
      "op": "ADD"
    },
    "3095": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3231,
        3339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "3098": {
      "op": "JUMP"
    },
    "3099": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3231,
        3339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3100": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3349,
        3366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3102": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3103": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3380
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3104": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3106": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3107": {
      "op": "PUSH4",
      "value": "0x333F6111"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3114": {
      "op": "SHL"
    },
    "3115": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3116": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3123": {
      "op": "SHL"
    },
    "3124": {
      "op": "SUB"
    },
    "3125": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3126": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3380
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3127": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3380
      ],
      "op": "AND",
      "path": "0"
    },
    "3128": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3129": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3406
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x333F6111"
    },
    "3134": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3406
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3135": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC52"
    },
    "3138": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3139": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3407,
        3417
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3140": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3407,
        3417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3141": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3419,
        3422
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3142": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3419,
        3422
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3143": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3424,
        3431
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3144": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3424,
        3431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3145": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3433,
        3442
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3146": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3433,
        3442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3147": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3149": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "ADD",
      "path": "0"
    },
    "3150": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11CC"
    },
    "3153": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        3369,
        3443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3154": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3155": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3157": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3159": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3160": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3161": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3162": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "SUB",
      "path": "0"
    },
    "3163": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3164": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3166": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3167": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "GAS",
      "path": "0"
    },
    "3168": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "CALL",
      "path": "0"
    },
    "3169": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3170": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3171": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3172": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC71"
    },
    "3175": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3176": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3177": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3179": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3180": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3181": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3182": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3184": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3185": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3186": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "POP",
      "path": "0"
    },
    "3187": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "POP",
      "path": "0"
    },
    "3188": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "POP",
      "path": "0"
    },
    "3189": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "POP",
      "path": "0"
    },
    "3190": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3192": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3193": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3194": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3196": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "NOT",
      "path": "0"
    },
    "3197": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3199": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3200": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "ADD",
      "path": "0"
    },
    "3201": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "AND",
      "path": "0"
    },
    "3202": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3203": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "ADD",
      "path": "0"
    },
    "3204": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3205": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3207": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3208": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "POP",
      "path": "0"
    },
    "3209": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3210": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "ADD",
      "path": "0"
    },
    "3211": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3212": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC95"
    },
    "3215": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3216": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3217": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12AD"
    },
    "3220": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        3369,
        3443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3221": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3369,
        3443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3222": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3349,
        3443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3223": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3349,
        3443
      ],
      "op": "POP",
      "path": "0"
    },
    "3224": {
      "branch": 64,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3517,
        3529
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 39
    },
    "3225": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB4"
    },
    "3228": {
      "branch": 64,
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3229": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3231": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3232": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3238": {
      "op": "SHL"
    },
    "3239": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3240": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3241": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3243": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "ADD",
      "path": "0"
    },
    "3244": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "3247": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3248": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CF"
    },
    "3251": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "i",
      "offset": [
        3509,
        3567
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3252": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3509,
        3567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3253": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3631
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x7"
    },
    "3255": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3640
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3256": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3640
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3263": {
      "op": "SHL"
    },
    "3264": {
      "op": "SUB"
    },
    "3265": {
      "op": "NOT"
    },
    "3266": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3640
      ],
      "op": "AND",
      "path": "0"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3273": {
      "op": "SHL"
    },
    "3274": {
      "op": "SUB"
    },
    "3275": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3640
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3276": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3640
      ],
      "op": "AND",
      "path": "0"
    },
    "3277": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3640
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3278": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3640
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3279": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3640
      ],
      "op": "OR",
      "path": "0"
    },
    "3280": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3640
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3281": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3640
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3282": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3615,
        3640
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3283": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3716,
        3743
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x40"
    },
    "3285": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3716,
        3743
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3286": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3716,
        3743
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xFE7C7FCB0AE0CE6BFD0A653FA3AB6C97A51A0819E6C27CDAB8A08D456338C5FA"
    },
    "3319": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3716,
        3743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3322": {
      "op": "SWAP1"
    },
    "3323": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3716,
        3743
      ],
      "op": "LOG2",
      "path": "0"
    },
    "3324": {
      "op": "POP"
    },
    "3325": {
      "op": "POP"
    },
    "3326": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3840,
        3850
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 42
    },
    "3327": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3824,
        3851
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3329": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3824,
        3851
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3330": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3824,
        3851
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3331": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3824,
        3851
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3332": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3824,
        3839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "3334": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3824,
        3851
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3336": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3824,
        3851
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3337": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3824,
        3851
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3339": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3824,
        3851
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3340": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3824,
        3851
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3341": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3817,
        3851
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3342": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3817,
        3851
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3349": {
      "op": "SHL"
    },
    "3350": {
      "op": "SUB"
    },
    "3351": {
      "op": "NOT"
    },
    "3352": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3817,
        3851
      ],
      "op": "AND",
      "path": "0"
    },
    "3353": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3817,
        3851
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3354": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "offset": [
        3817,
        3851
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3355": {
      "op": "POP"
    },
    "3356": {
      "op": "POP"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "op": "POP"
    },
    "3359": {
      "op": "POP"
    },
    "3360": {
      "fn": "GP_Mint.setAuthorizedMinterStepTwo",
      "jump": "o",
      "offset": [
        2347,
        3858
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3361": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5993,
        6175
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3362": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6087,
        6103
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0x7"
    },
    "3364": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6087,
        6103
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3371": {
      "op": "SHL"
    },
    "3372": {
      "op": "SUB"
    },
    "3373": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6087,
        6103
      ],
      "op": "AND",
      "path": "0"
    },
    "3374": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6073,
        6083
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3375": {
      "branch": 65,
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6073,
        6103
      ],
      "op": "EQ",
      "path": "0"
    },
    "3376": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6065,
        6136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7B"
    },
    "3379": {
      "branch": 65,
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6065,
        6136
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3380": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6065,
        6136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3382": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6065,
        6136
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3383": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3389": {
      "op": "SHL"
    },
    "3390": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6065,
        6136
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3391": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6065,
        6136
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3394": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6065,
        6136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3396": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6065,
        6136
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3397": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6065,
        6136
      ],
      "op": "ADD",
      "path": "0"
    },
    "3398": {
      "op": "MSTORE"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3403": {
      "op": "DUP3"
    },
    "3404": {
      "op": "ADD"
    },
    "3405": {
      "op": "MSTORE"
    },
    "3406": {
      "op": "PUSH32",
      "value": "0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3441": {
      "op": "DUP3"
    },
    "3442": {
      "op": "ADD"
    },
    "3443": {
      "op": "MSTORE"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3446": {
      "op": "ADD"
    },
    "3447": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6065,
        6136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "3450": {
      "op": "JUMP"
    },
    "3451": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6065,
        6136
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3452": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6146,
        6168
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0xD85"
    },
    "3455": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6152,
        6159
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3456": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6161,
        6167
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3457": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6146,
        6151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD89"
    },
    "3460": {
      "fn": "GP_Mint.mintTokens",
      "jump": "i",
      "offset": [
        6146,
        6168
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3461": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        6146,
        6168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3462": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5993,
        6175
      ],
      "op": "POP",
      "path": "0"
    },
    "3463": {
      "fn": "GP_Mint.mintTokens",
      "offset": [
        5993,
        6175
      ],
      "op": "POP",
      "path": "0"
    },
    "3464": {
      "fn": "GP_Mint.mintTokens",
      "jump": "o",
      "offset": [
        5993,
        6175
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3465": {
      "fn": "GP_Mint._mint",
      "offset": [
        7991,
        8309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3466": {
      "fn": "GP_Mint._mint",
      "offset": [
        8080,
        8096
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x7"
    },
    "3468": {
      "fn": "GP_Mint._mint",
      "offset": [
        8080,
        8096
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3475": {
      "op": "SHL"
    },
    "3476": {
      "op": "SUB"
    },
    "3477": {
      "fn": "GP_Mint._mint",
      "offset": [
        8080,
        8096
      ],
      "op": "AND",
      "path": "0"
    },
    "3478": {
      "fn": "GP_Mint._mint",
      "offset": [
        8066,
        8076
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3479": {
      "branch": 66,
      "fn": "GP_Mint._mint",
      "offset": [
        8066,
        8096
      ],
      "op": "EQ",
      "path": "0"
    },
    "3480": {
      "fn": "GP_Mint._mint",
      "offset": [
        8058,
        8129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE3"
    },
    "3483": {
      "branch": 66,
      "fn": "GP_Mint._mint",
      "offset": [
        8058,
        8129
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3484": {
      "fn": "GP_Mint._mint",
      "offset": [
        8058,
        8129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3486": {
      "fn": "GP_Mint._mint",
      "offset": [
        8058,
        8129
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3487": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3493": {
      "op": "SHL"
    },
    "3494": {
      "fn": "GP_Mint._mint",
      "offset": [
        8058,
        8129
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3495": {
      "fn": "GP_Mint._mint",
      "offset": [
        8058,
        8129
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3498": {
      "fn": "GP_Mint._mint",
      "offset": [
        8058,
        8129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3500": {
      "fn": "GP_Mint._mint",
      "offset": [
        8058,
        8129
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3501": {
      "fn": "GP_Mint._mint",
      "offset": [
        8058,
        8129
      ],
      "op": "ADD",
      "path": "0"
    },
    "3502": {
      "op": "MSTORE"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3507": {
      "op": "DUP3"
    },
    "3508": {
      "op": "ADD"
    },
    "3509": {
      "op": "MSTORE"
    },
    "3510": {
      "op": "PUSH32",
      "value": "0x47505F4D696E743A20556E617574686F72697A6564206D696E74657200000000"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3545": {
      "op": "DUP3"
    },
    "3546": {
      "op": "ADD"
    },
    "3547": {
      "op": "MSTORE"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3550": {
      "op": "ADD"
    },
    "3551": {
      "fn": "GP_Mint._mint",
      "offset": [
        8058,
        8129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "3554": {
      "op": "JUMP"
    },
    "3555": {
      "fn": "GP_Mint._mint",
      "offset": [
        8058,
        8129
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3556": {
      "fn": "GP_Mint._mint",
      "offset": [
        8155,
        8161
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 46
    },
    "3557": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8151
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3559": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8151
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3561": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8161
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3562": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8161
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3563": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8161
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3564": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF5"
    },
    "3567": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8161
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3568": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3569": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1173"
    },
    "3572": {
      "fn": "GP_Mint._mint",
      "jump": "i",
      "offset": [
        8139,
        8161
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3573": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8161
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3574": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3575": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8161
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3576": {
      "fn": "GP_Mint._mint",
      "offset": [
        8139,
        8161
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3577": {
      "op": "POP"
    },
    "3578": {
      "op": "POP"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3585": {
      "op": "SHL"
    },
    "3586": {
      "op": "SUB"
    },
    "3587": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 47
    },
    "3588": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "AND",
      "path": "0"
    },
    "3589": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3591": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3592": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3593": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3594": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3596": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3598": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3599": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3601": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3602": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3603": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3604": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8199
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3605": {
      "fn": "GP_Mint._mint",
      "offset": [
        8193,
        8199
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3606": {
      "fn": "GP_Mint._mint",
      "offset": [
        8193,
        8199
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3607": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3608": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE22"
    },
    "3611": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3612": {
      "fn": "GP_Mint._mint",
      "offset": [
        8193,
        8199
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3613": {
      "fn": "GP_Mint._mint",
      "offset": [
        8193,
        8199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3614": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1173"
    },
    "3617": {
      "fn": "GP_Mint._mint",
      "jump": "i",
      "offset": [
        8171,
        8199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3618": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3619": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3620": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8199
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3621": {
      "fn": "GP_Mint._mint",
      "offset": [
        8171,
        8199
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3622": {
      "op": "POP"
    },
    "3623": {
      "op": "POP"
    },
    "3624": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 48,
      "value": "0x40"
    },
    "3626": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3627": {
      "op": "DUP2"
    },
    "3628": {
      "op": "DUP2"
    },
    "3629": {
      "op": "MSTORE"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3636": {
      "op": "SHL"
    },
    "3637": {
      "op": "SUB"
    },
    "3638": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3639": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "AND",
      "path": "0"
    },
    "3640": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3641": {
      "fn": "GP_Mint._mint",
      "offset": [
        8273,
        8283
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3642": {
      "fn": "GP_Mint._mint",
      "offset": [
        8273,
        8283
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3643": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x9D228D69B5FDB8D273A2336F8FB8612D039631024EA9BF09C424A9503AA078F0"
    },
    "3676": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3679": {
      "op": "ADD"
    },
    "3680": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3682": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3683": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3684": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3685": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "SUB",
      "path": "0"
    },
    "3686": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3687": {
      "fn": "GP_Mint._mint",
      "offset": [
        8266,
        8301
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3688": {
      "fn": "GP_Mint._mint",
      "offset": [
        7991,
        8309
      ],
      "op": "POP",
      "path": "0"
    },
    "3689": {
      "fn": "GP_Mint._mint",
      "offset": [
        7991,
        8309
      ],
      "op": "POP",
      "path": "0"
    },
    "3690": {
      "fn": "GP_Mint._mint",
      "jump": "o",
      "offset": [
        7991,
        8309
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3691": {
      "op": "JUMPDEST"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3694": {
      "op": "DUP2"
    },
    "3695": {
      "op": "MLOAD"
    },
    "3696": {
      "op": "DUP1"
    },
    "3697": {
      "op": "DUP5"
    },
    "3698": {
      "op": "MSTORE"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3701": {
      "op": "JUMPDEST"
    },
    "3702": {
      "op": "DUP2"
    },
    "3703": {
      "op": "DUP2"
    },
    "3704": {
      "op": "LT"
    },
    "3705": {
      "op": "ISZERO"
    },
    "3706": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3709": {
      "op": "JUMPI"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3712": {
      "op": "DUP2"
    },
    "3713": {
      "op": "DUP6"
    },
    "3714": {
      "op": "ADD"
    },
    "3715": {
      "op": "DUP2"
    },
    "3716": {
      "op": "ADD"
    },
    "3717": {
      "op": "MLOAD"
    },
    "3718": {
      "op": "DUP7"
    },
    "3719": {
      "op": "DUP4"
    },
    "3720": {
      "op": "ADD"
    },
    "3721": {
      "op": "DUP3"
    },
    "3722": {
      "op": "ADD"
    },
    "3723": {
      "op": "MSTORE"
    },
    "3724": {
      "op": "ADD"
    },
    "3725": {
      "op": "PUSH2",
      "value": "0xE75"
    },
    "3728": {
      "op": "JUMP"
    },
    "3729": {
      "op": "JUMPDEST"
    },
    "3730": {
      "op": "POP"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3735": {
      "op": "DUP3"
    },
    "3736": {
      "op": "DUP7"
    },
    "3737": {
      "op": "ADD"
    },
    "3738": {
      "op": "ADD"
    },
    "3739": {
      "op": "MSTORE"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3742": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3744": {
      "op": "NOT"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3747": {
      "op": "DUP4"
    },
    "3748": {
      "op": "ADD"
    },
    "3749": {
      "op": "AND"
    },
    "3750": {
      "op": "DUP6"
    },
    "3751": {
      "op": "ADD"
    },
    "3752": {
      "op": "ADD"
    },
    "3753": {
      "op": "SWAP2"
    },
    "3754": {
      "op": "POP"
    },
    "3755": {
      "op": "POP"
    },
    "3756": {
      "op": "SWAP3"
    },
    "3757": {
      "op": "SWAP2"
    },
    "3758": {
      "op": "POP"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "jump": "o",
      "op": "JUMP"
    },
    "3761": {
      "op": "JUMPDEST"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3764": {
      "op": "DUP2"
    },
    "3765": {
      "op": "MSTORE"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3768": {
      "op": "PUSH2",
      "value": "0xEC4"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3773": {
      "op": "DUP4"
    },
    "3774": {
      "op": "ADD"
    },
    "3775": {
      "op": "DUP5"
    },
    "3776": {
      "op": "PUSH2",
      "value": "0xE6B"
    },
    "3779": {
      "jump": "i",
      "op": "JUMP"
    },
    "3780": {
      "op": "JUMPDEST"
    },
    "3781": {
      "op": "SWAP4"
    },
    "3782": {
      "op": "SWAP3"
    },
    "3783": {
      "op": "POP"
    },
    "3784": {
      "op": "POP"
    },
    "3785": {
      "op": "POP"
    },
    "3786": {
      "jump": "o",
      "op": "JUMP"
    },
    "3787": {
      "op": "JUMPDEST"
    },
    "3788": {
      "op": "DUP1"
    },
    "3789": {
      "op": "CALLDATALOAD"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3796": {
      "op": "SHL"
    },
    "3797": {
      "op": "SUB"
    },
    "3798": {
      "op": "DUP2"
    },
    "3799": {
      "op": "AND"
    },
    "3800": {
      "op": "DUP2"
    },
    "3801": {
      "op": "EQ"
    },
    "3802": {
      "op": "PUSH2",
      "value": "0xEE2"
    },
    "3805": {
      "op": "JUMPI"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3808": {
      "op": "DUP1"
    },
    "3809": {
      "op": "REVERT"
    },
    "3810": {
      "op": "JUMPDEST"
    },
    "3811": {
      "op": "SWAP2"
    },
    "3812": {
      "op": "SWAP1"
    },
    "3813": {
      "op": "POP"
    },
    "3814": {
      "jump": "o",
      "op": "JUMP"
    },
    "3815": {
      "op": "JUMPDEST"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3818": {
      "op": "DUP1"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3821": {
      "op": "DUP4"
    },
    "3822": {
      "op": "DUP6"
    },
    "3823": {
      "op": "SUB"
    },
    "3824": {
      "op": "SLT"
    },
    "3825": {
      "op": "ISZERO"
    },
    "3826": {
      "op": "PUSH2",
      "value": "0xEFA"
    },
    "3829": {
      "op": "JUMPI"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3832": {
      "op": "DUP1"
    },
    "3833": {
      "op": "REVERT"
    },
    "3834": {
      "op": "JUMPDEST"
    },
    "3835": {
      "op": "PUSH2",
      "value": "0xF03"
    },
    "3838": {
      "op": "DUP4"
    },
    "3839": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "3842": {
      "jump": "i",
      "op": "JUMP"
    },
    "3843": {
      "op": "JUMPDEST"
    },
    "3844": {
      "op": "SWAP5"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3847": {
      "op": "SWAP4"
    },
    "3848": {
      "op": "SWAP1"
    },
    "3849": {
      "op": "SWAP4"
    },
    "3850": {
      "op": "ADD"
    },
    "3851": {
      "op": "CALLDATALOAD"
    },
    "3852": {
      "op": "SWAP4"
    },
    "3853": {
      "op": "POP"
    },
    "3854": {
      "op": "POP"
    },
    "3855": {
      "op": "POP"
    },
    "3856": {
      "jump": "o",
      "op": "JUMP"
    },
    "3857": {
      "op": "JUMPDEST"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3860": {
      "op": "DUP1"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3865": {
      "op": "DUP5"
    },
    "3866": {
      "op": "DUP7"
    },
    "3867": {
      "op": "SUB"
    },
    "3868": {
      "op": "SLT"
    },
    "3869": {
      "op": "ISZERO"
    },
    "3870": {
      "op": "PUSH2",
      "value": "0xF26"
    },
    "3873": {
      "op": "JUMPI"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3876": {
      "op": "DUP1"
    },
    "3877": {
      "op": "REVERT"
    },
    "3878": {
      "op": "JUMPDEST"
    },
    "3879": {
      "op": "PUSH2",
      "value": "0xF2F"
    },
    "3882": {
      "op": "DUP5"
    },
    "3883": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "3886": {
      "jump": "i",
      "op": "JUMP"
    },
    "3887": {
      "op": "JUMPDEST"
    },
    "3888": {
      "op": "SWAP3"
    },
    "3889": {
      "op": "POP"
    },
    "3890": {
      "op": "PUSH2",
      "value": "0xF3D"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3895": {
      "op": "DUP6"
    },
    "3896": {
      "op": "ADD"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "3900": {
      "jump": "i",
      "op": "JUMP"
    },
    "3901": {
      "op": "JUMPDEST"
    },
    "3902": {
      "op": "SWAP2"
    },
    "3903": {
      "op": "POP"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3906": {
      "op": "DUP5"
    },
    "3907": {
      "op": "ADD"
    },
    "3908": {
      "op": "CALLDATALOAD"
    },
    "3909": {
      "op": "SWAP1"
    },
    "3910": {
      "op": "POP"
    },
    "3911": {
      "op": "SWAP3"
    },
    "3912": {
      "op": "POP"
    },
    "3913": {
      "op": "SWAP3"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "op": "SWAP3"
    },
    "3916": {
      "jump": "o",
      "op": "JUMP"
    },
    "3917": {
      "op": "JUMPDEST"
    },
    "3918": {
      "op": "DUP1"
    },
    "3919": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "3922": {
      "op": "DUP2"
    },
    "3923": {
      "op": "ADD"
    },
    "3924": {
      "op": "DUP4"
    },
    "3925": {
      "op": "LT"
    },
    "3926": {
      "op": "ISZERO"
    },
    "3927": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "3930": {
      "op": "JUMPI"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3933": {
      "op": "DUP1"
    },
    "3934": {
      "op": "REVERT"
    },
    "3935": {
      "op": "JUMPDEST"
    },
    "3936": {
      "op": "DUP1"
    },
    "3937": {
      "op": "PUSH2",
      "value": "0x2000"
    },
    "3940": {
      "op": "DUP2"
    },
    "3941": {
      "op": "ADD"
    },
    "3942": {
      "op": "DUP4"
    },
    "3943": {
      "op": "LT"
    },
    "3944": {
      "op": "ISZERO"
    },
    "3945": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "3948": {
      "op": "JUMPI"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3951": {
      "op": "DUP1"
    },
    "3952": {
      "op": "REVERT"
    },
    "3953": {
      "op": "JUMPDEST"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3956": {
      "op": "DUP1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3959": {
      "op": "DUP1"
    },
    "3960": {
      "op": "PUSH2",
      "value": "0x4060"
    },
    "3963": {
      "op": "DUP6"
    },
    "3964": {
      "op": "DUP8"
    },
    "3965": {
      "op": "SUB"
    },
    "3966": {
      "op": "SLT"
    },
    "3967": {
      "op": "ISZERO"
    },
    "3968": {
      "op": "PUSH2",
      "value": "0xF88"
    },
    "3971": {
      "op": "JUMPI"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3974": {
      "op": "DUP1"
    },
    "3975": {
      "op": "REVERT"
    },
    "3976": {
      "op": "JUMPDEST"
    },
    "3977": {
      "op": "PUSH2",
      "value": "0xF92"
    },
    "3980": {
      "op": "DUP7"
    },
    "3981": {
      "op": "DUP7"
    },
    "3982": {
      "op": "PUSH2",
      "value": "0xF4D"
    },
    "3985": {
      "jump": "i",
      "op": "JUMP"
    },
    "3986": {
      "op": "JUMPDEST"
    },
    "3987": {
      "op": "SWAP4"
    },
    "3988": {
      "op": "POP"
    },
    "3989": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "3992": {
      "op": "DUP6"
    },
    "3993": {
      "op": "ADD"
    },
    "3994": {
      "op": "CALLDATALOAD"
    },
    "3995": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4004": {
      "op": "DUP2"
    },
    "4005": {
      "op": "GT"
    },
    "4006": {
      "op": "ISZERO"
    },
    "4007": {
      "op": "PUSH2",
      "value": "0xFAF"
    },
    "4010": {
      "op": "JUMPI"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4013": {
      "op": "DUP1"
    },
    "4014": {
      "op": "REVERT"
    },
    "4015": {
      "op": "JUMPDEST"
    },
    "4016": {
      "op": "PUSH2",
      "value": "0xFBB"
    },
    "4019": {
      "op": "DUP8"
    },
    "4020": {
      "op": "DUP3"
    },
    "4021": {
      "op": "DUP9"
    },
    "4022": {
      "op": "ADD"
    },
    "4023": {
      "op": "PUSH2",
      "value": "0xF5F"
    },
    "4026": {
      "jump": "i",
      "op": "JUMP"
    },
    "4027": {
      "op": "JUMPDEST"
    },
    "4028": {
      "op": "SWAP4"
    },
    "4029": {
      "op": "POP"
    },
    "4030": {
      "op": "POP"
    },
    "4031": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "4034": {
      "op": "DUP6"
    },
    "4035": {
      "op": "ADD"
    },
    "4036": {
      "op": "CALLDATALOAD"
    },
    "4037": {
      "op": "SWAP2"
    },
    "4038": {
      "op": "POP"
    },
    "4039": {
      "op": "PUSH2",
      "value": "0xFD3"
    },
    "4042": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "4045": {
      "op": "DUP7"
    },
    "4046": {
      "op": "ADD"
    },
    "4047": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "4050": {
      "jump": "i",
      "op": "JUMP"
    },
    "4051": {
      "op": "JUMPDEST"
    },
    "4052": {
      "op": "SWAP1"
    },
    "4053": {
      "op": "POP"
    },
    "4054": {
      "op": "SWAP3"
    },
    "4055": {
      "op": "SWAP6"
    },
    "4056": {
      "op": "SWAP2"
    },
    "4057": {
      "op": "SWAP5"
    },
    "4058": {
      "op": "POP"
    },
    "4059": {
      "op": "SWAP3"
    },
    "4060": {
      "op": "POP"
    },
    "4061": {
      "jump": "o",
      "op": "JUMP"
    },
    "4062": {
      "op": "JUMPDEST"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4067": {
      "op": "DUP3"
    },
    "4068": {
      "op": "DUP5"
    },
    "4069": {
      "op": "SUB"
    },
    "4070": {
      "op": "SLT"
    },
    "4071": {
      "op": "ISZERO"
    },
    "4072": {
      "op": "PUSH2",
      "value": "0xFF0"
    },
    "4075": {
      "op": "JUMPI"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4078": {
      "op": "DUP1"
    },
    "4079": {
      "op": "REVERT"
    },
    "4080": {
      "op": "JUMPDEST"
    },
    "4081": {
      "op": "PUSH2",
      "value": "0xEC4"
    },
    "4084": {
      "op": "DUP3"
    },
    "4085": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "4088": {
      "jump": "i",
      "op": "JUMP"
    },
    "4089": {
      "op": "JUMPDEST"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4092": {
      "op": "DUP1"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4095": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "4098": {
      "op": "DUP5"
    },
    "4099": {
      "op": "DUP7"
    },
    "4100": {
      "op": "SUB"
    },
    "4101": {
      "op": "SLT"
    },
    "4102": {
      "op": "ISZERO"
    },
    "4103": {
      "op": "PUSH2",
      "value": "0x100F"
    },
    "4106": {
      "op": "JUMPI"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4109": {
      "op": "DUP1"
    },
    "4110": {
      "op": "REVERT"
    },
    "4111": {
      "op": "JUMPDEST"
    },
    "4112": {
      "op": "PUSH2",
      "value": "0x1019"
    },
    "4115": {
      "op": "DUP6"
    },
    "4116": {
      "op": "DUP6"
    },
    "4117": {
      "op": "PUSH2",
      "value": "0xF4D"
    },
    "4120": {
      "jump": "i",
      "op": "JUMP"
    },
    "4121": {
      "op": "JUMPDEST"
    },
    "4122": {
      "op": "SWAP3"
    },
    "4123": {
      "op": "POP"
    },
    "4124": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "4127": {
      "op": "DUP5"
    },
    "4128": {
      "op": "ADD"
    },
    "4129": {
      "op": "CALLDATALOAD"
    },
    "4130": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4139": {
      "op": "DUP2"
    },
    "4140": {
      "op": "GT"
    },
    "4141": {
      "op": "ISZERO"
    },
    "4142": {
      "op": "PUSH2",
      "value": "0x1036"
    },
    "4145": {
      "op": "JUMPI"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4148": {
      "op": "DUP1"
    },
    "4149": {
      "op": "REVERT"
    },
    "4150": {
      "op": "JUMPDEST"
    },
    "4151": {
      "op": "PUSH2",
      "value": "0x1042"
    },
    "4154": {
      "op": "DUP7"
    },
    "4155": {
      "op": "DUP3"
    },
    "4156": {
      "op": "DUP8"
    },
    "4157": {
      "op": "ADD"
    },
    "4158": {
      "op": "PUSH2",
      "value": "0xF5F"
    },
    "4161": {
      "jump": "i",
      "op": "JUMP"
    },
    "4162": {
      "op": "JUMPDEST"
    },
    "4163": {
      "op": "SWAP3"
    },
    "4164": {
      "op": "POP"
    },
    "4165": {
      "op": "POP"
    },
    "4166": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "4169": {
      "op": "DUP5"
    },
    "4170": {
      "op": "ADD"
    },
    "4171": {
      "op": "CALLDATALOAD"
    },
    "4172": {
      "op": "SWAP1"
    },
    "4173": {
      "op": "POP"
    },
    "4174": {
      "op": "SWAP3"
    },
    "4175": {
      "op": "POP"
    },
    "4176": {
      "op": "SWAP3"
    },
    "4177": {
      "op": "POP"
    },
    "4178": {
      "op": "SWAP3"
    },
    "4179": {
      "jump": "o",
      "op": "JUMP"
    },
    "4180": {
      "op": "JUMPDEST"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4183": {
      "op": "DUP1"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4186": {
      "op": "DUP4"
    },
    "4187": {
      "op": "DUP6"
    },
    "4188": {
      "op": "SUB"
    },
    "4189": {
      "op": "SLT"
    },
    "4190": {
      "op": "ISZERO"
    },
    "4191": {
      "op": "PUSH2",
      "value": "0x1067"
    },
    "4194": {
      "op": "JUMPI"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4197": {
      "op": "DUP1"
    },
    "4198": {
      "op": "REVERT"
    },
    "4199": {
      "op": "JUMPDEST"
    },
    "4200": {
      "op": "PUSH2",
      "value": "0x1070"
    },
    "4203": {
      "op": "DUP4"
    },
    "4204": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "4207": {
      "jump": "i",
      "op": "JUMP"
    },
    "4208": {
      "op": "JUMPDEST"
    },
    "4209": {
      "op": "SWAP2"
    },
    "4210": {
      "op": "POP"
    },
    "4211": {
      "op": "PUSH2",
      "value": "0x107E"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4216": {
      "op": "DUP5"
    },
    "4217": {
      "op": "ADD"
    },
    "4218": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "4221": {
      "jump": "i",
      "op": "JUMP"
    },
    "4222": {
      "op": "JUMPDEST"
    },
    "4223": {
      "op": "SWAP1"
    },
    "4224": {
      "op": "POP"
    },
    "4225": {
      "op": "SWAP3"
    },
    "4226": {
      "op": "POP"
    },
    "4227": {
      "op": "SWAP3"
    },
    "4228": {
      "op": "SWAP1"
    },
    "4229": {
      "op": "POP"
    },
    "4230": {
      "jump": "o",
      "op": "JUMP"
    },
    "4231": {
      "op": "JUMPDEST"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4234": {
      "op": "DUP2"
    },
    "4235": {
      "op": "DUP2"
    },
    "4236": {
      "op": "SHR"
    },
    "4237": {
      "op": "SWAP1"
    },
    "4238": {
      "op": "DUP3"
    },
    "4239": {
      "op": "AND"
    },
    "4240": {
      "op": "DUP1"
    },
    "4241": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4244": {
      "op": "JUMPI"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4247": {
      "op": "DUP3"
    },
    "4248": {
      "op": "AND"
    },
    "4249": {
      "op": "SWAP2"
    },
    "4250": {
      "op": "POP"
    },
    "4251": {
      "op": "JUMPDEST"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4254": {
      "op": "DUP3"
    },
    "4255": {
      "op": "LT"
    },
    "4256": {
      "op": "DUP2"
    },
    "4257": {
      "op": "SUB"
    },
    "4258": {
      "op": "PUSH2",
      "value": "0x10BB"
    },
    "4261": {
      "op": "JUMPI"
    },
    "4262": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4269": {
      "op": "SHL"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4272": {
      "op": "MSTORE"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4277": {
      "op": "MSTORE"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4282": {
      "op": "REVERT"
    },
    "4283": {
      "op": "JUMPDEST"
    },
    "4284": {
      "op": "POP"
    },
    "4285": {
      "op": "SWAP2"
    },
    "4286": {
      "op": "SWAP1"
    },
    "4287": {
      "op": "POP"
    },
    "4288": {
      "jump": "o",
      "op": "JUMP"
    },
    "4289": {
      "op": "JUMPDEST"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4292": {
      "op": "DUP1"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "MSTORE"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4297": {
      "op": "SWAP1"
    },
    "4298": {
      "op": "DUP3"
    },
    "4299": {
      "op": "ADD"
    },
    "4300": {
      "op": "MSTORE"
    },
    "4301": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4336": {
      "op": "DUP3"
    },
    "4337": {
      "op": "ADD"
    },
    "4338": {
      "op": "MSTORE"
    },
    "4339": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4345": {
      "op": "SHL"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4348": {
      "op": "DUP3"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "MSTORE"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4353": {
      "op": "ADD"
    },
    "4354": {
      "op": "SWAP1"
    },
    "4355": {
      "jump": "o",
      "op": "JUMP"
    },
    "4356": {
      "op": "JUMPDEST"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4359": {
      "op": "DUP1"
    },
    "4360": {
      "op": "DUP3"
    },
    "4361": {
      "op": "MSTORE"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4364": {
      "op": "SWAP1"
    },
    "4365": {
      "op": "DUP3"
    },
    "4366": {
      "op": "ADD"
    },
    "4367": {
      "op": "MSTORE"
    },
    "4368": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4403": {
      "op": "DUP3"
    },
    "4404": {
      "op": "ADD"
    },
    "4405": {
      "op": "MSTORE"
    },
    "4406": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4415": {
      "op": "SHL"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4418": {
      "op": "DUP3"
    },
    "4419": {
      "op": "ADD"
    },
    "4420": {
      "op": "MSTORE"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4423": {
      "op": "ADD"
    },
    "4424": {
      "op": "SWAP1"
    },
    "4425": {
      "jump": "o",
      "op": "JUMP"
    },
    "4426": {
      "op": "JUMPDEST"
    },
    "4427": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4434": {
      "op": "SHL"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4437": {
      "op": "MSTORE"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4442": {
      "op": "MSTORE"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4447": {
      "op": "REVERT"
    },
    "4448": {
      "op": "JUMPDEST"
    },
    "4449": {
      "op": "DUP2"
    },
    "4450": {
      "op": "DUP2"
    },
    "4451": {
      "op": "SUB"
    },
    "4452": {
      "op": "DUP2"
    },
    "4453": {
      "op": "DUP2"
    },
    "4454": {
      "op": "GT"
    },
    "4455": {
      "op": "ISZERO"
    },
    "4456": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "4459": {
      "op": "JUMPI"
    },
    "4460": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "4463": {
      "op": "PUSH2",
      "value": "0x114A"
    },
    "4466": {
      "jump": "i",
      "op": "JUMP"
    },
    "4467": {
      "op": "JUMPDEST"
    },
    "4468": {
      "op": "DUP1"
    },
    "4469": {
      "op": "DUP3"
    },
    "4470": {
      "op": "ADD"
    },
    "4471": {
      "op": "DUP1"
    },
    "4472": {
      "op": "DUP3"
    },
    "4473": {
      "op": "GT"
    },
    "4474": {
      "op": "ISZERO"
    },
    "4475": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "4478": {
      "op": "JUMPI"
    },
    "4479": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "4482": {
      "op": "PUSH2",
      "value": "0x114A"
    },
    "4485": {
      "jump": "i",
      "op": "JUMP"
    },
    "4486": {
      "op": "JUMPDEST"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4489": {
      "op": "SWAP2"
    },
    "4490": {
      "op": "SWAP1"
    },
    "4491": {
      "op": "SWAP2"
    },
    "4492": {
      "op": "SHL"
    },
    "4493": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4506": {
      "op": "NOT"
    },
    "4507": {
      "op": "AND"
    },
    "4508": {
      "op": "DUP2"
    },
    "4509": {
      "op": "MSTORE"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4512": {
      "op": "ADD"
    },
    "4513": {
      "op": "SWAP1"
    },
    "4514": {
      "jump": "o",
      "op": "JUMP"
    },
    "4515": {
      "op": "JUMPDEST"
    },
    "4516": {
      "op": "DUP2"
    },
    "4517": {
      "op": "DUP4"
    },
    "4518": {
      "op": "MSTORE"
    },
    "4519": {
      "op": "DUP2"
    },
    "4520": {
      "op": "DUP2"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4523": {
      "op": "DUP6"
    },
    "4524": {
      "op": "ADD"
    },
    "4525": {
      "op": "CALLDATACOPY"
    },
    "4526": {
      "op": "POP"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4529": {
      "op": "DUP3"
    },
    "4530": {
      "op": "DUP3"
    },
    "4531": {
      "op": "ADD"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4534": {
      "op": "SWAP1"
    },
    "4535": {
      "op": "DUP2"
    },
    "4536": {
      "op": "ADD"
    },
    "4537": {
      "op": "SWAP2"
    },
    "4538": {
      "op": "SWAP1"
    },
    "4539": {
      "op": "SWAP2"
    },
    "4540": {
      "op": "MSTORE"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4543": {
      "op": "SWAP1"
    },
    "4544": {
      "op": "SWAP2"
    },
    "4545": {
      "op": "ADD"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4548": {
      "op": "NOT"
    },
    "4549": {
      "op": "AND"
    },
    "4550": {
      "op": "SWAP1"
    },
    "4551": {
      "op": "SWAP2"
    },
    "4552": {
      "op": "ADD"
    },
    "4553": {
      "op": "ADD"
    },
    "4554": {
      "op": "SWAP1"
    },
    "4555": {
      "jump": "o",
      "op": "JUMP"
    },
    "4556": {
      "op": "JUMPDEST"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4559": {
      "op": "PUSH2",
      "value": "0x4060"
    },
    "4562": {
      "op": "DUP3"
    },
    "4563": {
      "op": "DUP2"
    },
    "4564": {
      "op": "ADD"
    },
    "4565": {
      "op": "DUP4"
    },
    "4566": {
      "op": "DUP9"
    },
    "4567": {
      "op": "DUP5"
    },
    "4568": {
      "op": "JUMPDEST"
    },
    "4569": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4572": {
      "op": "DUP2"
    },
    "4573": {
      "op": "LT"
    },
    "4574": {
      "op": "ISZERO"
    },
    "4575": {
      "op": "PUSH2",
      "value": "0x11F9"
    },
    "4578": {
      "op": "JUMPI"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4581": {
      "op": "DUP1"
    },
    "4582": {
      "op": "DUP4"
    },
    "4583": {
      "op": "DUP6"
    },
    "4584": {
      "op": "CALLDATACOPY"
    },
    "4585": {
      "op": "SWAP3"
    },
    "4586": {
      "op": "DUP4"
    },
    "4587": {
      "op": "ADD"
    },
    "4588": {
      "op": "SWAP3"
    },
    "4589": {
      "op": "SWAP2"
    },
    "4590": {
      "op": "SWAP1"
    },
    "4591": {
      "op": "SWAP2"
    },
    "4592": {
      "op": "ADD"
    },
    "4593": {
      "op": "SWAP1"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4596": {
      "op": "ADD"
    },
    "4597": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "4600": {
      "op": "JUMP"
    },
    "4601": {
      "op": "JUMPDEST"
    },
    "4602": {
      "op": "POP"
    },
    "4603": {
      "op": "POP"
    },
    "4604": {
      "op": "POP"
    },
    "4605": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "4608": {
      "op": "DUP5"
    },
    "4609": {
      "op": "ADD"
    },
    "4610": {
      "op": "SWAP2"
    },
    "4611": {
      "op": "SWAP1"
    },
    "4612": {
      "op": "SWAP2"
    },
    "4613": {
      "op": "MSTORE"
    },
    "4614": {
      "op": "PUSH2",
      "value": "0x6060"
    },
    "4617": {
      "op": "DUP4"
    },
    "4618": {
      "op": "ADD"
    },
    "4619": {
      "op": "DUP7"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4622": {
      "op": "JUMPDEST"
    },
    "4623": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4626": {
      "op": "DUP2"
    },
    "4627": {
      "op": "LT"
    },
    "4628": {
      "op": "ISZERO"
    },
    "4629": {
      "op": "PUSH2",
      "value": "0x1285"
    },
    "4632": {
      "op": "JUMPI"
    },
    "4633": {
      "op": "DUP6"
    },
    "4634": {
      "op": "DUP4"
    },
    "4635": {
      "op": "SUB"
    },
    "4636": {
      "op": "PUSH2",
      "value": "0x405F"
    },
    "4639": {
      "op": "NOT"
    },
    "4640": {
      "op": "ADD"
    },
    "4641": {
      "op": "DUP5"
    },
    "4642": {
      "op": "MSTORE"
    },
    "4643": {
      "op": "DUP2"
    },
    "4644": {
      "op": "CALLDATALOAD"
    },
    "4645": {
      "op": "CALLDATASIZE"
    },
    "4646": {
      "op": "DUP11"
    },
    "4647": {
      "op": "SWAP1"
    },
    "4648": {
      "op": "SUB"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4651": {
      "op": "NOT"
    },
    "4652": {
      "op": "ADD"
    },
    "4653": {
      "op": "DUP2"
    },
    "4654": {
      "op": "SLT"
    },
    "4655": {
      "op": "PUSH2",
      "value": "0x1237"
    },
    "4658": {
      "op": "JUMPI"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4661": {
      "op": "DUP1"
    },
    "4662": {
      "op": "REVERT"
    },
    "4663": {
      "op": "JUMPDEST"
    },
    "4664": {
      "op": "DUP10"
    },
    "4665": {
      "op": "ADD"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4668": {
      "op": "DUP2"
    },
    "4669": {
      "op": "DUP2"
    },
    "4670": {
      "op": "ADD"
    },
    "4671": {
      "op": "SWAP2"
    },
    "4672": {
      "op": "CALLDATALOAD"
    },
    "4673": {
      "op": "SWAP1"
    },
    "4674": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4683": {
      "op": "DUP3"
    },
    "4684": {
      "op": "GT"
    },
    "4685": {
      "op": "ISZERO"
    },
    "4686": {
      "op": "PUSH2",
      "value": "0x1256"
    },
    "4689": {
      "op": "JUMPI"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4692": {
      "op": "DUP1"
    },
    "4693": {
      "op": "REVERT"
    },
    "4694": {
      "op": "JUMPDEST"
    },
    "4695": {
      "op": "DUP2"
    },
    "4696": {
      "op": "CALLDATASIZE"
    },
    "4697": {
      "op": "SUB"
    },
    "4698": {
      "op": "DUP4"
    },
    "4699": {
      "op": "SGT"
    },
    "4700": {
      "op": "ISZERO"
    },
    "4701": {
      "op": "PUSH2",
      "value": "0x1265"
    },
    "4704": {
      "op": "JUMPI"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4707": {
      "op": "DUP1"
    },
    "4708": {
      "op": "REVERT"
    },
    "4709": {
      "op": "JUMPDEST"
    },
    "4710": {
      "op": "PUSH2",
      "value": "0x1270"
    },
    "4713": {
      "op": "DUP7"
    },
    "4714": {
      "op": "DUP4"
    },
    "4715": {
      "op": "DUP6"
    },
    "4716": {
      "op": "PUSH2",
      "value": "0x11A3"
    },
    "4719": {
      "jump": "i",
      "op": "JUMP"
    },
    "4720": {
      "op": "JUMPDEST"
    },
    "4721": {
      "op": "SWAP7"
    },
    "4722": {
      "op": "DUP2"
    },
    "4723": {
      "op": "ADD"
    },
    "4724": {
      "op": "SWAP7"
    },
    "4725": {
      "op": "SWAP6"
    },
    "4726": {
      "op": "POP"
    },
    "4727": {
      "op": "SWAP4"
    },
    "4728": {
      "op": "SWAP1"
    },
    "4729": {
      "op": "SWAP4"
    },
    "4730": {
      "op": "ADD"
    },
    "4731": {
      "op": "SWAP3"
    },
    "4732": {
      "op": "POP"
    },
    "4733": {
      "op": "POP"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4736": {
      "op": "ADD"
    },
    "4737": {
      "op": "PUSH2",
      "value": "0x120E"
    },
    "4740": {
      "op": "JUMP"
    },
    "4741": {
      "op": "JUMPDEST"
    },
    "4742": {
      "op": "POP"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "op": "DUP6"
    },
    "4745": {
      "op": "PUSH2",
      "value": "0x4020"
    },
    "4748": {
      "op": "DUP6"
    },
    "4749": {
      "op": "ADD"
    },
    "4750": {
      "op": "MSTORE"
    },
    "4751": {
      "op": "DUP4"
    },
    "4752": {
      "op": "DUP2"
    },
    "4753": {
      "op": "SUB"
    },
    "4754": {
      "op": "PUSH2",
      "value": "0x4040"
    },
    "4757": {
      "op": "DUP6"
    },
    "4758": {
      "op": "ADD"
    },
    "4759": {
      "op": "MSTORE"
    },
    "4760": {
      "op": "PUSH2",
      "value": "0x12A1"
    },
    "4763": {
      "op": "DUP2"
    },
    "4764": {
      "op": "DUP7"
    },
    "4765": {
      "op": "PUSH2",
      "value": "0xE6B"
    },
    "4768": {
      "jump": "i",
      "op": "JUMP"
    },
    "4769": {
      "op": "JUMPDEST"
    },
    "4770": {
      "op": "SWAP9"
    },
    "4771": {
      "op": "SWAP8"
    },
    "4772": {
      "op": "POP"
    },
    "4773": {
      "op": "POP"
    },
    "4774": {
      "op": "POP"
    },
    "4775": {
      "op": "POP"
    },
    "4776": {
      "op": "POP"
    },
    "4777": {
      "op": "POP"
    },
    "4778": {
      "op": "POP"
    },
    "4779": {
      "op": "POP"
    },
    "4780": {
      "jump": "o",
      "op": "JUMP"
    },
    "4781": {
      "op": "JUMPDEST"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4786": {
      "op": "DUP3"
    },
    "4787": {
      "op": "DUP5"
    },
    "4788": {
      "op": "SUB"
    },
    "4789": {
      "op": "SLT"
    },
    "4790": {
      "op": "ISZERO"
    },
    "4791": {
      "op": "PUSH2",
      "value": "0x12BF"
    },
    "4794": {
      "op": "JUMPI"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4797": {
      "op": "DUP1"
    },
    "4798": {
      "op": "REVERT"
    },
    "4799": {
      "op": "JUMPDEST"
    },
    "4800": {
      "op": "DUP2"
    },
    "4801": {
      "op": "MLOAD"
    },
    "4802": {
      "op": "DUP1"
    },
    "4803": {
      "op": "ISZERO"
    },
    "4804": {
      "op": "ISZERO"
    },
    "4805": {
      "op": "DUP2"
    },
    "4806": {
      "op": "EQ"
    },
    "4807": {
      "op": "PUSH2",
      "value": "0xEC4"
    },
    "4810": {
      "op": "JUMPI"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4813": {
      "op": "DUP1"
    },
    "4814": {
      "op": "REVERT"
    },
    "4815": {
      "op": "JUMPDEST"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4818": {
      "op": "DUP1"
    },
    "4819": {
      "op": "DUP3"
    },
    "4820": {
      "op": "MSTORE"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4823": {
      "op": "SWAP1"
    },
    "4824": {
      "op": "DUP3"
    },
    "4825": {
      "op": "ADD"
    },
    "4826": {
      "op": "MSTORE"
    },
    "4827": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A20417574686F72697A6174696F6E206661696C65"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4862": {
      "op": "DUP3"
    },
    "4863": {
      "op": "ADD"
    },
    "4864": {
      "op": "MSTORE"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "4869": {
      "op": "SHL"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4872": {
      "op": "DUP3"
    },
    "4873": {
      "op": "ADD"
    },
    "4874": {
      "op": "MSTORE"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4877": {
      "op": "ADD"
    },
    "4878": {
      "op": "SWAP1"
    },
    "4879": {
      "jump": "o",
      "op": "JUMP"
    },
    "4880": {
      "op": "JUMPDEST"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4883": {
      "op": "DUP2"
    },
    "4884": {
      "op": "DUP4"
    },
    "4885": {
      "op": "DUP3"
    },
    "4886": {
      "op": "JUMPDEST"
    },
    "4887": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4890": {
      "op": "DUP2"
    },
    "4891": {
      "op": "LT"
    },
    "4892": {
      "op": "ISZERO"
    },
    "4893": {
      "op": "PUSH2",
      "value": "0x1337"
    },
    "4896": {
      "op": "JUMPI"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4899": {
      "op": "DUP1"
    },
    "4900": {
      "op": "DUP4"
    },
    "4901": {
      "op": "DUP6"
    },
    "4902": {
      "op": "CALLDATACOPY"
    },
    "4903": {
      "op": "SWAP3"
    },
    "4904": {
      "op": "DUP4"
    },
    "4905": {
      "op": "ADD"
    },
    "4906": {
      "op": "SWAP3"
    },
    "4907": {
      "op": "SWAP2"
    },
    "4908": {
      "op": "SWAP1"
    },
    "4909": {
      "op": "SWAP2"
    },
    "4910": {
      "op": "ADD"
    },
    "4911": {
      "op": "SWAP1"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4914": {
      "op": "ADD"
    },
    "4915": {
      "op": "PUSH2",
      "value": "0x1316"
    },
    "4918": {
      "op": "JUMP"
    },
    "4919": {
      "op": "JUMPDEST"
    },
    "4920": {
      "op": "POP"
    },
    "4921": {
      "op": "POP"
    },
    "4922": {
      "op": "POP"
    },
    "4923": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "4926": {
      "op": "DUP3"
    },
    "4927": {
      "op": "ADD"
    },
    "4928": {
      "op": "SWAP1"
    },
    "4929": {
      "op": "POP"
    },
    "4930": {
      "op": "SWAP3"
    },
    "4931": {
      "op": "SWAP2"
    },
    "4932": {
      "op": "POP"
    },
    "4933": {
      "op": "POP"
    },
    "4934": {
      "jump": "o",
      "op": "JUMP"
    },
    "4935": {
      "op": "JUMPDEST"
    },
    "4936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4938": {
      "op": "DUP1"
    },
    "4939": {
      "op": "DUP3"
    },
    "4940": {
      "op": "MSTORE"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4943": {
      "op": "SWAP1"
    },
    "4944": {
      "op": "DUP3"
    },
    "4945": {
      "op": "ADD"
    },
    "4946": {
      "op": "MSTORE"
    },
    "4947": {
      "op": "PUSH32",
      "value": "0x4C616D706F7274426173653A2043616E6E6F7420757365207468652073616D65"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4982": {
      "op": "DUP3"
    },
    "4983": {
      "op": "ADD"
    },
    "4984": {
      "op": "MSTORE"
    },
    "4985": {
      "op": "PUSH32",
      "value": "0x206B6579636861696E20747769636520666F7220746869732066756E6374696F"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5020": {
      "op": "DUP3"
    },
    "5021": {
      "op": "ADD"
    },
    "5022": {
      "op": "MSTORE"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "5027": {
      "op": "SHL"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5030": {
      "op": "DUP3"
    },
    "5031": {
      "op": "ADD"
    },
    "5032": {
      "op": "MSTORE"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5035": {
      "op": "ADD"
    },
    "5036": {
      "op": "SWAP1"
    },
    "5037": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "443728aadcb846fb8e73bf18bcc9ff603959a3f4",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n//import \"./LamportBase.sol\"; // Adjust the path according to your project structure\n\n// This is a full ERC20 token mint with Lamport permissions on which contract can mint it.\ninterface ILamportBase {\n    function performLamportMasterCheck(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        bytes memory prepacked\n    ) external returns (bool);\n}\n\ncontract GP_Mint {\n\n    ILamportBase public lamportBase;\n    mapping(address => uint256) private _balances;\n    mapping(address => mapping(address => uint256)) private _allowances;\n    bytes32 private storedNextPKH;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    // Function to set the authorized minter (Step One)\n    address private authorizedMinter;\n    mapping(address => address) private proposedMinters; // Temporary storage for proposed minters\n\n    event AuthorizedMinterSet(address indexed minter);\n    event AuthorizedMinterRemoved(address indexed minter);\n    constructor() {\n        lamportBase = ILamportBase(0xB3830AE69EE5962355e84f6bbAC274Ff337960E5);\n        _name = \"GPGrens\";\n        _symbol = \"GPG\";\n        _initializeMintProcess();\n    }\n    function _initializeMintProcess() private {\n        // Set the authorized minter (it's AnonID contract ok) (hardcoded for one-off execution)\n        authorizedMinter = 0xF3A99A9a2836a6fcFcEB846161B900B3d1447236;\n\n        // Mint tokens\n        _mint(0x239fA7623354eC26520dE878B52f13Fe84b06971, 80000 * (10 ** uint256(decimals())));\n\n        // Reset the authorized minter\n        authorizedMinter = address(0);\n    }\n\n    function setAuthorizedMinterStepOne(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        address minter\n    ) public {\n        // Encode the minter address to bytes\n        bytes memory prepacked = abi.encodePacked(minter);\n\n        // Perform the Lamport Master Check\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n\n        // Ensure that the Lamport Master Check passed\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n        storedNextPKH = nextPKH;\n        proposedMinters[msg.sender] = minter;\n    }\n\n    function setAuthorizedMinterStepTwo(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH,\n        address minter\n    ) public {\n        \n        bytes32 currentPKH = keccak256(abi.encodePacked(currentpub));\n        \n        // Check if storedNextPKH is not the same as the current PKH\n        require(currentPKH != storedNextPKH, \"LamportBase: Cannot use the same keychain twice for this function\");\n        \n        // Encode the minter address to bytes\n        bytes memory prepacked = abi.encodePacked(minter);\n\n        // Perform the Lamport Master Check\n\n        // Check that the proposed minter matches the minter in the current call\n        require(proposedMinters[msg.sender] == minter, \"MyERC20: Minter address mismatch\");\n\n        // Check if the authorized minter is either not set or matches the minter being set\n        require(authorizedMinter == address(0) || authorizedMinter == minter, \"MyERC20: Another minter already set\");\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n\n        // Ensure that the Lamport Master Check passed\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n\n        // Set the authorized minter\n        authorizedMinter = minter;\n\n        // Emit the event for setting the authorized minter\n        emit AuthorizedMinterSet(minter);\n\n        // Clear the temporary storage for the proposed minter\n        delete proposedMinters[msg.sender];\n    }\n\n    function removeAuthorizedMinterStepOne(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH\n    ) public {\n        // Encode the authorizedMinter address to bytes\n        bytes memory prepacked = abi.encodePacked(authorizedMinter);\n\n        // Perform the Lamport Master Check\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n\n        // Ensure that the Lamport Master Check passed\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n        storedNextPKH = nextPKH;\n\n        // Set the proposed minter to the zero address\n        proposedMinters[msg.sender] = address(0);\n    }\n\n    function removeAuthorizedMinterStepTwo(\n        bytes32[2][256] calldata currentpub,\n        bytes[256] calldata sig,\n        bytes32 nextPKH\n    ) public {\n\n        bytes32 currentPKH = keccak256(abi.encodePacked(currentpub));\n        \n        // Check if storedNextPKH is not the same as the current PKH\n        require(currentPKH != storedNextPKH, \"LamportBase: Cannot use the same keychain twice for this function\");\n        \n        // Encode the authorizedMinter to bytes\n        bytes memory prepacked = abi.encodePacked(authorizedMinter);\n\n        // Perform the Lamport Master Check\n\n        // Ensure that the Lamport Master Check passed\n\n        // Check the conditions for removing the minter\n        require(proposedMinters[msg.sender] == address(0), \"GP_Mint: No minter removal proposed\");\n        require(authorizedMinter != address(0), \"GP_Mint: No minter set\");\n        bool isAuthorized = lamportBase.performLamportMasterCheck(currentpub, sig, nextPKH, prepacked);\n        require(isAuthorized, \"LamportBase: Authorization failed\");\n\n        // Emit the AuthorizedMinterRemoved event\n        emit AuthorizedMinterRemoved(authorizedMinter);\n\n        // Set the authorizedMinter to the zero address\n        authorizedMinter = address(0);\n\n        // Clear the temporary storage\n        delete proposedMinters[msg.sender];\n    }\n\n    // External function to mint tokens, callable by the authorized minter\n    function mintTokens(address account, uint256 amount) external {\n        require(msg.sender == authorizedMinter, \"GP_Mint: Unauthorized minter\");\n        _mint(account, amount);\n    }\n\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public pure returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address to, uint256 value) public returns (bool) {\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(_balances[msg.sender] >= value, \"ERC20: transfer amount exceeds balance\");\n\n        _balances[msg.sender] -= value;\n        _balances[to] += value;\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 value) public returns (bool) {\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(value <= _balances[from], \"ERC20: transfer amount exceeds balance\");\n        require(value <= _allowances[from][msg.sender], \"ERC20: transfer amount exceeds allowance\");\n\n        _balances[from] -= value;\n        _balances[to] += value;\n        _allowances[from][msg.sender] -= value;\n        emit Transfer(from, to, value);\n        return true;\n    }\n\n    function _mint(address account, uint256 amount) internal {\n        require(msg.sender == authorizedMinter, \"GP_Mint: Unauthorized minter\");\n        _totalSupply += amount;\n        _balances[account] += amount;\n        //emit Minted(address(0), account, amount);\n        emit Minted(msg.sender, account, amount);\n\n    }\n\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n        require(_balances[account] >= amount, \"ERC20: burn amount exceeds balance\");\n\n        _balances[account] -= amount;\n        _totalSupply -= amount;\n        emit Transfer(account, address(0), amount);\n    }\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Minted(address indexed minter, address indexed account, uint256 amount);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n",
  "sourceMap": "468:8442:0:-:0;;;1087:187;;;;;;;;;-1:-1:-1;1111:11:0;:70;;-1:-1:-1;;;;;;1111:70:0;1138:42;1111:70;;;1191:17;;;;;;;;;;;;-1:-1:-1;;;1191:17:0;;;;:5;;:17;;:5;:17;:::i;:::-;-1:-1:-1;1218:15:0;;;;;;;;;;;;-1:-1:-1;;;1218:15:0;;;;:7;;:15;;:7;:15;:::i;:::-;-1:-1:-1;1243:24:0;:22;:24::i;:::-;468:8442;;1279:416;1428:16;:61;;-1:-1:-1;;;;;;1428:61:0;1447:42;1428:61;;;1523:86;1529:42;1596:10;6425:2;;6360:74;1596:10;1582:25;;1588:19;;1582:2;:25;:::i;:::-;1573:35;;:5;:35;:::i;:::-;1523:5;:86::i;:::-;1659:16;:29;;-1:-1:-1;;;;;;1659:29:0;;;1279:416::o;7991:318::-;8080:16;;-1:-1:-1;;;;;8080:16:0;8066:10;:30;8058:71;;;;-1:-1:-1;;;8058:71:0;;4601:2:5;8058:71:0;;;4583:21:5;4640:2;4620:18;;;4613:30;4679;4659:18;;;4652:58;4727:18;;8058:71:0;;;;;;;;8155:6;8139:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8171:18:0;;;;;;:9;:18;;;;;:28;;8193:6;;8171:18;:28;;8193:6;;8171:28;:::i;:::-;;;;-1:-1:-1;;8266:35:0;;5032:25:5;;;-1:-1:-1;;;;;8266:35:0;;;8273:10;;8266:35;;5020:2:5;5005:18;8266:35:0;;;;;;;7991:318;;:::o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:5;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:5;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:5;;;2571:26;2522:89;-1:-1:-1;;1333:1:5;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:5;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:5;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:5;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:5:o;2726:127::-;2787:10;2782:3;2778:20;2775:1;2768:31;2818:4;2815:1;2808:15;2842:4;2839:1;2832:15;2858:416;2947:1;2984:5;2947:1;2998:270;3019:7;3009:8;3006:21;2998:270;;;3078:4;3074:1;3070:6;3066:17;3060:4;3057:27;3054:53;;;3087:18;;:::i;:::-;3137:7;3127:8;3123:22;3120:55;;;3157:16;;;;3120:55;3236:22;;;;3196:15;;;;2998:270;;;3002:3;2858:416;;;;;:::o;3279:806::-;3328:5;3358:8;3348:80;;-1:-1:-1;3399:1:5;3413:5;;3348:80;3447:4;3437:76;;-1:-1:-1;3484:1:5;3498:5;;3437:76;3529:4;3547:1;3542:59;;;;3615:1;3610:130;;;;3522:218;;3542:59;3572:1;3563:10;;3586:5;;;3610:130;3647:3;3637:8;3634:17;3631:43;;;3654:18;;:::i;:::-;-1:-1:-1;;3710:1:5;3696:16;;3725:5;;3522:218;;3824:2;3814:8;3811:16;3805:3;3799:4;3796:13;3792:36;3786:2;3776:8;3773:16;3768:2;3762:4;3759:12;3755:35;3752:77;3749:159;;;-1:-1:-1;3861:19:5;;;3893:5;;3749:159;3940:34;3965:8;3959:4;3940:34;:::i;:::-;4010:6;4006:1;4002:6;3998:19;3989:7;3986:32;3983:58;;;4021:18;;:::i;:::-;4059:20;;-1:-1:-1;3279:806:5;;;;;:::o;4090:131::-;4150:5;4179:36;4206:8;4200:4;4179:36;:::i;:::-;4170:45;4090:131;-1:-1:-1;;;4090:131:5:o;4226:168::-;4299:9;;;4330;;4347:15;;;4341:22;;4327:37;4317:71;;4368:18;;:::i;4756:125::-;4821:9;;;4842:10;;;4839:36;;;4855:18;;:::i;4886:177::-;468:8442:0;;;;;;",
  "sourcePath": "contracts/2_GP_Mint.sol",
  "type": "contract"
}